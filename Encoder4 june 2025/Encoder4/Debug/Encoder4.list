
Encoder4.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000bc  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000c038  080000c0  080000c0  000010c0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000458  0800c0f8  0800c0f8  0000d0f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800c550  0800c550  0000e130  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  0800c550  0800c550  0000e130  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  0800c550  0800c550  0000e130  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800c550  0800c550  0000d550  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800c554  0800c554  0000d554  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000130  20000000  0800c558  0000e000  2**2
                  CONTENTS, ALLOC, LOAD, CODE
  9 .bss          0000d9cc  20000130  0800c688  0000e130  2**3
                  ALLOC
 10 ._user_heap_stack 00000604  2000dafc  0800c688  0000eafc  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  0000e130  2**0
                  CONTENTS, READONLY
 12 .debug_info   0001c605  00000000  00000000  0000e158  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00003f92  00000000  00000000  0002a75d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001cd8  00000000  00000000  0002e6f0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000166d  00000000  00000000  000303c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0002117e  00000000  00000000  00031a35  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00021b83  00000000  00000000  00052bb3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000d3905  00000000  00000000  00074736  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0014803b  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00006de0  00000000  00000000  00148080  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000079  00000000  00000000  0014ee60  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	@ (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	@ (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	@ (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000130 	.word	0x20000130
 80000e0:	00000000 	.word	0x00000000
 80000e4:	0800c0d0 	.word	0x0800c0d0

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	@ (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	@ (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	@ (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			@ (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000134 	.word	0x20000134
 8000104:	0800c0d0 	.word	0x0800c0d0

08000108 <__udivsi3>:
 8000108:	2200      	movs	r2, #0
 800010a:	0843      	lsrs	r3, r0, #1
 800010c:	428b      	cmp	r3, r1
 800010e:	d374      	bcc.n	80001fa <__udivsi3+0xf2>
 8000110:	0903      	lsrs	r3, r0, #4
 8000112:	428b      	cmp	r3, r1
 8000114:	d35f      	bcc.n	80001d6 <__udivsi3+0xce>
 8000116:	0a03      	lsrs	r3, r0, #8
 8000118:	428b      	cmp	r3, r1
 800011a:	d344      	bcc.n	80001a6 <__udivsi3+0x9e>
 800011c:	0b03      	lsrs	r3, r0, #12
 800011e:	428b      	cmp	r3, r1
 8000120:	d328      	bcc.n	8000174 <__udivsi3+0x6c>
 8000122:	0c03      	lsrs	r3, r0, #16
 8000124:	428b      	cmp	r3, r1
 8000126:	d30d      	bcc.n	8000144 <__udivsi3+0x3c>
 8000128:	22ff      	movs	r2, #255	@ 0xff
 800012a:	0209      	lsls	r1, r1, #8
 800012c:	ba12      	rev	r2, r2
 800012e:	0c03      	lsrs	r3, r0, #16
 8000130:	428b      	cmp	r3, r1
 8000132:	d302      	bcc.n	800013a <__udivsi3+0x32>
 8000134:	1212      	asrs	r2, r2, #8
 8000136:	0209      	lsls	r1, r1, #8
 8000138:	d065      	beq.n	8000206 <__udivsi3+0xfe>
 800013a:	0b03      	lsrs	r3, r0, #12
 800013c:	428b      	cmp	r3, r1
 800013e:	d319      	bcc.n	8000174 <__udivsi3+0x6c>
 8000140:	e000      	b.n	8000144 <__udivsi3+0x3c>
 8000142:	0a09      	lsrs	r1, r1, #8
 8000144:	0bc3      	lsrs	r3, r0, #15
 8000146:	428b      	cmp	r3, r1
 8000148:	d301      	bcc.n	800014e <__udivsi3+0x46>
 800014a:	03cb      	lsls	r3, r1, #15
 800014c:	1ac0      	subs	r0, r0, r3
 800014e:	4152      	adcs	r2, r2
 8000150:	0b83      	lsrs	r3, r0, #14
 8000152:	428b      	cmp	r3, r1
 8000154:	d301      	bcc.n	800015a <__udivsi3+0x52>
 8000156:	038b      	lsls	r3, r1, #14
 8000158:	1ac0      	subs	r0, r0, r3
 800015a:	4152      	adcs	r2, r2
 800015c:	0b43      	lsrs	r3, r0, #13
 800015e:	428b      	cmp	r3, r1
 8000160:	d301      	bcc.n	8000166 <__udivsi3+0x5e>
 8000162:	034b      	lsls	r3, r1, #13
 8000164:	1ac0      	subs	r0, r0, r3
 8000166:	4152      	adcs	r2, r2
 8000168:	0b03      	lsrs	r3, r0, #12
 800016a:	428b      	cmp	r3, r1
 800016c:	d301      	bcc.n	8000172 <__udivsi3+0x6a>
 800016e:	030b      	lsls	r3, r1, #12
 8000170:	1ac0      	subs	r0, r0, r3
 8000172:	4152      	adcs	r2, r2
 8000174:	0ac3      	lsrs	r3, r0, #11
 8000176:	428b      	cmp	r3, r1
 8000178:	d301      	bcc.n	800017e <__udivsi3+0x76>
 800017a:	02cb      	lsls	r3, r1, #11
 800017c:	1ac0      	subs	r0, r0, r3
 800017e:	4152      	adcs	r2, r2
 8000180:	0a83      	lsrs	r3, r0, #10
 8000182:	428b      	cmp	r3, r1
 8000184:	d301      	bcc.n	800018a <__udivsi3+0x82>
 8000186:	028b      	lsls	r3, r1, #10
 8000188:	1ac0      	subs	r0, r0, r3
 800018a:	4152      	adcs	r2, r2
 800018c:	0a43      	lsrs	r3, r0, #9
 800018e:	428b      	cmp	r3, r1
 8000190:	d301      	bcc.n	8000196 <__udivsi3+0x8e>
 8000192:	024b      	lsls	r3, r1, #9
 8000194:	1ac0      	subs	r0, r0, r3
 8000196:	4152      	adcs	r2, r2
 8000198:	0a03      	lsrs	r3, r0, #8
 800019a:	428b      	cmp	r3, r1
 800019c:	d301      	bcc.n	80001a2 <__udivsi3+0x9a>
 800019e:	020b      	lsls	r3, r1, #8
 80001a0:	1ac0      	subs	r0, r0, r3
 80001a2:	4152      	adcs	r2, r2
 80001a4:	d2cd      	bcs.n	8000142 <__udivsi3+0x3a>
 80001a6:	09c3      	lsrs	r3, r0, #7
 80001a8:	428b      	cmp	r3, r1
 80001aa:	d301      	bcc.n	80001b0 <__udivsi3+0xa8>
 80001ac:	01cb      	lsls	r3, r1, #7
 80001ae:	1ac0      	subs	r0, r0, r3
 80001b0:	4152      	adcs	r2, r2
 80001b2:	0983      	lsrs	r3, r0, #6
 80001b4:	428b      	cmp	r3, r1
 80001b6:	d301      	bcc.n	80001bc <__udivsi3+0xb4>
 80001b8:	018b      	lsls	r3, r1, #6
 80001ba:	1ac0      	subs	r0, r0, r3
 80001bc:	4152      	adcs	r2, r2
 80001be:	0943      	lsrs	r3, r0, #5
 80001c0:	428b      	cmp	r3, r1
 80001c2:	d301      	bcc.n	80001c8 <__udivsi3+0xc0>
 80001c4:	014b      	lsls	r3, r1, #5
 80001c6:	1ac0      	subs	r0, r0, r3
 80001c8:	4152      	adcs	r2, r2
 80001ca:	0903      	lsrs	r3, r0, #4
 80001cc:	428b      	cmp	r3, r1
 80001ce:	d301      	bcc.n	80001d4 <__udivsi3+0xcc>
 80001d0:	010b      	lsls	r3, r1, #4
 80001d2:	1ac0      	subs	r0, r0, r3
 80001d4:	4152      	adcs	r2, r2
 80001d6:	08c3      	lsrs	r3, r0, #3
 80001d8:	428b      	cmp	r3, r1
 80001da:	d301      	bcc.n	80001e0 <__udivsi3+0xd8>
 80001dc:	00cb      	lsls	r3, r1, #3
 80001de:	1ac0      	subs	r0, r0, r3
 80001e0:	4152      	adcs	r2, r2
 80001e2:	0883      	lsrs	r3, r0, #2
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d301      	bcc.n	80001ec <__udivsi3+0xe4>
 80001e8:	008b      	lsls	r3, r1, #2
 80001ea:	1ac0      	subs	r0, r0, r3
 80001ec:	4152      	adcs	r2, r2
 80001ee:	0843      	lsrs	r3, r0, #1
 80001f0:	428b      	cmp	r3, r1
 80001f2:	d301      	bcc.n	80001f8 <__udivsi3+0xf0>
 80001f4:	004b      	lsls	r3, r1, #1
 80001f6:	1ac0      	subs	r0, r0, r3
 80001f8:	4152      	adcs	r2, r2
 80001fa:	1a41      	subs	r1, r0, r1
 80001fc:	d200      	bcs.n	8000200 <__udivsi3+0xf8>
 80001fe:	4601      	mov	r1, r0
 8000200:	4152      	adcs	r2, r2
 8000202:	4610      	mov	r0, r2
 8000204:	4770      	bx	lr
 8000206:	e7ff      	b.n	8000208 <__udivsi3+0x100>
 8000208:	b501      	push	{r0, lr}
 800020a:	2000      	movs	r0, #0
 800020c:	f000 f8f0 	bl	80003f0 <__aeabi_idiv0>
 8000210:	bd02      	pop	{r1, pc}
 8000212:	46c0      	nop			@ (mov r8, r8)

08000214 <__aeabi_uidivmod>:
 8000214:	2900      	cmp	r1, #0
 8000216:	d0f7      	beq.n	8000208 <__udivsi3+0x100>
 8000218:	e776      	b.n	8000108 <__udivsi3>
 800021a:	4770      	bx	lr

0800021c <__divsi3>:
 800021c:	4603      	mov	r3, r0
 800021e:	430b      	orrs	r3, r1
 8000220:	d47f      	bmi.n	8000322 <__divsi3+0x106>
 8000222:	2200      	movs	r2, #0
 8000224:	0843      	lsrs	r3, r0, #1
 8000226:	428b      	cmp	r3, r1
 8000228:	d374      	bcc.n	8000314 <__divsi3+0xf8>
 800022a:	0903      	lsrs	r3, r0, #4
 800022c:	428b      	cmp	r3, r1
 800022e:	d35f      	bcc.n	80002f0 <__divsi3+0xd4>
 8000230:	0a03      	lsrs	r3, r0, #8
 8000232:	428b      	cmp	r3, r1
 8000234:	d344      	bcc.n	80002c0 <__divsi3+0xa4>
 8000236:	0b03      	lsrs	r3, r0, #12
 8000238:	428b      	cmp	r3, r1
 800023a:	d328      	bcc.n	800028e <__divsi3+0x72>
 800023c:	0c03      	lsrs	r3, r0, #16
 800023e:	428b      	cmp	r3, r1
 8000240:	d30d      	bcc.n	800025e <__divsi3+0x42>
 8000242:	22ff      	movs	r2, #255	@ 0xff
 8000244:	0209      	lsls	r1, r1, #8
 8000246:	ba12      	rev	r2, r2
 8000248:	0c03      	lsrs	r3, r0, #16
 800024a:	428b      	cmp	r3, r1
 800024c:	d302      	bcc.n	8000254 <__divsi3+0x38>
 800024e:	1212      	asrs	r2, r2, #8
 8000250:	0209      	lsls	r1, r1, #8
 8000252:	d065      	beq.n	8000320 <__divsi3+0x104>
 8000254:	0b03      	lsrs	r3, r0, #12
 8000256:	428b      	cmp	r3, r1
 8000258:	d319      	bcc.n	800028e <__divsi3+0x72>
 800025a:	e000      	b.n	800025e <__divsi3+0x42>
 800025c:	0a09      	lsrs	r1, r1, #8
 800025e:	0bc3      	lsrs	r3, r0, #15
 8000260:	428b      	cmp	r3, r1
 8000262:	d301      	bcc.n	8000268 <__divsi3+0x4c>
 8000264:	03cb      	lsls	r3, r1, #15
 8000266:	1ac0      	subs	r0, r0, r3
 8000268:	4152      	adcs	r2, r2
 800026a:	0b83      	lsrs	r3, r0, #14
 800026c:	428b      	cmp	r3, r1
 800026e:	d301      	bcc.n	8000274 <__divsi3+0x58>
 8000270:	038b      	lsls	r3, r1, #14
 8000272:	1ac0      	subs	r0, r0, r3
 8000274:	4152      	adcs	r2, r2
 8000276:	0b43      	lsrs	r3, r0, #13
 8000278:	428b      	cmp	r3, r1
 800027a:	d301      	bcc.n	8000280 <__divsi3+0x64>
 800027c:	034b      	lsls	r3, r1, #13
 800027e:	1ac0      	subs	r0, r0, r3
 8000280:	4152      	adcs	r2, r2
 8000282:	0b03      	lsrs	r3, r0, #12
 8000284:	428b      	cmp	r3, r1
 8000286:	d301      	bcc.n	800028c <__divsi3+0x70>
 8000288:	030b      	lsls	r3, r1, #12
 800028a:	1ac0      	subs	r0, r0, r3
 800028c:	4152      	adcs	r2, r2
 800028e:	0ac3      	lsrs	r3, r0, #11
 8000290:	428b      	cmp	r3, r1
 8000292:	d301      	bcc.n	8000298 <__divsi3+0x7c>
 8000294:	02cb      	lsls	r3, r1, #11
 8000296:	1ac0      	subs	r0, r0, r3
 8000298:	4152      	adcs	r2, r2
 800029a:	0a83      	lsrs	r3, r0, #10
 800029c:	428b      	cmp	r3, r1
 800029e:	d301      	bcc.n	80002a4 <__divsi3+0x88>
 80002a0:	028b      	lsls	r3, r1, #10
 80002a2:	1ac0      	subs	r0, r0, r3
 80002a4:	4152      	adcs	r2, r2
 80002a6:	0a43      	lsrs	r3, r0, #9
 80002a8:	428b      	cmp	r3, r1
 80002aa:	d301      	bcc.n	80002b0 <__divsi3+0x94>
 80002ac:	024b      	lsls	r3, r1, #9
 80002ae:	1ac0      	subs	r0, r0, r3
 80002b0:	4152      	adcs	r2, r2
 80002b2:	0a03      	lsrs	r3, r0, #8
 80002b4:	428b      	cmp	r3, r1
 80002b6:	d301      	bcc.n	80002bc <__divsi3+0xa0>
 80002b8:	020b      	lsls	r3, r1, #8
 80002ba:	1ac0      	subs	r0, r0, r3
 80002bc:	4152      	adcs	r2, r2
 80002be:	d2cd      	bcs.n	800025c <__divsi3+0x40>
 80002c0:	09c3      	lsrs	r3, r0, #7
 80002c2:	428b      	cmp	r3, r1
 80002c4:	d301      	bcc.n	80002ca <__divsi3+0xae>
 80002c6:	01cb      	lsls	r3, r1, #7
 80002c8:	1ac0      	subs	r0, r0, r3
 80002ca:	4152      	adcs	r2, r2
 80002cc:	0983      	lsrs	r3, r0, #6
 80002ce:	428b      	cmp	r3, r1
 80002d0:	d301      	bcc.n	80002d6 <__divsi3+0xba>
 80002d2:	018b      	lsls	r3, r1, #6
 80002d4:	1ac0      	subs	r0, r0, r3
 80002d6:	4152      	adcs	r2, r2
 80002d8:	0943      	lsrs	r3, r0, #5
 80002da:	428b      	cmp	r3, r1
 80002dc:	d301      	bcc.n	80002e2 <__divsi3+0xc6>
 80002de:	014b      	lsls	r3, r1, #5
 80002e0:	1ac0      	subs	r0, r0, r3
 80002e2:	4152      	adcs	r2, r2
 80002e4:	0903      	lsrs	r3, r0, #4
 80002e6:	428b      	cmp	r3, r1
 80002e8:	d301      	bcc.n	80002ee <__divsi3+0xd2>
 80002ea:	010b      	lsls	r3, r1, #4
 80002ec:	1ac0      	subs	r0, r0, r3
 80002ee:	4152      	adcs	r2, r2
 80002f0:	08c3      	lsrs	r3, r0, #3
 80002f2:	428b      	cmp	r3, r1
 80002f4:	d301      	bcc.n	80002fa <__divsi3+0xde>
 80002f6:	00cb      	lsls	r3, r1, #3
 80002f8:	1ac0      	subs	r0, r0, r3
 80002fa:	4152      	adcs	r2, r2
 80002fc:	0883      	lsrs	r3, r0, #2
 80002fe:	428b      	cmp	r3, r1
 8000300:	d301      	bcc.n	8000306 <__divsi3+0xea>
 8000302:	008b      	lsls	r3, r1, #2
 8000304:	1ac0      	subs	r0, r0, r3
 8000306:	4152      	adcs	r2, r2
 8000308:	0843      	lsrs	r3, r0, #1
 800030a:	428b      	cmp	r3, r1
 800030c:	d301      	bcc.n	8000312 <__divsi3+0xf6>
 800030e:	004b      	lsls	r3, r1, #1
 8000310:	1ac0      	subs	r0, r0, r3
 8000312:	4152      	adcs	r2, r2
 8000314:	1a41      	subs	r1, r0, r1
 8000316:	d200      	bcs.n	800031a <__divsi3+0xfe>
 8000318:	4601      	mov	r1, r0
 800031a:	4152      	adcs	r2, r2
 800031c:	4610      	mov	r0, r2
 800031e:	4770      	bx	lr
 8000320:	e05d      	b.n	80003de <__divsi3+0x1c2>
 8000322:	0fca      	lsrs	r2, r1, #31
 8000324:	d000      	beq.n	8000328 <__divsi3+0x10c>
 8000326:	4249      	negs	r1, r1
 8000328:	1003      	asrs	r3, r0, #32
 800032a:	d300      	bcc.n	800032e <__divsi3+0x112>
 800032c:	4240      	negs	r0, r0
 800032e:	4053      	eors	r3, r2
 8000330:	2200      	movs	r2, #0
 8000332:	469c      	mov	ip, r3
 8000334:	0903      	lsrs	r3, r0, #4
 8000336:	428b      	cmp	r3, r1
 8000338:	d32d      	bcc.n	8000396 <__divsi3+0x17a>
 800033a:	0a03      	lsrs	r3, r0, #8
 800033c:	428b      	cmp	r3, r1
 800033e:	d312      	bcc.n	8000366 <__divsi3+0x14a>
 8000340:	22fc      	movs	r2, #252	@ 0xfc
 8000342:	0189      	lsls	r1, r1, #6
 8000344:	ba12      	rev	r2, r2
 8000346:	0a03      	lsrs	r3, r0, #8
 8000348:	428b      	cmp	r3, r1
 800034a:	d30c      	bcc.n	8000366 <__divsi3+0x14a>
 800034c:	0189      	lsls	r1, r1, #6
 800034e:	1192      	asrs	r2, r2, #6
 8000350:	428b      	cmp	r3, r1
 8000352:	d308      	bcc.n	8000366 <__divsi3+0x14a>
 8000354:	0189      	lsls	r1, r1, #6
 8000356:	1192      	asrs	r2, r2, #6
 8000358:	428b      	cmp	r3, r1
 800035a:	d304      	bcc.n	8000366 <__divsi3+0x14a>
 800035c:	0189      	lsls	r1, r1, #6
 800035e:	d03a      	beq.n	80003d6 <__divsi3+0x1ba>
 8000360:	1192      	asrs	r2, r2, #6
 8000362:	e000      	b.n	8000366 <__divsi3+0x14a>
 8000364:	0989      	lsrs	r1, r1, #6
 8000366:	09c3      	lsrs	r3, r0, #7
 8000368:	428b      	cmp	r3, r1
 800036a:	d301      	bcc.n	8000370 <__divsi3+0x154>
 800036c:	01cb      	lsls	r3, r1, #7
 800036e:	1ac0      	subs	r0, r0, r3
 8000370:	4152      	adcs	r2, r2
 8000372:	0983      	lsrs	r3, r0, #6
 8000374:	428b      	cmp	r3, r1
 8000376:	d301      	bcc.n	800037c <__divsi3+0x160>
 8000378:	018b      	lsls	r3, r1, #6
 800037a:	1ac0      	subs	r0, r0, r3
 800037c:	4152      	adcs	r2, r2
 800037e:	0943      	lsrs	r3, r0, #5
 8000380:	428b      	cmp	r3, r1
 8000382:	d301      	bcc.n	8000388 <__divsi3+0x16c>
 8000384:	014b      	lsls	r3, r1, #5
 8000386:	1ac0      	subs	r0, r0, r3
 8000388:	4152      	adcs	r2, r2
 800038a:	0903      	lsrs	r3, r0, #4
 800038c:	428b      	cmp	r3, r1
 800038e:	d301      	bcc.n	8000394 <__divsi3+0x178>
 8000390:	010b      	lsls	r3, r1, #4
 8000392:	1ac0      	subs	r0, r0, r3
 8000394:	4152      	adcs	r2, r2
 8000396:	08c3      	lsrs	r3, r0, #3
 8000398:	428b      	cmp	r3, r1
 800039a:	d301      	bcc.n	80003a0 <__divsi3+0x184>
 800039c:	00cb      	lsls	r3, r1, #3
 800039e:	1ac0      	subs	r0, r0, r3
 80003a0:	4152      	adcs	r2, r2
 80003a2:	0883      	lsrs	r3, r0, #2
 80003a4:	428b      	cmp	r3, r1
 80003a6:	d301      	bcc.n	80003ac <__divsi3+0x190>
 80003a8:	008b      	lsls	r3, r1, #2
 80003aa:	1ac0      	subs	r0, r0, r3
 80003ac:	4152      	adcs	r2, r2
 80003ae:	d2d9      	bcs.n	8000364 <__divsi3+0x148>
 80003b0:	0843      	lsrs	r3, r0, #1
 80003b2:	428b      	cmp	r3, r1
 80003b4:	d301      	bcc.n	80003ba <__divsi3+0x19e>
 80003b6:	004b      	lsls	r3, r1, #1
 80003b8:	1ac0      	subs	r0, r0, r3
 80003ba:	4152      	adcs	r2, r2
 80003bc:	1a41      	subs	r1, r0, r1
 80003be:	d200      	bcs.n	80003c2 <__divsi3+0x1a6>
 80003c0:	4601      	mov	r1, r0
 80003c2:	4663      	mov	r3, ip
 80003c4:	4152      	adcs	r2, r2
 80003c6:	105b      	asrs	r3, r3, #1
 80003c8:	4610      	mov	r0, r2
 80003ca:	d301      	bcc.n	80003d0 <__divsi3+0x1b4>
 80003cc:	4240      	negs	r0, r0
 80003ce:	2b00      	cmp	r3, #0
 80003d0:	d500      	bpl.n	80003d4 <__divsi3+0x1b8>
 80003d2:	4249      	negs	r1, r1
 80003d4:	4770      	bx	lr
 80003d6:	4663      	mov	r3, ip
 80003d8:	105b      	asrs	r3, r3, #1
 80003da:	d300      	bcc.n	80003de <__divsi3+0x1c2>
 80003dc:	4240      	negs	r0, r0
 80003de:	b501      	push	{r0, lr}
 80003e0:	2000      	movs	r0, #0
 80003e2:	f000 f805 	bl	80003f0 <__aeabi_idiv0>
 80003e6:	bd02      	pop	{r1, pc}

080003e8 <__aeabi_idivmod>:
 80003e8:	2900      	cmp	r1, #0
 80003ea:	d0f8      	beq.n	80003de <__divsi3+0x1c2>
 80003ec:	e716      	b.n	800021c <__divsi3>
 80003ee:	4770      	bx	lr

080003f0 <__aeabi_idiv0>:
 80003f0:	4770      	bx	lr
 80003f2:	46c0      	nop			@ (mov r8, r8)

080003f4 <__aeabi_cfrcmple>:
 80003f4:	4684      	mov	ip, r0
 80003f6:	0008      	movs	r0, r1
 80003f8:	4661      	mov	r1, ip
 80003fa:	e7ff      	b.n	80003fc <__aeabi_cfcmpeq>

080003fc <__aeabi_cfcmpeq>:
 80003fc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80003fe:	f000 fbf7 	bl	8000bf0 <__lesf2>
 8000402:	2800      	cmp	r0, #0
 8000404:	d401      	bmi.n	800040a <__aeabi_cfcmpeq+0xe>
 8000406:	2100      	movs	r1, #0
 8000408:	42c8      	cmn	r0, r1
 800040a:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

0800040c <__aeabi_fcmpeq>:
 800040c:	b510      	push	{r4, lr}
 800040e:	f000 fb7f 	bl	8000b10 <__eqsf2>
 8000412:	4240      	negs	r0, r0
 8000414:	3001      	adds	r0, #1
 8000416:	bd10      	pop	{r4, pc}

08000418 <__aeabi_fcmplt>:
 8000418:	b510      	push	{r4, lr}
 800041a:	f000 fbe9 	bl	8000bf0 <__lesf2>
 800041e:	2800      	cmp	r0, #0
 8000420:	db01      	blt.n	8000426 <__aeabi_fcmplt+0xe>
 8000422:	2000      	movs	r0, #0
 8000424:	bd10      	pop	{r4, pc}
 8000426:	2001      	movs	r0, #1
 8000428:	bd10      	pop	{r4, pc}
 800042a:	46c0      	nop			@ (mov r8, r8)

0800042c <__aeabi_fcmple>:
 800042c:	b510      	push	{r4, lr}
 800042e:	f000 fbdf 	bl	8000bf0 <__lesf2>
 8000432:	2800      	cmp	r0, #0
 8000434:	dd01      	ble.n	800043a <__aeabi_fcmple+0xe>
 8000436:	2000      	movs	r0, #0
 8000438:	bd10      	pop	{r4, pc}
 800043a:	2001      	movs	r0, #1
 800043c:	bd10      	pop	{r4, pc}
 800043e:	46c0      	nop			@ (mov r8, r8)

08000440 <__aeabi_fcmpgt>:
 8000440:	b510      	push	{r4, lr}
 8000442:	f000 fb8d 	bl	8000b60 <__gesf2>
 8000446:	2800      	cmp	r0, #0
 8000448:	dc01      	bgt.n	800044e <__aeabi_fcmpgt+0xe>
 800044a:	2000      	movs	r0, #0
 800044c:	bd10      	pop	{r4, pc}
 800044e:	2001      	movs	r0, #1
 8000450:	bd10      	pop	{r4, pc}
 8000452:	46c0      	nop			@ (mov r8, r8)

08000454 <__aeabi_fcmpge>:
 8000454:	b510      	push	{r4, lr}
 8000456:	f000 fb83 	bl	8000b60 <__gesf2>
 800045a:	2800      	cmp	r0, #0
 800045c:	da01      	bge.n	8000462 <__aeabi_fcmpge+0xe>
 800045e:	2000      	movs	r0, #0
 8000460:	bd10      	pop	{r4, pc}
 8000462:	2001      	movs	r0, #1
 8000464:	bd10      	pop	{r4, pc}
 8000466:	46c0      	nop			@ (mov r8, r8)

08000468 <__aeabi_f2uiz>:
 8000468:	219e      	movs	r1, #158	@ 0x9e
 800046a:	b510      	push	{r4, lr}
 800046c:	05c9      	lsls	r1, r1, #23
 800046e:	1c04      	adds	r4, r0, #0
 8000470:	f7ff fff0 	bl	8000454 <__aeabi_fcmpge>
 8000474:	2800      	cmp	r0, #0
 8000476:	d103      	bne.n	8000480 <__aeabi_f2uiz+0x18>
 8000478:	1c20      	adds	r0, r4, #0
 800047a:	f000 ffbf 	bl	80013fc <__aeabi_f2iz>
 800047e:	bd10      	pop	{r4, pc}
 8000480:	219e      	movs	r1, #158	@ 0x9e
 8000482:	1c20      	adds	r0, r4, #0
 8000484:	05c9      	lsls	r1, r1, #23
 8000486:	f000 fd55 	bl	8000f34 <__aeabi_fsub>
 800048a:	f000 ffb7 	bl	80013fc <__aeabi_f2iz>
 800048e:	2380      	movs	r3, #128	@ 0x80
 8000490:	061b      	lsls	r3, r3, #24
 8000492:	469c      	mov	ip, r3
 8000494:	4460      	add	r0, ip
 8000496:	e7f2      	b.n	800047e <__aeabi_f2uiz+0x16>

08000498 <__aeabi_l2f>:
 8000498:	2201      	movs	r2, #1
 800049a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800049c:	000d      	movs	r5, r1
 800049e:	0004      	movs	r4, r0
 80004a0:	4b14      	ldr	r3, [pc, #80]	@ (80004f4 <__aeabi_l2f+0x5c>)
 80004a2:	4252      	negs	r2, r2
 80004a4:	2180      	movs	r1, #128	@ 0x80
 80004a6:	1912      	adds	r2, r2, r4
 80004a8:	416b      	adcs	r3, r5
 80004aa:	03c9      	lsls	r1, r1, #15
 80004ac:	428b      	cmp	r3, r1
 80004ae:	d217      	bcs.n	80004e0 <__aeabi_l2f+0x48>
 80004b0:	4911      	ldr	r1, [pc, #68]	@ (80004f8 <__aeabi_l2f+0x60>)
 80004b2:	428b      	cmp	r3, r1
 80004b4:	d012      	beq.n	80004dc <__aeabi_l2f+0x44>
 80004b6:	0028      	movs	r0, r5
 80004b8:	f002 fe60 	bl	800317c <__aeabi_i2d>
 80004bc:	2200      	movs	r2, #0
 80004be:	4b0f      	ldr	r3, [pc, #60]	@ (80004fc <__aeabi_l2f+0x64>)
 80004c0:	f001 ff30 	bl	8002324 <__aeabi_dmul>
 80004c4:	0006      	movs	r6, r0
 80004c6:	000f      	movs	r7, r1
 80004c8:	0020      	movs	r0, r4
 80004ca:	f002 fe85 	bl	80031d8 <__aeabi_ui2d>
 80004ce:	0032      	movs	r2, r6
 80004d0:	003b      	movs	r3, r7
 80004d2:	f001 f849 	bl	8001568 <__aeabi_dadd>
 80004d6:	f002 feeb 	bl	80032b0 <__aeabi_d2f>
 80004da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80004dc:	3202      	adds	r2, #2
 80004de:	d9ea      	bls.n	80004b6 <__aeabi_l2f+0x1e>
 80004e0:	0563      	lsls	r3, r4, #21
 80004e2:	d0e8      	beq.n	80004b6 <__aeabi_l2f+0x1e>
 80004e4:	2180      	movs	r1, #128	@ 0x80
 80004e6:	0ae3      	lsrs	r3, r4, #11
 80004e8:	02db      	lsls	r3, r3, #11
 80004ea:	0109      	lsls	r1, r1, #4
 80004ec:	4319      	orrs	r1, r3
 80004ee:	000c      	movs	r4, r1
 80004f0:	e7e1      	b.n	80004b6 <__aeabi_l2f+0x1e>
 80004f2:	46c0      	nop			@ (mov r8, r8)
 80004f4:	001fffff 	.word	0x001fffff
 80004f8:	003fffff 	.word	0x003fffff
 80004fc:	41f00000 	.word	0x41f00000

08000500 <__aeabi_fadd>:
 8000500:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000502:	024b      	lsls	r3, r1, #9
 8000504:	0a5a      	lsrs	r2, r3, #9
 8000506:	4694      	mov	ip, r2
 8000508:	004a      	lsls	r2, r1, #1
 800050a:	0fc9      	lsrs	r1, r1, #31
 800050c:	46ce      	mov	lr, r9
 800050e:	4647      	mov	r7, r8
 8000510:	4689      	mov	r9, r1
 8000512:	0045      	lsls	r5, r0, #1
 8000514:	0246      	lsls	r6, r0, #9
 8000516:	0e2d      	lsrs	r5, r5, #24
 8000518:	0e12      	lsrs	r2, r2, #24
 800051a:	b580      	push	{r7, lr}
 800051c:	0999      	lsrs	r1, r3, #6
 800051e:	0a77      	lsrs	r7, r6, #9
 8000520:	0fc4      	lsrs	r4, r0, #31
 8000522:	09b6      	lsrs	r6, r6, #6
 8000524:	1aab      	subs	r3, r5, r2
 8000526:	454c      	cmp	r4, r9
 8000528:	d020      	beq.n	800056c <__aeabi_fadd+0x6c>
 800052a:	2b00      	cmp	r3, #0
 800052c:	dd0c      	ble.n	8000548 <__aeabi_fadd+0x48>
 800052e:	2a00      	cmp	r2, #0
 8000530:	d134      	bne.n	800059c <__aeabi_fadd+0x9c>
 8000532:	2900      	cmp	r1, #0
 8000534:	d02a      	beq.n	800058c <__aeabi_fadd+0x8c>
 8000536:	1e5a      	subs	r2, r3, #1
 8000538:	2b01      	cmp	r3, #1
 800053a:	d100      	bne.n	800053e <__aeabi_fadd+0x3e>
 800053c:	e08f      	b.n	800065e <__aeabi_fadd+0x15e>
 800053e:	2bff      	cmp	r3, #255	@ 0xff
 8000540:	d100      	bne.n	8000544 <__aeabi_fadd+0x44>
 8000542:	e0cd      	b.n	80006e0 <__aeabi_fadd+0x1e0>
 8000544:	0013      	movs	r3, r2
 8000546:	e02f      	b.n	80005a8 <__aeabi_fadd+0xa8>
 8000548:	2b00      	cmp	r3, #0
 800054a:	d060      	beq.n	800060e <__aeabi_fadd+0x10e>
 800054c:	1b53      	subs	r3, r2, r5
 800054e:	2d00      	cmp	r5, #0
 8000550:	d000      	beq.n	8000554 <__aeabi_fadd+0x54>
 8000552:	e0ee      	b.n	8000732 <__aeabi_fadd+0x232>
 8000554:	2e00      	cmp	r6, #0
 8000556:	d100      	bne.n	800055a <__aeabi_fadd+0x5a>
 8000558:	e13e      	b.n	80007d8 <__aeabi_fadd+0x2d8>
 800055a:	1e5c      	subs	r4, r3, #1
 800055c:	2b01      	cmp	r3, #1
 800055e:	d100      	bne.n	8000562 <__aeabi_fadd+0x62>
 8000560:	e16b      	b.n	800083a <__aeabi_fadd+0x33a>
 8000562:	2bff      	cmp	r3, #255	@ 0xff
 8000564:	d100      	bne.n	8000568 <__aeabi_fadd+0x68>
 8000566:	e0b9      	b.n	80006dc <__aeabi_fadd+0x1dc>
 8000568:	0023      	movs	r3, r4
 800056a:	e0e7      	b.n	800073c <__aeabi_fadd+0x23c>
 800056c:	2b00      	cmp	r3, #0
 800056e:	dc00      	bgt.n	8000572 <__aeabi_fadd+0x72>
 8000570:	e0a4      	b.n	80006bc <__aeabi_fadd+0x1bc>
 8000572:	2a00      	cmp	r2, #0
 8000574:	d069      	beq.n	800064a <__aeabi_fadd+0x14a>
 8000576:	2dff      	cmp	r5, #255	@ 0xff
 8000578:	d100      	bne.n	800057c <__aeabi_fadd+0x7c>
 800057a:	e0b1      	b.n	80006e0 <__aeabi_fadd+0x1e0>
 800057c:	2280      	movs	r2, #128	@ 0x80
 800057e:	04d2      	lsls	r2, r2, #19
 8000580:	4311      	orrs	r1, r2
 8000582:	2b1b      	cmp	r3, #27
 8000584:	dc00      	bgt.n	8000588 <__aeabi_fadd+0x88>
 8000586:	e0e9      	b.n	800075c <__aeabi_fadd+0x25c>
 8000588:	002b      	movs	r3, r5
 800058a:	3605      	adds	r6, #5
 800058c:	08f7      	lsrs	r7, r6, #3
 800058e:	2bff      	cmp	r3, #255	@ 0xff
 8000590:	d100      	bne.n	8000594 <__aeabi_fadd+0x94>
 8000592:	e0a5      	b.n	80006e0 <__aeabi_fadd+0x1e0>
 8000594:	027a      	lsls	r2, r7, #9
 8000596:	0a52      	lsrs	r2, r2, #9
 8000598:	b2d8      	uxtb	r0, r3
 800059a:	e030      	b.n	80005fe <__aeabi_fadd+0xfe>
 800059c:	2dff      	cmp	r5, #255	@ 0xff
 800059e:	d100      	bne.n	80005a2 <__aeabi_fadd+0xa2>
 80005a0:	e09e      	b.n	80006e0 <__aeabi_fadd+0x1e0>
 80005a2:	2280      	movs	r2, #128	@ 0x80
 80005a4:	04d2      	lsls	r2, r2, #19
 80005a6:	4311      	orrs	r1, r2
 80005a8:	2001      	movs	r0, #1
 80005aa:	2b1b      	cmp	r3, #27
 80005ac:	dc08      	bgt.n	80005c0 <__aeabi_fadd+0xc0>
 80005ae:	0008      	movs	r0, r1
 80005b0:	2220      	movs	r2, #32
 80005b2:	40d8      	lsrs	r0, r3
 80005b4:	1ad3      	subs	r3, r2, r3
 80005b6:	4099      	lsls	r1, r3
 80005b8:	000b      	movs	r3, r1
 80005ba:	1e5a      	subs	r2, r3, #1
 80005bc:	4193      	sbcs	r3, r2
 80005be:	4318      	orrs	r0, r3
 80005c0:	1a36      	subs	r6, r6, r0
 80005c2:	0173      	lsls	r3, r6, #5
 80005c4:	d400      	bmi.n	80005c8 <__aeabi_fadd+0xc8>
 80005c6:	e071      	b.n	80006ac <__aeabi_fadd+0x1ac>
 80005c8:	01b6      	lsls	r6, r6, #6
 80005ca:	09b7      	lsrs	r7, r6, #6
 80005cc:	0038      	movs	r0, r7
 80005ce:	f002 fef1 	bl	80033b4 <__clzsi2>
 80005d2:	003b      	movs	r3, r7
 80005d4:	3805      	subs	r0, #5
 80005d6:	4083      	lsls	r3, r0
 80005d8:	4285      	cmp	r5, r0
 80005da:	dd4d      	ble.n	8000678 <__aeabi_fadd+0x178>
 80005dc:	4eb4      	ldr	r6, [pc, #720]	@ (80008b0 <__aeabi_fadd+0x3b0>)
 80005de:	1a2d      	subs	r5, r5, r0
 80005e0:	401e      	ands	r6, r3
 80005e2:	075a      	lsls	r2, r3, #29
 80005e4:	d068      	beq.n	80006b8 <__aeabi_fadd+0x1b8>
 80005e6:	220f      	movs	r2, #15
 80005e8:	4013      	ands	r3, r2
 80005ea:	2b04      	cmp	r3, #4
 80005ec:	d064      	beq.n	80006b8 <__aeabi_fadd+0x1b8>
 80005ee:	3604      	adds	r6, #4
 80005f0:	0173      	lsls	r3, r6, #5
 80005f2:	d561      	bpl.n	80006b8 <__aeabi_fadd+0x1b8>
 80005f4:	1c68      	adds	r0, r5, #1
 80005f6:	2dfe      	cmp	r5, #254	@ 0xfe
 80005f8:	d154      	bne.n	80006a4 <__aeabi_fadd+0x1a4>
 80005fa:	20ff      	movs	r0, #255	@ 0xff
 80005fc:	2200      	movs	r2, #0
 80005fe:	05c0      	lsls	r0, r0, #23
 8000600:	4310      	orrs	r0, r2
 8000602:	07e4      	lsls	r4, r4, #31
 8000604:	4320      	orrs	r0, r4
 8000606:	bcc0      	pop	{r6, r7}
 8000608:	46b9      	mov	r9, r7
 800060a:	46b0      	mov	r8, r6
 800060c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800060e:	22fe      	movs	r2, #254	@ 0xfe
 8000610:	4690      	mov	r8, r2
 8000612:	1c68      	adds	r0, r5, #1
 8000614:	0002      	movs	r2, r0
 8000616:	4640      	mov	r0, r8
 8000618:	4210      	tst	r0, r2
 800061a:	d16b      	bne.n	80006f4 <__aeabi_fadd+0x1f4>
 800061c:	2d00      	cmp	r5, #0
 800061e:	d000      	beq.n	8000622 <__aeabi_fadd+0x122>
 8000620:	e0dd      	b.n	80007de <__aeabi_fadd+0x2de>
 8000622:	2e00      	cmp	r6, #0
 8000624:	d100      	bne.n	8000628 <__aeabi_fadd+0x128>
 8000626:	e102      	b.n	800082e <__aeabi_fadd+0x32e>
 8000628:	2900      	cmp	r1, #0
 800062a:	d0b3      	beq.n	8000594 <__aeabi_fadd+0x94>
 800062c:	2280      	movs	r2, #128	@ 0x80
 800062e:	1a77      	subs	r7, r6, r1
 8000630:	04d2      	lsls	r2, r2, #19
 8000632:	4217      	tst	r7, r2
 8000634:	d100      	bne.n	8000638 <__aeabi_fadd+0x138>
 8000636:	e136      	b.n	80008a6 <__aeabi_fadd+0x3a6>
 8000638:	464c      	mov	r4, r9
 800063a:	1b8e      	subs	r6, r1, r6
 800063c:	d061      	beq.n	8000702 <__aeabi_fadd+0x202>
 800063e:	2001      	movs	r0, #1
 8000640:	4216      	tst	r6, r2
 8000642:	d130      	bne.n	80006a6 <__aeabi_fadd+0x1a6>
 8000644:	2300      	movs	r3, #0
 8000646:	08f7      	lsrs	r7, r6, #3
 8000648:	e7a4      	b.n	8000594 <__aeabi_fadd+0x94>
 800064a:	2900      	cmp	r1, #0
 800064c:	d09e      	beq.n	800058c <__aeabi_fadd+0x8c>
 800064e:	1e5a      	subs	r2, r3, #1
 8000650:	2b01      	cmp	r3, #1
 8000652:	d100      	bne.n	8000656 <__aeabi_fadd+0x156>
 8000654:	e0ca      	b.n	80007ec <__aeabi_fadd+0x2ec>
 8000656:	2bff      	cmp	r3, #255	@ 0xff
 8000658:	d042      	beq.n	80006e0 <__aeabi_fadd+0x1e0>
 800065a:	0013      	movs	r3, r2
 800065c:	e791      	b.n	8000582 <__aeabi_fadd+0x82>
 800065e:	1a71      	subs	r1, r6, r1
 8000660:	014b      	lsls	r3, r1, #5
 8000662:	d400      	bmi.n	8000666 <__aeabi_fadd+0x166>
 8000664:	e0d1      	b.n	800080a <__aeabi_fadd+0x30a>
 8000666:	018f      	lsls	r7, r1, #6
 8000668:	09bf      	lsrs	r7, r7, #6
 800066a:	0038      	movs	r0, r7
 800066c:	f002 fea2 	bl	80033b4 <__clzsi2>
 8000670:	003b      	movs	r3, r7
 8000672:	3805      	subs	r0, #5
 8000674:	4083      	lsls	r3, r0
 8000676:	2501      	movs	r5, #1
 8000678:	2220      	movs	r2, #32
 800067a:	1b40      	subs	r0, r0, r5
 800067c:	3001      	adds	r0, #1
 800067e:	1a12      	subs	r2, r2, r0
 8000680:	001e      	movs	r6, r3
 8000682:	4093      	lsls	r3, r2
 8000684:	40c6      	lsrs	r6, r0
 8000686:	1e5a      	subs	r2, r3, #1
 8000688:	4193      	sbcs	r3, r2
 800068a:	431e      	orrs	r6, r3
 800068c:	d039      	beq.n	8000702 <__aeabi_fadd+0x202>
 800068e:	0773      	lsls	r3, r6, #29
 8000690:	d100      	bne.n	8000694 <__aeabi_fadd+0x194>
 8000692:	e11b      	b.n	80008cc <__aeabi_fadd+0x3cc>
 8000694:	230f      	movs	r3, #15
 8000696:	2500      	movs	r5, #0
 8000698:	4033      	ands	r3, r6
 800069a:	2b04      	cmp	r3, #4
 800069c:	d1a7      	bne.n	80005ee <__aeabi_fadd+0xee>
 800069e:	2001      	movs	r0, #1
 80006a0:	0172      	lsls	r2, r6, #5
 80006a2:	d57c      	bpl.n	800079e <__aeabi_fadd+0x29e>
 80006a4:	b2c0      	uxtb	r0, r0
 80006a6:	01b2      	lsls	r2, r6, #6
 80006a8:	0a52      	lsrs	r2, r2, #9
 80006aa:	e7a8      	b.n	80005fe <__aeabi_fadd+0xfe>
 80006ac:	0773      	lsls	r3, r6, #29
 80006ae:	d003      	beq.n	80006b8 <__aeabi_fadd+0x1b8>
 80006b0:	230f      	movs	r3, #15
 80006b2:	4033      	ands	r3, r6
 80006b4:	2b04      	cmp	r3, #4
 80006b6:	d19a      	bne.n	80005ee <__aeabi_fadd+0xee>
 80006b8:	002b      	movs	r3, r5
 80006ba:	e767      	b.n	800058c <__aeabi_fadd+0x8c>
 80006bc:	2b00      	cmp	r3, #0
 80006be:	d023      	beq.n	8000708 <__aeabi_fadd+0x208>
 80006c0:	1b53      	subs	r3, r2, r5
 80006c2:	2d00      	cmp	r5, #0
 80006c4:	d17b      	bne.n	80007be <__aeabi_fadd+0x2be>
 80006c6:	2e00      	cmp	r6, #0
 80006c8:	d100      	bne.n	80006cc <__aeabi_fadd+0x1cc>
 80006ca:	e086      	b.n	80007da <__aeabi_fadd+0x2da>
 80006cc:	1e5d      	subs	r5, r3, #1
 80006ce:	2b01      	cmp	r3, #1
 80006d0:	d100      	bne.n	80006d4 <__aeabi_fadd+0x1d4>
 80006d2:	e08b      	b.n	80007ec <__aeabi_fadd+0x2ec>
 80006d4:	2bff      	cmp	r3, #255	@ 0xff
 80006d6:	d002      	beq.n	80006de <__aeabi_fadd+0x1de>
 80006d8:	002b      	movs	r3, r5
 80006da:	e075      	b.n	80007c8 <__aeabi_fadd+0x2c8>
 80006dc:	464c      	mov	r4, r9
 80006de:	4667      	mov	r7, ip
 80006e0:	2f00      	cmp	r7, #0
 80006e2:	d100      	bne.n	80006e6 <__aeabi_fadd+0x1e6>
 80006e4:	e789      	b.n	80005fa <__aeabi_fadd+0xfa>
 80006e6:	2280      	movs	r2, #128	@ 0x80
 80006e8:	03d2      	lsls	r2, r2, #15
 80006ea:	433a      	orrs	r2, r7
 80006ec:	0252      	lsls	r2, r2, #9
 80006ee:	20ff      	movs	r0, #255	@ 0xff
 80006f0:	0a52      	lsrs	r2, r2, #9
 80006f2:	e784      	b.n	80005fe <__aeabi_fadd+0xfe>
 80006f4:	1a77      	subs	r7, r6, r1
 80006f6:	017b      	lsls	r3, r7, #5
 80006f8:	d46b      	bmi.n	80007d2 <__aeabi_fadd+0x2d2>
 80006fa:	2f00      	cmp	r7, #0
 80006fc:	d000      	beq.n	8000700 <__aeabi_fadd+0x200>
 80006fe:	e765      	b.n	80005cc <__aeabi_fadd+0xcc>
 8000700:	2400      	movs	r4, #0
 8000702:	2000      	movs	r0, #0
 8000704:	2200      	movs	r2, #0
 8000706:	e77a      	b.n	80005fe <__aeabi_fadd+0xfe>
 8000708:	22fe      	movs	r2, #254	@ 0xfe
 800070a:	1c6b      	adds	r3, r5, #1
 800070c:	421a      	tst	r2, r3
 800070e:	d149      	bne.n	80007a4 <__aeabi_fadd+0x2a4>
 8000710:	2d00      	cmp	r5, #0
 8000712:	d000      	beq.n	8000716 <__aeabi_fadd+0x216>
 8000714:	e09f      	b.n	8000856 <__aeabi_fadd+0x356>
 8000716:	2e00      	cmp	r6, #0
 8000718:	d100      	bne.n	800071c <__aeabi_fadd+0x21c>
 800071a:	e0ba      	b.n	8000892 <__aeabi_fadd+0x392>
 800071c:	2900      	cmp	r1, #0
 800071e:	d100      	bne.n	8000722 <__aeabi_fadd+0x222>
 8000720:	e0cf      	b.n	80008c2 <__aeabi_fadd+0x3c2>
 8000722:	1872      	adds	r2, r6, r1
 8000724:	0153      	lsls	r3, r2, #5
 8000726:	d400      	bmi.n	800072a <__aeabi_fadd+0x22a>
 8000728:	e0cd      	b.n	80008c6 <__aeabi_fadd+0x3c6>
 800072a:	0192      	lsls	r2, r2, #6
 800072c:	2001      	movs	r0, #1
 800072e:	0a52      	lsrs	r2, r2, #9
 8000730:	e765      	b.n	80005fe <__aeabi_fadd+0xfe>
 8000732:	2aff      	cmp	r2, #255	@ 0xff
 8000734:	d0d2      	beq.n	80006dc <__aeabi_fadd+0x1dc>
 8000736:	2080      	movs	r0, #128	@ 0x80
 8000738:	04c0      	lsls	r0, r0, #19
 800073a:	4306      	orrs	r6, r0
 800073c:	2001      	movs	r0, #1
 800073e:	2b1b      	cmp	r3, #27
 8000740:	dc08      	bgt.n	8000754 <__aeabi_fadd+0x254>
 8000742:	0030      	movs	r0, r6
 8000744:	2420      	movs	r4, #32
 8000746:	40d8      	lsrs	r0, r3
 8000748:	1ae3      	subs	r3, r4, r3
 800074a:	409e      	lsls	r6, r3
 800074c:	0033      	movs	r3, r6
 800074e:	1e5c      	subs	r4, r3, #1
 8000750:	41a3      	sbcs	r3, r4
 8000752:	4318      	orrs	r0, r3
 8000754:	464c      	mov	r4, r9
 8000756:	0015      	movs	r5, r2
 8000758:	1a0e      	subs	r6, r1, r0
 800075a:	e732      	b.n	80005c2 <__aeabi_fadd+0xc2>
 800075c:	0008      	movs	r0, r1
 800075e:	2220      	movs	r2, #32
 8000760:	40d8      	lsrs	r0, r3
 8000762:	1ad3      	subs	r3, r2, r3
 8000764:	4099      	lsls	r1, r3
 8000766:	000b      	movs	r3, r1
 8000768:	1e5a      	subs	r2, r3, #1
 800076a:	4193      	sbcs	r3, r2
 800076c:	4303      	orrs	r3, r0
 800076e:	18f6      	adds	r6, r6, r3
 8000770:	0173      	lsls	r3, r6, #5
 8000772:	d59b      	bpl.n	80006ac <__aeabi_fadd+0x1ac>
 8000774:	3501      	adds	r5, #1
 8000776:	2dff      	cmp	r5, #255	@ 0xff
 8000778:	d100      	bne.n	800077c <__aeabi_fadd+0x27c>
 800077a:	e73e      	b.n	80005fa <__aeabi_fadd+0xfa>
 800077c:	2301      	movs	r3, #1
 800077e:	494d      	ldr	r1, [pc, #308]	@ (80008b4 <__aeabi_fadd+0x3b4>)
 8000780:	0872      	lsrs	r2, r6, #1
 8000782:	4033      	ands	r3, r6
 8000784:	400a      	ands	r2, r1
 8000786:	431a      	orrs	r2, r3
 8000788:	0016      	movs	r6, r2
 800078a:	0753      	lsls	r3, r2, #29
 800078c:	d004      	beq.n	8000798 <__aeabi_fadd+0x298>
 800078e:	230f      	movs	r3, #15
 8000790:	4013      	ands	r3, r2
 8000792:	2b04      	cmp	r3, #4
 8000794:	d000      	beq.n	8000798 <__aeabi_fadd+0x298>
 8000796:	e72a      	b.n	80005ee <__aeabi_fadd+0xee>
 8000798:	0173      	lsls	r3, r6, #5
 800079a:	d500      	bpl.n	800079e <__aeabi_fadd+0x29e>
 800079c:	e72a      	b.n	80005f4 <__aeabi_fadd+0xf4>
 800079e:	002b      	movs	r3, r5
 80007a0:	08f7      	lsrs	r7, r6, #3
 80007a2:	e6f7      	b.n	8000594 <__aeabi_fadd+0x94>
 80007a4:	2bff      	cmp	r3, #255	@ 0xff
 80007a6:	d100      	bne.n	80007aa <__aeabi_fadd+0x2aa>
 80007a8:	e727      	b.n	80005fa <__aeabi_fadd+0xfa>
 80007aa:	1871      	adds	r1, r6, r1
 80007ac:	0849      	lsrs	r1, r1, #1
 80007ae:	074a      	lsls	r2, r1, #29
 80007b0:	d02f      	beq.n	8000812 <__aeabi_fadd+0x312>
 80007b2:	220f      	movs	r2, #15
 80007b4:	400a      	ands	r2, r1
 80007b6:	2a04      	cmp	r2, #4
 80007b8:	d02b      	beq.n	8000812 <__aeabi_fadd+0x312>
 80007ba:	1d0e      	adds	r6, r1, #4
 80007bc:	e6e6      	b.n	800058c <__aeabi_fadd+0x8c>
 80007be:	2aff      	cmp	r2, #255	@ 0xff
 80007c0:	d08d      	beq.n	80006de <__aeabi_fadd+0x1de>
 80007c2:	2080      	movs	r0, #128	@ 0x80
 80007c4:	04c0      	lsls	r0, r0, #19
 80007c6:	4306      	orrs	r6, r0
 80007c8:	2b1b      	cmp	r3, #27
 80007ca:	dd24      	ble.n	8000816 <__aeabi_fadd+0x316>
 80007cc:	0013      	movs	r3, r2
 80007ce:	1d4e      	adds	r6, r1, #5
 80007d0:	e6dc      	b.n	800058c <__aeabi_fadd+0x8c>
 80007d2:	464c      	mov	r4, r9
 80007d4:	1b8f      	subs	r7, r1, r6
 80007d6:	e6f9      	b.n	80005cc <__aeabi_fadd+0xcc>
 80007d8:	464c      	mov	r4, r9
 80007da:	000e      	movs	r6, r1
 80007dc:	e6d6      	b.n	800058c <__aeabi_fadd+0x8c>
 80007de:	2e00      	cmp	r6, #0
 80007e0:	d149      	bne.n	8000876 <__aeabi_fadd+0x376>
 80007e2:	2900      	cmp	r1, #0
 80007e4:	d068      	beq.n	80008b8 <__aeabi_fadd+0x3b8>
 80007e6:	4667      	mov	r7, ip
 80007e8:	464c      	mov	r4, r9
 80007ea:	e77c      	b.n	80006e6 <__aeabi_fadd+0x1e6>
 80007ec:	1870      	adds	r0, r6, r1
 80007ee:	0143      	lsls	r3, r0, #5
 80007f0:	d574      	bpl.n	80008dc <__aeabi_fadd+0x3dc>
 80007f2:	4930      	ldr	r1, [pc, #192]	@ (80008b4 <__aeabi_fadd+0x3b4>)
 80007f4:	0840      	lsrs	r0, r0, #1
 80007f6:	4001      	ands	r1, r0
 80007f8:	0743      	lsls	r3, r0, #29
 80007fa:	d009      	beq.n	8000810 <__aeabi_fadd+0x310>
 80007fc:	230f      	movs	r3, #15
 80007fe:	4003      	ands	r3, r0
 8000800:	2b04      	cmp	r3, #4
 8000802:	d005      	beq.n	8000810 <__aeabi_fadd+0x310>
 8000804:	2302      	movs	r3, #2
 8000806:	1d0e      	adds	r6, r1, #4
 8000808:	e6c0      	b.n	800058c <__aeabi_fadd+0x8c>
 800080a:	2301      	movs	r3, #1
 800080c:	08cf      	lsrs	r7, r1, #3
 800080e:	e6c1      	b.n	8000594 <__aeabi_fadd+0x94>
 8000810:	2302      	movs	r3, #2
 8000812:	08cf      	lsrs	r7, r1, #3
 8000814:	e6be      	b.n	8000594 <__aeabi_fadd+0x94>
 8000816:	2520      	movs	r5, #32
 8000818:	0030      	movs	r0, r6
 800081a:	40d8      	lsrs	r0, r3
 800081c:	1aeb      	subs	r3, r5, r3
 800081e:	409e      	lsls	r6, r3
 8000820:	0033      	movs	r3, r6
 8000822:	1e5d      	subs	r5, r3, #1
 8000824:	41ab      	sbcs	r3, r5
 8000826:	4303      	orrs	r3, r0
 8000828:	0015      	movs	r5, r2
 800082a:	185e      	adds	r6, r3, r1
 800082c:	e7a0      	b.n	8000770 <__aeabi_fadd+0x270>
 800082e:	2900      	cmp	r1, #0
 8000830:	d100      	bne.n	8000834 <__aeabi_fadd+0x334>
 8000832:	e765      	b.n	8000700 <__aeabi_fadd+0x200>
 8000834:	464c      	mov	r4, r9
 8000836:	4667      	mov	r7, ip
 8000838:	e6ac      	b.n	8000594 <__aeabi_fadd+0x94>
 800083a:	1b8f      	subs	r7, r1, r6
 800083c:	017b      	lsls	r3, r7, #5
 800083e:	d52e      	bpl.n	800089e <__aeabi_fadd+0x39e>
 8000840:	01bf      	lsls	r7, r7, #6
 8000842:	09bf      	lsrs	r7, r7, #6
 8000844:	0038      	movs	r0, r7
 8000846:	f002 fdb5 	bl	80033b4 <__clzsi2>
 800084a:	003b      	movs	r3, r7
 800084c:	3805      	subs	r0, #5
 800084e:	4083      	lsls	r3, r0
 8000850:	464c      	mov	r4, r9
 8000852:	3501      	adds	r5, #1
 8000854:	e710      	b.n	8000678 <__aeabi_fadd+0x178>
 8000856:	2e00      	cmp	r6, #0
 8000858:	d100      	bne.n	800085c <__aeabi_fadd+0x35c>
 800085a:	e740      	b.n	80006de <__aeabi_fadd+0x1de>
 800085c:	2900      	cmp	r1, #0
 800085e:	d100      	bne.n	8000862 <__aeabi_fadd+0x362>
 8000860:	e741      	b.n	80006e6 <__aeabi_fadd+0x1e6>
 8000862:	2380      	movs	r3, #128	@ 0x80
 8000864:	03db      	lsls	r3, r3, #15
 8000866:	429f      	cmp	r7, r3
 8000868:	d200      	bcs.n	800086c <__aeabi_fadd+0x36c>
 800086a:	e73c      	b.n	80006e6 <__aeabi_fadd+0x1e6>
 800086c:	459c      	cmp	ip, r3
 800086e:	d300      	bcc.n	8000872 <__aeabi_fadd+0x372>
 8000870:	e739      	b.n	80006e6 <__aeabi_fadd+0x1e6>
 8000872:	4667      	mov	r7, ip
 8000874:	e737      	b.n	80006e6 <__aeabi_fadd+0x1e6>
 8000876:	2900      	cmp	r1, #0
 8000878:	d100      	bne.n	800087c <__aeabi_fadd+0x37c>
 800087a:	e734      	b.n	80006e6 <__aeabi_fadd+0x1e6>
 800087c:	2380      	movs	r3, #128	@ 0x80
 800087e:	03db      	lsls	r3, r3, #15
 8000880:	429f      	cmp	r7, r3
 8000882:	d200      	bcs.n	8000886 <__aeabi_fadd+0x386>
 8000884:	e72f      	b.n	80006e6 <__aeabi_fadd+0x1e6>
 8000886:	459c      	cmp	ip, r3
 8000888:	d300      	bcc.n	800088c <__aeabi_fadd+0x38c>
 800088a:	e72c      	b.n	80006e6 <__aeabi_fadd+0x1e6>
 800088c:	464c      	mov	r4, r9
 800088e:	4667      	mov	r7, ip
 8000890:	e729      	b.n	80006e6 <__aeabi_fadd+0x1e6>
 8000892:	2900      	cmp	r1, #0
 8000894:	d100      	bne.n	8000898 <__aeabi_fadd+0x398>
 8000896:	e734      	b.n	8000702 <__aeabi_fadd+0x202>
 8000898:	2300      	movs	r3, #0
 800089a:	08cf      	lsrs	r7, r1, #3
 800089c:	e67a      	b.n	8000594 <__aeabi_fadd+0x94>
 800089e:	464c      	mov	r4, r9
 80008a0:	2301      	movs	r3, #1
 80008a2:	08ff      	lsrs	r7, r7, #3
 80008a4:	e676      	b.n	8000594 <__aeabi_fadd+0x94>
 80008a6:	2f00      	cmp	r7, #0
 80008a8:	d100      	bne.n	80008ac <__aeabi_fadd+0x3ac>
 80008aa:	e729      	b.n	8000700 <__aeabi_fadd+0x200>
 80008ac:	08ff      	lsrs	r7, r7, #3
 80008ae:	e671      	b.n	8000594 <__aeabi_fadd+0x94>
 80008b0:	fbffffff 	.word	0xfbffffff
 80008b4:	7dffffff 	.word	0x7dffffff
 80008b8:	2280      	movs	r2, #128	@ 0x80
 80008ba:	2400      	movs	r4, #0
 80008bc:	20ff      	movs	r0, #255	@ 0xff
 80008be:	03d2      	lsls	r2, r2, #15
 80008c0:	e69d      	b.n	80005fe <__aeabi_fadd+0xfe>
 80008c2:	2300      	movs	r3, #0
 80008c4:	e666      	b.n	8000594 <__aeabi_fadd+0x94>
 80008c6:	2300      	movs	r3, #0
 80008c8:	08d7      	lsrs	r7, r2, #3
 80008ca:	e663      	b.n	8000594 <__aeabi_fadd+0x94>
 80008cc:	2001      	movs	r0, #1
 80008ce:	0172      	lsls	r2, r6, #5
 80008d0:	d500      	bpl.n	80008d4 <__aeabi_fadd+0x3d4>
 80008d2:	e6e7      	b.n	80006a4 <__aeabi_fadd+0x1a4>
 80008d4:	0031      	movs	r1, r6
 80008d6:	2300      	movs	r3, #0
 80008d8:	08cf      	lsrs	r7, r1, #3
 80008da:	e65b      	b.n	8000594 <__aeabi_fadd+0x94>
 80008dc:	2301      	movs	r3, #1
 80008de:	08c7      	lsrs	r7, r0, #3
 80008e0:	e658      	b.n	8000594 <__aeabi_fadd+0x94>
 80008e2:	46c0      	nop			@ (mov r8, r8)

080008e4 <__aeabi_fdiv>:
 80008e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80008e6:	4646      	mov	r6, r8
 80008e8:	464f      	mov	r7, r9
 80008ea:	46d6      	mov	lr, sl
 80008ec:	0245      	lsls	r5, r0, #9
 80008ee:	b5c0      	push	{r6, r7, lr}
 80008f0:	0fc3      	lsrs	r3, r0, #31
 80008f2:	0047      	lsls	r7, r0, #1
 80008f4:	4698      	mov	r8, r3
 80008f6:	1c0e      	adds	r6, r1, #0
 80008f8:	0a6d      	lsrs	r5, r5, #9
 80008fa:	0e3f      	lsrs	r7, r7, #24
 80008fc:	d05b      	beq.n	80009b6 <__aeabi_fdiv+0xd2>
 80008fe:	2fff      	cmp	r7, #255	@ 0xff
 8000900:	d021      	beq.n	8000946 <__aeabi_fdiv+0x62>
 8000902:	2380      	movs	r3, #128	@ 0x80
 8000904:	00ed      	lsls	r5, r5, #3
 8000906:	04db      	lsls	r3, r3, #19
 8000908:	431d      	orrs	r5, r3
 800090a:	2300      	movs	r3, #0
 800090c:	4699      	mov	r9, r3
 800090e:	469a      	mov	sl, r3
 8000910:	3f7f      	subs	r7, #127	@ 0x7f
 8000912:	0274      	lsls	r4, r6, #9
 8000914:	0073      	lsls	r3, r6, #1
 8000916:	0a64      	lsrs	r4, r4, #9
 8000918:	0e1b      	lsrs	r3, r3, #24
 800091a:	0ff6      	lsrs	r6, r6, #31
 800091c:	2b00      	cmp	r3, #0
 800091e:	d020      	beq.n	8000962 <__aeabi_fdiv+0x7e>
 8000920:	2bff      	cmp	r3, #255	@ 0xff
 8000922:	d043      	beq.n	80009ac <__aeabi_fdiv+0xc8>
 8000924:	2280      	movs	r2, #128	@ 0x80
 8000926:	2000      	movs	r0, #0
 8000928:	00e4      	lsls	r4, r4, #3
 800092a:	04d2      	lsls	r2, r2, #19
 800092c:	4314      	orrs	r4, r2
 800092e:	3b7f      	subs	r3, #127	@ 0x7f
 8000930:	4642      	mov	r2, r8
 8000932:	1aff      	subs	r7, r7, r3
 8000934:	464b      	mov	r3, r9
 8000936:	4072      	eors	r2, r6
 8000938:	2b0f      	cmp	r3, #15
 800093a:	d900      	bls.n	800093e <__aeabi_fdiv+0x5a>
 800093c:	e09d      	b.n	8000a7a <__aeabi_fdiv+0x196>
 800093e:	4971      	ldr	r1, [pc, #452]	@ (8000b04 <__aeabi_fdiv+0x220>)
 8000940:	009b      	lsls	r3, r3, #2
 8000942:	58cb      	ldr	r3, [r1, r3]
 8000944:	469f      	mov	pc, r3
 8000946:	2d00      	cmp	r5, #0
 8000948:	d15a      	bne.n	8000a00 <__aeabi_fdiv+0x11c>
 800094a:	2308      	movs	r3, #8
 800094c:	4699      	mov	r9, r3
 800094e:	3b06      	subs	r3, #6
 8000950:	0274      	lsls	r4, r6, #9
 8000952:	469a      	mov	sl, r3
 8000954:	0073      	lsls	r3, r6, #1
 8000956:	27ff      	movs	r7, #255	@ 0xff
 8000958:	0a64      	lsrs	r4, r4, #9
 800095a:	0e1b      	lsrs	r3, r3, #24
 800095c:	0ff6      	lsrs	r6, r6, #31
 800095e:	2b00      	cmp	r3, #0
 8000960:	d1de      	bne.n	8000920 <__aeabi_fdiv+0x3c>
 8000962:	2c00      	cmp	r4, #0
 8000964:	d13b      	bne.n	80009de <__aeabi_fdiv+0xfa>
 8000966:	2301      	movs	r3, #1
 8000968:	4642      	mov	r2, r8
 800096a:	4649      	mov	r1, r9
 800096c:	4072      	eors	r2, r6
 800096e:	4319      	orrs	r1, r3
 8000970:	290e      	cmp	r1, #14
 8000972:	d818      	bhi.n	80009a6 <__aeabi_fdiv+0xc2>
 8000974:	4864      	ldr	r0, [pc, #400]	@ (8000b08 <__aeabi_fdiv+0x224>)
 8000976:	0089      	lsls	r1, r1, #2
 8000978:	5841      	ldr	r1, [r0, r1]
 800097a:	468f      	mov	pc, r1
 800097c:	4653      	mov	r3, sl
 800097e:	2b02      	cmp	r3, #2
 8000980:	d100      	bne.n	8000984 <__aeabi_fdiv+0xa0>
 8000982:	e0b8      	b.n	8000af6 <__aeabi_fdiv+0x212>
 8000984:	2b03      	cmp	r3, #3
 8000986:	d06e      	beq.n	8000a66 <__aeabi_fdiv+0x182>
 8000988:	4642      	mov	r2, r8
 800098a:	002c      	movs	r4, r5
 800098c:	2b01      	cmp	r3, #1
 800098e:	d140      	bne.n	8000a12 <__aeabi_fdiv+0x12e>
 8000990:	2000      	movs	r0, #0
 8000992:	2400      	movs	r4, #0
 8000994:	05c0      	lsls	r0, r0, #23
 8000996:	4320      	orrs	r0, r4
 8000998:	07d2      	lsls	r2, r2, #31
 800099a:	4310      	orrs	r0, r2
 800099c:	bce0      	pop	{r5, r6, r7}
 800099e:	46ba      	mov	sl, r7
 80009a0:	46b1      	mov	r9, r6
 80009a2:	46a8      	mov	r8, r5
 80009a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80009a6:	20ff      	movs	r0, #255	@ 0xff
 80009a8:	2400      	movs	r4, #0
 80009aa:	e7f3      	b.n	8000994 <__aeabi_fdiv+0xb0>
 80009ac:	2c00      	cmp	r4, #0
 80009ae:	d120      	bne.n	80009f2 <__aeabi_fdiv+0x10e>
 80009b0:	2302      	movs	r3, #2
 80009b2:	3fff      	subs	r7, #255	@ 0xff
 80009b4:	e7d8      	b.n	8000968 <__aeabi_fdiv+0x84>
 80009b6:	2d00      	cmp	r5, #0
 80009b8:	d105      	bne.n	80009c6 <__aeabi_fdiv+0xe2>
 80009ba:	2304      	movs	r3, #4
 80009bc:	4699      	mov	r9, r3
 80009be:	3b03      	subs	r3, #3
 80009c0:	2700      	movs	r7, #0
 80009c2:	469a      	mov	sl, r3
 80009c4:	e7a5      	b.n	8000912 <__aeabi_fdiv+0x2e>
 80009c6:	0028      	movs	r0, r5
 80009c8:	f002 fcf4 	bl	80033b4 <__clzsi2>
 80009cc:	2776      	movs	r7, #118	@ 0x76
 80009ce:	1f43      	subs	r3, r0, #5
 80009d0:	409d      	lsls	r5, r3
 80009d2:	2300      	movs	r3, #0
 80009d4:	427f      	negs	r7, r7
 80009d6:	4699      	mov	r9, r3
 80009d8:	469a      	mov	sl, r3
 80009da:	1a3f      	subs	r7, r7, r0
 80009dc:	e799      	b.n	8000912 <__aeabi_fdiv+0x2e>
 80009de:	0020      	movs	r0, r4
 80009e0:	f002 fce8 	bl	80033b4 <__clzsi2>
 80009e4:	1f43      	subs	r3, r0, #5
 80009e6:	409c      	lsls	r4, r3
 80009e8:	2376      	movs	r3, #118	@ 0x76
 80009ea:	425b      	negs	r3, r3
 80009ec:	1a1b      	subs	r3, r3, r0
 80009ee:	2000      	movs	r0, #0
 80009f0:	e79e      	b.n	8000930 <__aeabi_fdiv+0x4c>
 80009f2:	2303      	movs	r3, #3
 80009f4:	464a      	mov	r2, r9
 80009f6:	431a      	orrs	r2, r3
 80009f8:	4691      	mov	r9, r2
 80009fa:	2003      	movs	r0, #3
 80009fc:	33fc      	adds	r3, #252	@ 0xfc
 80009fe:	e797      	b.n	8000930 <__aeabi_fdiv+0x4c>
 8000a00:	230c      	movs	r3, #12
 8000a02:	4699      	mov	r9, r3
 8000a04:	3b09      	subs	r3, #9
 8000a06:	27ff      	movs	r7, #255	@ 0xff
 8000a08:	469a      	mov	sl, r3
 8000a0a:	e782      	b.n	8000912 <__aeabi_fdiv+0x2e>
 8000a0c:	2803      	cmp	r0, #3
 8000a0e:	d02c      	beq.n	8000a6a <__aeabi_fdiv+0x186>
 8000a10:	0032      	movs	r2, r6
 8000a12:	0038      	movs	r0, r7
 8000a14:	307f      	adds	r0, #127	@ 0x7f
 8000a16:	2800      	cmp	r0, #0
 8000a18:	dd47      	ble.n	8000aaa <__aeabi_fdiv+0x1c6>
 8000a1a:	0763      	lsls	r3, r4, #29
 8000a1c:	d004      	beq.n	8000a28 <__aeabi_fdiv+0x144>
 8000a1e:	230f      	movs	r3, #15
 8000a20:	4023      	ands	r3, r4
 8000a22:	2b04      	cmp	r3, #4
 8000a24:	d000      	beq.n	8000a28 <__aeabi_fdiv+0x144>
 8000a26:	3404      	adds	r4, #4
 8000a28:	0123      	lsls	r3, r4, #4
 8000a2a:	d503      	bpl.n	8000a34 <__aeabi_fdiv+0x150>
 8000a2c:	0038      	movs	r0, r7
 8000a2e:	4b37      	ldr	r3, [pc, #220]	@ (8000b0c <__aeabi_fdiv+0x228>)
 8000a30:	3080      	adds	r0, #128	@ 0x80
 8000a32:	401c      	ands	r4, r3
 8000a34:	28fe      	cmp	r0, #254	@ 0xfe
 8000a36:	dcb6      	bgt.n	80009a6 <__aeabi_fdiv+0xc2>
 8000a38:	01a4      	lsls	r4, r4, #6
 8000a3a:	0a64      	lsrs	r4, r4, #9
 8000a3c:	b2c0      	uxtb	r0, r0
 8000a3e:	e7a9      	b.n	8000994 <__aeabi_fdiv+0xb0>
 8000a40:	2480      	movs	r4, #128	@ 0x80
 8000a42:	2200      	movs	r2, #0
 8000a44:	20ff      	movs	r0, #255	@ 0xff
 8000a46:	03e4      	lsls	r4, r4, #15
 8000a48:	e7a4      	b.n	8000994 <__aeabi_fdiv+0xb0>
 8000a4a:	2380      	movs	r3, #128	@ 0x80
 8000a4c:	03db      	lsls	r3, r3, #15
 8000a4e:	421d      	tst	r5, r3
 8000a50:	d001      	beq.n	8000a56 <__aeabi_fdiv+0x172>
 8000a52:	421c      	tst	r4, r3
 8000a54:	d00b      	beq.n	8000a6e <__aeabi_fdiv+0x18a>
 8000a56:	2480      	movs	r4, #128	@ 0x80
 8000a58:	03e4      	lsls	r4, r4, #15
 8000a5a:	432c      	orrs	r4, r5
 8000a5c:	0264      	lsls	r4, r4, #9
 8000a5e:	4642      	mov	r2, r8
 8000a60:	20ff      	movs	r0, #255	@ 0xff
 8000a62:	0a64      	lsrs	r4, r4, #9
 8000a64:	e796      	b.n	8000994 <__aeabi_fdiv+0xb0>
 8000a66:	4646      	mov	r6, r8
 8000a68:	002c      	movs	r4, r5
 8000a6a:	2380      	movs	r3, #128	@ 0x80
 8000a6c:	03db      	lsls	r3, r3, #15
 8000a6e:	431c      	orrs	r4, r3
 8000a70:	0264      	lsls	r4, r4, #9
 8000a72:	0032      	movs	r2, r6
 8000a74:	20ff      	movs	r0, #255	@ 0xff
 8000a76:	0a64      	lsrs	r4, r4, #9
 8000a78:	e78c      	b.n	8000994 <__aeabi_fdiv+0xb0>
 8000a7a:	016d      	lsls	r5, r5, #5
 8000a7c:	0160      	lsls	r0, r4, #5
 8000a7e:	4285      	cmp	r5, r0
 8000a80:	d22d      	bcs.n	8000ade <__aeabi_fdiv+0x1fa>
 8000a82:	231b      	movs	r3, #27
 8000a84:	2400      	movs	r4, #0
 8000a86:	3f01      	subs	r7, #1
 8000a88:	2601      	movs	r6, #1
 8000a8a:	0029      	movs	r1, r5
 8000a8c:	0064      	lsls	r4, r4, #1
 8000a8e:	006d      	lsls	r5, r5, #1
 8000a90:	2900      	cmp	r1, #0
 8000a92:	db01      	blt.n	8000a98 <__aeabi_fdiv+0x1b4>
 8000a94:	4285      	cmp	r5, r0
 8000a96:	d301      	bcc.n	8000a9c <__aeabi_fdiv+0x1b8>
 8000a98:	1a2d      	subs	r5, r5, r0
 8000a9a:	4334      	orrs	r4, r6
 8000a9c:	3b01      	subs	r3, #1
 8000a9e:	2b00      	cmp	r3, #0
 8000aa0:	d1f3      	bne.n	8000a8a <__aeabi_fdiv+0x1a6>
 8000aa2:	1e6b      	subs	r3, r5, #1
 8000aa4:	419d      	sbcs	r5, r3
 8000aa6:	432c      	orrs	r4, r5
 8000aa8:	e7b3      	b.n	8000a12 <__aeabi_fdiv+0x12e>
 8000aaa:	2301      	movs	r3, #1
 8000aac:	1a1b      	subs	r3, r3, r0
 8000aae:	2b1b      	cmp	r3, #27
 8000ab0:	dd00      	ble.n	8000ab4 <__aeabi_fdiv+0x1d0>
 8000ab2:	e76d      	b.n	8000990 <__aeabi_fdiv+0xac>
 8000ab4:	0021      	movs	r1, r4
 8000ab6:	379e      	adds	r7, #158	@ 0x9e
 8000ab8:	40d9      	lsrs	r1, r3
 8000aba:	40bc      	lsls	r4, r7
 8000abc:	000b      	movs	r3, r1
 8000abe:	1e61      	subs	r1, r4, #1
 8000ac0:	418c      	sbcs	r4, r1
 8000ac2:	4323      	orrs	r3, r4
 8000ac4:	0759      	lsls	r1, r3, #29
 8000ac6:	d004      	beq.n	8000ad2 <__aeabi_fdiv+0x1ee>
 8000ac8:	210f      	movs	r1, #15
 8000aca:	4019      	ands	r1, r3
 8000acc:	2904      	cmp	r1, #4
 8000ace:	d000      	beq.n	8000ad2 <__aeabi_fdiv+0x1ee>
 8000ad0:	3304      	adds	r3, #4
 8000ad2:	0159      	lsls	r1, r3, #5
 8000ad4:	d413      	bmi.n	8000afe <__aeabi_fdiv+0x21a>
 8000ad6:	019b      	lsls	r3, r3, #6
 8000ad8:	2000      	movs	r0, #0
 8000ada:	0a5c      	lsrs	r4, r3, #9
 8000adc:	e75a      	b.n	8000994 <__aeabi_fdiv+0xb0>
 8000ade:	231a      	movs	r3, #26
 8000ae0:	2401      	movs	r4, #1
 8000ae2:	1a2d      	subs	r5, r5, r0
 8000ae4:	e7d0      	b.n	8000a88 <__aeabi_fdiv+0x1a4>
 8000ae6:	1e98      	subs	r0, r3, #2
 8000ae8:	4243      	negs	r3, r0
 8000aea:	4158      	adcs	r0, r3
 8000aec:	4240      	negs	r0, r0
 8000aee:	0032      	movs	r2, r6
 8000af0:	2400      	movs	r4, #0
 8000af2:	b2c0      	uxtb	r0, r0
 8000af4:	e74e      	b.n	8000994 <__aeabi_fdiv+0xb0>
 8000af6:	4642      	mov	r2, r8
 8000af8:	20ff      	movs	r0, #255	@ 0xff
 8000afa:	2400      	movs	r4, #0
 8000afc:	e74a      	b.n	8000994 <__aeabi_fdiv+0xb0>
 8000afe:	2001      	movs	r0, #1
 8000b00:	2400      	movs	r4, #0
 8000b02:	e747      	b.n	8000994 <__aeabi_fdiv+0xb0>
 8000b04:	0800c22c 	.word	0x0800c22c
 8000b08:	0800c26c 	.word	0x0800c26c
 8000b0c:	f7ffffff 	.word	0xf7ffffff

08000b10 <__eqsf2>:
 8000b10:	b570      	push	{r4, r5, r6, lr}
 8000b12:	0042      	lsls	r2, r0, #1
 8000b14:	024e      	lsls	r6, r1, #9
 8000b16:	004c      	lsls	r4, r1, #1
 8000b18:	0245      	lsls	r5, r0, #9
 8000b1a:	0a6d      	lsrs	r5, r5, #9
 8000b1c:	0e12      	lsrs	r2, r2, #24
 8000b1e:	0fc3      	lsrs	r3, r0, #31
 8000b20:	0a76      	lsrs	r6, r6, #9
 8000b22:	0e24      	lsrs	r4, r4, #24
 8000b24:	0fc9      	lsrs	r1, r1, #31
 8000b26:	2aff      	cmp	r2, #255	@ 0xff
 8000b28:	d010      	beq.n	8000b4c <__eqsf2+0x3c>
 8000b2a:	2cff      	cmp	r4, #255	@ 0xff
 8000b2c:	d00c      	beq.n	8000b48 <__eqsf2+0x38>
 8000b2e:	2001      	movs	r0, #1
 8000b30:	42a2      	cmp	r2, r4
 8000b32:	d10a      	bne.n	8000b4a <__eqsf2+0x3a>
 8000b34:	42b5      	cmp	r5, r6
 8000b36:	d108      	bne.n	8000b4a <__eqsf2+0x3a>
 8000b38:	428b      	cmp	r3, r1
 8000b3a:	d00f      	beq.n	8000b5c <__eqsf2+0x4c>
 8000b3c:	2a00      	cmp	r2, #0
 8000b3e:	d104      	bne.n	8000b4a <__eqsf2+0x3a>
 8000b40:	0028      	movs	r0, r5
 8000b42:	1e43      	subs	r3, r0, #1
 8000b44:	4198      	sbcs	r0, r3
 8000b46:	e000      	b.n	8000b4a <__eqsf2+0x3a>
 8000b48:	2001      	movs	r0, #1
 8000b4a:	bd70      	pop	{r4, r5, r6, pc}
 8000b4c:	2001      	movs	r0, #1
 8000b4e:	2cff      	cmp	r4, #255	@ 0xff
 8000b50:	d1fb      	bne.n	8000b4a <__eqsf2+0x3a>
 8000b52:	4335      	orrs	r5, r6
 8000b54:	d1f9      	bne.n	8000b4a <__eqsf2+0x3a>
 8000b56:	404b      	eors	r3, r1
 8000b58:	0018      	movs	r0, r3
 8000b5a:	e7f6      	b.n	8000b4a <__eqsf2+0x3a>
 8000b5c:	2000      	movs	r0, #0
 8000b5e:	e7f4      	b.n	8000b4a <__eqsf2+0x3a>

08000b60 <__gesf2>:
 8000b60:	b530      	push	{r4, r5, lr}
 8000b62:	0042      	lsls	r2, r0, #1
 8000b64:	0244      	lsls	r4, r0, #9
 8000b66:	024d      	lsls	r5, r1, #9
 8000b68:	0fc3      	lsrs	r3, r0, #31
 8000b6a:	0048      	lsls	r0, r1, #1
 8000b6c:	0a64      	lsrs	r4, r4, #9
 8000b6e:	0e12      	lsrs	r2, r2, #24
 8000b70:	0a6d      	lsrs	r5, r5, #9
 8000b72:	0e00      	lsrs	r0, r0, #24
 8000b74:	0fc9      	lsrs	r1, r1, #31
 8000b76:	2aff      	cmp	r2, #255	@ 0xff
 8000b78:	d018      	beq.n	8000bac <__gesf2+0x4c>
 8000b7a:	28ff      	cmp	r0, #255	@ 0xff
 8000b7c:	d00a      	beq.n	8000b94 <__gesf2+0x34>
 8000b7e:	2a00      	cmp	r2, #0
 8000b80:	d11e      	bne.n	8000bc0 <__gesf2+0x60>
 8000b82:	2800      	cmp	r0, #0
 8000b84:	d10a      	bne.n	8000b9c <__gesf2+0x3c>
 8000b86:	2d00      	cmp	r5, #0
 8000b88:	d029      	beq.n	8000bde <__gesf2+0x7e>
 8000b8a:	2c00      	cmp	r4, #0
 8000b8c:	d12d      	bne.n	8000bea <__gesf2+0x8a>
 8000b8e:	0048      	lsls	r0, r1, #1
 8000b90:	3801      	subs	r0, #1
 8000b92:	bd30      	pop	{r4, r5, pc}
 8000b94:	2d00      	cmp	r5, #0
 8000b96:	d125      	bne.n	8000be4 <__gesf2+0x84>
 8000b98:	2a00      	cmp	r2, #0
 8000b9a:	d101      	bne.n	8000ba0 <__gesf2+0x40>
 8000b9c:	2c00      	cmp	r4, #0
 8000b9e:	d0f6      	beq.n	8000b8e <__gesf2+0x2e>
 8000ba0:	428b      	cmp	r3, r1
 8000ba2:	d019      	beq.n	8000bd8 <__gesf2+0x78>
 8000ba4:	2001      	movs	r0, #1
 8000ba6:	425b      	negs	r3, r3
 8000ba8:	4318      	orrs	r0, r3
 8000baa:	e7f2      	b.n	8000b92 <__gesf2+0x32>
 8000bac:	2c00      	cmp	r4, #0
 8000bae:	d119      	bne.n	8000be4 <__gesf2+0x84>
 8000bb0:	28ff      	cmp	r0, #255	@ 0xff
 8000bb2:	d1f7      	bne.n	8000ba4 <__gesf2+0x44>
 8000bb4:	2d00      	cmp	r5, #0
 8000bb6:	d115      	bne.n	8000be4 <__gesf2+0x84>
 8000bb8:	2000      	movs	r0, #0
 8000bba:	428b      	cmp	r3, r1
 8000bbc:	d1f2      	bne.n	8000ba4 <__gesf2+0x44>
 8000bbe:	e7e8      	b.n	8000b92 <__gesf2+0x32>
 8000bc0:	2800      	cmp	r0, #0
 8000bc2:	d0ef      	beq.n	8000ba4 <__gesf2+0x44>
 8000bc4:	428b      	cmp	r3, r1
 8000bc6:	d1ed      	bne.n	8000ba4 <__gesf2+0x44>
 8000bc8:	4282      	cmp	r2, r0
 8000bca:	dceb      	bgt.n	8000ba4 <__gesf2+0x44>
 8000bcc:	db04      	blt.n	8000bd8 <__gesf2+0x78>
 8000bce:	42ac      	cmp	r4, r5
 8000bd0:	d8e8      	bhi.n	8000ba4 <__gesf2+0x44>
 8000bd2:	2000      	movs	r0, #0
 8000bd4:	42ac      	cmp	r4, r5
 8000bd6:	d2dc      	bcs.n	8000b92 <__gesf2+0x32>
 8000bd8:	0058      	lsls	r0, r3, #1
 8000bda:	3801      	subs	r0, #1
 8000bdc:	e7d9      	b.n	8000b92 <__gesf2+0x32>
 8000bde:	2c00      	cmp	r4, #0
 8000be0:	d0d7      	beq.n	8000b92 <__gesf2+0x32>
 8000be2:	e7df      	b.n	8000ba4 <__gesf2+0x44>
 8000be4:	2002      	movs	r0, #2
 8000be6:	4240      	negs	r0, r0
 8000be8:	e7d3      	b.n	8000b92 <__gesf2+0x32>
 8000bea:	428b      	cmp	r3, r1
 8000bec:	d1da      	bne.n	8000ba4 <__gesf2+0x44>
 8000bee:	e7ee      	b.n	8000bce <__gesf2+0x6e>

08000bf0 <__lesf2>:
 8000bf0:	b530      	push	{r4, r5, lr}
 8000bf2:	0042      	lsls	r2, r0, #1
 8000bf4:	0244      	lsls	r4, r0, #9
 8000bf6:	024d      	lsls	r5, r1, #9
 8000bf8:	0fc3      	lsrs	r3, r0, #31
 8000bfa:	0048      	lsls	r0, r1, #1
 8000bfc:	0a64      	lsrs	r4, r4, #9
 8000bfe:	0e12      	lsrs	r2, r2, #24
 8000c00:	0a6d      	lsrs	r5, r5, #9
 8000c02:	0e00      	lsrs	r0, r0, #24
 8000c04:	0fc9      	lsrs	r1, r1, #31
 8000c06:	2aff      	cmp	r2, #255	@ 0xff
 8000c08:	d017      	beq.n	8000c3a <__lesf2+0x4a>
 8000c0a:	28ff      	cmp	r0, #255	@ 0xff
 8000c0c:	d00a      	beq.n	8000c24 <__lesf2+0x34>
 8000c0e:	2a00      	cmp	r2, #0
 8000c10:	d11b      	bne.n	8000c4a <__lesf2+0x5a>
 8000c12:	2800      	cmp	r0, #0
 8000c14:	d10a      	bne.n	8000c2c <__lesf2+0x3c>
 8000c16:	2d00      	cmp	r5, #0
 8000c18:	d01d      	beq.n	8000c56 <__lesf2+0x66>
 8000c1a:	2c00      	cmp	r4, #0
 8000c1c:	d12d      	bne.n	8000c7a <__lesf2+0x8a>
 8000c1e:	0048      	lsls	r0, r1, #1
 8000c20:	3801      	subs	r0, #1
 8000c22:	e011      	b.n	8000c48 <__lesf2+0x58>
 8000c24:	2d00      	cmp	r5, #0
 8000c26:	d10e      	bne.n	8000c46 <__lesf2+0x56>
 8000c28:	2a00      	cmp	r2, #0
 8000c2a:	d101      	bne.n	8000c30 <__lesf2+0x40>
 8000c2c:	2c00      	cmp	r4, #0
 8000c2e:	d0f6      	beq.n	8000c1e <__lesf2+0x2e>
 8000c30:	428b      	cmp	r3, r1
 8000c32:	d10c      	bne.n	8000c4e <__lesf2+0x5e>
 8000c34:	0058      	lsls	r0, r3, #1
 8000c36:	3801      	subs	r0, #1
 8000c38:	e006      	b.n	8000c48 <__lesf2+0x58>
 8000c3a:	2c00      	cmp	r4, #0
 8000c3c:	d103      	bne.n	8000c46 <__lesf2+0x56>
 8000c3e:	28ff      	cmp	r0, #255	@ 0xff
 8000c40:	d105      	bne.n	8000c4e <__lesf2+0x5e>
 8000c42:	2d00      	cmp	r5, #0
 8000c44:	d015      	beq.n	8000c72 <__lesf2+0x82>
 8000c46:	2002      	movs	r0, #2
 8000c48:	bd30      	pop	{r4, r5, pc}
 8000c4a:	2800      	cmp	r0, #0
 8000c4c:	d106      	bne.n	8000c5c <__lesf2+0x6c>
 8000c4e:	2001      	movs	r0, #1
 8000c50:	425b      	negs	r3, r3
 8000c52:	4318      	orrs	r0, r3
 8000c54:	e7f8      	b.n	8000c48 <__lesf2+0x58>
 8000c56:	2c00      	cmp	r4, #0
 8000c58:	d0f6      	beq.n	8000c48 <__lesf2+0x58>
 8000c5a:	e7f8      	b.n	8000c4e <__lesf2+0x5e>
 8000c5c:	428b      	cmp	r3, r1
 8000c5e:	d1f6      	bne.n	8000c4e <__lesf2+0x5e>
 8000c60:	4282      	cmp	r2, r0
 8000c62:	dcf4      	bgt.n	8000c4e <__lesf2+0x5e>
 8000c64:	dbe6      	blt.n	8000c34 <__lesf2+0x44>
 8000c66:	42ac      	cmp	r4, r5
 8000c68:	d8f1      	bhi.n	8000c4e <__lesf2+0x5e>
 8000c6a:	2000      	movs	r0, #0
 8000c6c:	42ac      	cmp	r4, r5
 8000c6e:	d2eb      	bcs.n	8000c48 <__lesf2+0x58>
 8000c70:	e7e0      	b.n	8000c34 <__lesf2+0x44>
 8000c72:	2000      	movs	r0, #0
 8000c74:	428b      	cmp	r3, r1
 8000c76:	d1ea      	bne.n	8000c4e <__lesf2+0x5e>
 8000c78:	e7e6      	b.n	8000c48 <__lesf2+0x58>
 8000c7a:	428b      	cmp	r3, r1
 8000c7c:	d1e7      	bne.n	8000c4e <__lesf2+0x5e>
 8000c7e:	e7f2      	b.n	8000c66 <__lesf2+0x76>

08000c80 <__aeabi_fmul>:
 8000c80:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000c82:	464f      	mov	r7, r9
 8000c84:	4646      	mov	r6, r8
 8000c86:	46d6      	mov	lr, sl
 8000c88:	0044      	lsls	r4, r0, #1
 8000c8a:	b5c0      	push	{r6, r7, lr}
 8000c8c:	0246      	lsls	r6, r0, #9
 8000c8e:	1c0f      	adds	r7, r1, #0
 8000c90:	0a76      	lsrs	r6, r6, #9
 8000c92:	0e24      	lsrs	r4, r4, #24
 8000c94:	0fc5      	lsrs	r5, r0, #31
 8000c96:	2c00      	cmp	r4, #0
 8000c98:	d100      	bne.n	8000c9c <__aeabi_fmul+0x1c>
 8000c9a:	e0da      	b.n	8000e52 <__aeabi_fmul+0x1d2>
 8000c9c:	2cff      	cmp	r4, #255	@ 0xff
 8000c9e:	d074      	beq.n	8000d8a <__aeabi_fmul+0x10a>
 8000ca0:	2380      	movs	r3, #128	@ 0x80
 8000ca2:	00f6      	lsls	r6, r6, #3
 8000ca4:	04db      	lsls	r3, r3, #19
 8000ca6:	431e      	orrs	r6, r3
 8000ca8:	2300      	movs	r3, #0
 8000caa:	4699      	mov	r9, r3
 8000cac:	469a      	mov	sl, r3
 8000cae:	3c7f      	subs	r4, #127	@ 0x7f
 8000cb0:	027b      	lsls	r3, r7, #9
 8000cb2:	0a5b      	lsrs	r3, r3, #9
 8000cb4:	4698      	mov	r8, r3
 8000cb6:	007b      	lsls	r3, r7, #1
 8000cb8:	0e1b      	lsrs	r3, r3, #24
 8000cba:	0fff      	lsrs	r7, r7, #31
 8000cbc:	2b00      	cmp	r3, #0
 8000cbe:	d074      	beq.n	8000daa <__aeabi_fmul+0x12a>
 8000cc0:	2bff      	cmp	r3, #255	@ 0xff
 8000cc2:	d100      	bne.n	8000cc6 <__aeabi_fmul+0x46>
 8000cc4:	e08e      	b.n	8000de4 <__aeabi_fmul+0x164>
 8000cc6:	4642      	mov	r2, r8
 8000cc8:	2180      	movs	r1, #128	@ 0x80
 8000cca:	00d2      	lsls	r2, r2, #3
 8000ccc:	04c9      	lsls	r1, r1, #19
 8000cce:	4311      	orrs	r1, r2
 8000cd0:	3b7f      	subs	r3, #127	@ 0x7f
 8000cd2:	002a      	movs	r2, r5
 8000cd4:	18e4      	adds	r4, r4, r3
 8000cd6:	464b      	mov	r3, r9
 8000cd8:	407a      	eors	r2, r7
 8000cda:	4688      	mov	r8, r1
 8000cdc:	b2d2      	uxtb	r2, r2
 8000cde:	2b0a      	cmp	r3, #10
 8000ce0:	dc75      	bgt.n	8000dce <__aeabi_fmul+0x14e>
 8000ce2:	464b      	mov	r3, r9
 8000ce4:	2000      	movs	r0, #0
 8000ce6:	2b02      	cmp	r3, #2
 8000ce8:	dd0f      	ble.n	8000d0a <__aeabi_fmul+0x8a>
 8000cea:	4649      	mov	r1, r9
 8000cec:	2301      	movs	r3, #1
 8000cee:	408b      	lsls	r3, r1
 8000cf0:	21a6      	movs	r1, #166	@ 0xa6
 8000cf2:	00c9      	lsls	r1, r1, #3
 8000cf4:	420b      	tst	r3, r1
 8000cf6:	d169      	bne.n	8000dcc <__aeabi_fmul+0x14c>
 8000cf8:	2190      	movs	r1, #144	@ 0x90
 8000cfa:	0089      	lsls	r1, r1, #2
 8000cfc:	420b      	tst	r3, r1
 8000cfe:	d000      	beq.n	8000d02 <__aeabi_fmul+0x82>
 8000d00:	e100      	b.n	8000f04 <__aeabi_fmul+0x284>
 8000d02:	2188      	movs	r1, #136	@ 0x88
 8000d04:	4219      	tst	r1, r3
 8000d06:	d000      	beq.n	8000d0a <__aeabi_fmul+0x8a>
 8000d08:	e0f5      	b.n	8000ef6 <__aeabi_fmul+0x276>
 8000d0a:	4641      	mov	r1, r8
 8000d0c:	0409      	lsls	r1, r1, #16
 8000d0e:	0c09      	lsrs	r1, r1, #16
 8000d10:	4643      	mov	r3, r8
 8000d12:	0008      	movs	r0, r1
 8000d14:	0c35      	lsrs	r5, r6, #16
 8000d16:	0436      	lsls	r6, r6, #16
 8000d18:	0c1b      	lsrs	r3, r3, #16
 8000d1a:	0c36      	lsrs	r6, r6, #16
 8000d1c:	4370      	muls	r0, r6
 8000d1e:	4369      	muls	r1, r5
 8000d20:	435e      	muls	r6, r3
 8000d22:	435d      	muls	r5, r3
 8000d24:	1876      	adds	r6, r6, r1
 8000d26:	0c03      	lsrs	r3, r0, #16
 8000d28:	199b      	adds	r3, r3, r6
 8000d2a:	4299      	cmp	r1, r3
 8000d2c:	d903      	bls.n	8000d36 <__aeabi_fmul+0xb6>
 8000d2e:	2180      	movs	r1, #128	@ 0x80
 8000d30:	0249      	lsls	r1, r1, #9
 8000d32:	468c      	mov	ip, r1
 8000d34:	4465      	add	r5, ip
 8000d36:	0400      	lsls	r0, r0, #16
 8000d38:	0419      	lsls	r1, r3, #16
 8000d3a:	0c00      	lsrs	r0, r0, #16
 8000d3c:	1809      	adds	r1, r1, r0
 8000d3e:	018e      	lsls	r6, r1, #6
 8000d40:	1e70      	subs	r0, r6, #1
 8000d42:	4186      	sbcs	r6, r0
 8000d44:	0c1b      	lsrs	r3, r3, #16
 8000d46:	0e89      	lsrs	r1, r1, #26
 8000d48:	195b      	adds	r3, r3, r5
 8000d4a:	430e      	orrs	r6, r1
 8000d4c:	019b      	lsls	r3, r3, #6
 8000d4e:	431e      	orrs	r6, r3
 8000d50:	011b      	lsls	r3, r3, #4
 8000d52:	d46c      	bmi.n	8000e2e <__aeabi_fmul+0x1ae>
 8000d54:	0023      	movs	r3, r4
 8000d56:	337f      	adds	r3, #127	@ 0x7f
 8000d58:	2b00      	cmp	r3, #0
 8000d5a:	dc00      	bgt.n	8000d5e <__aeabi_fmul+0xde>
 8000d5c:	e0b1      	b.n	8000ec2 <__aeabi_fmul+0x242>
 8000d5e:	0015      	movs	r5, r2
 8000d60:	0771      	lsls	r1, r6, #29
 8000d62:	d00b      	beq.n	8000d7c <__aeabi_fmul+0xfc>
 8000d64:	200f      	movs	r0, #15
 8000d66:	0021      	movs	r1, r4
 8000d68:	4030      	ands	r0, r6
 8000d6a:	2804      	cmp	r0, #4
 8000d6c:	d006      	beq.n	8000d7c <__aeabi_fmul+0xfc>
 8000d6e:	3604      	adds	r6, #4
 8000d70:	0132      	lsls	r2, r6, #4
 8000d72:	d503      	bpl.n	8000d7c <__aeabi_fmul+0xfc>
 8000d74:	4b6e      	ldr	r3, [pc, #440]	@ (8000f30 <__aeabi_fmul+0x2b0>)
 8000d76:	401e      	ands	r6, r3
 8000d78:	000b      	movs	r3, r1
 8000d7a:	3380      	adds	r3, #128	@ 0x80
 8000d7c:	2bfe      	cmp	r3, #254	@ 0xfe
 8000d7e:	dd00      	ble.n	8000d82 <__aeabi_fmul+0x102>
 8000d80:	e0bd      	b.n	8000efe <__aeabi_fmul+0x27e>
 8000d82:	01b2      	lsls	r2, r6, #6
 8000d84:	0a52      	lsrs	r2, r2, #9
 8000d86:	b2db      	uxtb	r3, r3
 8000d88:	e048      	b.n	8000e1c <__aeabi_fmul+0x19c>
 8000d8a:	2e00      	cmp	r6, #0
 8000d8c:	d000      	beq.n	8000d90 <__aeabi_fmul+0x110>
 8000d8e:	e092      	b.n	8000eb6 <__aeabi_fmul+0x236>
 8000d90:	2308      	movs	r3, #8
 8000d92:	4699      	mov	r9, r3
 8000d94:	3b06      	subs	r3, #6
 8000d96:	469a      	mov	sl, r3
 8000d98:	027b      	lsls	r3, r7, #9
 8000d9a:	0a5b      	lsrs	r3, r3, #9
 8000d9c:	4698      	mov	r8, r3
 8000d9e:	007b      	lsls	r3, r7, #1
 8000da0:	24ff      	movs	r4, #255	@ 0xff
 8000da2:	0e1b      	lsrs	r3, r3, #24
 8000da4:	0fff      	lsrs	r7, r7, #31
 8000da6:	2b00      	cmp	r3, #0
 8000da8:	d18a      	bne.n	8000cc0 <__aeabi_fmul+0x40>
 8000daa:	4642      	mov	r2, r8
 8000dac:	2a00      	cmp	r2, #0
 8000dae:	d164      	bne.n	8000e7a <__aeabi_fmul+0x1fa>
 8000db0:	4649      	mov	r1, r9
 8000db2:	3201      	adds	r2, #1
 8000db4:	4311      	orrs	r1, r2
 8000db6:	4689      	mov	r9, r1
 8000db8:	290a      	cmp	r1, #10
 8000dba:	dc08      	bgt.n	8000dce <__aeabi_fmul+0x14e>
 8000dbc:	407d      	eors	r5, r7
 8000dbe:	2001      	movs	r0, #1
 8000dc0:	b2ea      	uxtb	r2, r5
 8000dc2:	2902      	cmp	r1, #2
 8000dc4:	dc91      	bgt.n	8000cea <__aeabi_fmul+0x6a>
 8000dc6:	0015      	movs	r5, r2
 8000dc8:	2200      	movs	r2, #0
 8000dca:	e027      	b.n	8000e1c <__aeabi_fmul+0x19c>
 8000dcc:	0015      	movs	r5, r2
 8000dce:	4653      	mov	r3, sl
 8000dd0:	2b02      	cmp	r3, #2
 8000dd2:	d100      	bne.n	8000dd6 <__aeabi_fmul+0x156>
 8000dd4:	e093      	b.n	8000efe <__aeabi_fmul+0x27e>
 8000dd6:	2b03      	cmp	r3, #3
 8000dd8:	d01a      	beq.n	8000e10 <__aeabi_fmul+0x190>
 8000dda:	2b01      	cmp	r3, #1
 8000ddc:	d12c      	bne.n	8000e38 <__aeabi_fmul+0x1b8>
 8000dde:	2300      	movs	r3, #0
 8000de0:	2200      	movs	r2, #0
 8000de2:	e01b      	b.n	8000e1c <__aeabi_fmul+0x19c>
 8000de4:	4643      	mov	r3, r8
 8000de6:	34ff      	adds	r4, #255	@ 0xff
 8000de8:	2b00      	cmp	r3, #0
 8000dea:	d055      	beq.n	8000e98 <__aeabi_fmul+0x218>
 8000dec:	2103      	movs	r1, #3
 8000dee:	464b      	mov	r3, r9
 8000df0:	430b      	orrs	r3, r1
 8000df2:	0019      	movs	r1, r3
 8000df4:	2b0a      	cmp	r3, #10
 8000df6:	dc00      	bgt.n	8000dfa <__aeabi_fmul+0x17a>
 8000df8:	e092      	b.n	8000f20 <__aeabi_fmul+0x2a0>
 8000dfa:	2b0f      	cmp	r3, #15
 8000dfc:	d000      	beq.n	8000e00 <__aeabi_fmul+0x180>
 8000dfe:	e08c      	b.n	8000f1a <__aeabi_fmul+0x29a>
 8000e00:	2280      	movs	r2, #128	@ 0x80
 8000e02:	03d2      	lsls	r2, r2, #15
 8000e04:	4216      	tst	r6, r2
 8000e06:	d003      	beq.n	8000e10 <__aeabi_fmul+0x190>
 8000e08:	4643      	mov	r3, r8
 8000e0a:	4213      	tst	r3, r2
 8000e0c:	d100      	bne.n	8000e10 <__aeabi_fmul+0x190>
 8000e0e:	e07d      	b.n	8000f0c <__aeabi_fmul+0x28c>
 8000e10:	2280      	movs	r2, #128	@ 0x80
 8000e12:	03d2      	lsls	r2, r2, #15
 8000e14:	4332      	orrs	r2, r6
 8000e16:	0252      	lsls	r2, r2, #9
 8000e18:	0a52      	lsrs	r2, r2, #9
 8000e1a:	23ff      	movs	r3, #255	@ 0xff
 8000e1c:	05d8      	lsls	r0, r3, #23
 8000e1e:	07ed      	lsls	r5, r5, #31
 8000e20:	4310      	orrs	r0, r2
 8000e22:	4328      	orrs	r0, r5
 8000e24:	bce0      	pop	{r5, r6, r7}
 8000e26:	46ba      	mov	sl, r7
 8000e28:	46b1      	mov	r9, r6
 8000e2a:	46a8      	mov	r8, r5
 8000e2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000e2e:	2301      	movs	r3, #1
 8000e30:	0015      	movs	r5, r2
 8000e32:	0871      	lsrs	r1, r6, #1
 8000e34:	401e      	ands	r6, r3
 8000e36:	430e      	orrs	r6, r1
 8000e38:	0023      	movs	r3, r4
 8000e3a:	3380      	adds	r3, #128	@ 0x80
 8000e3c:	1c61      	adds	r1, r4, #1
 8000e3e:	2b00      	cmp	r3, #0
 8000e40:	dd41      	ble.n	8000ec6 <__aeabi_fmul+0x246>
 8000e42:	0772      	lsls	r2, r6, #29
 8000e44:	d094      	beq.n	8000d70 <__aeabi_fmul+0xf0>
 8000e46:	220f      	movs	r2, #15
 8000e48:	4032      	ands	r2, r6
 8000e4a:	2a04      	cmp	r2, #4
 8000e4c:	d000      	beq.n	8000e50 <__aeabi_fmul+0x1d0>
 8000e4e:	e78e      	b.n	8000d6e <__aeabi_fmul+0xee>
 8000e50:	e78e      	b.n	8000d70 <__aeabi_fmul+0xf0>
 8000e52:	2e00      	cmp	r6, #0
 8000e54:	d105      	bne.n	8000e62 <__aeabi_fmul+0x1e2>
 8000e56:	2304      	movs	r3, #4
 8000e58:	4699      	mov	r9, r3
 8000e5a:	3b03      	subs	r3, #3
 8000e5c:	2400      	movs	r4, #0
 8000e5e:	469a      	mov	sl, r3
 8000e60:	e726      	b.n	8000cb0 <__aeabi_fmul+0x30>
 8000e62:	0030      	movs	r0, r6
 8000e64:	f002 faa6 	bl	80033b4 <__clzsi2>
 8000e68:	2476      	movs	r4, #118	@ 0x76
 8000e6a:	1f43      	subs	r3, r0, #5
 8000e6c:	409e      	lsls	r6, r3
 8000e6e:	2300      	movs	r3, #0
 8000e70:	4264      	negs	r4, r4
 8000e72:	4699      	mov	r9, r3
 8000e74:	469a      	mov	sl, r3
 8000e76:	1a24      	subs	r4, r4, r0
 8000e78:	e71a      	b.n	8000cb0 <__aeabi_fmul+0x30>
 8000e7a:	4640      	mov	r0, r8
 8000e7c:	f002 fa9a 	bl	80033b4 <__clzsi2>
 8000e80:	464b      	mov	r3, r9
 8000e82:	1a24      	subs	r4, r4, r0
 8000e84:	3c76      	subs	r4, #118	@ 0x76
 8000e86:	2b0a      	cmp	r3, #10
 8000e88:	dca1      	bgt.n	8000dce <__aeabi_fmul+0x14e>
 8000e8a:	4643      	mov	r3, r8
 8000e8c:	3805      	subs	r0, #5
 8000e8e:	4083      	lsls	r3, r0
 8000e90:	407d      	eors	r5, r7
 8000e92:	4698      	mov	r8, r3
 8000e94:	b2ea      	uxtb	r2, r5
 8000e96:	e724      	b.n	8000ce2 <__aeabi_fmul+0x62>
 8000e98:	464a      	mov	r2, r9
 8000e9a:	3302      	adds	r3, #2
 8000e9c:	4313      	orrs	r3, r2
 8000e9e:	002a      	movs	r2, r5
 8000ea0:	407a      	eors	r2, r7
 8000ea2:	b2d2      	uxtb	r2, r2
 8000ea4:	2b0a      	cmp	r3, #10
 8000ea6:	dc92      	bgt.n	8000dce <__aeabi_fmul+0x14e>
 8000ea8:	4649      	mov	r1, r9
 8000eaa:	0015      	movs	r5, r2
 8000eac:	2900      	cmp	r1, #0
 8000eae:	d026      	beq.n	8000efe <__aeabi_fmul+0x27e>
 8000eb0:	4699      	mov	r9, r3
 8000eb2:	2002      	movs	r0, #2
 8000eb4:	e719      	b.n	8000cea <__aeabi_fmul+0x6a>
 8000eb6:	230c      	movs	r3, #12
 8000eb8:	4699      	mov	r9, r3
 8000eba:	3b09      	subs	r3, #9
 8000ebc:	24ff      	movs	r4, #255	@ 0xff
 8000ebe:	469a      	mov	sl, r3
 8000ec0:	e6f6      	b.n	8000cb0 <__aeabi_fmul+0x30>
 8000ec2:	0015      	movs	r5, r2
 8000ec4:	0021      	movs	r1, r4
 8000ec6:	2201      	movs	r2, #1
 8000ec8:	1ad3      	subs	r3, r2, r3
 8000eca:	2b1b      	cmp	r3, #27
 8000ecc:	dd00      	ble.n	8000ed0 <__aeabi_fmul+0x250>
 8000ece:	e786      	b.n	8000dde <__aeabi_fmul+0x15e>
 8000ed0:	319e      	adds	r1, #158	@ 0x9e
 8000ed2:	0032      	movs	r2, r6
 8000ed4:	408e      	lsls	r6, r1
 8000ed6:	40da      	lsrs	r2, r3
 8000ed8:	1e73      	subs	r3, r6, #1
 8000eda:	419e      	sbcs	r6, r3
 8000edc:	4332      	orrs	r2, r6
 8000ede:	0753      	lsls	r3, r2, #29
 8000ee0:	d004      	beq.n	8000eec <__aeabi_fmul+0x26c>
 8000ee2:	230f      	movs	r3, #15
 8000ee4:	4013      	ands	r3, r2
 8000ee6:	2b04      	cmp	r3, #4
 8000ee8:	d000      	beq.n	8000eec <__aeabi_fmul+0x26c>
 8000eea:	3204      	adds	r2, #4
 8000eec:	0153      	lsls	r3, r2, #5
 8000eee:	d510      	bpl.n	8000f12 <__aeabi_fmul+0x292>
 8000ef0:	2301      	movs	r3, #1
 8000ef2:	2200      	movs	r2, #0
 8000ef4:	e792      	b.n	8000e1c <__aeabi_fmul+0x19c>
 8000ef6:	003d      	movs	r5, r7
 8000ef8:	4646      	mov	r6, r8
 8000efa:	4682      	mov	sl, r0
 8000efc:	e767      	b.n	8000dce <__aeabi_fmul+0x14e>
 8000efe:	23ff      	movs	r3, #255	@ 0xff
 8000f00:	2200      	movs	r2, #0
 8000f02:	e78b      	b.n	8000e1c <__aeabi_fmul+0x19c>
 8000f04:	2280      	movs	r2, #128	@ 0x80
 8000f06:	2500      	movs	r5, #0
 8000f08:	03d2      	lsls	r2, r2, #15
 8000f0a:	e786      	b.n	8000e1a <__aeabi_fmul+0x19a>
 8000f0c:	003d      	movs	r5, r7
 8000f0e:	431a      	orrs	r2, r3
 8000f10:	e783      	b.n	8000e1a <__aeabi_fmul+0x19a>
 8000f12:	0192      	lsls	r2, r2, #6
 8000f14:	2300      	movs	r3, #0
 8000f16:	0a52      	lsrs	r2, r2, #9
 8000f18:	e780      	b.n	8000e1c <__aeabi_fmul+0x19c>
 8000f1a:	003d      	movs	r5, r7
 8000f1c:	4646      	mov	r6, r8
 8000f1e:	e777      	b.n	8000e10 <__aeabi_fmul+0x190>
 8000f20:	002a      	movs	r2, r5
 8000f22:	2301      	movs	r3, #1
 8000f24:	407a      	eors	r2, r7
 8000f26:	408b      	lsls	r3, r1
 8000f28:	2003      	movs	r0, #3
 8000f2a:	b2d2      	uxtb	r2, r2
 8000f2c:	e6e9      	b.n	8000d02 <__aeabi_fmul+0x82>
 8000f2e:	46c0      	nop			@ (mov r8, r8)
 8000f30:	f7ffffff 	.word	0xf7ffffff

08000f34 <__aeabi_fsub>:
 8000f34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f36:	4647      	mov	r7, r8
 8000f38:	46ce      	mov	lr, r9
 8000f3a:	0243      	lsls	r3, r0, #9
 8000f3c:	b580      	push	{r7, lr}
 8000f3e:	0a5f      	lsrs	r7, r3, #9
 8000f40:	099b      	lsrs	r3, r3, #6
 8000f42:	0045      	lsls	r5, r0, #1
 8000f44:	004a      	lsls	r2, r1, #1
 8000f46:	469c      	mov	ip, r3
 8000f48:	024b      	lsls	r3, r1, #9
 8000f4a:	0fc4      	lsrs	r4, r0, #31
 8000f4c:	0fce      	lsrs	r6, r1, #31
 8000f4e:	0e2d      	lsrs	r5, r5, #24
 8000f50:	0a58      	lsrs	r0, r3, #9
 8000f52:	0e12      	lsrs	r2, r2, #24
 8000f54:	0999      	lsrs	r1, r3, #6
 8000f56:	2aff      	cmp	r2, #255	@ 0xff
 8000f58:	d06b      	beq.n	8001032 <__aeabi_fsub+0xfe>
 8000f5a:	2301      	movs	r3, #1
 8000f5c:	405e      	eors	r6, r3
 8000f5e:	1aab      	subs	r3, r5, r2
 8000f60:	42b4      	cmp	r4, r6
 8000f62:	d04b      	beq.n	8000ffc <__aeabi_fsub+0xc8>
 8000f64:	2b00      	cmp	r3, #0
 8000f66:	dc00      	bgt.n	8000f6a <__aeabi_fsub+0x36>
 8000f68:	e0ff      	b.n	800116a <__aeabi_fsub+0x236>
 8000f6a:	2a00      	cmp	r2, #0
 8000f6c:	d100      	bne.n	8000f70 <__aeabi_fsub+0x3c>
 8000f6e:	e088      	b.n	8001082 <__aeabi_fsub+0x14e>
 8000f70:	2dff      	cmp	r5, #255	@ 0xff
 8000f72:	d100      	bne.n	8000f76 <__aeabi_fsub+0x42>
 8000f74:	e0ef      	b.n	8001156 <__aeabi_fsub+0x222>
 8000f76:	2280      	movs	r2, #128	@ 0x80
 8000f78:	04d2      	lsls	r2, r2, #19
 8000f7a:	4311      	orrs	r1, r2
 8000f7c:	2001      	movs	r0, #1
 8000f7e:	2b1b      	cmp	r3, #27
 8000f80:	dc08      	bgt.n	8000f94 <__aeabi_fsub+0x60>
 8000f82:	0008      	movs	r0, r1
 8000f84:	2220      	movs	r2, #32
 8000f86:	40d8      	lsrs	r0, r3
 8000f88:	1ad3      	subs	r3, r2, r3
 8000f8a:	4099      	lsls	r1, r3
 8000f8c:	000b      	movs	r3, r1
 8000f8e:	1e5a      	subs	r2, r3, #1
 8000f90:	4193      	sbcs	r3, r2
 8000f92:	4318      	orrs	r0, r3
 8000f94:	4663      	mov	r3, ip
 8000f96:	1a1b      	subs	r3, r3, r0
 8000f98:	469c      	mov	ip, r3
 8000f9a:	4663      	mov	r3, ip
 8000f9c:	015b      	lsls	r3, r3, #5
 8000f9e:	d400      	bmi.n	8000fa2 <__aeabi_fsub+0x6e>
 8000fa0:	e0cd      	b.n	800113e <__aeabi_fsub+0x20a>
 8000fa2:	4663      	mov	r3, ip
 8000fa4:	019f      	lsls	r7, r3, #6
 8000fa6:	09bf      	lsrs	r7, r7, #6
 8000fa8:	0038      	movs	r0, r7
 8000faa:	f002 fa03 	bl	80033b4 <__clzsi2>
 8000fae:	003b      	movs	r3, r7
 8000fb0:	3805      	subs	r0, #5
 8000fb2:	4083      	lsls	r3, r0
 8000fb4:	4285      	cmp	r5, r0
 8000fb6:	dc00      	bgt.n	8000fba <__aeabi_fsub+0x86>
 8000fb8:	e0a2      	b.n	8001100 <__aeabi_fsub+0x1cc>
 8000fba:	4ab7      	ldr	r2, [pc, #732]	@ (8001298 <__aeabi_fsub+0x364>)
 8000fbc:	1a2d      	subs	r5, r5, r0
 8000fbe:	401a      	ands	r2, r3
 8000fc0:	4694      	mov	ip, r2
 8000fc2:	075a      	lsls	r2, r3, #29
 8000fc4:	d100      	bne.n	8000fc8 <__aeabi_fsub+0x94>
 8000fc6:	e0c3      	b.n	8001150 <__aeabi_fsub+0x21c>
 8000fc8:	220f      	movs	r2, #15
 8000fca:	4013      	ands	r3, r2
 8000fcc:	2b04      	cmp	r3, #4
 8000fce:	d100      	bne.n	8000fd2 <__aeabi_fsub+0x9e>
 8000fd0:	e0be      	b.n	8001150 <__aeabi_fsub+0x21c>
 8000fd2:	2304      	movs	r3, #4
 8000fd4:	4698      	mov	r8, r3
 8000fd6:	44c4      	add	ip, r8
 8000fd8:	4663      	mov	r3, ip
 8000fda:	015b      	lsls	r3, r3, #5
 8000fdc:	d400      	bmi.n	8000fe0 <__aeabi_fsub+0xac>
 8000fde:	e0b7      	b.n	8001150 <__aeabi_fsub+0x21c>
 8000fe0:	1c68      	adds	r0, r5, #1
 8000fe2:	2dfe      	cmp	r5, #254	@ 0xfe
 8000fe4:	d000      	beq.n	8000fe8 <__aeabi_fsub+0xb4>
 8000fe6:	e0a5      	b.n	8001134 <__aeabi_fsub+0x200>
 8000fe8:	20ff      	movs	r0, #255	@ 0xff
 8000fea:	2200      	movs	r2, #0
 8000fec:	05c0      	lsls	r0, r0, #23
 8000fee:	4310      	orrs	r0, r2
 8000ff0:	07e4      	lsls	r4, r4, #31
 8000ff2:	4320      	orrs	r0, r4
 8000ff4:	bcc0      	pop	{r6, r7}
 8000ff6:	46b9      	mov	r9, r7
 8000ff8:	46b0      	mov	r8, r6
 8000ffa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000ffc:	2b00      	cmp	r3, #0
 8000ffe:	dc00      	bgt.n	8001002 <__aeabi_fsub+0xce>
 8001000:	e1eb      	b.n	80013da <__aeabi_fsub+0x4a6>
 8001002:	2a00      	cmp	r2, #0
 8001004:	d046      	beq.n	8001094 <__aeabi_fsub+0x160>
 8001006:	2dff      	cmp	r5, #255	@ 0xff
 8001008:	d100      	bne.n	800100c <__aeabi_fsub+0xd8>
 800100a:	e0a4      	b.n	8001156 <__aeabi_fsub+0x222>
 800100c:	2280      	movs	r2, #128	@ 0x80
 800100e:	04d2      	lsls	r2, r2, #19
 8001010:	4311      	orrs	r1, r2
 8001012:	2b1b      	cmp	r3, #27
 8001014:	dc00      	bgt.n	8001018 <__aeabi_fsub+0xe4>
 8001016:	e0fb      	b.n	8001210 <__aeabi_fsub+0x2dc>
 8001018:	2305      	movs	r3, #5
 800101a:	4698      	mov	r8, r3
 800101c:	002b      	movs	r3, r5
 800101e:	44c4      	add	ip, r8
 8001020:	4662      	mov	r2, ip
 8001022:	08d7      	lsrs	r7, r2, #3
 8001024:	2bff      	cmp	r3, #255	@ 0xff
 8001026:	d100      	bne.n	800102a <__aeabi_fsub+0xf6>
 8001028:	e095      	b.n	8001156 <__aeabi_fsub+0x222>
 800102a:	027a      	lsls	r2, r7, #9
 800102c:	0a52      	lsrs	r2, r2, #9
 800102e:	b2d8      	uxtb	r0, r3
 8001030:	e7dc      	b.n	8000fec <__aeabi_fsub+0xb8>
 8001032:	002b      	movs	r3, r5
 8001034:	3bff      	subs	r3, #255	@ 0xff
 8001036:	4699      	mov	r9, r3
 8001038:	2900      	cmp	r1, #0
 800103a:	d118      	bne.n	800106e <__aeabi_fsub+0x13a>
 800103c:	2301      	movs	r3, #1
 800103e:	405e      	eors	r6, r3
 8001040:	42b4      	cmp	r4, r6
 8001042:	d100      	bne.n	8001046 <__aeabi_fsub+0x112>
 8001044:	e0ca      	b.n	80011dc <__aeabi_fsub+0x2a8>
 8001046:	464b      	mov	r3, r9
 8001048:	2b00      	cmp	r3, #0
 800104a:	d02d      	beq.n	80010a8 <__aeabi_fsub+0x174>
 800104c:	2d00      	cmp	r5, #0
 800104e:	d000      	beq.n	8001052 <__aeabi_fsub+0x11e>
 8001050:	e13c      	b.n	80012cc <__aeabi_fsub+0x398>
 8001052:	23ff      	movs	r3, #255	@ 0xff
 8001054:	4664      	mov	r4, ip
 8001056:	2c00      	cmp	r4, #0
 8001058:	d100      	bne.n	800105c <__aeabi_fsub+0x128>
 800105a:	e15f      	b.n	800131c <__aeabi_fsub+0x3e8>
 800105c:	1e5d      	subs	r5, r3, #1
 800105e:	2b01      	cmp	r3, #1
 8001060:	d100      	bne.n	8001064 <__aeabi_fsub+0x130>
 8001062:	e174      	b.n	800134e <__aeabi_fsub+0x41a>
 8001064:	0034      	movs	r4, r6
 8001066:	2bff      	cmp	r3, #255	@ 0xff
 8001068:	d074      	beq.n	8001154 <__aeabi_fsub+0x220>
 800106a:	002b      	movs	r3, r5
 800106c:	e103      	b.n	8001276 <__aeabi_fsub+0x342>
 800106e:	42b4      	cmp	r4, r6
 8001070:	d100      	bne.n	8001074 <__aeabi_fsub+0x140>
 8001072:	e09c      	b.n	80011ae <__aeabi_fsub+0x27a>
 8001074:	2b00      	cmp	r3, #0
 8001076:	d017      	beq.n	80010a8 <__aeabi_fsub+0x174>
 8001078:	2d00      	cmp	r5, #0
 800107a:	d0ea      	beq.n	8001052 <__aeabi_fsub+0x11e>
 800107c:	0007      	movs	r7, r0
 800107e:	0034      	movs	r4, r6
 8001080:	e06c      	b.n	800115c <__aeabi_fsub+0x228>
 8001082:	2900      	cmp	r1, #0
 8001084:	d0cc      	beq.n	8001020 <__aeabi_fsub+0xec>
 8001086:	1e5a      	subs	r2, r3, #1
 8001088:	2b01      	cmp	r3, #1
 800108a:	d02b      	beq.n	80010e4 <__aeabi_fsub+0x1b0>
 800108c:	2bff      	cmp	r3, #255	@ 0xff
 800108e:	d062      	beq.n	8001156 <__aeabi_fsub+0x222>
 8001090:	0013      	movs	r3, r2
 8001092:	e773      	b.n	8000f7c <__aeabi_fsub+0x48>
 8001094:	2900      	cmp	r1, #0
 8001096:	d0c3      	beq.n	8001020 <__aeabi_fsub+0xec>
 8001098:	1e5a      	subs	r2, r3, #1
 800109a:	2b01      	cmp	r3, #1
 800109c:	d100      	bne.n	80010a0 <__aeabi_fsub+0x16c>
 800109e:	e11e      	b.n	80012de <__aeabi_fsub+0x3aa>
 80010a0:	2bff      	cmp	r3, #255	@ 0xff
 80010a2:	d058      	beq.n	8001156 <__aeabi_fsub+0x222>
 80010a4:	0013      	movs	r3, r2
 80010a6:	e7b4      	b.n	8001012 <__aeabi_fsub+0xde>
 80010a8:	22fe      	movs	r2, #254	@ 0xfe
 80010aa:	1c6b      	adds	r3, r5, #1
 80010ac:	421a      	tst	r2, r3
 80010ae:	d10d      	bne.n	80010cc <__aeabi_fsub+0x198>
 80010b0:	2d00      	cmp	r5, #0
 80010b2:	d060      	beq.n	8001176 <__aeabi_fsub+0x242>
 80010b4:	4663      	mov	r3, ip
 80010b6:	2b00      	cmp	r3, #0
 80010b8:	d000      	beq.n	80010bc <__aeabi_fsub+0x188>
 80010ba:	e120      	b.n	80012fe <__aeabi_fsub+0x3ca>
 80010bc:	2900      	cmp	r1, #0
 80010be:	d000      	beq.n	80010c2 <__aeabi_fsub+0x18e>
 80010c0:	e128      	b.n	8001314 <__aeabi_fsub+0x3e0>
 80010c2:	2280      	movs	r2, #128	@ 0x80
 80010c4:	2400      	movs	r4, #0
 80010c6:	20ff      	movs	r0, #255	@ 0xff
 80010c8:	03d2      	lsls	r2, r2, #15
 80010ca:	e78f      	b.n	8000fec <__aeabi_fsub+0xb8>
 80010cc:	4663      	mov	r3, ip
 80010ce:	1a5f      	subs	r7, r3, r1
 80010d0:	017b      	lsls	r3, r7, #5
 80010d2:	d500      	bpl.n	80010d6 <__aeabi_fsub+0x1a2>
 80010d4:	e0fe      	b.n	80012d4 <__aeabi_fsub+0x3a0>
 80010d6:	2f00      	cmp	r7, #0
 80010d8:	d000      	beq.n	80010dc <__aeabi_fsub+0x1a8>
 80010da:	e765      	b.n	8000fa8 <__aeabi_fsub+0x74>
 80010dc:	2400      	movs	r4, #0
 80010de:	2000      	movs	r0, #0
 80010e0:	2200      	movs	r2, #0
 80010e2:	e783      	b.n	8000fec <__aeabi_fsub+0xb8>
 80010e4:	4663      	mov	r3, ip
 80010e6:	1a59      	subs	r1, r3, r1
 80010e8:	014b      	lsls	r3, r1, #5
 80010ea:	d400      	bmi.n	80010ee <__aeabi_fsub+0x1ba>
 80010ec:	e119      	b.n	8001322 <__aeabi_fsub+0x3ee>
 80010ee:	018f      	lsls	r7, r1, #6
 80010f0:	09bf      	lsrs	r7, r7, #6
 80010f2:	0038      	movs	r0, r7
 80010f4:	f002 f95e 	bl	80033b4 <__clzsi2>
 80010f8:	003b      	movs	r3, r7
 80010fa:	3805      	subs	r0, #5
 80010fc:	4083      	lsls	r3, r0
 80010fe:	2501      	movs	r5, #1
 8001100:	2220      	movs	r2, #32
 8001102:	1b40      	subs	r0, r0, r5
 8001104:	3001      	adds	r0, #1
 8001106:	1a12      	subs	r2, r2, r0
 8001108:	0019      	movs	r1, r3
 800110a:	4093      	lsls	r3, r2
 800110c:	40c1      	lsrs	r1, r0
 800110e:	1e5a      	subs	r2, r3, #1
 8001110:	4193      	sbcs	r3, r2
 8001112:	4319      	orrs	r1, r3
 8001114:	468c      	mov	ip, r1
 8001116:	1e0b      	subs	r3, r1, #0
 8001118:	d0e1      	beq.n	80010de <__aeabi_fsub+0x1aa>
 800111a:	075b      	lsls	r3, r3, #29
 800111c:	d100      	bne.n	8001120 <__aeabi_fsub+0x1ec>
 800111e:	e152      	b.n	80013c6 <__aeabi_fsub+0x492>
 8001120:	230f      	movs	r3, #15
 8001122:	2500      	movs	r5, #0
 8001124:	400b      	ands	r3, r1
 8001126:	2b04      	cmp	r3, #4
 8001128:	d000      	beq.n	800112c <__aeabi_fsub+0x1f8>
 800112a:	e752      	b.n	8000fd2 <__aeabi_fsub+0x9e>
 800112c:	2001      	movs	r0, #1
 800112e:	014a      	lsls	r2, r1, #5
 8001130:	d400      	bmi.n	8001134 <__aeabi_fsub+0x200>
 8001132:	e092      	b.n	800125a <__aeabi_fsub+0x326>
 8001134:	b2c0      	uxtb	r0, r0
 8001136:	4663      	mov	r3, ip
 8001138:	019a      	lsls	r2, r3, #6
 800113a:	0a52      	lsrs	r2, r2, #9
 800113c:	e756      	b.n	8000fec <__aeabi_fsub+0xb8>
 800113e:	4663      	mov	r3, ip
 8001140:	075b      	lsls	r3, r3, #29
 8001142:	d005      	beq.n	8001150 <__aeabi_fsub+0x21c>
 8001144:	230f      	movs	r3, #15
 8001146:	4662      	mov	r2, ip
 8001148:	4013      	ands	r3, r2
 800114a:	2b04      	cmp	r3, #4
 800114c:	d000      	beq.n	8001150 <__aeabi_fsub+0x21c>
 800114e:	e740      	b.n	8000fd2 <__aeabi_fsub+0x9e>
 8001150:	002b      	movs	r3, r5
 8001152:	e765      	b.n	8001020 <__aeabi_fsub+0xec>
 8001154:	0007      	movs	r7, r0
 8001156:	2f00      	cmp	r7, #0
 8001158:	d100      	bne.n	800115c <__aeabi_fsub+0x228>
 800115a:	e745      	b.n	8000fe8 <__aeabi_fsub+0xb4>
 800115c:	2280      	movs	r2, #128	@ 0x80
 800115e:	03d2      	lsls	r2, r2, #15
 8001160:	433a      	orrs	r2, r7
 8001162:	0252      	lsls	r2, r2, #9
 8001164:	20ff      	movs	r0, #255	@ 0xff
 8001166:	0a52      	lsrs	r2, r2, #9
 8001168:	e740      	b.n	8000fec <__aeabi_fsub+0xb8>
 800116a:	2b00      	cmp	r3, #0
 800116c:	d179      	bne.n	8001262 <__aeabi_fsub+0x32e>
 800116e:	22fe      	movs	r2, #254	@ 0xfe
 8001170:	1c6b      	adds	r3, r5, #1
 8001172:	421a      	tst	r2, r3
 8001174:	d1aa      	bne.n	80010cc <__aeabi_fsub+0x198>
 8001176:	4663      	mov	r3, ip
 8001178:	2b00      	cmp	r3, #0
 800117a:	d100      	bne.n	800117e <__aeabi_fsub+0x24a>
 800117c:	e0f5      	b.n	800136a <__aeabi_fsub+0x436>
 800117e:	2900      	cmp	r1, #0
 8001180:	d100      	bne.n	8001184 <__aeabi_fsub+0x250>
 8001182:	e0d1      	b.n	8001328 <__aeabi_fsub+0x3f4>
 8001184:	1a5f      	subs	r7, r3, r1
 8001186:	2380      	movs	r3, #128	@ 0x80
 8001188:	04db      	lsls	r3, r3, #19
 800118a:	421f      	tst	r7, r3
 800118c:	d100      	bne.n	8001190 <__aeabi_fsub+0x25c>
 800118e:	e10e      	b.n	80013ae <__aeabi_fsub+0x47a>
 8001190:	4662      	mov	r2, ip
 8001192:	2401      	movs	r4, #1
 8001194:	1a8a      	subs	r2, r1, r2
 8001196:	4694      	mov	ip, r2
 8001198:	2000      	movs	r0, #0
 800119a:	4034      	ands	r4, r6
 800119c:	2a00      	cmp	r2, #0
 800119e:	d100      	bne.n	80011a2 <__aeabi_fsub+0x26e>
 80011a0:	e724      	b.n	8000fec <__aeabi_fsub+0xb8>
 80011a2:	2001      	movs	r0, #1
 80011a4:	421a      	tst	r2, r3
 80011a6:	d1c6      	bne.n	8001136 <__aeabi_fsub+0x202>
 80011a8:	2300      	movs	r3, #0
 80011aa:	08d7      	lsrs	r7, r2, #3
 80011ac:	e73d      	b.n	800102a <__aeabi_fsub+0xf6>
 80011ae:	2b00      	cmp	r3, #0
 80011b0:	d017      	beq.n	80011e2 <__aeabi_fsub+0x2ae>
 80011b2:	2d00      	cmp	r5, #0
 80011b4:	d000      	beq.n	80011b8 <__aeabi_fsub+0x284>
 80011b6:	e0af      	b.n	8001318 <__aeabi_fsub+0x3e4>
 80011b8:	23ff      	movs	r3, #255	@ 0xff
 80011ba:	4665      	mov	r5, ip
 80011bc:	2d00      	cmp	r5, #0
 80011be:	d100      	bne.n	80011c2 <__aeabi_fsub+0x28e>
 80011c0:	e0ad      	b.n	800131e <__aeabi_fsub+0x3ea>
 80011c2:	1e5e      	subs	r6, r3, #1
 80011c4:	2b01      	cmp	r3, #1
 80011c6:	d100      	bne.n	80011ca <__aeabi_fsub+0x296>
 80011c8:	e089      	b.n	80012de <__aeabi_fsub+0x3aa>
 80011ca:	2bff      	cmp	r3, #255	@ 0xff
 80011cc:	d0c2      	beq.n	8001154 <__aeabi_fsub+0x220>
 80011ce:	2e1b      	cmp	r6, #27
 80011d0:	dc00      	bgt.n	80011d4 <__aeabi_fsub+0x2a0>
 80011d2:	e0ab      	b.n	800132c <__aeabi_fsub+0x3f8>
 80011d4:	1d4b      	adds	r3, r1, #5
 80011d6:	469c      	mov	ip, r3
 80011d8:	0013      	movs	r3, r2
 80011da:	e721      	b.n	8001020 <__aeabi_fsub+0xec>
 80011dc:	464b      	mov	r3, r9
 80011de:	2b00      	cmp	r3, #0
 80011e0:	d170      	bne.n	80012c4 <__aeabi_fsub+0x390>
 80011e2:	22fe      	movs	r2, #254	@ 0xfe
 80011e4:	1c6b      	adds	r3, r5, #1
 80011e6:	421a      	tst	r2, r3
 80011e8:	d15e      	bne.n	80012a8 <__aeabi_fsub+0x374>
 80011ea:	2d00      	cmp	r5, #0
 80011ec:	d000      	beq.n	80011f0 <__aeabi_fsub+0x2bc>
 80011ee:	e0c3      	b.n	8001378 <__aeabi_fsub+0x444>
 80011f0:	4663      	mov	r3, ip
 80011f2:	2b00      	cmp	r3, #0
 80011f4:	d100      	bne.n	80011f8 <__aeabi_fsub+0x2c4>
 80011f6:	e0d0      	b.n	800139a <__aeabi_fsub+0x466>
 80011f8:	2900      	cmp	r1, #0
 80011fa:	d100      	bne.n	80011fe <__aeabi_fsub+0x2ca>
 80011fc:	e094      	b.n	8001328 <__aeabi_fsub+0x3f4>
 80011fe:	000a      	movs	r2, r1
 8001200:	4462      	add	r2, ip
 8001202:	0153      	lsls	r3, r2, #5
 8001204:	d400      	bmi.n	8001208 <__aeabi_fsub+0x2d4>
 8001206:	e0d8      	b.n	80013ba <__aeabi_fsub+0x486>
 8001208:	0192      	lsls	r2, r2, #6
 800120a:	2001      	movs	r0, #1
 800120c:	0a52      	lsrs	r2, r2, #9
 800120e:	e6ed      	b.n	8000fec <__aeabi_fsub+0xb8>
 8001210:	0008      	movs	r0, r1
 8001212:	2220      	movs	r2, #32
 8001214:	40d8      	lsrs	r0, r3
 8001216:	1ad3      	subs	r3, r2, r3
 8001218:	4099      	lsls	r1, r3
 800121a:	000b      	movs	r3, r1
 800121c:	1e5a      	subs	r2, r3, #1
 800121e:	4193      	sbcs	r3, r2
 8001220:	4303      	orrs	r3, r0
 8001222:	449c      	add	ip, r3
 8001224:	4663      	mov	r3, ip
 8001226:	015b      	lsls	r3, r3, #5
 8001228:	d589      	bpl.n	800113e <__aeabi_fsub+0x20a>
 800122a:	3501      	adds	r5, #1
 800122c:	2dff      	cmp	r5, #255	@ 0xff
 800122e:	d100      	bne.n	8001232 <__aeabi_fsub+0x2fe>
 8001230:	e6da      	b.n	8000fe8 <__aeabi_fsub+0xb4>
 8001232:	4662      	mov	r2, ip
 8001234:	2301      	movs	r3, #1
 8001236:	4919      	ldr	r1, [pc, #100]	@ (800129c <__aeabi_fsub+0x368>)
 8001238:	4013      	ands	r3, r2
 800123a:	0852      	lsrs	r2, r2, #1
 800123c:	400a      	ands	r2, r1
 800123e:	431a      	orrs	r2, r3
 8001240:	0013      	movs	r3, r2
 8001242:	4694      	mov	ip, r2
 8001244:	075b      	lsls	r3, r3, #29
 8001246:	d004      	beq.n	8001252 <__aeabi_fsub+0x31e>
 8001248:	230f      	movs	r3, #15
 800124a:	4013      	ands	r3, r2
 800124c:	2b04      	cmp	r3, #4
 800124e:	d000      	beq.n	8001252 <__aeabi_fsub+0x31e>
 8001250:	e6bf      	b.n	8000fd2 <__aeabi_fsub+0x9e>
 8001252:	4663      	mov	r3, ip
 8001254:	015b      	lsls	r3, r3, #5
 8001256:	d500      	bpl.n	800125a <__aeabi_fsub+0x326>
 8001258:	e6c2      	b.n	8000fe0 <__aeabi_fsub+0xac>
 800125a:	4663      	mov	r3, ip
 800125c:	08df      	lsrs	r7, r3, #3
 800125e:	002b      	movs	r3, r5
 8001260:	e6e3      	b.n	800102a <__aeabi_fsub+0xf6>
 8001262:	1b53      	subs	r3, r2, r5
 8001264:	2d00      	cmp	r5, #0
 8001266:	d100      	bne.n	800126a <__aeabi_fsub+0x336>
 8001268:	e6f4      	b.n	8001054 <__aeabi_fsub+0x120>
 800126a:	2080      	movs	r0, #128	@ 0x80
 800126c:	4664      	mov	r4, ip
 800126e:	04c0      	lsls	r0, r0, #19
 8001270:	4304      	orrs	r4, r0
 8001272:	46a4      	mov	ip, r4
 8001274:	0034      	movs	r4, r6
 8001276:	2001      	movs	r0, #1
 8001278:	2b1b      	cmp	r3, #27
 800127a:	dc09      	bgt.n	8001290 <__aeabi_fsub+0x35c>
 800127c:	2520      	movs	r5, #32
 800127e:	4660      	mov	r0, ip
 8001280:	40d8      	lsrs	r0, r3
 8001282:	1aeb      	subs	r3, r5, r3
 8001284:	4665      	mov	r5, ip
 8001286:	409d      	lsls	r5, r3
 8001288:	002b      	movs	r3, r5
 800128a:	1e5d      	subs	r5, r3, #1
 800128c:	41ab      	sbcs	r3, r5
 800128e:	4318      	orrs	r0, r3
 8001290:	1a0b      	subs	r3, r1, r0
 8001292:	469c      	mov	ip, r3
 8001294:	0015      	movs	r5, r2
 8001296:	e680      	b.n	8000f9a <__aeabi_fsub+0x66>
 8001298:	fbffffff 	.word	0xfbffffff
 800129c:	7dffffff 	.word	0x7dffffff
 80012a0:	22fe      	movs	r2, #254	@ 0xfe
 80012a2:	1c6b      	adds	r3, r5, #1
 80012a4:	4213      	tst	r3, r2
 80012a6:	d0a3      	beq.n	80011f0 <__aeabi_fsub+0x2bc>
 80012a8:	2bff      	cmp	r3, #255	@ 0xff
 80012aa:	d100      	bne.n	80012ae <__aeabi_fsub+0x37a>
 80012ac:	e69c      	b.n	8000fe8 <__aeabi_fsub+0xb4>
 80012ae:	4461      	add	r1, ip
 80012b0:	0849      	lsrs	r1, r1, #1
 80012b2:	074a      	lsls	r2, r1, #29
 80012b4:	d049      	beq.n	800134a <__aeabi_fsub+0x416>
 80012b6:	220f      	movs	r2, #15
 80012b8:	400a      	ands	r2, r1
 80012ba:	2a04      	cmp	r2, #4
 80012bc:	d045      	beq.n	800134a <__aeabi_fsub+0x416>
 80012be:	1d0a      	adds	r2, r1, #4
 80012c0:	4694      	mov	ip, r2
 80012c2:	e6ad      	b.n	8001020 <__aeabi_fsub+0xec>
 80012c4:	2d00      	cmp	r5, #0
 80012c6:	d100      	bne.n	80012ca <__aeabi_fsub+0x396>
 80012c8:	e776      	b.n	80011b8 <__aeabi_fsub+0x284>
 80012ca:	e68d      	b.n	8000fe8 <__aeabi_fsub+0xb4>
 80012cc:	0034      	movs	r4, r6
 80012ce:	20ff      	movs	r0, #255	@ 0xff
 80012d0:	2200      	movs	r2, #0
 80012d2:	e68b      	b.n	8000fec <__aeabi_fsub+0xb8>
 80012d4:	4663      	mov	r3, ip
 80012d6:	2401      	movs	r4, #1
 80012d8:	1acf      	subs	r7, r1, r3
 80012da:	4034      	ands	r4, r6
 80012dc:	e664      	b.n	8000fa8 <__aeabi_fsub+0x74>
 80012de:	4461      	add	r1, ip
 80012e0:	014b      	lsls	r3, r1, #5
 80012e2:	d56d      	bpl.n	80013c0 <__aeabi_fsub+0x48c>
 80012e4:	0848      	lsrs	r0, r1, #1
 80012e6:	4944      	ldr	r1, [pc, #272]	@ (80013f8 <__aeabi_fsub+0x4c4>)
 80012e8:	4001      	ands	r1, r0
 80012ea:	0743      	lsls	r3, r0, #29
 80012ec:	d02c      	beq.n	8001348 <__aeabi_fsub+0x414>
 80012ee:	230f      	movs	r3, #15
 80012f0:	4003      	ands	r3, r0
 80012f2:	2b04      	cmp	r3, #4
 80012f4:	d028      	beq.n	8001348 <__aeabi_fsub+0x414>
 80012f6:	1d0b      	adds	r3, r1, #4
 80012f8:	469c      	mov	ip, r3
 80012fa:	2302      	movs	r3, #2
 80012fc:	e690      	b.n	8001020 <__aeabi_fsub+0xec>
 80012fe:	2900      	cmp	r1, #0
 8001300:	d100      	bne.n	8001304 <__aeabi_fsub+0x3d0>
 8001302:	e72b      	b.n	800115c <__aeabi_fsub+0x228>
 8001304:	2380      	movs	r3, #128	@ 0x80
 8001306:	03db      	lsls	r3, r3, #15
 8001308:	429f      	cmp	r7, r3
 800130a:	d200      	bcs.n	800130e <__aeabi_fsub+0x3da>
 800130c:	e726      	b.n	800115c <__aeabi_fsub+0x228>
 800130e:	4298      	cmp	r0, r3
 8001310:	d300      	bcc.n	8001314 <__aeabi_fsub+0x3e0>
 8001312:	e723      	b.n	800115c <__aeabi_fsub+0x228>
 8001314:	2401      	movs	r4, #1
 8001316:	4034      	ands	r4, r6
 8001318:	0007      	movs	r7, r0
 800131a:	e71f      	b.n	800115c <__aeabi_fsub+0x228>
 800131c:	0034      	movs	r4, r6
 800131e:	468c      	mov	ip, r1
 8001320:	e67e      	b.n	8001020 <__aeabi_fsub+0xec>
 8001322:	2301      	movs	r3, #1
 8001324:	08cf      	lsrs	r7, r1, #3
 8001326:	e680      	b.n	800102a <__aeabi_fsub+0xf6>
 8001328:	2300      	movs	r3, #0
 800132a:	e67e      	b.n	800102a <__aeabi_fsub+0xf6>
 800132c:	2020      	movs	r0, #32
 800132e:	4665      	mov	r5, ip
 8001330:	1b80      	subs	r0, r0, r6
 8001332:	4085      	lsls	r5, r0
 8001334:	4663      	mov	r3, ip
 8001336:	0028      	movs	r0, r5
 8001338:	40f3      	lsrs	r3, r6
 800133a:	1e45      	subs	r5, r0, #1
 800133c:	41a8      	sbcs	r0, r5
 800133e:	4303      	orrs	r3, r0
 8001340:	469c      	mov	ip, r3
 8001342:	0015      	movs	r5, r2
 8001344:	448c      	add	ip, r1
 8001346:	e76d      	b.n	8001224 <__aeabi_fsub+0x2f0>
 8001348:	2302      	movs	r3, #2
 800134a:	08cf      	lsrs	r7, r1, #3
 800134c:	e66d      	b.n	800102a <__aeabi_fsub+0xf6>
 800134e:	1b0f      	subs	r7, r1, r4
 8001350:	017b      	lsls	r3, r7, #5
 8001352:	d528      	bpl.n	80013a6 <__aeabi_fsub+0x472>
 8001354:	01bf      	lsls	r7, r7, #6
 8001356:	09bf      	lsrs	r7, r7, #6
 8001358:	0038      	movs	r0, r7
 800135a:	f002 f82b 	bl	80033b4 <__clzsi2>
 800135e:	003b      	movs	r3, r7
 8001360:	3805      	subs	r0, #5
 8001362:	4083      	lsls	r3, r0
 8001364:	0034      	movs	r4, r6
 8001366:	2501      	movs	r5, #1
 8001368:	e6ca      	b.n	8001100 <__aeabi_fsub+0x1cc>
 800136a:	2900      	cmp	r1, #0
 800136c:	d100      	bne.n	8001370 <__aeabi_fsub+0x43c>
 800136e:	e6b5      	b.n	80010dc <__aeabi_fsub+0x1a8>
 8001370:	2401      	movs	r4, #1
 8001372:	0007      	movs	r7, r0
 8001374:	4034      	ands	r4, r6
 8001376:	e658      	b.n	800102a <__aeabi_fsub+0xf6>
 8001378:	4663      	mov	r3, ip
 800137a:	2b00      	cmp	r3, #0
 800137c:	d100      	bne.n	8001380 <__aeabi_fsub+0x44c>
 800137e:	e6e9      	b.n	8001154 <__aeabi_fsub+0x220>
 8001380:	2900      	cmp	r1, #0
 8001382:	d100      	bne.n	8001386 <__aeabi_fsub+0x452>
 8001384:	e6ea      	b.n	800115c <__aeabi_fsub+0x228>
 8001386:	2380      	movs	r3, #128	@ 0x80
 8001388:	03db      	lsls	r3, r3, #15
 800138a:	429f      	cmp	r7, r3
 800138c:	d200      	bcs.n	8001390 <__aeabi_fsub+0x45c>
 800138e:	e6e5      	b.n	800115c <__aeabi_fsub+0x228>
 8001390:	4298      	cmp	r0, r3
 8001392:	d300      	bcc.n	8001396 <__aeabi_fsub+0x462>
 8001394:	e6e2      	b.n	800115c <__aeabi_fsub+0x228>
 8001396:	0007      	movs	r7, r0
 8001398:	e6e0      	b.n	800115c <__aeabi_fsub+0x228>
 800139a:	2900      	cmp	r1, #0
 800139c:	d100      	bne.n	80013a0 <__aeabi_fsub+0x46c>
 800139e:	e69e      	b.n	80010de <__aeabi_fsub+0x1aa>
 80013a0:	2300      	movs	r3, #0
 80013a2:	08cf      	lsrs	r7, r1, #3
 80013a4:	e641      	b.n	800102a <__aeabi_fsub+0xf6>
 80013a6:	0034      	movs	r4, r6
 80013a8:	2301      	movs	r3, #1
 80013aa:	08ff      	lsrs	r7, r7, #3
 80013ac:	e63d      	b.n	800102a <__aeabi_fsub+0xf6>
 80013ae:	2f00      	cmp	r7, #0
 80013b0:	d100      	bne.n	80013b4 <__aeabi_fsub+0x480>
 80013b2:	e693      	b.n	80010dc <__aeabi_fsub+0x1a8>
 80013b4:	2300      	movs	r3, #0
 80013b6:	08ff      	lsrs	r7, r7, #3
 80013b8:	e637      	b.n	800102a <__aeabi_fsub+0xf6>
 80013ba:	2300      	movs	r3, #0
 80013bc:	08d7      	lsrs	r7, r2, #3
 80013be:	e634      	b.n	800102a <__aeabi_fsub+0xf6>
 80013c0:	2301      	movs	r3, #1
 80013c2:	08cf      	lsrs	r7, r1, #3
 80013c4:	e631      	b.n	800102a <__aeabi_fsub+0xf6>
 80013c6:	2280      	movs	r2, #128	@ 0x80
 80013c8:	000b      	movs	r3, r1
 80013ca:	04d2      	lsls	r2, r2, #19
 80013cc:	2001      	movs	r0, #1
 80013ce:	4013      	ands	r3, r2
 80013d0:	4211      	tst	r1, r2
 80013d2:	d000      	beq.n	80013d6 <__aeabi_fsub+0x4a2>
 80013d4:	e6ae      	b.n	8001134 <__aeabi_fsub+0x200>
 80013d6:	08cf      	lsrs	r7, r1, #3
 80013d8:	e627      	b.n	800102a <__aeabi_fsub+0xf6>
 80013da:	2b00      	cmp	r3, #0
 80013dc:	d100      	bne.n	80013e0 <__aeabi_fsub+0x4ac>
 80013de:	e75f      	b.n	80012a0 <__aeabi_fsub+0x36c>
 80013e0:	1b56      	subs	r6, r2, r5
 80013e2:	2d00      	cmp	r5, #0
 80013e4:	d101      	bne.n	80013ea <__aeabi_fsub+0x4b6>
 80013e6:	0033      	movs	r3, r6
 80013e8:	e6e7      	b.n	80011ba <__aeabi_fsub+0x286>
 80013ea:	2380      	movs	r3, #128	@ 0x80
 80013ec:	4660      	mov	r0, ip
 80013ee:	04db      	lsls	r3, r3, #19
 80013f0:	4318      	orrs	r0, r3
 80013f2:	4684      	mov	ip, r0
 80013f4:	e6eb      	b.n	80011ce <__aeabi_fsub+0x29a>
 80013f6:	46c0      	nop			@ (mov r8, r8)
 80013f8:	7dffffff 	.word	0x7dffffff

080013fc <__aeabi_f2iz>:
 80013fc:	0241      	lsls	r1, r0, #9
 80013fe:	0042      	lsls	r2, r0, #1
 8001400:	0fc3      	lsrs	r3, r0, #31
 8001402:	0a49      	lsrs	r1, r1, #9
 8001404:	2000      	movs	r0, #0
 8001406:	0e12      	lsrs	r2, r2, #24
 8001408:	2a7e      	cmp	r2, #126	@ 0x7e
 800140a:	dd03      	ble.n	8001414 <__aeabi_f2iz+0x18>
 800140c:	2a9d      	cmp	r2, #157	@ 0x9d
 800140e:	dd02      	ble.n	8001416 <__aeabi_f2iz+0x1a>
 8001410:	4a09      	ldr	r2, [pc, #36]	@ (8001438 <__aeabi_f2iz+0x3c>)
 8001412:	1898      	adds	r0, r3, r2
 8001414:	4770      	bx	lr
 8001416:	2080      	movs	r0, #128	@ 0x80
 8001418:	0400      	lsls	r0, r0, #16
 800141a:	4301      	orrs	r1, r0
 800141c:	2a95      	cmp	r2, #149	@ 0x95
 800141e:	dc07      	bgt.n	8001430 <__aeabi_f2iz+0x34>
 8001420:	2096      	movs	r0, #150	@ 0x96
 8001422:	1a82      	subs	r2, r0, r2
 8001424:	40d1      	lsrs	r1, r2
 8001426:	4248      	negs	r0, r1
 8001428:	2b00      	cmp	r3, #0
 800142a:	d1f3      	bne.n	8001414 <__aeabi_f2iz+0x18>
 800142c:	0008      	movs	r0, r1
 800142e:	e7f1      	b.n	8001414 <__aeabi_f2iz+0x18>
 8001430:	3a96      	subs	r2, #150	@ 0x96
 8001432:	4091      	lsls	r1, r2
 8001434:	e7f7      	b.n	8001426 <__aeabi_f2iz+0x2a>
 8001436:	46c0      	nop			@ (mov r8, r8)
 8001438:	7fffffff 	.word	0x7fffffff

0800143c <__aeabi_i2f>:
 800143c:	b570      	push	{r4, r5, r6, lr}
 800143e:	2800      	cmp	r0, #0
 8001440:	d012      	beq.n	8001468 <__aeabi_i2f+0x2c>
 8001442:	17c3      	asrs	r3, r0, #31
 8001444:	18c5      	adds	r5, r0, r3
 8001446:	405d      	eors	r5, r3
 8001448:	0fc4      	lsrs	r4, r0, #31
 800144a:	0028      	movs	r0, r5
 800144c:	f001 ffb2 	bl	80033b4 <__clzsi2>
 8001450:	239e      	movs	r3, #158	@ 0x9e
 8001452:	1a1b      	subs	r3, r3, r0
 8001454:	2b96      	cmp	r3, #150	@ 0x96
 8001456:	dc0f      	bgt.n	8001478 <__aeabi_i2f+0x3c>
 8001458:	2808      	cmp	r0, #8
 800145a:	d038      	beq.n	80014ce <__aeabi_i2f+0x92>
 800145c:	3808      	subs	r0, #8
 800145e:	4085      	lsls	r5, r0
 8001460:	026d      	lsls	r5, r5, #9
 8001462:	0a6d      	lsrs	r5, r5, #9
 8001464:	b2d8      	uxtb	r0, r3
 8001466:	e002      	b.n	800146e <__aeabi_i2f+0x32>
 8001468:	2400      	movs	r4, #0
 800146a:	2000      	movs	r0, #0
 800146c:	2500      	movs	r5, #0
 800146e:	05c0      	lsls	r0, r0, #23
 8001470:	4328      	orrs	r0, r5
 8001472:	07e4      	lsls	r4, r4, #31
 8001474:	4320      	orrs	r0, r4
 8001476:	bd70      	pop	{r4, r5, r6, pc}
 8001478:	2b99      	cmp	r3, #153	@ 0x99
 800147a:	dc14      	bgt.n	80014a6 <__aeabi_i2f+0x6a>
 800147c:	1f42      	subs	r2, r0, #5
 800147e:	4095      	lsls	r5, r2
 8001480:	002a      	movs	r2, r5
 8001482:	4915      	ldr	r1, [pc, #84]	@ (80014d8 <__aeabi_i2f+0x9c>)
 8001484:	4011      	ands	r1, r2
 8001486:	0755      	lsls	r5, r2, #29
 8001488:	d01c      	beq.n	80014c4 <__aeabi_i2f+0x88>
 800148a:	250f      	movs	r5, #15
 800148c:	402a      	ands	r2, r5
 800148e:	2a04      	cmp	r2, #4
 8001490:	d018      	beq.n	80014c4 <__aeabi_i2f+0x88>
 8001492:	3104      	adds	r1, #4
 8001494:	08ca      	lsrs	r2, r1, #3
 8001496:	0149      	lsls	r1, r1, #5
 8001498:	d515      	bpl.n	80014c6 <__aeabi_i2f+0x8a>
 800149a:	239f      	movs	r3, #159	@ 0x9f
 800149c:	0252      	lsls	r2, r2, #9
 800149e:	1a18      	subs	r0, r3, r0
 80014a0:	0a55      	lsrs	r5, r2, #9
 80014a2:	b2c0      	uxtb	r0, r0
 80014a4:	e7e3      	b.n	800146e <__aeabi_i2f+0x32>
 80014a6:	2205      	movs	r2, #5
 80014a8:	0029      	movs	r1, r5
 80014aa:	1a12      	subs	r2, r2, r0
 80014ac:	40d1      	lsrs	r1, r2
 80014ae:	0002      	movs	r2, r0
 80014b0:	321b      	adds	r2, #27
 80014b2:	4095      	lsls	r5, r2
 80014b4:	002a      	movs	r2, r5
 80014b6:	1e55      	subs	r5, r2, #1
 80014b8:	41aa      	sbcs	r2, r5
 80014ba:	430a      	orrs	r2, r1
 80014bc:	4906      	ldr	r1, [pc, #24]	@ (80014d8 <__aeabi_i2f+0x9c>)
 80014be:	4011      	ands	r1, r2
 80014c0:	0755      	lsls	r5, r2, #29
 80014c2:	d1e2      	bne.n	800148a <__aeabi_i2f+0x4e>
 80014c4:	08ca      	lsrs	r2, r1, #3
 80014c6:	0252      	lsls	r2, r2, #9
 80014c8:	0a55      	lsrs	r5, r2, #9
 80014ca:	b2d8      	uxtb	r0, r3
 80014cc:	e7cf      	b.n	800146e <__aeabi_i2f+0x32>
 80014ce:	026d      	lsls	r5, r5, #9
 80014d0:	0a6d      	lsrs	r5, r5, #9
 80014d2:	308e      	adds	r0, #142	@ 0x8e
 80014d4:	e7cb      	b.n	800146e <__aeabi_i2f+0x32>
 80014d6:	46c0      	nop			@ (mov r8, r8)
 80014d8:	fbffffff 	.word	0xfbffffff

080014dc <__aeabi_ui2f>:
 80014dc:	b510      	push	{r4, lr}
 80014de:	1e04      	subs	r4, r0, #0
 80014e0:	d00d      	beq.n	80014fe <__aeabi_ui2f+0x22>
 80014e2:	f001 ff67 	bl	80033b4 <__clzsi2>
 80014e6:	239e      	movs	r3, #158	@ 0x9e
 80014e8:	1a1b      	subs	r3, r3, r0
 80014ea:	2b96      	cmp	r3, #150	@ 0x96
 80014ec:	dc0c      	bgt.n	8001508 <__aeabi_ui2f+0x2c>
 80014ee:	2808      	cmp	r0, #8
 80014f0:	d034      	beq.n	800155c <__aeabi_ui2f+0x80>
 80014f2:	3808      	subs	r0, #8
 80014f4:	4084      	lsls	r4, r0
 80014f6:	0264      	lsls	r4, r4, #9
 80014f8:	0a64      	lsrs	r4, r4, #9
 80014fa:	b2d8      	uxtb	r0, r3
 80014fc:	e001      	b.n	8001502 <__aeabi_ui2f+0x26>
 80014fe:	2000      	movs	r0, #0
 8001500:	2400      	movs	r4, #0
 8001502:	05c0      	lsls	r0, r0, #23
 8001504:	4320      	orrs	r0, r4
 8001506:	bd10      	pop	{r4, pc}
 8001508:	2b99      	cmp	r3, #153	@ 0x99
 800150a:	dc13      	bgt.n	8001534 <__aeabi_ui2f+0x58>
 800150c:	1f42      	subs	r2, r0, #5
 800150e:	4094      	lsls	r4, r2
 8001510:	4a14      	ldr	r2, [pc, #80]	@ (8001564 <__aeabi_ui2f+0x88>)
 8001512:	4022      	ands	r2, r4
 8001514:	0761      	lsls	r1, r4, #29
 8001516:	d01c      	beq.n	8001552 <__aeabi_ui2f+0x76>
 8001518:	210f      	movs	r1, #15
 800151a:	4021      	ands	r1, r4
 800151c:	2904      	cmp	r1, #4
 800151e:	d018      	beq.n	8001552 <__aeabi_ui2f+0x76>
 8001520:	3204      	adds	r2, #4
 8001522:	08d4      	lsrs	r4, r2, #3
 8001524:	0152      	lsls	r2, r2, #5
 8001526:	d515      	bpl.n	8001554 <__aeabi_ui2f+0x78>
 8001528:	239f      	movs	r3, #159	@ 0x9f
 800152a:	0264      	lsls	r4, r4, #9
 800152c:	1a18      	subs	r0, r3, r0
 800152e:	0a64      	lsrs	r4, r4, #9
 8001530:	b2c0      	uxtb	r0, r0
 8001532:	e7e6      	b.n	8001502 <__aeabi_ui2f+0x26>
 8001534:	0002      	movs	r2, r0
 8001536:	0021      	movs	r1, r4
 8001538:	321b      	adds	r2, #27
 800153a:	4091      	lsls	r1, r2
 800153c:	000a      	movs	r2, r1
 800153e:	1e51      	subs	r1, r2, #1
 8001540:	418a      	sbcs	r2, r1
 8001542:	2105      	movs	r1, #5
 8001544:	1a09      	subs	r1, r1, r0
 8001546:	40cc      	lsrs	r4, r1
 8001548:	4314      	orrs	r4, r2
 800154a:	4a06      	ldr	r2, [pc, #24]	@ (8001564 <__aeabi_ui2f+0x88>)
 800154c:	4022      	ands	r2, r4
 800154e:	0761      	lsls	r1, r4, #29
 8001550:	d1e2      	bne.n	8001518 <__aeabi_ui2f+0x3c>
 8001552:	08d4      	lsrs	r4, r2, #3
 8001554:	0264      	lsls	r4, r4, #9
 8001556:	0a64      	lsrs	r4, r4, #9
 8001558:	b2d8      	uxtb	r0, r3
 800155a:	e7d2      	b.n	8001502 <__aeabi_ui2f+0x26>
 800155c:	0264      	lsls	r4, r4, #9
 800155e:	0a64      	lsrs	r4, r4, #9
 8001560:	308e      	adds	r0, #142	@ 0x8e
 8001562:	e7ce      	b.n	8001502 <__aeabi_ui2f+0x26>
 8001564:	fbffffff 	.word	0xfbffffff

08001568 <__aeabi_dadd>:
 8001568:	b5f0      	push	{r4, r5, r6, r7, lr}
 800156a:	464f      	mov	r7, r9
 800156c:	4646      	mov	r6, r8
 800156e:	46d6      	mov	lr, sl
 8001570:	b5c0      	push	{r6, r7, lr}
 8001572:	b082      	sub	sp, #8
 8001574:	9000      	str	r0, [sp, #0]
 8001576:	9101      	str	r1, [sp, #4]
 8001578:	030e      	lsls	r6, r1, #12
 800157a:	004c      	lsls	r4, r1, #1
 800157c:	0fcd      	lsrs	r5, r1, #31
 800157e:	0a71      	lsrs	r1, r6, #9
 8001580:	9e00      	ldr	r6, [sp, #0]
 8001582:	005f      	lsls	r7, r3, #1
 8001584:	0f76      	lsrs	r6, r6, #29
 8001586:	430e      	orrs	r6, r1
 8001588:	9900      	ldr	r1, [sp, #0]
 800158a:	9200      	str	r2, [sp, #0]
 800158c:	9301      	str	r3, [sp, #4]
 800158e:	00c9      	lsls	r1, r1, #3
 8001590:	4689      	mov	r9, r1
 8001592:	0319      	lsls	r1, r3, #12
 8001594:	0d7b      	lsrs	r3, r7, #21
 8001596:	4698      	mov	r8, r3
 8001598:	9b01      	ldr	r3, [sp, #4]
 800159a:	0a49      	lsrs	r1, r1, #9
 800159c:	0fdb      	lsrs	r3, r3, #31
 800159e:	469c      	mov	ip, r3
 80015a0:	9b00      	ldr	r3, [sp, #0]
 80015a2:	9a00      	ldr	r2, [sp, #0]
 80015a4:	0f5b      	lsrs	r3, r3, #29
 80015a6:	430b      	orrs	r3, r1
 80015a8:	4641      	mov	r1, r8
 80015aa:	0d64      	lsrs	r4, r4, #21
 80015ac:	00d2      	lsls	r2, r2, #3
 80015ae:	1a61      	subs	r1, r4, r1
 80015b0:	4565      	cmp	r5, ip
 80015b2:	d100      	bne.n	80015b6 <__aeabi_dadd+0x4e>
 80015b4:	e0a6      	b.n	8001704 <__aeabi_dadd+0x19c>
 80015b6:	2900      	cmp	r1, #0
 80015b8:	dd72      	ble.n	80016a0 <__aeabi_dadd+0x138>
 80015ba:	4647      	mov	r7, r8
 80015bc:	2f00      	cmp	r7, #0
 80015be:	d100      	bne.n	80015c2 <__aeabi_dadd+0x5a>
 80015c0:	e0dd      	b.n	800177e <__aeabi_dadd+0x216>
 80015c2:	4fcc      	ldr	r7, [pc, #816]	@ (80018f4 <__aeabi_dadd+0x38c>)
 80015c4:	42bc      	cmp	r4, r7
 80015c6:	d100      	bne.n	80015ca <__aeabi_dadd+0x62>
 80015c8:	e19a      	b.n	8001900 <__aeabi_dadd+0x398>
 80015ca:	2701      	movs	r7, #1
 80015cc:	2938      	cmp	r1, #56	@ 0x38
 80015ce:	dc17      	bgt.n	8001600 <__aeabi_dadd+0x98>
 80015d0:	2780      	movs	r7, #128	@ 0x80
 80015d2:	043f      	lsls	r7, r7, #16
 80015d4:	433b      	orrs	r3, r7
 80015d6:	291f      	cmp	r1, #31
 80015d8:	dd00      	ble.n	80015dc <__aeabi_dadd+0x74>
 80015da:	e1dd      	b.n	8001998 <__aeabi_dadd+0x430>
 80015dc:	2720      	movs	r7, #32
 80015de:	1a78      	subs	r0, r7, r1
 80015e0:	001f      	movs	r7, r3
 80015e2:	4087      	lsls	r7, r0
 80015e4:	46ba      	mov	sl, r7
 80015e6:	0017      	movs	r7, r2
 80015e8:	40cf      	lsrs	r7, r1
 80015ea:	4684      	mov	ip, r0
 80015ec:	0038      	movs	r0, r7
 80015ee:	4657      	mov	r7, sl
 80015f0:	4307      	orrs	r7, r0
 80015f2:	4660      	mov	r0, ip
 80015f4:	4082      	lsls	r2, r0
 80015f6:	40cb      	lsrs	r3, r1
 80015f8:	1e50      	subs	r0, r2, #1
 80015fa:	4182      	sbcs	r2, r0
 80015fc:	1af6      	subs	r6, r6, r3
 80015fe:	4317      	orrs	r7, r2
 8001600:	464b      	mov	r3, r9
 8001602:	1bdf      	subs	r7, r3, r7
 8001604:	45b9      	cmp	r9, r7
 8001606:	4180      	sbcs	r0, r0
 8001608:	4240      	negs	r0, r0
 800160a:	1a36      	subs	r6, r6, r0
 800160c:	0233      	lsls	r3, r6, #8
 800160e:	d400      	bmi.n	8001612 <__aeabi_dadd+0xaa>
 8001610:	e0ff      	b.n	8001812 <__aeabi_dadd+0x2aa>
 8001612:	0276      	lsls	r6, r6, #9
 8001614:	0a76      	lsrs	r6, r6, #9
 8001616:	2e00      	cmp	r6, #0
 8001618:	d100      	bne.n	800161c <__aeabi_dadd+0xb4>
 800161a:	e13c      	b.n	8001896 <__aeabi_dadd+0x32e>
 800161c:	0030      	movs	r0, r6
 800161e:	f001 fec9 	bl	80033b4 <__clzsi2>
 8001622:	0003      	movs	r3, r0
 8001624:	3b08      	subs	r3, #8
 8001626:	2120      	movs	r1, #32
 8001628:	0038      	movs	r0, r7
 800162a:	1aca      	subs	r2, r1, r3
 800162c:	40d0      	lsrs	r0, r2
 800162e:	409e      	lsls	r6, r3
 8001630:	0002      	movs	r2, r0
 8001632:	409f      	lsls	r7, r3
 8001634:	4332      	orrs	r2, r6
 8001636:	429c      	cmp	r4, r3
 8001638:	dd00      	ble.n	800163c <__aeabi_dadd+0xd4>
 800163a:	e1a6      	b.n	800198a <__aeabi_dadd+0x422>
 800163c:	1b18      	subs	r0, r3, r4
 800163e:	3001      	adds	r0, #1
 8001640:	1a09      	subs	r1, r1, r0
 8001642:	003e      	movs	r6, r7
 8001644:	408f      	lsls	r7, r1
 8001646:	40c6      	lsrs	r6, r0
 8001648:	1e7b      	subs	r3, r7, #1
 800164a:	419f      	sbcs	r7, r3
 800164c:	0013      	movs	r3, r2
 800164e:	408b      	lsls	r3, r1
 8001650:	4337      	orrs	r7, r6
 8001652:	431f      	orrs	r7, r3
 8001654:	40c2      	lsrs	r2, r0
 8001656:	003b      	movs	r3, r7
 8001658:	0016      	movs	r6, r2
 800165a:	2400      	movs	r4, #0
 800165c:	4313      	orrs	r3, r2
 800165e:	d100      	bne.n	8001662 <__aeabi_dadd+0xfa>
 8001660:	e1df      	b.n	8001a22 <__aeabi_dadd+0x4ba>
 8001662:	077b      	lsls	r3, r7, #29
 8001664:	d100      	bne.n	8001668 <__aeabi_dadd+0x100>
 8001666:	e332      	b.n	8001cce <__aeabi_dadd+0x766>
 8001668:	230f      	movs	r3, #15
 800166a:	003a      	movs	r2, r7
 800166c:	403b      	ands	r3, r7
 800166e:	2b04      	cmp	r3, #4
 8001670:	d004      	beq.n	800167c <__aeabi_dadd+0x114>
 8001672:	1d3a      	adds	r2, r7, #4
 8001674:	42ba      	cmp	r2, r7
 8001676:	41bf      	sbcs	r7, r7
 8001678:	427f      	negs	r7, r7
 800167a:	19f6      	adds	r6, r6, r7
 800167c:	0233      	lsls	r3, r6, #8
 800167e:	d400      	bmi.n	8001682 <__aeabi_dadd+0x11a>
 8001680:	e323      	b.n	8001cca <__aeabi_dadd+0x762>
 8001682:	4b9c      	ldr	r3, [pc, #624]	@ (80018f4 <__aeabi_dadd+0x38c>)
 8001684:	3401      	adds	r4, #1
 8001686:	429c      	cmp	r4, r3
 8001688:	d100      	bne.n	800168c <__aeabi_dadd+0x124>
 800168a:	e0b4      	b.n	80017f6 <__aeabi_dadd+0x28e>
 800168c:	4b9a      	ldr	r3, [pc, #616]	@ (80018f8 <__aeabi_dadd+0x390>)
 800168e:	0564      	lsls	r4, r4, #21
 8001690:	401e      	ands	r6, r3
 8001692:	0d64      	lsrs	r4, r4, #21
 8001694:	0777      	lsls	r7, r6, #29
 8001696:	08d2      	lsrs	r2, r2, #3
 8001698:	0276      	lsls	r6, r6, #9
 800169a:	4317      	orrs	r7, r2
 800169c:	0b36      	lsrs	r6, r6, #12
 800169e:	e0ac      	b.n	80017fa <__aeabi_dadd+0x292>
 80016a0:	2900      	cmp	r1, #0
 80016a2:	d100      	bne.n	80016a6 <__aeabi_dadd+0x13e>
 80016a4:	e07e      	b.n	80017a4 <__aeabi_dadd+0x23c>
 80016a6:	4641      	mov	r1, r8
 80016a8:	1b09      	subs	r1, r1, r4
 80016aa:	2c00      	cmp	r4, #0
 80016ac:	d000      	beq.n	80016b0 <__aeabi_dadd+0x148>
 80016ae:	e160      	b.n	8001972 <__aeabi_dadd+0x40a>
 80016b0:	0034      	movs	r4, r6
 80016b2:	4648      	mov	r0, r9
 80016b4:	4304      	orrs	r4, r0
 80016b6:	d100      	bne.n	80016ba <__aeabi_dadd+0x152>
 80016b8:	e1c9      	b.n	8001a4e <__aeabi_dadd+0x4e6>
 80016ba:	1e4c      	subs	r4, r1, #1
 80016bc:	2901      	cmp	r1, #1
 80016be:	d100      	bne.n	80016c2 <__aeabi_dadd+0x15a>
 80016c0:	e22e      	b.n	8001b20 <__aeabi_dadd+0x5b8>
 80016c2:	4d8c      	ldr	r5, [pc, #560]	@ (80018f4 <__aeabi_dadd+0x38c>)
 80016c4:	42a9      	cmp	r1, r5
 80016c6:	d100      	bne.n	80016ca <__aeabi_dadd+0x162>
 80016c8:	e224      	b.n	8001b14 <__aeabi_dadd+0x5ac>
 80016ca:	2701      	movs	r7, #1
 80016cc:	2c38      	cmp	r4, #56	@ 0x38
 80016ce:	dc11      	bgt.n	80016f4 <__aeabi_dadd+0x18c>
 80016d0:	0021      	movs	r1, r4
 80016d2:	291f      	cmp	r1, #31
 80016d4:	dd00      	ble.n	80016d8 <__aeabi_dadd+0x170>
 80016d6:	e20b      	b.n	8001af0 <__aeabi_dadd+0x588>
 80016d8:	2420      	movs	r4, #32
 80016da:	0037      	movs	r7, r6
 80016dc:	4648      	mov	r0, r9
 80016de:	1a64      	subs	r4, r4, r1
 80016e0:	40a7      	lsls	r7, r4
 80016e2:	40c8      	lsrs	r0, r1
 80016e4:	4307      	orrs	r7, r0
 80016e6:	4648      	mov	r0, r9
 80016e8:	40a0      	lsls	r0, r4
 80016ea:	40ce      	lsrs	r6, r1
 80016ec:	1e44      	subs	r4, r0, #1
 80016ee:	41a0      	sbcs	r0, r4
 80016f0:	1b9b      	subs	r3, r3, r6
 80016f2:	4307      	orrs	r7, r0
 80016f4:	1bd7      	subs	r7, r2, r7
 80016f6:	42ba      	cmp	r2, r7
 80016f8:	4192      	sbcs	r2, r2
 80016fa:	4252      	negs	r2, r2
 80016fc:	4665      	mov	r5, ip
 80016fe:	4644      	mov	r4, r8
 8001700:	1a9e      	subs	r6, r3, r2
 8001702:	e783      	b.n	800160c <__aeabi_dadd+0xa4>
 8001704:	2900      	cmp	r1, #0
 8001706:	dc00      	bgt.n	800170a <__aeabi_dadd+0x1a2>
 8001708:	e09c      	b.n	8001844 <__aeabi_dadd+0x2dc>
 800170a:	4647      	mov	r7, r8
 800170c:	2f00      	cmp	r7, #0
 800170e:	d167      	bne.n	80017e0 <__aeabi_dadd+0x278>
 8001710:	001f      	movs	r7, r3
 8001712:	4317      	orrs	r7, r2
 8001714:	d100      	bne.n	8001718 <__aeabi_dadd+0x1b0>
 8001716:	e0e4      	b.n	80018e2 <__aeabi_dadd+0x37a>
 8001718:	1e48      	subs	r0, r1, #1
 800171a:	2901      	cmp	r1, #1
 800171c:	d100      	bne.n	8001720 <__aeabi_dadd+0x1b8>
 800171e:	e19b      	b.n	8001a58 <__aeabi_dadd+0x4f0>
 8001720:	4f74      	ldr	r7, [pc, #464]	@ (80018f4 <__aeabi_dadd+0x38c>)
 8001722:	42b9      	cmp	r1, r7
 8001724:	d100      	bne.n	8001728 <__aeabi_dadd+0x1c0>
 8001726:	e0eb      	b.n	8001900 <__aeabi_dadd+0x398>
 8001728:	2701      	movs	r7, #1
 800172a:	0001      	movs	r1, r0
 800172c:	2838      	cmp	r0, #56	@ 0x38
 800172e:	dc11      	bgt.n	8001754 <__aeabi_dadd+0x1ec>
 8001730:	291f      	cmp	r1, #31
 8001732:	dd00      	ble.n	8001736 <__aeabi_dadd+0x1ce>
 8001734:	e1c7      	b.n	8001ac6 <__aeabi_dadd+0x55e>
 8001736:	2720      	movs	r7, #32
 8001738:	1a78      	subs	r0, r7, r1
 800173a:	001f      	movs	r7, r3
 800173c:	4684      	mov	ip, r0
 800173e:	4087      	lsls	r7, r0
 8001740:	0010      	movs	r0, r2
 8001742:	40c8      	lsrs	r0, r1
 8001744:	4307      	orrs	r7, r0
 8001746:	4660      	mov	r0, ip
 8001748:	4082      	lsls	r2, r0
 800174a:	40cb      	lsrs	r3, r1
 800174c:	1e50      	subs	r0, r2, #1
 800174e:	4182      	sbcs	r2, r0
 8001750:	18f6      	adds	r6, r6, r3
 8001752:	4317      	orrs	r7, r2
 8001754:	444f      	add	r7, r9
 8001756:	454f      	cmp	r7, r9
 8001758:	4180      	sbcs	r0, r0
 800175a:	4240      	negs	r0, r0
 800175c:	1836      	adds	r6, r6, r0
 800175e:	0233      	lsls	r3, r6, #8
 8001760:	d557      	bpl.n	8001812 <__aeabi_dadd+0x2aa>
 8001762:	4b64      	ldr	r3, [pc, #400]	@ (80018f4 <__aeabi_dadd+0x38c>)
 8001764:	3401      	adds	r4, #1
 8001766:	429c      	cmp	r4, r3
 8001768:	d045      	beq.n	80017f6 <__aeabi_dadd+0x28e>
 800176a:	2101      	movs	r1, #1
 800176c:	4b62      	ldr	r3, [pc, #392]	@ (80018f8 <__aeabi_dadd+0x390>)
 800176e:	087a      	lsrs	r2, r7, #1
 8001770:	401e      	ands	r6, r3
 8001772:	4039      	ands	r1, r7
 8001774:	430a      	orrs	r2, r1
 8001776:	07f7      	lsls	r7, r6, #31
 8001778:	4317      	orrs	r7, r2
 800177a:	0876      	lsrs	r6, r6, #1
 800177c:	e771      	b.n	8001662 <__aeabi_dadd+0xfa>
 800177e:	001f      	movs	r7, r3
 8001780:	4317      	orrs	r7, r2
 8001782:	d100      	bne.n	8001786 <__aeabi_dadd+0x21e>
 8001784:	e0ad      	b.n	80018e2 <__aeabi_dadd+0x37a>
 8001786:	1e4f      	subs	r7, r1, #1
 8001788:	46bc      	mov	ip, r7
 800178a:	2901      	cmp	r1, #1
 800178c:	d100      	bne.n	8001790 <__aeabi_dadd+0x228>
 800178e:	e182      	b.n	8001a96 <__aeabi_dadd+0x52e>
 8001790:	4f58      	ldr	r7, [pc, #352]	@ (80018f4 <__aeabi_dadd+0x38c>)
 8001792:	42b9      	cmp	r1, r7
 8001794:	d100      	bne.n	8001798 <__aeabi_dadd+0x230>
 8001796:	e190      	b.n	8001aba <__aeabi_dadd+0x552>
 8001798:	4661      	mov	r1, ip
 800179a:	2701      	movs	r7, #1
 800179c:	2938      	cmp	r1, #56	@ 0x38
 800179e:	dd00      	ble.n	80017a2 <__aeabi_dadd+0x23a>
 80017a0:	e72e      	b.n	8001600 <__aeabi_dadd+0x98>
 80017a2:	e718      	b.n	80015d6 <__aeabi_dadd+0x6e>
 80017a4:	4f55      	ldr	r7, [pc, #340]	@ (80018fc <__aeabi_dadd+0x394>)
 80017a6:	1c61      	adds	r1, r4, #1
 80017a8:	4239      	tst	r1, r7
 80017aa:	d000      	beq.n	80017ae <__aeabi_dadd+0x246>
 80017ac:	e0d0      	b.n	8001950 <__aeabi_dadd+0x3e8>
 80017ae:	0031      	movs	r1, r6
 80017b0:	4648      	mov	r0, r9
 80017b2:	001f      	movs	r7, r3
 80017b4:	4301      	orrs	r1, r0
 80017b6:	4317      	orrs	r7, r2
 80017b8:	2c00      	cmp	r4, #0
 80017ba:	d000      	beq.n	80017be <__aeabi_dadd+0x256>
 80017bc:	e13d      	b.n	8001a3a <__aeabi_dadd+0x4d2>
 80017be:	2900      	cmp	r1, #0
 80017c0:	d100      	bne.n	80017c4 <__aeabi_dadd+0x25c>
 80017c2:	e1bc      	b.n	8001b3e <__aeabi_dadd+0x5d6>
 80017c4:	2f00      	cmp	r7, #0
 80017c6:	d000      	beq.n	80017ca <__aeabi_dadd+0x262>
 80017c8:	e1bf      	b.n	8001b4a <__aeabi_dadd+0x5e2>
 80017ca:	464b      	mov	r3, r9
 80017cc:	2100      	movs	r1, #0
 80017ce:	08d8      	lsrs	r0, r3, #3
 80017d0:	0777      	lsls	r7, r6, #29
 80017d2:	4307      	orrs	r7, r0
 80017d4:	08f0      	lsrs	r0, r6, #3
 80017d6:	0306      	lsls	r6, r0, #12
 80017d8:	054c      	lsls	r4, r1, #21
 80017da:	0b36      	lsrs	r6, r6, #12
 80017dc:	0d64      	lsrs	r4, r4, #21
 80017de:	e00c      	b.n	80017fa <__aeabi_dadd+0x292>
 80017e0:	4f44      	ldr	r7, [pc, #272]	@ (80018f4 <__aeabi_dadd+0x38c>)
 80017e2:	42bc      	cmp	r4, r7
 80017e4:	d100      	bne.n	80017e8 <__aeabi_dadd+0x280>
 80017e6:	e08b      	b.n	8001900 <__aeabi_dadd+0x398>
 80017e8:	2701      	movs	r7, #1
 80017ea:	2938      	cmp	r1, #56	@ 0x38
 80017ec:	dcb2      	bgt.n	8001754 <__aeabi_dadd+0x1ec>
 80017ee:	2780      	movs	r7, #128	@ 0x80
 80017f0:	043f      	lsls	r7, r7, #16
 80017f2:	433b      	orrs	r3, r7
 80017f4:	e79c      	b.n	8001730 <__aeabi_dadd+0x1c8>
 80017f6:	2600      	movs	r6, #0
 80017f8:	2700      	movs	r7, #0
 80017fa:	0524      	lsls	r4, r4, #20
 80017fc:	4334      	orrs	r4, r6
 80017fe:	07ed      	lsls	r5, r5, #31
 8001800:	432c      	orrs	r4, r5
 8001802:	0038      	movs	r0, r7
 8001804:	0021      	movs	r1, r4
 8001806:	b002      	add	sp, #8
 8001808:	bce0      	pop	{r5, r6, r7}
 800180a:	46ba      	mov	sl, r7
 800180c:	46b1      	mov	r9, r6
 800180e:	46a8      	mov	r8, r5
 8001810:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001812:	077b      	lsls	r3, r7, #29
 8001814:	d004      	beq.n	8001820 <__aeabi_dadd+0x2b8>
 8001816:	230f      	movs	r3, #15
 8001818:	403b      	ands	r3, r7
 800181a:	2b04      	cmp	r3, #4
 800181c:	d000      	beq.n	8001820 <__aeabi_dadd+0x2b8>
 800181e:	e728      	b.n	8001672 <__aeabi_dadd+0x10a>
 8001820:	08f8      	lsrs	r0, r7, #3
 8001822:	4b34      	ldr	r3, [pc, #208]	@ (80018f4 <__aeabi_dadd+0x38c>)
 8001824:	0777      	lsls	r7, r6, #29
 8001826:	4307      	orrs	r7, r0
 8001828:	08f0      	lsrs	r0, r6, #3
 800182a:	429c      	cmp	r4, r3
 800182c:	d000      	beq.n	8001830 <__aeabi_dadd+0x2c8>
 800182e:	e24a      	b.n	8001cc6 <__aeabi_dadd+0x75e>
 8001830:	003b      	movs	r3, r7
 8001832:	4303      	orrs	r3, r0
 8001834:	d059      	beq.n	80018ea <__aeabi_dadd+0x382>
 8001836:	2680      	movs	r6, #128	@ 0x80
 8001838:	0336      	lsls	r6, r6, #12
 800183a:	4306      	orrs	r6, r0
 800183c:	0336      	lsls	r6, r6, #12
 800183e:	4c2d      	ldr	r4, [pc, #180]	@ (80018f4 <__aeabi_dadd+0x38c>)
 8001840:	0b36      	lsrs	r6, r6, #12
 8001842:	e7da      	b.n	80017fa <__aeabi_dadd+0x292>
 8001844:	2900      	cmp	r1, #0
 8001846:	d061      	beq.n	800190c <__aeabi_dadd+0x3a4>
 8001848:	4641      	mov	r1, r8
 800184a:	1b09      	subs	r1, r1, r4
 800184c:	2c00      	cmp	r4, #0
 800184e:	d100      	bne.n	8001852 <__aeabi_dadd+0x2ea>
 8001850:	e0b9      	b.n	80019c6 <__aeabi_dadd+0x45e>
 8001852:	4c28      	ldr	r4, [pc, #160]	@ (80018f4 <__aeabi_dadd+0x38c>)
 8001854:	45a0      	cmp	r8, r4
 8001856:	d100      	bne.n	800185a <__aeabi_dadd+0x2f2>
 8001858:	e1a5      	b.n	8001ba6 <__aeabi_dadd+0x63e>
 800185a:	2701      	movs	r7, #1
 800185c:	2938      	cmp	r1, #56	@ 0x38
 800185e:	dc13      	bgt.n	8001888 <__aeabi_dadd+0x320>
 8001860:	2480      	movs	r4, #128	@ 0x80
 8001862:	0424      	lsls	r4, r4, #16
 8001864:	4326      	orrs	r6, r4
 8001866:	291f      	cmp	r1, #31
 8001868:	dd00      	ble.n	800186c <__aeabi_dadd+0x304>
 800186a:	e1c8      	b.n	8001bfe <__aeabi_dadd+0x696>
 800186c:	2420      	movs	r4, #32
 800186e:	0037      	movs	r7, r6
 8001870:	4648      	mov	r0, r9
 8001872:	1a64      	subs	r4, r4, r1
 8001874:	40a7      	lsls	r7, r4
 8001876:	40c8      	lsrs	r0, r1
 8001878:	4307      	orrs	r7, r0
 800187a:	4648      	mov	r0, r9
 800187c:	40a0      	lsls	r0, r4
 800187e:	40ce      	lsrs	r6, r1
 8001880:	1e44      	subs	r4, r0, #1
 8001882:	41a0      	sbcs	r0, r4
 8001884:	199b      	adds	r3, r3, r6
 8001886:	4307      	orrs	r7, r0
 8001888:	18bf      	adds	r7, r7, r2
 800188a:	4297      	cmp	r7, r2
 800188c:	4192      	sbcs	r2, r2
 800188e:	4252      	negs	r2, r2
 8001890:	4644      	mov	r4, r8
 8001892:	18d6      	adds	r6, r2, r3
 8001894:	e763      	b.n	800175e <__aeabi_dadd+0x1f6>
 8001896:	0038      	movs	r0, r7
 8001898:	f001 fd8c 	bl	80033b4 <__clzsi2>
 800189c:	0003      	movs	r3, r0
 800189e:	3318      	adds	r3, #24
 80018a0:	2b1f      	cmp	r3, #31
 80018a2:	dc00      	bgt.n	80018a6 <__aeabi_dadd+0x33e>
 80018a4:	e6bf      	b.n	8001626 <__aeabi_dadd+0xbe>
 80018a6:	003a      	movs	r2, r7
 80018a8:	3808      	subs	r0, #8
 80018aa:	4082      	lsls	r2, r0
 80018ac:	429c      	cmp	r4, r3
 80018ae:	dd00      	ble.n	80018b2 <__aeabi_dadd+0x34a>
 80018b0:	e083      	b.n	80019ba <__aeabi_dadd+0x452>
 80018b2:	1b1b      	subs	r3, r3, r4
 80018b4:	1c58      	adds	r0, r3, #1
 80018b6:	281f      	cmp	r0, #31
 80018b8:	dc00      	bgt.n	80018bc <__aeabi_dadd+0x354>
 80018ba:	e1b4      	b.n	8001c26 <__aeabi_dadd+0x6be>
 80018bc:	0017      	movs	r7, r2
 80018be:	3b1f      	subs	r3, #31
 80018c0:	40df      	lsrs	r7, r3
 80018c2:	2820      	cmp	r0, #32
 80018c4:	d005      	beq.n	80018d2 <__aeabi_dadd+0x36a>
 80018c6:	2340      	movs	r3, #64	@ 0x40
 80018c8:	1a1b      	subs	r3, r3, r0
 80018ca:	409a      	lsls	r2, r3
 80018cc:	1e53      	subs	r3, r2, #1
 80018ce:	419a      	sbcs	r2, r3
 80018d0:	4317      	orrs	r7, r2
 80018d2:	2400      	movs	r4, #0
 80018d4:	2f00      	cmp	r7, #0
 80018d6:	d00a      	beq.n	80018ee <__aeabi_dadd+0x386>
 80018d8:	077b      	lsls	r3, r7, #29
 80018da:	d000      	beq.n	80018de <__aeabi_dadd+0x376>
 80018dc:	e6c4      	b.n	8001668 <__aeabi_dadd+0x100>
 80018de:	0026      	movs	r6, r4
 80018e0:	e79e      	b.n	8001820 <__aeabi_dadd+0x2b8>
 80018e2:	464b      	mov	r3, r9
 80018e4:	000c      	movs	r4, r1
 80018e6:	08d8      	lsrs	r0, r3, #3
 80018e8:	e79b      	b.n	8001822 <__aeabi_dadd+0x2ba>
 80018ea:	2700      	movs	r7, #0
 80018ec:	4c01      	ldr	r4, [pc, #4]	@ (80018f4 <__aeabi_dadd+0x38c>)
 80018ee:	2600      	movs	r6, #0
 80018f0:	e783      	b.n	80017fa <__aeabi_dadd+0x292>
 80018f2:	46c0      	nop			@ (mov r8, r8)
 80018f4:	000007ff 	.word	0x000007ff
 80018f8:	ff7fffff 	.word	0xff7fffff
 80018fc:	000007fe 	.word	0x000007fe
 8001900:	464b      	mov	r3, r9
 8001902:	0777      	lsls	r7, r6, #29
 8001904:	08d8      	lsrs	r0, r3, #3
 8001906:	4307      	orrs	r7, r0
 8001908:	08f0      	lsrs	r0, r6, #3
 800190a:	e791      	b.n	8001830 <__aeabi_dadd+0x2c8>
 800190c:	4fcd      	ldr	r7, [pc, #820]	@ (8001c44 <__aeabi_dadd+0x6dc>)
 800190e:	1c61      	adds	r1, r4, #1
 8001910:	4239      	tst	r1, r7
 8001912:	d16b      	bne.n	80019ec <__aeabi_dadd+0x484>
 8001914:	0031      	movs	r1, r6
 8001916:	4648      	mov	r0, r9
 8001918:	4301      	orrs	r1, r0
 800191a:	2c00      	cmp	r4, #0
 800191c:	d000      	beq.n	8001920 <__aeabi_dadd+0x3b8>
 800191e:	e14b      	b.n	8001bb8 <__aeabi_dadd+0x650>
 8001920:	001f      	movs	r7, r3
 8001922:	4317      	orrs	r7, r2
 8001924:	2900      	cmp	r1, #0
 8001926:	d100      	bne.n	800192a <__aeabi_dadd+0x3c2>
 8001928:	e181      	b.n	8001c2e <__aeabi_dadd+0x6c6>
 800192a:	2f00      	cmp	r7, #0
 800192c:	d100      	bne.n	8001930 <__aeabi_dadd+0x3c8>
 800192e:	e74c      	b.n	80017ca <__aeabi_dadd+0x262>
 8001930:	444a      	add	r2, r9
 8001932:	454a      	cmp	r2, r9
 8001934:	4180      	sbcs	r0, r0
 8001936:	18f6      	adds	r6, r6, r3
 8001938:	4240      	negs	r0, r0
 800193a:	1836      	adds	r6, r6, r0
 800193c:	0233      	lsls	r3, r6, #8
 800193e:	d500      	bpl.n	8001942 <__aeabi_dadd+0x3da>
 8001940:	e1b0      	b.n	8001ca4 <__aeabi_dadd+0x73c>
 8001942:	0017      	movs	r7, r2
 8001944:	4691      	mov	r9, r2
 8001946:	4337      	orrs	r7, r6
 8001948:	d000      	beq.n	800194c <__aeabi_dadd+0x3e4>
 800194a:	e73e      	b.n	80017ca <__aeabi_dadd+0x262>
 800194c:	2600      	movs	r6, #0
 800194e:	e754      	b.n	80017fa <__aeabi_dadd+0x292>
 8001950:	4649      	mov	r1, r9
 8001952:	1a89      	subs	r1, r1, r2
 8001954:	4688      	mov	r8, r1
 8001956:	45c1      	cmp	r9, r8
 8001958:	41bf      	sbcs	r7, r7
 800195a:	1af1      	subs	r1, r6, r3
 800195c:	427f      	negs	r7, r7
 800195e:	1bc9      	subs	r1, r1, r7
 8001960:	020f      	lsls	r7, r1, #8
 8001962:	d461      	bmi.n	8001a28 <__aeabi_dadd+0x4c0>
 8001964:	4647      	mov	r7, r8
 8001966:	430f      	orrs	r7, r1
 8001968:	d100      	bne.n	800196c <__aeabi_dadd+0x404>
 800196a:	e0bd      	b.n	8001ae8 <__aeabi_dadd+0x580>
 800196c:	000e      	movs	r6, r1
 800196e:	4647      	mov	r7, r8
 8001970:	e651      	b.n	8001616 <__aeabi_dadd+0xae>
 8001972:	4cb5      	ldr	r4, [pc, #724]	@ (8001c48 <__aeabi_dadd+0x6e0>)
 8001974:	45a0      	cmp	r8, r4
 8001976:	d100      	bne.n	800197a <__aeabi_dadd+0x412>
 8001978:	e100      	b.n	8001b7c <__aeabi_dadd+0x614>
 800197a:	2701      	movs	r7, #1
 800197c:	2938      	cmp	r1, #56	@ 0x38
 800197e:	dd00      	ble.n	8001982 <__aeabi_dadd+0x41a>
 8001980:	e6b8      	b.n	80016f4 <__aeabi_dadd+0x18c>
 8001982:	2480      	movs	r4, #128	@ 0x80
 8001984:	0424      	lsls	r4, r4, #16
 8001986:	4326      	orrs	r6, r4
 8001988:	e6a3      	b.n	80016d2 <__aeabi_dadd+0x16a>
 800198a:	4eb0      	ldr	r6, [pc, #704]	@ (8001c4c <__aeabi_dadd+0x6e4>)
 800198c:	1ae4      	subs	r4, r4, r3
 800198e:	4016      	ands	r6, r2
 8001990:	077b      	lsls	r3, r7, #29
 8001992:	d000      	beq.n	8001996 <__aeabi_dadd+0x42e>
 8001994:	e73f      	b.n	8001816 <__aeabi_dadd+0x2ae>
 8001996:	e743      	b.n	8001820 <__aeabi_dadd+0x2b8>
 8001998:	000f      	movs	r7, r1
 800199a:	0018      	movs	r0, r3
 800199c:	3f20      	subs	r7, #32
 800199e:	40f8      	lsrs	r0, r7
 80019a0:	4684      	mov	ip, r0
 80019a2:	2920      	cmp	r1, #32
 80019a4:	d003      	beq.n	80019ae <__aeabi_dadd+0x446>
 80019a6:	2740      	movs	r7, #64	@ 0x40
 80019a8:	1a79      	subs	r1, r7, r1
 80019aa:	408b      	lsls	r3, r1
 80019ac:	431a      	orrs	r2, r3
 80019ae:	1e53      	subs	r3, r2, #1
 80019b0:	419a      	sbcs	r2, r3
 80019b2:	4663      	mov	r3, ip
 80019b4:	0017      	movs	r7, r2
 80019b6:	431f      	orrs	r7, r3
 80019b8:	e622      	b.n	8001600 <__aeabi_dadd+0x98>
 80019ba:	48a4      	ldr	r0, [pc, #656]	@ (8001c4c <__aeabi_dadd+0x6e4>)
 80019bc:	1ae1      	subs	r1, r4, r3
 80019be:	4010      	ands	r0, r2
 80019c0:	0747      	lsls	r7, r0, #29
 80019c2:	08c0      	lsrs	r0, r0, #3
 80019c4:	e707      	b.n	80017d6 <__aeabi_dadd+0x26e>
 80019c6:	0034      	movs	r4, r6
 80019c8:	4648      	mov	r0, r9
 80019ca:	4304      	orrs	r4, r0
 80019cc:	d100      	bne.n	80019d0 <__aeabi_dadd+0x468>
 80019ce:	e0fa      	b.n	8001bc6 <__aeabi_dadd+0x65e>
 80019d0:	1e4c      	subs	r4, r1, #1
 80019d2:	2901      	cmp	r1, #1
 80019d4:	d100      	bne.n	80019d8 <__aeabi_dadd+0x470>
 80019d6:	e0d7      	b.n	8001b88 <__aeabi_dadd+0x620>
 80019d8:	4f9b      	ldr	r7, [pc, #620]	@ (8001c48 <__aeabi_dadd+0x6e0>)
 80019da:	42b9      	cmp	r1, r7
 80019dc:	d100      	bne.n	80019e0 <__aeabi_dadd+0x478>
 80019de:	e0e2      	b.n	8001ba6 <__aeabi_dadd+0x63e>
 80019e0:	2701      	movs	r7, #1
 80019e2:	2c38      	cmp	r4, #56	@ 0x38
 80019e4:	dd00      	ble.n	80019e8 <__aeabi_dadd+0x480>
 80019e6:	e74f      	b.n	8001888 <__aeabi_dadd+0x320>
 80019e8:	0021      	movs	r1, r4
 80019ea:	e73c      	b.n	8001866 <__aeabi_dadd+0x2fe>
 80019ec:	4c96      	ldr	r4, [pc, #600]	@ (8001c48 <__aeabi_dadd+0x6e0>)
 80019ee:	42a1      	cmp	r1, r4
 80019f0:	d100      	bne.n	80019f4 <__aeabi_dadd+0x48c>
 80019f2:	e0dd      	b.n	8001bb0 <__aeabi_dadd+0x648>
 80019f4:	444a      	add	r2, r9
 80019f6:	454a      	cmp	r2, r9
 80019f8:	4180      	sbcs	r0, r0
 80019fa:	18f3      	adds	r3, r6, r3
 80019fc:	4240      	negs	r0, r0
 80019fe:	1818      	adds	r0, r3, r0
 8001a00:	07c7      	lsls	r7, r0, #31
 8001a02:	0852      	lsrs	r2, r2, #1
 8001a04:	4317      	orrs	r7, r2
 8001a06:	0846      	lsrs	r6, r0, #1
 8001a08:	0752      	lsls	r2, r2, #29
 8001a0a:	d005      	beq.n	8001a18 <__aeabi_dadd+0x4b0>
 8001a0c:	220f      	movs	r2, #15
 8001a0e:	000c      	movs	r4, r1
 8001a10:	403a      	ands	r2, r7
 8001a12:	2a04      	cmp	r2, #4
 8001a14:	d000      	beq.n	8001a18 <__aeabi_dadd+0x4b0>
 8001a16:	e62c      	b.n	8001672 <__aeabi_dadd+0x10a>
 8001a18:	0776      	lsls	r6, r6, #29
 8001a1a:	08ff      	lsrs	r7, r7, #3
 8001a1c:	4337      	orrs	r7, r6
 8001a1e:	0900      	lsrs	r0, r0, #4
 8001a20:	e6d9      	b.n	80017d6 <__aeabi_dadd+0x26e>
 8001a22:	2700      	movs	r7, #0
 8001a24:	2600      	movs	r6, #0
 8001a26:	e6e8      	b.n	80017fa <__aeabi_dadd+0x292>
 8001a28:	4649      	mov	r1, r9
 8001a2a:	1a57      	subs	r7, r2, r1
 8001a2c:	42ba      	cmp	r2, r7
 8001a2e:	4192      	sbcs	r2, r2
 8001a30:	1b9e      	subs	r6, r3, r6
 8001a32:	4252      	negs	r2, r2
 8001a34:	4665      	mov	r5, ip
 8001a36:	1ab6      	subs	r6, r6, r2
 8001a38:	e5ed      	b.n	8001616 <__aeabi_dadd+0xae>
 8001a3a:	2900      	cmp	r1, #0
 8001a3c:	d000      	beq.n	8001a40 <__aeabi_dadd+0x4d8>
 8001a3e:	e0c6      	b.n	8001bce <__aeabi_dadd+0x666>
 8001a40:	2f00      	cmp	r7, #0
 8001a42:	d167      	bne.n	8001b14 <__aeabi_dadd+0x5ac>
 8001a44:	2680      	movs	r6, #128	@ 0x80
 8001a46:	2500      	movs	r5, #0
 8001a48:	4c7f      	ldr	r4, [pc, #508]	@ (8001c48 <__aeabi_dadd+0x6e0>)
 8001a4a:	0336      	lsls	r6, r6, #12
 8001a4c:	e6d5      	b.n	80017fa <__aeabi_dadd+0x292>
 8001a4e:	4665      	mov	r5, ip
 8001a50:	000c      	movs	r4, r1
 8001a52:	001e      	movs	r6, r3
 8001a54:	08d0      	lsrs	r0, r2, #3
 8001a56:	e6e4      	b.n	8001822 <__aeabi_dadd+0x2ba>
 8001a58:	444a      	add	r2, r9
 8001a5a:	454a      	cmp	r2, r9
 8001a5c:	4180      	sbcs	r0, r0
 8001a5e:	18f3      	adds	r3, r6, r3
 8001a60:	4240      	negs	r0, r0
 8001a62:	1818      	adds	r0, r3, r0
 8001a64:	0011      	movs	r1, r2
 8001a66:	0203      	lsls	r3, r0, #8
 8001a68:	d400      	bmi.n	8001a6c <__aeabi_dadd+0x504>
 8001a6a:	e096      	b.n	8001b9a <__aeabi_dadd+0x632>
 8001a6c:	4b77      	ldr	r3, [pc, #476]	@ (8001c4c <__aeabi_dadd+0x6e4>)
 8001a6e:	0849      	lsrs	r1, r1, #1
 8001a70:	4018      	ands	r0, r3
 8001a72:	07c3      	lsls	r3, r0, #31
 8001a74:	430b      	orrs	r3, r1
 8001a76:	0844      	lsrs	r4, r0, #1
 8001a78:	0749      	lsls	r1, r1, #29
 8001a7a:	d100      	bne.n	8001a7e <__aeabi_dadd+0x516>
 8001a7c:	e129      	b.n	8001cd2 <__aeabi_dadd+0x76a>
 8001a7e:	220f      	movs	r2, #15
 8001a80:	401a      	ands	r2, r3
 8001a82:	2a04      	cmp	r2, #4
 8001a84:	d100      	bne.n	8001a88 <__aeabi_dadd+0x520>
 8001a86:	e0ea      	b.n	8001c5e <__aeabi_dadd+0x6f6>
 8001a88:	1d1f      	adds	r7, r3, #4
 8001a8a:	429f      	cmp	r7, r3
 8001a8c:	41b6      	sbcs	r6, r6
 8001a8e:	4276      	negs	r6, r6
 8001a90:	1936      	adds	r6, r6, r4
 8001a92:	2402      	movs	r4, #2
 8001a94:	e6c4      	b.n	8001820 <__aeabi_dadd+0x2b8>
 8001a96:	4649      	mov	r1, r9
 8001a98:	1a8f      	subs	r7, r1, r2
 8001a9a:	45b9      	cmp	r9, r7
 8001a9c:	4180      	sbcs	r0, r0
 8001a9e:	1af6      	subs	r6, r6, r3
 8001aa0:	4240      	negs	r0, r0
 8001aa2:	1a36      	subs	r6, r6, r0
 8001aa4:	0233      	lsls	r3, r6, #8
 8001aa6:	d406      	bmi.n	8001ab6 <__aeabi_dadd+0x54e>
 8001aa8:	0773      	lsls	r3, r6, #29
 8001aaa:	08ff      	lsrs	r7, r7, #3
 8001aac:	2101      	movs	r1, #1
 8001aae:	431f      	orrs	r7, r3
 8001ab0:	08f0      	lsrs	r0, r6, #3
 8001ab2:	e690      	b.n	80017d6 <__aeabi_dadd+0x26e>
 8001ab4:	4665      	mov	r5, ip
 8001ab6:	2401      	movs	r4, #1
 8001ab8:	e5ab      	b.n	8001612 <__aeabi_dadd+0xaa>
 8001aba:	464b      	mov	r3, r9
 8001abc:	0777      	lsls	r7, r6, #29
 8001abe:	08d8      	lsrs	r0, r3, #3
 8001ac0:	4307      	orrs	r7, r0
 8001ac2:	08f0      	lsrs	r0, r6, #3
 8001ac4:	e6b4      	b.n	8001830 <__aeabi_dadd+0x2c8>
 8001ac6:	000f      	movs	r7, r1
 8001ac8:	0018      	movs	r0, r3
 8001aca:	3f20      	subs	r7, #32
 8001acc:	40f8      	lsrs	r0, r7
 8001ace:	4684      	mov	ip, r0
 8001ad0:	2920      	cmp	r1, #32
 8001ad2:	d003      	beq.n	8001adc <__aeabi_dadd+0x574>
 8001ad4:	2740      	movs	r7, #64	@ 0x40
 8001ad6:	1a79      	subs	r1, r7, r1
 8001ad8:	408b      	lsls	r3, r1
 8001ada:	431a      	orrs	r2, r3
 8001adc:	1e53      	subs	r3, r2, #1
 8001ade:	419a      	sbcs	r2, r3
 8001ae0:	4663      	mov	r3, ip
 8001ae2:	0017      	movs	r7, r2
 8001ae4:	431f      	orrs	r7, r3
 8001ae6:	e635      	b.n	8001754 <__aeabi_dadd+0x1ec>
 8001ae8:	2500      	movs	r5, #0
 8001aea:	2400      	movs	r4, #0
 8001aec:	2600      	movs	r6, #0
 8001aee:	e684      	b.n	80017fa <__aeabi_dadd+0x292>
 8001af0:	000c      	movs	r4, r1
 8001af2:	0035      	movs	r5, r6
 8001af4:	3c20      	subs	r4, #32
 8001af6:	40e5      	lsrs	r5, r4
 8001af8:	2920      	cmp	r1, #32
 8001afa:	d005      	beq.n	8001b08 <__aeabi_dadd+0x5a0>
 8001afc:	2440      	movs	r4, #64	@ 0x40
 8001afe:	1a61      	subs	r1, r4, r1
 8001b00:	408e      	lsls	r6, r1
 8001b02:	4649      	mov	r1, r9
 8001b04:	4331      	orrs	r1, r6
 8001b06:	4689      	mov	r9, r1
 8001b08:	4648      	mov	r0, r9
 8001b0a:	1e41      	subs	r1, r0, #1
 8001b0c:	4188      	sbcs	r0, r1
 8001b0e:	0007      	movs	r7, r0
 8001b10:	432f      	orrs	r7, r5
 8001b12:	e5ef      	b.n	80016f4 <__aeabi_dadd+0x18c>
 8001b14:	08d2      	lsrs	r2, r2, #3
 8001b16:	075f      	lsls	r7, r3, #29
 8001b18:	4665      	mov	r5, ip
 8001b1a:	4317      	orrs	r7, r2
 8001b1c:	08d8      	lsrs	r0, r3, #3
 8001b1e:	e687      	b.n	8001830 <__aeabi_dadd+0x2c8>
 8001b20:	1a17      	subs	r7, r2, r0
 8001b22:	42ba      	cmp	r2, r7
 8001b24:	4192      	sbcs	r2, r2
 8001b26:	1b9e      	subs	r6, r3, r6
 8001b28:	4252      	negs	r2, r2
 8001b2a:	1ab6      	subs	r6, r6, r2
 8001b2c:	0233      	lsls	r3, r6, #8
 8001b2e:	d4c1      	bmi.n	8001ab4 <__aeabi_dadd+0x54c>
 8001b30:	0773      	lsls	r3, r6, #29
 8001b32:	08ff      	lsrs	r7, r7, #3
 8001b34:	4665      	mov	r5, ip
 8001b36:	2101      	movs	r1, #1
 8001b38:	431f      	orrs	r7, r3
 8001b3a:	08f0      	lsrs	r0, r6, #3
 8001b3c:	e64b      	b.n	80017d6 <__aeabi_dadd+0x26e>
 8001b3e:	2f00      	cmp	r7, #0
 8001b40:	d07b      	beq.n	8001c3a <__aeabi_dadd+0x6d2>
 8001b42:	4665      	mov	r5, ip
 8001b44:	001e      	movs	r6, r3
 8001b46:	4691      	mov	r9, r2
 8001b48:	e63f      	b.n	80017ca <__aeabi_dadd+0x262>
 8001b4a:	1a81      	subs	r1, r0, r2
 8001b4c:	4688      	mov	r8, r1
 8001b4e:	45c1      	cmp	r9, r8
 8001b50:	41a4      	sbcs	r4, r4
 8001b52:	1af1      	subs	r1, r6, r3
 8001b54:	4264      	negs	r4, r4
 8001b56:	1b09      	subs	r1, r1, r4
 8001b58:	2480      	movs	r4, #128	@ 0x80
 8001b5a:	0424      	lsls	r4, r4, #16
 8001b5c:	4221      	tst	r1, r4
 8001b5e:	d077      	beq.n	8001c50 <__aeabi_dadd+0x6e8>
 8001b60:	1a10      	subs	r0, r2, r0
 8001b62:	4282      	cmp	r2, r0
 8001b64:	4192      	sbcs	r2, r2
 8001b66:	0007      	movs	r7, r0
 8001b68:	1b9e      	subs	r6, r3, r6
 8001b6a:	4252      	negs	r2, r2
 8001b6c:	1ab6      	subs	r6, r6, r2
 8001b6e:	4337      	orrs	r7, r6
 8001b70:	d000      	beq.n	8001b74 <__aeabi_dadd+0x60c>
 8001b72:	e0a0      	b.n	8001cb6 <__aeabi_dadd+0x74e>
 8001b74:	4665      	mov	r5, ip
 8001b76:	2400      	movs	r4, #0
 8001b78:	2600      	movs	r6, #0
 8001b7a:	e63e      	b.n	80017fa <__aeabi_dadd+0x292>
 8001b7c:	075f      	lsls	r7, r3, #29
 8001b7e:	08d2      	lsrs	r2, r2, #3
 8001b80:	4665      	mov	r5, ip
 8001b82:	4317      	orrs	r7, r2
 8001b84:	08d8      	lsrs	r0, r3, #3
 8001b86:	e653      	b.n	8001830 <__aeabi_dadd+0x2c8>
 8001b88:	1881      	adds	r1, r0, r2
 8001b8a:	4291      	cmp	r1, r2
 8001b8c:	4192      	sbcs	r2, r2
 8001b8e:	18f0      	adds	r0, r6, r3
 8001b90:	4252      	negs	r2, r2
 8001b92:	1880      	adds	r0, r0, r2
 8001b94:	0203      	lsls	r3, r0, #8
 8001b96:	d500      	bpl.n	8001b9a <__aeabi_dadd+0x632>
 8001b98:	e768      	b.n	8001a6c <__aeabi_dadd+0x504>
 8001b9a:	0747      	lsls	r7, r0, #29
 8001b9c:	08c9      	lsrs	r1, r1, #3
 8001b9e:	430f      	orrs	r7, r1
 8001ba0:	08c0      	lsrs	r0, r0, #3
 8001ba2:	2101      	movs	r1, #1
 8001ba4:	e617      	b.n	80017d6 <__aeabi_dadd+0x26e>
 8001ba6:	08d2      	lsrs	r2, r2, #3
 8001ba8:	075f      	lsls	r7, r3, #29
 8001baa:	4317      	orrs	r7, r2
 8001bac:	08d8      	lsrs	r0, r3, #3
 8001bae:	e63f      	b.n	8001830 <__aeabi_dadd+0x2c8>
 8001bb0:	000c      	movs	r4, r1
 8001bb2:	2600      	movs	r6, #0
 8001bb4:	2700      	movs	r7, #0
 8001bb6:	e620      	b.n	80017fa <__aeabi_dadd+0x292>
 8001bb8:	2900      	cmp	r1, #0
 8001bba:	d156      	bne.n	8001c6a <__aeabi_dadd+0x702>
 8001bbc:	075f      	lsls	r7, r3, #29
 8001bbe:	08d2      	lsrs	r2, r2, #3
 8001bc0:	4317      	orrs	r7, r2
 8001bc2:	08d8      	lsrs	r0, r3, #3
 8001bc4:	e634      	b.n	8001830 <__aeabi_dadd+0x2c8>
 8001bc6:	000c      	movs	r4, r1
 8001bc8:	001e      	movs	r6, r3
 8001bca:	08d0      	lsrs	r0, r2, #3
 8001bcc:	e629      	b.n	8001822 <__aeabi_dadd+0x2ba>
 8001bce:	08c1      	lsrs	r1, r0, #3
 8001bd0:	0770      	lsls	r0, r6, #29
 8001bd2:	4301      	orrs	r1, r0
 8001bd4:	08f0      	lsrs	r0, r6, #3
 8001bd6:	2f00      	cmp	r7, #0
 8001bd8:	d062      	beq.n	8001ca0 <__aeabi_dadd+0x738>
 8001bda:	2480      	movs	r4, #128	@ 0x80
 8001bdc:	0324      	lsls	r4, r4, #12
 8001bde:	4220      	tst	r0, r4
 8001be0:	d007      	beq.n	8001bf2 <__aeabi_dadd+0x68a>
 8001be2:	08de      	lsrs	r6, r3, #3
 8001be4:	4226      	tst	r6, r4
 8001be6:	d104      	bne.n	8001bf2 <__aeabi_dadd+0x68a>
 8001be8:	4665      	mov	r5, ip
 8001bea:	0030      	movs	r0, r6
 8001bec:	08d1      	lsrs	r1, r2, #3
 8001bee:	075b      	lsls	r3, r3, #29
 8001bf0:	4319      	orrs	r1, r3
 8001bf2:	0f4f      	lsrs	r7, r1, #29
 8001bf4:	00c9      	lsls	r1, r1, #3
 8001bf6:	08c9      	lsrs	r1, r1, #3
 8001bf8:	077f      	lsls	r7, r7, #29
 8001bfa:	430f      	orrs	r7, r1
 8001bfc:	e618      	b.n	8001830 <__aeabi_dadd+0x2c8>
 8001bfe:	000c      	movs	r4, r1
 8001c00:	0030      	movs	r0, r6
 8001c02:	3c20      	subs	r4, #32
 8001c04:	40e0      	lsrs	r0, r4
 8001c06:	4684      	mov	ip, r0
 8001c08:	2920      	cmp	r1, #32
 8001c0a:	d005      	beq.n	8001c18 <__aeabi_dadd+0x6b0>
 8001c0c:	2440      	movs	r4, #64	@ 0x40
 8001c0e:	1a61      	subs	r1, r4, r1
 8001c10:	408e      	lsls	r6, r1
 8001c12:	4649      	mov	r1, r9
 8001c14:	4331      	orrs	r1, r6
 8001c16:	4689      	mov	r9, r1
 8001c18:	4648      	mov	r0, r9
 8001c1a:	1e41      	subs	r1, r0, #1
 8001c1c:	4188      	sbcs	r0, r1
 8001c1e:	4661      	mov	r1, ip
 8001c20:	0007      	movs	r7, r0
 8001c22:	430f      	orrs	r7, r1
 8001c24:	e630      	b.n	8001888 <__aeabi_dadd+0x320>
 8001c26:	2120      	movs	r1, #32
 8001c28:	2700      	movs	r7, #0
 8001c2a:	1a09      	subs	r1, r1, r0
 8001c2c:	e50e      	b.n	800164c <__aeabi_dadd+0xe4>
 8001c2e:	001e      	movs	r6, r3
 8001c30:	2f00      	cmp	r7, #0
 8001c32:	d000      	beq.n	8001c36 <__aeabi_dadd+0x6ce>
 8001c34:	e522      	b.n	800167c <__aeabi_dadd+0x114>
 8001c36:	2400      	movs	r4, #0
 8001c38:	e758      	b.n	8001aec <__aeabi_dadd+0x584>
 8001c3a:	2500      	movs	r5, #0
 8001c3c:	2400      	movs	r4, #0
 8001c3e:	2600      	movs	r6, #0
 8001c40:	e5db      	b.n	80017fa <__aeabi_dadd+0x292>
 8001c42:	46c0      	nop			@ (mov r8, r8)
 8001c44:	000007fe 	.word	0x000007fe
 8001c48:	000007ff 	.word	0x000007ff
 8001c4c:	ff7fffff 	.word	0xff7fffff
 8001c50:	4647      	mov	r7, r8
 8001c52:	430f      	orrs	r7, r1
 8001c54:	d100      	bne.n	8001c58 <__aeabi_dadd+0x6f0>
 8001c56:	e747      	b.n	8001ae8 <__aeabi_dadd+0x580>
 8001c58:	000e      	movs	r6, r1
 8001c5a:	46c1      	mov	r9, r8
 8001c5c:	e5b5      	b.n	80017ca <__aeabi_dadd+0x262>
 8001c5e:	08df      	lsrs	r7, r3, #3
 8001c60:	0764      	lsls	r4, r4, #29
 8001c62:	2102      	movs	r1, #2
 8001c64:	4327      	orrs	r7, r4
 8001c66:	0900      	lsrs	r0, r0, #4
 8001c68:	e5b5      	b.n	80017d6 <__aeabi_dadd+0x26e>
 8001c6a:	0019      	movs	r1, r3
 8001c6c:	08c0      	lsrs	r0, r0, #3
 8001c6e:	0777      	lsls	r7, r6, #29
 8001c70:	4307      	orrs	r7, r0
 8001c72:	4311      	orrs	r1, r2
 8001c74:	08f0      	lsrs	r0, r6, #3
 8001c76:	2900      	cmp	r1, #0
 8001c78:	d100      	bne.n	8001c7c <__aeabi_dadd+0x714>
 8001c7a:	e5d9      	b.n	8001830 <__aeabi_dadd+0x2c8>
 8001c7c:	2180      	movs	r1, #128	@ 0x80
 8001c7e:	0309      	lsls	r1, r1, #12
 8001c80:	4208      	tst	r0, r1
 8001c82:	d007      	beq.n	8001c94 <__aeabi_dadd+0x72c>
 8001c84:	08dc      	lsrs	r4, r3, #3
 8001c86:	420c      	tst	r4, r1
 8001c88:	d104      	bne.n	8001c94 <__aeabi_dadd+0x72c>
 8001c8a:	08d2      	lsrs	r2, r2, #3
 8001c8c:	075b      	lsls	r3, r3, #29
 8001c8e:	431a      	orrs	r2, r3
 8001c90:	0017      	movs	r7, r2
 8001c92:	0020      	movs	r0, r4
 8001c94:	0f7b      	lsrs	r3, r7, #29
 8001c96:	00ff      	lsls	r7, r7, #3
 8001c98:	08ff      	lsrs	r7, r7, #3
 8001c9a:	075b      	lsls	r3, r3, #29
 8001c9c:	431f      	orrs	r7, r3
 8001c9e:	e5c7      	b.n	8001830 <__aeabi_dadd+0x2c8>
 8001ca0:	000f      	movs	r7, r1
 8001ca2:	e5c5      	b.n	8001830 <__aeabi_dadd+0x2c8>
 8001ca4:	4b12      	ldr	r3, [pc, #72]	@ (8001cf0 <__aeabi_dadd+0x788>)
 8001ca6:	08d2      	lsrs	r2, r2, #3
 8001ca8:	4033      	ands	r3, r6
 8001caa:	075f      	lsls	r7, r3, #29
 8001cac:	025b      	lsls	r3, r3, #9
 8001cae:	2401      	movs	r4, #1
 8001cb0:	4317      	orrs	r7, r2
 8001cb2:	0b1e      	lsrs	r6, r3, #12
 8001cb4:	e5a1      	b.n	80017fa <__aeabi_dadd+0x292>
 8001cb6:	4226      	tst	r6, r4
 8001cb8:	d012      	beq.n	8001ce0 <__aeabi_dadd+0x778>
 8001cba:	4b0d      	ldr	r3, [pc, #52]	@ (8001cf0 <__aeabi_dadd+0x788>)
 8001cbc:	4665      	mov	r5, ip
 8001cbe:	0002      	movs	r2, r0
 8001cc0:	2401      	movs	r4, #1
 8001cc2:	401e      	ands	r6, r3
 8001cc4:	e4e6      	b.n	8001694 <__aeabi_dadd+0x12c>
 8001cc6:	0021      	movs	r1, r4
 8001cc8:	e585      	b.n	80017d6 <__aeabi_dadd+0x26e>
 8001cca:	0017      	movs	r7, r2
 8001ccc:	e5a8      	b.n	8001820 <__aeabi_dadd+0x2b8>
 8001cce:	003a      	movs	r2, r7
 8001cd0:	e4d4      	b.n	800167c <__aeabi_dadd+0x114>
 8001cd2:	08db      	lsrs	r3, r3, #3
 8001cd4:	0764      	lsls	r4, r4, #29
 8001cd6:	431c      	orrs	r4, r3
 8001cd8:	0027      	movs	r7, r4
 8001cda:	2102      	movs	r1, #2
 8001cdc:	0900      	lsrs	r0, r0, #4
 8001cde:	e57a      	b.n	80017d6 <__aeabi_dadd+0x26e>
 8001ce0:	08c0      	lsrs	r0, r0, #3
 8001ce2:	0777      	lsls	r7, r6, #29
 8001ce4:	4307      	orrs	r7, r0
 8001ce6:	4665      	mov	r5, ip
 8001ce8:	2100      	movs	r1, #0
 8001cea:	08f0      	lsrs	r0, r6, #3
 8001cec:	e573      	b.n	80017d6 <__aeabi_dadd+0x26e>
 8001cee:	46c0      	nop			@ (mov r8, r8)
 8001cf0:	ff7fffff 	.word	0xff7fffff

08001cf4 <__aeabi_ddiv>:
 8001cf4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001cf6:	46de      	mov	lr, fp
 8001cf8:	4645      	mov	r5, r8
 8001cfa:	4657      	mov	r7, sl
 8001cfc:	464e      	mov	r6, r9
 8001cfe:	b5e0      	push	{r5, r6, r7, lr}
 8001d00:	b087      	sub	sp, #28
 8001d02:	9200      	str	r2, [sp, #0]
 8001d04:	9301      	str	r3, [sp, #4]
 8001d06:	030b      	lsls	r3, r1, #12
 8001d08:	0b1b      	lsrs	r3, r3, #12
 8001d0a:	469b      	mov	fp, r3
 8001d0c:	0fca      	lsrs	r2, r1, #31
 8001d0e:	004b      	lsls	r3, r1, #1
 8001d10:	0004      	movs	r4, r0
 8001d12:	4680      	mov	r8, r0
 8001d14:	0d5b      	lsrs	r3, r3, #21
 8001d16:	9202      	str	r2, [sp, #8]
 8001d18:	d100      	bne.n	8001d1c <__aeabi_ddiv+0x28>
 8001d1a:	e098      	b.n	8001e4e <__aeabi_ddiv+0x15a>
 8001d1c:	4a7c      	ldr	r2, [pc, #496]	@ (8001f10 <__aeabi_ddiv+0x21c>)
 8001d1e:	4293      	cmp	r3, r2
 8001d20:	d037      	beq.n	8001d92 <__aeabi_ddiv+0x9e>
 8001d22:	4659      	mov	r1, fp
 8001d24:	0f42      	lsrs	r2, r0, #29
 8001d26:	00c9      	lsls	r1, r1, #3
 8001d28:	430a      	orrs	r2, r1
 8001d2a:	2180      	movs	r1, #128	@ 0x80
 8001d2c:	0409      	lsls	r1, r1, #16
 8001d2e:	4311      	orrs	r1, r2
 8001d30:	00c2      	lsls	r2, r0, #3
 8001d32:	4690      	mov	r8, r2
 8001d34:	4a77      	ldr	r2, [pc, #476]	@ (8001f14 <__aeabi_ddiv+0x220>)
 8001d36:	4689      	mov	r9, r1
 8001d38:	4692      	mov	sl, r2
 8001d3a:	449a      	add	sl, r3
 8001d3c:	2300      	movs	r3, #0
 8001d3e:	2400      	movs	r4, #0
 8001d40:	9303      	str	r3, [sp, #12]
 8001d42:	9e00      	ldr	r6, [sp, #0]
 8001d44:	9f01      	ldr	r7, [sp, #4]
 8001d46:	033b      	lsls	r3, r7, #12
 8001d48:	0b1b      	lsrs	r3, r3, #12
 8001d4a:	469b      	mov	fp, r3
 8001d4c:	007b      	lsls	r3, r7, #1
 8001d4e:	0030      	movs	r0, r6
 8001d50:	0d5b      	lsrs	r3, r3, #21
 8001d52:	0ffd      	lsrs	r5, r7, #31
 8001d54:	2b00      	cmp	r3, #0
 8001d56:	d059      	beq.n	8001e0c <__aeabi_ddiv+0x118>
 8001d58:	4a6d      	ldr	r2, [pc, #436]	@ (8001f10 <__aeabi_ddiv+0x21c>)
 8001d5a:	4293      	cmp	r3, r2
 8001d5c:	d048      	beq.n	8001df0 <__aeabi_ddiv+0xfc>
 8001d5e:	4659      	mov	r1, fp
 8001d60:	0f72      	lsrs	r2, r6, #29
 8001d62:	00c9      	lsls	r1, r1, #3
 8001d64:	430a      	orrs	r2, r1
 8001d66:	2180      	movs	r1, #128	@ 0x80
 8001d68:	0409      	lsls	r1, r1, #16
 8001d6a:	4311      	orrs	r1, r2
 8001d6c:	468b      	mov	fp, r1
 8001d6e:	4969      	ldr	r1, [pc, #420]	@ (8001f14 <__aeabi_ddiv+0x220>)
 8001d70:	00f2      	lsls	r2, r6, #3
 8001d72:	468c      	mov	ip, r1
 8001d74:	4651      	mov	r1, sl
 8001d76:	4463      	add	r3, ip
 8001d78:	1acb      	subs	r3, r1, r3
 8001d7a:	469a      	mov	sl, r3
 8001d7c:	2100      	movs	r1, #0
 8001d7e:	9e02      	ldr	r6, [sp, #8]
 8001d80:	406e      	eors	r6, r5
 8001d82:	b2f6      	uxtb	r6, r6
 8001d84:	2c0f      	cmp	r4, #15
 8001d86:	d900      	bls.n	8001d8a <__aeabi_ddiv+0x96>
 8001d88:	e0ce      	b.n	8001f28 <__aeabi_ddiv+0x234>
 8001d8a:	4b63      	ldr	r3, [pc, #396]	@ (8001f18 <__aeabi_ddiv+0x224>)
 8001d8c:	00a4      	lsls	r4, r4, #2
 8001d8e:	591b      	ldr	r3, [r3, r4]
 8001d90:	469f      	mov	pc, r3
 8001d92:	465a      	mov	r2, fp
 8001d94:	4302      	orrs	r2, r0
 8001d96:	4691      	mov	r9, r2
 8001d98:	d000      	beq.n	8001d9c <__aeabi_ddiv+0xa8>
 8001d9a:	e090      	b.n	8001ebe <__aeabi_ddiv+0x1ca>
 8001d9c:	469a      	mov	sl, r3
 8001d9e:	2302      	movs	r3, #2
 8001da0:	4690      	mov	r8, r2
 8001da2:	2408      	movs	r4, #8
 8001da4:	9303      	str	r3, [sp, #12]
 8001da6:	e7cc      	b.n	8001d42 <__aeabi_ddiv+0x4e>
 8001da8:	46cb      	mov	fp, r9
 8001daa:	4642      	mov	r2, r8
 8001dac:	9d02      	ldr	r5, [sp, #8]
 8001dae:	9903      	ldr	r1, [sp, #12]
 8001db0:	2902      	cmp	r1, #2
 8001db2:	d100      	bne.n	8001db6 <__aeabi_ddiv+0xc2>
 8001db4:	e1de      	b.n	8002174 <__aeabi_ddiv+0x480>
 8001db6:	2903      	cmp	r1, #3
 8001db8:	d100      	bne.n	8001dbc <__aeabi_ddiv+0xc8>
 8001dba:	e08d      	b.n	8001ed8 <__aeabi_ddiv+0x1e4>
 8001dbc:	2901      	cmp	r1, #1
 8001dbe:	d000      	beq.n	8001dc2 <__aeabi_ddiv+0xce>
 8001dc0:	e179      	b.n	80020b6 <__aeabi_ddiv+0x3c2>
 8001dc2:	002e      	movs	r6, r5
 8001dc4:	2200      	movs	r2, #0
 8001dc6:	2300      	movs	r3, #0
 8001dc8:	2400      	movs	r4, #0
 8001dca:	4690      	mov	r8, r2
 8001dcc:	051b      	lsls	r3, r3, #20
 8001dce:	4323      	orrs	r3, r4
 8001dd0:	07f6      	lsls	r6, r6, #31
 8001dd2:	4333      	orrs	r3, r6
 8001dd4:	4640      	mov	r0, r8
 8001dd6:	0019      	movs	r1, r3
 8001dd8:	b007      	add	sp, #28
 8001dda:	bcf0      	pop	{r4, r5, r6, r7}
 8001ddc:	46bb      	mov	fp, r7
 8001dde:	46b2      	mov	sl, r6
 8001de0:	46a9      	mov	r9, r5
 8001de2:	46a0      	mov	r8, r4
 8001de4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001de6:	2200      	movs	r2, #0
 8001de8:	2400      	movs	r4, #0
 8001dea:	4690      	mov	r8, r2
 8001dec:	4b48      	ldr	r3, [pc, #288]	@ (8001f10 <__aeabi_ddiv+0x21c>)
 8001dee:	e7ed      	b.n	8001dcc <__aeabi_ddiv+0xd8>
 8001df0:	465a      	mov	r2, fp
 8001df2:	9b00      	ldr	r3, [sp, #0]
 8001df4:	431a      	orrs	r2, r3
 8001df6:	4b49      	ldr	r3, [pc, #292]	@ (8001f1c <__aeabi_ddiv+0x228>)
 8001df8:	469c      	mov	ip, r3
 8001dfa:	44e2      	add	sl, ip
 8001dfc:	2a00      	cmp	r2, #0
 8001dfe:	d159      	bne.n	8001eb4 <__aeabi_ddiv+0x1c0>
 8001e00:	2302      	movs	r3, #2
 8001e02:	431c      	orrs	r4, r3
 8001e04:	2300      	movs	r3, #0
 8001e06:	2102      	movs	r1, #2
 8001e08:	469b      	mov	fp, r3
 8001e0a:	e7b8      	b.n	8001d7e <__aeabi_ddiv+0x8a>
 8001e0c:	465a      	mov	r2, fp
 8001e0e:	9b00      	ldr	r3, [sp, #0]
 8001e10:	431a      	orrs	r2, r3
 8001e12:	d049      	beq.n	8001ea8 <__aeabi_ddiv+0x1b4>
 8001e14:	465b      	mov	r3, fp
 8001e16:	2b00      	cmp	r3, #0
 8001e18:	d100      	bne.n	8001e1c <__aeabi_ddiv+0x128>
 8001e1a:	e19c      	b.n	8002156 <__aeabi_ddiv+0x462>
 8001e1c:	4658      	mov	r0, fp
 8001e1e:	f001 fac9 	bl	80033b4 <__clzsi2>
 8001e22:	0002      	movs	r2, r0
 8001e24:	0003      	movs	r3, r0
 8001e26:	3a0b      	subs	r2, #11
 8001e28:	271d      	movs	r7, #29
 8001e2a:	9e00      	ldr	r6, [sp, #0]
 8001e2c:	1aba      	subs	r2, r7, r2
 8001e2e:	0019      	movs	r1, r3
 8001e30:	4658      	mov	r0, fp
 8001e32:	40d6      	lsrs	r6, r2
 8001e34:	3908      	subs	r1, #8
 8001e36:	4088      	lsls	r0, r1
 8001e38:	0032      	movs	r2, r6
 8001e3a:	4302      	orrs	r2, r0
 8001e3c:	4693      	mov	fp, r2
 8001e3e:	9a00      	ldr	r2, [sp, #0]
 8001e40:	408a      	lsls	r2, r1
 8001e42:	4937      	ldr	r1, [pc, #220]	@ (8001f20 <__aeabi_ddiv+0x22c>)
 8001e44:	4453      	add	r3, sl
 8001e46:	468a      	mov	sl, r1
 8001e48:	2100      	movs	r1, #0
 8001e4a:	449a      	add	sl, r3
 8001e4c:	e797      	b.n	8001d7e <__aeabi_ddiv+0x8a>
 8001e4e:	465b      	mov	r3, fp
 8001e50:	4303      	orrs	r3, r0
 8001e52:	4699      	mov	r9, r3
 8001e54:	d021      	beq.n	8001e9a <__aeabi_ddiv+0x1a6>
 8001e56:	465b      	mov	r3, fp
 8001e58:	2b00      	cmp	r3, #0
 8001e5a:	d100      	bne.n	8001e5e <__aeabi_ddiv+0x16a>
 8001e5c:	e169      	b.n	8002132 <__aeabi_ddiv+0x43e>
 8001e5e:	4658      	mov	r0, fp
 8001e60:	f001 faa8 	bl	80033b4 <__clzsi2>
 8001e64:	230b      	movs	r3, #11
 8001e66:	425b      	negs	r3, r3
 8001e68:	469c      	mov	ip, r3
 8001e6a:	0002      	movs	r2, r0
 8001e6c:	4484      	add	ip, r0
 8001e6e:	4666      	mov	r6, ip
 8001e70:	231d      	movs	r3, #29
 8001e72:	1b9b      	subs	r3, r3, r6
 8001e74:	0026      	movs	r6, r4
 8001e76:	0011      	movs	r1, r2
 8001e78:	4658      	mov	r0, fp
 8001e7a:	40de      	lsrs	r6, r3
 8001e7c:	3908      	subs	r1, #8
 8001e7e:	4088      	lsls	r0, r1
 8001e80:	0033      	movs	r3, r6
 8001e82:	4303      	orrs	r3, r0
 8001e84:	4699      	mov	r9, r3
 8001e86:	0023      	movs	r3, r4
 8001e88:	408b      	lsls	r3, r1
 8001e8a:	4698      	mov	r8, r3
 8001e8c:	4b25      	ldr	r3, [pc, #148]	@ (8001f24 <__aeabi_ddiv+0x230>)
 8001e8e:	2400      	movs	r4, #0
 8001e90:	1a9b      	subs	r3, r3, r2
 8001e92:	469a      	mov	sl, r3
 8001e94:	2300      	movs	r3, #0
 8001e96:	9303      	str	r3, [sp, #12]
 8001e98:	e753      	b.n	8001d42 <__aeabi_ddiv+0x4e>
 8001e9a:	2300      	movs	r3, #0
 8001e9c:	4698      	mov	r8, r3
 8001e9e:	469a      	mov	sl, r3
 8001ea0:	3301      	adds	r3, #1
 8001ea2:	2404      	movs	r4, #4
 8001ea4:	9303      	str	r3, [sp, #12]
 8001ea6:	e74c      	b.n	8001d42 <__aeabi_ddiv+0x4e>
 8001ea8:	2301      	movs	r3, #1
 8001eaa:	431c      	orrs	r4, r3
 8001eac:	2300      	movs	r3, #0
 8001eae:	2101      	movs	r1, #1
 8001eb0:	469b      	mov	fp, r3
 8001eb2:	e764      	b.n	8001d7e <__aeabi_ddiv+0x8a>
 8001eb4:	2303      	movs	r3, #3
 8001eb6:	0032      	movs	r2, r6
 8001eb8:	2103      	movs	r1, #3
 8001eba:	431c      	orrs	r4, r3
 8001ebc:	e75f      	b.n	8001d7e <__aeabi_ddiv+0x8a>
 8001ebe:	469a      	mov	sl, r3
 8001ec0:	2303      	movs	r3, #3
 8001ec2:	46d9      	mov	r9, fp
 8001ec4:	240c      	movs	r4, #12
 8001ec6:	9303      	str	r3, [sp, #12]
 8001ec8:	e73b      	b.n	8001d42 <__aeabi_ddiv+0x4e>
 8001eca:	2300      	movs	r3, #0
 8001ecc:	2480      	movs	r4, #128	@ 0x80
 8001ece:	4698      	mov	r8, r3
 8001ed0:	2600      	movs	r6, #0
 8001ed2:	4b0f      	ldr	r3, [pc, #60]	@ (8001f10 <__aeabi_ddiv+0x21c>)
 8001ed4:	0324      	lsls	r4, r4, #12
 8001ed6:	e779      	b.n	8001dcc <__aeabi_ddiv+0xd8>
 8001ed8:	2480      	movs	r4, #128	@ 0x80
 8001eda:	465b      	mov	r3, fp
 8001edc:	0324      	lsls	r4, r4, #12
 8001ede:	431c      	orrs	r4, r3
 8001ee0:	0324      	lsls	r4, r4, #12
 8001ee2:	002e      	movs	r6, r5
 8001ee4:	4690      	mov	r8, r2
 8001ee6:	4b0a      	ldr	r3, [pc, #40]	@ (8001f10 <__aeabi_ddiv+0x21c>)
 8001ee8:	0b24      	lsrs	r4, r4, #12
 8001eea:	e76f      	b.n	8001dcc <__aeabi_ddiv+0xd8>
 8001eec:	2480      	movs	r4, #128	@ 0x80
 8001eee:	464b      	mov	r3, r9
 8001ef0:	0324      	lsls	r4, r4, #12
 8001ef2:	4223      	tst	r3, r4
 8001ef4:	d002      	beq.n	8001efc <__aeabi_ddiv+0x208>
 8001ef6:	465b      	mov	r3, fp
 8001ef8:	4223      	tst	r3, r4
 8001efa:	d0f0      	beq.n	8001ede <__aeabi_ddiv+0x1ea>
 8001efc:	2480      	movs	r4, #128	@ 0x80
 8001efe:	464b      	mov	r3, r9
 8001f00:	0324      	lsls	r4, r4, #12
 8001f02:	431c      	orrs	r4, r3
 8001f04:	0324      	lsls	r4, r4, #12
 8001f06:	9e02      	ldr	r6, [sp, #8]
 8001f08:	4b01      	ldr	r3, [pc, #4]	@ (8001f10 <__aeabi_ddiv+0x21c>)
 8001f0a:	0b24      	lsrs	r4, r4, #12
 8001f0c:	e75e      	b.n	8001dcc <__aeabi_ddiv+0xd8>
 8001f0e:	46c0      	nop			@ (mov r8, r8)
 8001f10:	000007ff 	.word	0x000007ff
 8001f14:	fffffc01 	.word	0xfffffc01
 8001f18:	0800c2a8 	.word	0x0800c2a8
 8001f1c:	fffff801 	.word	0xfffff801
 8001f20:	000003f3 	.word	0x000003f3
 8001f24:	fffffc0d 	.word	0xfffffc0d
 8001f28:	45cb      	cmp	fp, r9
 8001f2a:	d200      	bcs.n	8001f2e <__aeabi_ddiv+0x23a>
 8001f2c:	e0f8      	b.n	8002120 <__aeabi_ddiv+0x42c>
 8001f2e:	d100      	bne.n	8001f32 <__aeabi_ddiv+0x23e>
 8001f30:	e0f3      	b.n	800211a <__aeabi_ddiv+0x426>
 8001f32:	2301      	movs	r3, #1
 8001f34:	425b      	negs	r3, r3
 8001f36:	469c      	mov	ip, r3
 8001f38:	4644      	mov	r4, r8
 8001f3a:	4648      	mov	r0, r9
 8001f3c:	2500      	movs	r5, #0
 8001f3e:	44e2      	add	sl, ip
 8001f40:	465b      	mov	r3, fp
 8001f42:	0e17      	lsrs	r7, r2, #24
 8001f44:	021b      	lsls	r3, r3, #8
 8001f46:	431f      	orrs	r7, r3
 8001f48:	0c19      	lsrs	r1, r3, #16
 8001f4a:	043b      	lsls	r3, r7, #16
 8001f4c:	0212      	lsls	r2, r2, #8
 8001f4e:	9700      	str	r7, [sp, #0]
 8001f50:	0c1f      	lsrs	r7, r3, #16
 8001f52:	4691      	mov	r9, r2
 8001f54:	9102      	str	r1, [sp, #8]
 8001f56:	9703      	str	r7, [sp, #12]
 8001f58:	f7fe f95c 	bl	8000214 <__aeabi_uidivmod>
 8001f5c:	0002      	movs	r2, r0
 8001f5e:	437a      	muls	r2, r7
 8001f60:	040b      	lsls	r3, r1, #16
 8001f62:	0c21      	lsrs	r1, r4, #16
 8001f64:	4680      	mov	r8, r0
 8001f66:	4319      	orrs	r1, r3
 8001f68:	428a      	cmp	r2, r1
 8001f6a:	d909      	bls.n	8001f80 <__aeabi_ddiv+0x28c>
 8001f6c:	9f00      	ldr	r7, [sp, #0]
 8001f6e:	2301      	movs	r3, #1
 8001f70:	46bc      	mov	ip, r7
 8001f72:	425b      	negs	r3, r3
 8001f74:	4461      	add	r1, ip
 8001f76:	469c      	mov	ip, r3
 8001f78:	44e0      	add	r8, ip
 8001f7a:	428f      	cmp	r7, r1
 8001f7c:	d800      	bhi.n	8001f80 <__aeabi_ddiv+0x28c>
 8001f7e:	e15c      	b.n	800223a <__aeabi_ddiv+0x546>
 8001f80:	1a88      	subs	r0, r1, r2
 8001f82:	9902      	ldr	r1, [sp, #8]
 8001f84:	f7fe f946 	bl	8000214 <__aeabi_uidivmod>
 8001f88:	9a03      	ldr	r2, [sp, #12]
 8001f8a:	0424      	lsls	r4, r4, #16
 8001f8c:	4342      	muls	r2, r0
 8001f8e:	0409      	lsls	r1, r1, #16
 8001f90:	0c24      	lsrs	r4, r4, #16
 8001f92:	0003      	movs	r3, r0
 8001f94:	430c      	orrs	r4, r1
 8001f96:	42a2      	cmp	r2, r4
 8001f98:	d906      	bls.n	8001fa8 <__aeabi_ddiv+0x2b4>
 8001f9a:	9900      	ldr	r1, [sp, #0]
 8001f9c:	3b01      	subs	r3, #1
 8001f9e:	468c      	mov	ip, r1
 8001fa0:	4464      	add	r4, ip
 8001fa2:	42a1      	cmp	r1, r4
 8001fa4:	d800      	bhi.n	8001fa8 <__aeabi_ddiv+0x2b4>
 8001fa6:	e142      	b.n	800222e <__aeabi_ddiv+0x53a>
 8001fa8:	1aa0      	subs	r0, r4, r2
 8001faa:	4642      	mov	r2, r8
 8001fac:	0412      	lsls	r2, r2, #16
 8001fae:	431a      	orrs	r2, r3
 8001fb0:	4693      	mov	fp, r2
 8001fb2:	464b      	mov	r3, r9
 8001fb4:	4659      	mov	r1, fp
 8001fb6:	0c1b      	lsrs	r3, r3, #16
 8001fb8:	001f      	movs	r7, r3
 8001fba:	9304      	str	r3, [sp, #16]
 8001fbc:	040b      	lsls	r3, r1, #16
 8001fbe:	4649      	mov	r1, r9
 8001fc0:	0409      	lsls	r1, r1, #16
 8001fc2:	0c09      	lsrs	r1, r1, #16
 8001fc4:	000c      	movs	r4, r1
 8001fc6:	0c1b      	lsrs	r3, r3, #16
 8001fc8:	435c      	muls	r4, r3
 8001fca:	0c12      	lsrs	r2, r2, #16
 8001fcc:	437b      	muls	r3, r7
 8001fce:	4688      	mov	r8, r1
 8001fd0:	4351      	muls	r1, r2
 8001fd2:	437a      	muls	r2, r7
 8001fd4:	0c27      	lsrs	r7, r4, #16
 8001fd6:	46bc      	mov	ip, r7
 8001fd8:	185b      	adds	r3, r3, r1
 8001fda:	4463      	add	r3, ip
 8001fdc:	4299      	cmp	r1, r3
 8001fde:	d903      	bls.n	8001fe8 <__aeabi_ddiv+0x2f4>
 8001fe0:	2180      	movs	r1, #128	@ 0x80
 8001fe2:	0249      	lsls	r1, r1, #9
 8001fe4:	468c      	mov	ip, r1
 8001fe6:	4462      	add	r2, ip
 8001fe8:	0c19      	lsrs	r1, r3, #16
 8001fea:	0424      	lsls	r4, r4, #16
 8001fec:	041b      	lsls	r3, r3, #16
 8001fee:	0c24      	lsrs	r4, r4, #16
 8001ff0:	188a      	adds	r2, r1, r2
 8001ff2:	191c      	adds	r4, r3, r4
 8001ff4:	4290      	cmp	r0, r2
 8001ff6:	d302      	bcc.n	8001ffe <__aeabi_ddiv+0x30a>
 8001ff8:	d116      	bne.n	8002028 <__aeabi_ddiv+0x334>
 8001ffa:	42a5      	cmp	r5, r4
 8001ffc:	d214      	bcs.n	8002028 <__aeabi_ddiv+0x334>
 8001ffe:	465b      	mov	r3, fp
 8002000:	9f00      	ldr	r7, [sp, #0]
 8002002:	3b01      	subs	r3, #1
 8002004:	444d      	add	r5, r9
 8002006:	9305      	str	r3, [sp, #20]
 8002008:	454d      	cmp	r5, r9
 800200a:	419b      	sbcs	r3, r3
 800200c:	46bc      	mov	ip, r7
 800200e:	425b      	negs	r3, r3
 8002010:	4463      	add	r3, ip
 8002012:	18c0      	adds	r0, r0, r3
 8002014:	4287      	cmp	r7, r0
 8002016:	d300      	bcc.n	800201a <__aeabi_ddiv+0x326>
 8002018:	e102      	b.n	8002220 <__aeabi_ddiv+0x52c>
 800201a:	4282      	cmp	r2, r0
 800201c:	d900      	bls.n	8002020 <__aeabi_ddiv+0x32c>
 800201e:	e129      	b.n	8002274 <__aeabi_ddiv+0x580>
 8002020:	d100      	bne.n	8002024 <__aeabi_ddiv+0x330>
 8002022:	e124      	b.n	800226e <__aeabi_ddiv+0x57a>
 8002024:	9b05      	ldr	r3, [sp, #20]
 8002026:	469b      	mov	fp, r3
 8002028:	1b2c      	subs	r4, r5, r4
 800202a:	42a5      	cmp	r5, r4
 800202c:	41ad      	sbcs	r5, r5
 800202e:	9b00      	ldr	r3, [sp, #0]
 8002030:	1a80      	subs	r0, r0, r2
 8002032:	426d      	negs	r5, r5
 8002034:	1b40      	subs	r0, r0, r5
 8002036:	4283      	cmp	r3, r0
 8002038:	d100      	bne.n	800203c <__aeabi_ddiv+0x348>
 800203a:	e10f      	b.n	800225c <__aeabi_ddiv+0x568>
 800203c:	9902      	ldr	r1, [sp, #8]
 800203e:	f7fe f8e9 	bl	8000214 <__aeabi_uidivmod>
 8002042:	9a03      	ldr	r2, [sp, #12]
 8002044:	040b      	lsls	r3, r1, #16
 8002046:	4342      	muls	r2, r0
 8002048:	0c21      	lsrs	r1, r4, #16
 800204a:	0005      	movs	r5, r0
 800204c:	4319      	orrs	r1, r3
 800204e:	428a      	cmp	r2, r1
 8002050:	d900      	bls.n	8002054 <__aeabi_ddiv+0x360>
 8002052:	e0cb      	b.n	80021ec <__aeabi_ddiv+0x4f8>
 8002054:	1a88      	subs	r0, r1, r2
 8002056:	9902      	ldr	r1, [sp, #8]
 8002058:	f7fe f8dc 	bl	8000214 <__aeabi_uidivmod>
 800205c:	9a03      	ldr	r2, [sp, #12]
 800205e:	0424      	lsls	r4, r4, #16
 8002060:	4342      	muls	r2, r0
 8002062:	0409      	lsls	r1, r1, #16
 8002064:	0c24      	lsrs	r4, r4, #16
 8002066:	0003      	movs	r3, r0
 8002068:	430c      	orrs	r4, r1
 800206a:	42a2      	cmp	r2, r4
 800206c:	d900      	bls.n	8002070 <__aeabi_ddiv+0x37c>
 800206e:	e0ca      	b.n	8002206 <__aeabi_ddiv+0x512>
 8002070:	4641      	mov	r1, r8
 8002072:	1aa4      	subs	r4, r4, r2
 8002074:	042a      	lsls	r2, r5, #16
 8002076:	431a      	orrs	r2, r3
 8002078:	9f04      	ldr	r7, [sp, #16]
 800207a:	0413      	lsls	r3, r2, #16
 800207c:	0c1b      	lsrs	r3, r3, #16
 800207e:	4359      	muls	r1, r3
 8002080:	4640      	mov	r0, r8
 8002082:	437b      	muls	r3, r7
 8002084:	469c      	mov	ip, r3
 8002086:	0c15      	lsrs	r5, r2, #16
 8002088:	4368      	muls	r0, r5
 800208a:	0c0b      	lsrs	r3, r1, #16
 800208c:	4484      	add	ip, r0
 800208e:	4463      	add	r3, ip
 8002090:	437d      	muls	r5, r7
 8002092:	4298      	cmp	r0, r3
 8002094:	d903      	bls.n	800209e <__aeabi_ddiv+0x3aa>
 8002096:	2080      	movs	r0, #128	@ 0x80
 8002098:	0240      	lsls	r0, r0, #9
 800209a:	4684      	mov	ip, r0
 800209c:	4465      	add	r5, ip
 800209e:	0c18      	lsrs	r0, r3, #16
 80020a0:	0409      	lsls	r1, r1, #16
 80020a2:	041b      	lsls	r3, r3, #16
 80020a4:	0c09      	lsrs	r1, r1, #16
 80020a6:	1940      	adds	r0, r0, r5
 80020a8:	185b      	adds	r3, r3, r1
 80020aa:	4284      	cmp	r4, r0
 80020ac:	d327      	bcc.n	80020fe <__aeabi_ddiv+0x40a>
 80020ae:	d023      	beq.n	80020f8 <__aeabi_ddiv+0x404>
 80020b0:	2301      	movs	r3, #1
 80020b2:	0035      	movs	r5, r6
 80020b4:	431a      	orrs	r2, r3
 80020b6:	4b94      	ldr	r3, [pc, #592]	@ (8002308 <__aeabi_ddiv+0x614>)
 80020b8:	4453      	add	r3, sl
 80020ba:	2b00      	cmp	r3, #0
 80020bc:	dd60      	ble.n	8002180 <__aeabi_ddiv+0x48c>
 80020be:	0751      	lsls	r1, r2, #29
 80020c0:	d000      	beq.n	80020c4 <__aeabi_ddiv+0x3d0>
 80020c2:	e086      	b.n	80021d2 <__aeabi_ddiv+0x4de>
 80020c4:	002e      	movs	r6, r5
 80020c6:	08d1      	lsrs	r1, r2, #3
 80020c8:	465a      	mov	r2, fp
 80020ca:	01d2      	lsls	r2, r2, #7
 80020cc:	d506      	bpl.n	80020dc <__aeabi_ddiv+0x3e8>
 80020ce:	465a      	mov	r2, fp
 80020d0:	4b8e      	ldr	r3, [pc, #568]	@ (800230c <__aeabi_ddiv+0x618>)
 80020d2:	401a      	ands	r2, r3
 80020d4:	2380      	movs	r3, #128	@ 0x80
 80020d6:	4693      	mov	fp, r2
 80020d8:	00db      	lsls	r3, r3, #3
 80020da:	4453      	add	r3, sl
 80020dc:	4a8c      	ldr	r2, [pc, #560]	@ (8002310 <__aeabi_ddiv+0x61c>)
 80020de:	4293      	cmp	r3, r2
 80020e0:	dd00      	ble.n	80020e4 <__aeabi_ddiv+0x3f0>
 80020e2:	e680      	b.n	8001de6 <__aeabi_ddiv+0xf2>
 80020e4:	465a      	mov	r2, fp
 80020e6:	0752      	lsls	r2, r2, #29
 80020e8:	430a      	orrs	r2, r1
 80020ea:	4690      	mov	r8, r2
 80020ec:	465a      	mov	r2, fp
 80020ee:	055b      	lsls	r3, r3, #21
 80020f0:	0254      	lsls	r4, r2, #9
 80020f2:	0b24      	lsrs	r4, r4, #12
 80020f4:	0d5b      	lsrs	r3, r3, #21
 80020f6:	e669      	b.n	8001dcc <__aeabi_ddiv+0xd8>
 80020f8:	0035      	movs	r5, r6
 80020fa:	2b00      	cmp	r3, #0
 80020fc:	d0db      	beq.n	80020b6 <__aeabi_ddiv+0x3c2>
 80020fe:	9d00      	ldr	r5, [sp, #0]
 8002100:	1e51      	subs	r1, r2, #1
 8002102:	46ac      	mov	ip, r5
 8002104:	4464      	add	r4, ip
 8002106:	42ac      	cmp	r4, r5
 8002108:	d200      	bcs.n	800210c <__aeabi_ddiv+0x418>
 800210a:	e09e      	b.n	800224a <__aeabi_ddiv+0x556>
 800210c:	4284      	cmp	r4, r0
 800210e:	d200      	bcs.n	8002112 <__aeabi_ddiv+0x41e>
 8002110:	e0e1      	b.n	80022d6 <__aeabi_ddiv+0x5e2>
 8002112:	d100      	bne.n	8002116 <__aeabi_ddiv+0x422>
 8002114:	e0ee      	b.n	80022f4 <__aeabi_ddiv+0x600>
 8002116:	000a      	movs	r2, r1
 8002118:	e7ca      	b.n	80020b0 <__aeabi_ddiv+0x3bc>
 800211a:	4542      	cmp	r2, r8
 800211c:	d900      	bls.n	8002120 <__aeabi_ddiv+0x42c>
 800211e:	e708      	b.n	8001f32 <__aeabi_ddiv+0x23e>
 8002120:	464b      	mov	r3, r9
 8002122:	07dc      	lsls	r4, r3, #31
 8002124:	0858      	lsrs	r0, r3, #1
 8002126:	4643      	mov	r3, r8
 8002128:	085b      	lsrs	r3, r3, #1
 800212a:	431c      	orrs	r4, r3
 800212c:	4643      	mov	r3, r8
 800212e:	07dd      	lsls	r5, r3, #31
 8002130:	e706      	b.n	8001f40 <__aeabi_ddiv+0x24c>
 8002132:	f001 f93f 	bl	80033b4 <__clzsi2>
 8002136:	2315      	movs	r3, #21
 8002138:	469c      	mov	ip, r3
 800213a:	4484      	add	ip, r0
 800213c:	0002      	movs	r2, r0
 800213e:	4663      	mov	r3, ip
 8002140:	3220      	adds	r2, #32
 8002142:	2b1c      	cmp	r3, #28
 8002144:	dc00      	bgt.n	8002148 <__aeabi_ddiv+0x454>
 8002146:	e692      	b.n	8001e6e <__aeabi_ddiv+0x17a>
 8002148:	0023      	movs	r3, r4
 800214a:	3808      	subs	r0, #8
 800214c:	4083      	lsls	r3, r0
 800214e:	4699      	mov	r9, r3
 8002150:	2300      	movs	r3, #0
 8002152:	4698      	mov	r8, r3
 8002154:	e69a      	b.n	8001e8c <__aeabi_ddiv+0x198>
 8002156:	f001 f92d 	bl	80033b4 <__clzsi2>
 800215a:	0002      	movs	r2, r0
 800215c:	0003      	movs	r3, r0
 800215e:	3215      	adds	r2, #21
 8002160:	3320      	adds	r3, #32
 8002162:	2a1c      	cmp	r2, #28
 8002164:	dc00      	bgt.n	8002168 <__aeabi_ddiv+0x474>
 8002166:	e65f      	b.n	8001e28 <__aeabi_ddiv+0x134>
 8002168:	9900      	ldr	r1, [sp, #0]
 800216a:	3808      	subs	r0, #8
 800216c:	4081      	lsls	r1, r0
 800216e:	2200      	movs	r2, #0
 8002170:	468b      	mov	fp, r1
 8002172:	e666      	b.n	8001e42 <__aeabi_ddiv+0x14e>
 8002174:	2200      	movs	r2, #0
 8002176:	002e      	movs	r6, r5
 8002178:	2400      	movs	r4, #0
 800217a:	4690      	mov	r8, r2
 800217c:	4b65      	ldr	r3, [pc, #404]	@ (8002314 <__aeabi_ddiv+0x620>)
 800217e:	e625      	b.n	8001dcc <__aeabi_ddiv+0xd8>
 8002180:	002e      	movs	r6, r5
 8002182:	2101      	movs	r1, #1
 8002184:	1ac9      	subs	r1, r1, r3
 8002186:	2938      	cmp	r1, #56	@ 0x38
 8002188:	dd00      	ble.n	800218c <__aeabi_ddiv+0x498>
 800218a:	e61b      	b.n	8001dc4 <__aeabi_ddiv+0xd0>
 800218c:	291f      	cmp	r1, #31
 800218e:	dc7e      	bgt.n	800228e <__aeabi_ddiv+0x59a>
 8002190:	4861      	ldr	r0, [pc, #388]	@ (8002318 <__aeabi_ddiv+0x624>)
 8002192:	0014      	movs	r4, r2
 8002194:	4450      	add	r0, sl
 8002196:	465b      	mov	r3, fp
 8002198:	4082      	lsls	r2, r0
 800219a:	4083      	lsls	r3, r0
 800219c:	40cc      	lsrs	r4, r1
 800219e:	1e50      	subs	r0, r2, #1
 80021a0:	4182      	sbcs	r2, r0
 80021a2:	4323      	orrs	r3, r4
 80021a4:	431a      	orrs	r2, r3
 80021a6:	465b      	mov	r3, fp
 80021a8:	40cb      	lsrs	r3, r1
 80021aa:	0751      	lsls	r1, r2, #29
 80021ac:	d009      	beq.n	80021c2 <__aeabi_ddiv+0x4ce>
 80021ae:	210f      	movs	r1, #15
 80021b0:	4011      	ands	r1, r2
 80021b2:	2904      	cmp	r1, #4
 80021b4:	d005      	beq.n	80021c2 <__aeabi_ddiv+0x4ce>
 80021b6:	1d11      	adds	r1, r2, #4
 80021b8:	4291      	cmp	r1, r2
 80021ba:	4192      	sbcs	r2, r2
 80021bc:	4252      	negs	r2, r2
 80021be:	189b      	adds	r3, r3, r2
 80021c0:	000a      	movs	r2, r1
 80021c2:	0219      	lsls	r1, r3, #8
 80021c4:	d400      	bmi.n	80021c8 <__aeabi_ddiv+0x4d4>
 80021c6:	e09b      	b.n	8002300 <__aeabi_ddiv+0x60c>
 80021c8:	2200      	movs	r2, #0
 80021ca:	2301      	movs	r3, #1
 80021cc:	2400      	movs	r4, #0
 80021ce:	4690      	mov	r8, r2
 80021d0:	e5fc      	b.n	8001dcc <__aeabi_ddiv+0xd8>
 80021d2:	210f      	movs	r1, #15
 80021d4:	4011      	ands	r1, r2
 80021d6:	2904      	cmp	r1, #4
 80021d8:	d100      	bne.n	80021dc <__aeabi_ddiv+0x4e8>
 80021da:	e773      	b.n	80020c4 <__aeabi_ddiv+0x3d0>
 80021dc:	1d11      	adds	r1, r2, #4
 80021de:	4291      	cmp	r1, r2
 80021e0:	4192      	sbcs	r2, r2
 80021e2:	4252      	negs	r2, r2
 80021e4:	002e      	movs	r6, r5
 80021e6:	08c9      	lsrs	r1, r1, #3
 80021e8:	4493      	add	fp, r2
 80021ea:	e76d      	b.n	80020c8 <__aeabi_ddiv+0x3d4>
 80021ec:	9b00      	ldr	r3, [sp, #0]
 80021ee:	3d01      	subs	r5, #1
 80021f0:	469c      	mov	ip, r3
 80021f2:	4461      	add	r1, ip
 80021f4:	428b      	cmp	r3, r1
 80021f6:	d900      	bls.n	80021fa <__aeabi_ddiv+0x506>
 80021f8:	e72c      	b.n	8002054 <__aeabi_ddiv+0x360>
 80021fa:	428a      	cmp	r2, r1
 80021fc:	d800      	bhi.n	8002200 <__aeabi_ddiv+0x50c>
 80021fe:	e729      	b.n	8002054 <__aeabi_ddiv+0x360>
 8002200:	1e85      	subs	r5, r0, #2
 8002202:	4461      	add	r1, ip
 8002204:	e726      	b.n	8002054 <__aeabi_ddiv+0x360>
 8002206:	9900      	ldr	r1, [sp, #0]
 8002208:	3b01      	subs	r3, #1
 800220a:	468c      	mov	ip, r1
 800220c:	4464      	add	r4, ip
 800220e:	42a1      	cmp	r1, r4
 8002210:	d900      	bls.n	8002214 <__aeabi_ddiv+0x520>
 8002212:	e72d      	b.n	8002070 <__aeabi_ddiv+0x37c>
 8002214:	42a2      	cmp	r2, r4
 8002216:	d800      	bhi.n	800221a <__aeabi_ddiv+0x526>
 8002218:	e72a      	b.n	8002070 <__aeabi_ddiv+0x37c>
 800221a:	1e83      	subs	r3, r0, #2
 800221c:	4464      	add	r4, ip
 800221e:	e727      	b.n	8002070 <__aeabi_ddiv+0x37c>
 8002220:	4287      	cmp	r7, r0
 8002222:	d000      	beq.n	8002226 <__aeabi_ddiv+0x532>
 8002224:	e6fe      	b.n	8002024 <__aeabi_ddiv+0x330>
 8002226:	45a9      	cmp	r9, r5
 8002228:	d900      	bls.n	800222c <__aeabi_ddiv+0x538>
 800222a:	e6fb      	b.n	8002024 <__aeabi_ddiv+0x330>
 800222c:	e6f5      	b.n	800201a <__aeabi_ddiv+0x326>
 800222e:	42a2      	cmp	r2, r4
 8002230:	d800      	bhi.n	8002234 <__aeabi_ddiv+0x540>
 8002232:	e6b9      	b.n	8001fa8 <__aeabi_ddiv+0x2b4>
 8002234:	1e83      	subs	r3, r0, #2
 8002236:	4464      	add	r4, ip
 8002238:	e6b6      	b.n	8001fa8 <__aeabi_ddiv+0x2b4>
 800223a:	428a      	cmp	r2, r1
 800223c:	d800      	bhi.n	8002240 <__aeabi_ddiv+0x54c>
 800223e:	e69f      	b.n	8001f80 <__aeabi_ddiv+0x28c>
 8002240:	46bc      	mov	ip, r7
 8002242:	1e83      	subs	r3, r0, #2
 8002244:	4698      	mov	r8, r3
 8002246:	4461      	add	r1, ip
 8002248:	e69a      	b.n	8001f80 <__aeabi_ddiv+0x28c>
 800224a:	000a      	movs	r2, r1
 800224c:	4284      	cmp	r4, r0
 800224e:	d000      	beq.n	8002252 <__aeabi_ddiv+0x55e>
 8002250:	e72e      	b.n	80020b0 <__aeabi_ddiv+0x3bc>
 8002252:	454b      	cmp	r3, r9
 8002254:	d000      	beq.n	8002258 <__aeabi_ddiv+0x564>
 8002256:	e72b      	b.n	80020b0 <__aeabi_ddiv+0x3bc>
 8002258:	0035      	movs	r5, r6
 800225a:	e72c      	b.n	80020b6 <__aeabi_ddiv+0x3c2>
 800225c:	4b2a      	ldr	r3, [pc, #168]	@ (8002308 <__aeabi_ddiv+0x614>)
 800225e:	4a2f      	ldr	r2, [pc, #188]	@ (800231c <__aeabi_ddiv+0x628>)
 8002260:	4453      	add	r3, sl
 8002262:	4592      	cmp	sl, r2
 8002264:	db43      	blt.n	80022ee <__aeabi_ddiv+0x5fa>
 8002266:	2201      	movs	r2, #1
 8002268:	2100      	movs	r1, #0
 800226a:	4493      	add	fp, r2
 800226c:	e72c      	b.n	80020c8 <__aeabi_ddiv+0x3d4>
 800226e:	42ac      	cmp	r4, r5
 8002270:	d800      	bhi.n	8002274 <__aeabi_ddiv+0x580>
 8002272:	e6d7      	b.n	8002024 <__aeabi_ddiv+0x330>
 8002274:	2302      	movs	r3, #2
 8002276:	425b      	negs	r3, r3
 8002278:	469c      	mov	ip, r3
 800227a:	9900      	ldr	r1, [sp, #0]
 800227c:	444d      	add	r5, r9
 800227e:	454d      	cmp	r5, r9
 8002280:	419b      	sbcs	r3, r3
 8002282:	44e3      	add	fp, ip
 8002284:	468c      	mov	ip, r1
 8002286:	425b      	negs	r3, r3
 8002288:	4463      	add	r3, ip
 800228a:	18c0      	adds	r0, r0, r3
 800228c:	e6cc      	b.n	8002028 <__aeabi_ddiv+0x334>
 800228e:	201f      	movs	r0, #31
 8002290:	4240      	negs	r0, r0
 8002292:	1ac3      	subs	r3, r0, r3
 8002294:	4658      	mov	r0, fp
 8002296:	40d8      	lsrs	r0, r3
 8002298:	2920      	cmp	r1, #32
 800229a:	d004      	beq.n	80022a6 <__aeabi_ddiv+0x5b2>
 800229c:	4659      	mov	r1, fp
 800229e:	4b20      	ldr	r3, [pc, #128]	@ (8002320 <__aeabi_ddiv+0x62c>)
 80022a0:	4453      	add	r3, sl
 80022a2:	4099      	lsls	r1, r3
 80022a4:	430a      	orrs	r2, r1
 80022a6:	1e53      	subs	r3, r2, #1
 80022a8:	419a      	sbcs	r2, r3
 80022aa:	2307      	movs	r3, #7
 80022ac:	0019      	movs	r1, r3
 80022ae:	4302      	orrs	r2, r0
 80022b0:	2400      	movs	r4, #0
 80022b2:	4011      	ands	r1, r2
 80022b4:	4213      	tst	r3, r2
 80022b6:	d009      	beq.n	80022cc <__aeabi_ddiv+0x5d8>
 80022b8:	3308      	adds	r3, #8
 80022ba:	4013      	ands	r3, r2
 80022bc:	2b04      	cmp	r3, #4
 80022be:	d01d      	beq.n	80022fc <__aeabi_ddiv+0x608>
 80022c0:	1d13      	adds	r3, r2, #4
 80022c2:	4293      	cmp	r3, r2
 80022c4:	4189      	sbcs	r1, r1
 80022c6:	001a      	movs	r2, r3
 80022c8:	4249      	negs	r1, r1
 80022ca:	0749      	lsls	r1, r1, #29
 80022cc:	08d2      	lsrs	r2, r2, #3
 80022ce:	430a      	orrs	r2, r1
 80022d0:	4690      	mov	r8, r2
 80022d2:	2300      	movs	r3, #0
 80022d4:	e57a      	b.n	8001dcc <__aeabi_ddiv+0xd8>
 80022d6:	4649      	mov	r1, r9
 80022d8:	9f00      	ldr	r7, [sp, #0]
 80022da:	004d      	lsls	r5, r1, #1
 80022dc:	454d      	cmp	r5, r9
 80022de:	4189      	sbcs	r1, r1
 80022e0:	46bc      	mov	ip, r7
 80022e2:	4249      	negs	r1, r1
 80022e4:	4461      	add	r1, ip
 80022e6:	46a9      	mov	r9, r5
 80022e8:	3a02      	subs	r2, #2
 80022ea:	1864      	adds	r4, r4, r1
 80022ec:	e7ae      	b.n	800224c <__aeabi_ddiv+0x558>
 80022ee:	2201      	movs	r2, #1
 80022f0:	4252      	negs	r2, r2
 80022f2:	e746      	b.n	8002182 <__aeabi_ddiv+0x48e>
 80022f4:	4599      	cmp	r9, r3
 80022f6:	d3ee      	bcc.n	80022d6 <__aeabi_ddiv+0x5e2>
 80022f8:	000a      	movs	r2, r1
 80022fa:	e7aa      	b.n	8002252 <__aeabi_ddiv+0x55e>
 80022fc:	2100      	movs	r1, #0
 80022fe:	e7e5      	b.n	80022cc <__aeabi_ddiv+0x5d8>
 8002300:	0759      	lsls	r1, r3, #29
 8002302:	025b      	lsls	r3, r3, #9
 8002304:	0b1c      	lsrs	r4, r3, #12
 8002306:	e7e1      	b.n	80022cc <__aeabi_ddiv+0x5d8>
 8002308:	000003ff 	.word	0x000003ff
 800230c:	feffffff 	.word	0xfeffffff
 8002310:	000007fe 	.word	0x000007fe
 8002314:	000007ff 	.word	0x000007ff
 8002318:	0000041e 	.word	0x0000041e
 800231c:	fffffc02 	.word	0xfffffc02
 8002320:	0000043e 	.word	0x0000043e

08002324 <__aeabi_dmul>:
 8002324:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002326:	4657      	mov	r7, sl
 8002328:	464e      	mov	r6, r9
 800232a:	46de      	mov	lr, fp
 800232c:	4645      	mov	r5, r8
 800232e:	b5e0      	push	{r5, r6, r7, lr}
 8002330:	001f      	movs	r7, r3
 8002332:	030b      	lsls	r3, r1, #12
 8002334:	0b1b      	lsrs	r3, r3, #12
 8002336:	0016      	movs	r6, r2
 8002338:	469a      	mov	sl, r3
 800233a:	0fca      	lsrs	r2, r1, #31
 800233c:	004b      	lsls	r3, r1, #1
 800233e:	0004      	movs	r4, r0
 8002340:	4691      	mov	r9, r2
 8002342:	b085      	sub	sp, #20
 8002344:	0d5b      	lsrs	r3, r3, #21
 8002346:	d100      	bne.n	800234a <__aeabi_dmul+0x26>
 8002348:	e1cf      	b.n	80026ea <__aeabi_dmul+0x3c6>
 800234a:	4acd      	ldr	r2, [pc, #820]	@ (8002680 <__aeabi_dmul+0x35c>)
 800234c:	4293      	cmp	r3, r2
 800234e:	d055      	beq.n	80023fc <__aeabi_dmul+0xd8>
 8002350:	4651      	mov	r1, sl
 8002352:	0f42      	lsrs	r2, r0, #29
 8002354:	00c9      	lsls	r1, r1, #3
 8002356:	430a      	orrs	r2, r1
 8002358:	2180      	movs	r1, #128	@ 0x80
 800235a:	0409      	lsls	r1, r1, #16
 800235c:	4311      	orrs	r1, r2
 800235e:	00c2      	lsls	r2, r0, #3
 8002360:	4690      	mov	r8, r2
 8002362:	4ac8      	ldr	r2, [pc, #800]	@ (8002684 <__aeabi_dmul+0x360>)
 8002364:	468a      	mov	sl, r1
 8002366:	4693      	mov	fp, r2
 8002368:	449b      	add	fp, r3
 800236a:	2300      	movs	r3, #0
 800236c:	2500      	movs	r5, #0
 800236e:	9302      	str	r3, [sp, #8]
 8002370:	033c      	lsls	r4, r7, #12
 8002372:	007b      	lsls	r3, r7, #1
 8002374:	0ffa      	lsrs	r2, r7, #31
 8002376:	9601      	str	r6, [sp, #4]
 8002378:	0b24      	lsrs	r4, r4, #12
 800237a:	0d5b      	lsrs	r3, r3, #21
 800237c:	9200      	str	r2, [sp, #0]
 800237e:	d100      	bne.n	8002382 <__aeabi_dmul+0x5e>
 8002380:	e188      	b.n	8002694 <__aeabi_dmul+0x370>
 8002382:	4abf      	ldr	r2, [pc, #764]	@ (8002680 <__aeabi_dmul+0x35c>)
 8002384:	4293      	cmp	r3, r2
 8002386:	d100      	bne.n	800238a <__aeabi_dmul+0x66>
 8002388:	e092      	b.n	80024b0 <__aeabi_dmul+0x18c>
 800238a:	4abe      	ldr	r2, [pc, #760]	@ (8002684 <__aeabi_dmul+0x360>)
 800238c:	4694      	mov	ip, r2
 800238e:	4463      	add	r3, ip
 8002390:	449b      	add	fp, r3
 8002392:	2d0a      	cmp	r5, #10
 8002394:	dc42      	bgt.n	800241c <__aeabi_dmul+0xf8>
 8002396:	00e4      	lsls	r4, r4, #3
 8002398:	0f73      	lsrs	r3, r6, #29
 800239a:	4323      	orrs	r3, r4
 800239c:	2480      	movs	r4, #128	@ 0x80
 800239e:	4649      	mov	r1, r9
 80023a0:	0424      	lsls	r4, r4, #16
 80023a2:	431c      	orrs	r4, r3
 80023a4:	00f3      	lsls	r3, r6, #3
 80023a6:	9301      	str	r3, [sp, #4]
 80023a8:	9b00      	ldr	r3, [sp, #0]
 80023aa:	2000      	movs	r0, #0
 80023ac:	4059      	eors	r1, r3
 80023ae:	b2cb      	uxtb	r3, r1
 80023b0:	9303      	str	r3, [sp, #12]
 80023b2:	2d02      	cmp	r5, #2
 80023b4:	dc00      	bgt.n	80023b8 <__aeabi_dmul+0x94>
 80023b6:	e094      	b.n	80024e2 <__aeabi_dmul+0x1be>
 80023b8:	2301      	movs	r3, #1
 80023ba:	40ab      	lsls	r3, r5
 80023bc:	001d      	movs	r5, r3
 80023be:	23a6      	movs	r3, #166	@ 0xa6
 80023c0:	002a      	movs	r2, r5
 80023c2:	00db      	lsls	r3, r3, #3
 80023c4:	401a      	ands	r2, r3
 80023c6:	421d      	tst	r5, r3
 80023c8:	d000      	beq.n	80023cc <__aeabi_dmul+0xa8>
 80023ca:	e229      	b.n	8002820 <__aeabi_dmul+0x4fc>
 80023cc:	2390      	movs	r3, #144	@ 0x90
 80023ce:	009b      	lsls	r3, r3, #2
 80023d0:	421d      	tst	r5, r3
 80023d2:	d100      	bne.n	80023d6 <__aeabi_dmul+0xb2>
 80023d4:	e24d      	b.n	8002872 <__aeabi_dmul+0x54e>
 80023d6:	2300      	movs	r3, #0
 80023d8:	2480      	movs	r4, #128	@ 0x80
 80023da:	4699      	mov	r9, r3
 80023dc:	0324      	lsls	r4, r4, #12
 80023de:	4ba8      	ldr	r3, [pc, #672]	@ (8002680 <__aeabi_dmul+0x35c>)
 80023e0:	0010      	movs	r0, r2
 80023e2:	464a      	mov	r2, r9
 80023e4:	051b      	lsls	r3, r3, #20
 80023e6:	4323      	orrs	r3, r4
 80023e8:	07d2      	lsls	r2, r2, #31
 80023ea:	4313      	orrs	r3, r2
 80023ec:	0019      	movs	r1, r3
 80023ee:	b005      	add	sp, #20
 80023f0:	bcf0      	pop	{r4, r5, r6, r7}
 80023f2:	46bb      	mov	fp, r7
 80023f4:	46b2      	mov	sl, r6
 80023f6:	46a9      	mov	r9, r5
 80023f8:	46a0      	mov	r8, r4
 80023fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80023fc:	4652      	mov	r2, sl
 80023fe:	4302      	orrs	r2, r0
 8002400:	4690      	mov	r8, r2
 8002402:	d000      	beq.n	8002406 <__aeabi_dmul+0xe2>
 8002404:	e1ac      	b.n	8002760 <__aeabi_dmul+0x43c>
 8002406:	469b      	mov	fp, r3
 8002408:	2302      	movs	r3, #2
 800240a:	4692      	mov	sl, r2
 800240c:	2508      	movs	r5, #8
 800240e:	9302      	str	r3, [sp, #8]
 8002410:	e7ae      	b.n	8002370 <__aeabi_dmul+0x4c>
 8002412:	9b00      	ldr	r3, [sp, #0]
 8002414:	46a2      	mov	sl, r4
 8002416:	4699      	mov	r9, r3
 8002418:	9b01      	ldr	r3, [sp, #4]
 800241a:	4698      	mov	r8, r3
 800241c:	9b02      	ldr	r3, [sp, #8]
 800241e:	2b02      	cmp	r3, #2
 8002420:	d100      	bne.n	8002424 <__aeabi_dmul+0x100>
 8002422:	e1ca      	b.n	80027ba <__aeabi_dmul+0x496>
 8002424:	2b03      	cmp	r3, #3
 8002426:	d100      	bne.n	800242a <__aeabi_dmul+0x106>
 8002428:	e192      	b.n	8002750 <__aeabi_dmul+0x42c>
 800242a:	2b01      	cmp	r3, #1
 800242c:	d110      	bne.n	8002450 <__aeabi_dmul+0x12c>
 800242e:	2300      	movs	r3, #0
 8002430:	2400      	movs	r4, #0
 8002432:	2200      	movs	r2, #0
 8002434:	e7d4      	b.n	80023e0 <__aeabi_dmul+0xbc>
 8002436:	2201      	movs	r2, #1
 8002438:	087b      	lsrs	r3, r7, #1
 800243a:	403a      	ands	r2, r7
 800243c:	4313      	orrs	r3, r2
 800243e:	4652      	mov	r2, sl
 8002440:	07d2      	lsls	r2, r2, #31
 8002442:	4313      	orrs	r3, r2
 8002444:	4698      	mov	r8, r3
 8002446:	4653      	mov	r3, sl
 8002448:	085b      	lsrs	r3, r3, #1
 800244a:	469a      	mov	sl, r3
 800244c:	9b03      	ldr	r3, [sp, #12]
 800244e:	4699      	mov	r9, r3
 8002450:	465b      	mov	r3, fp
 8002452:	1c58      	adds	r0, r3, #1
 8002454:	2380      	movs	r3, #128	@ 0x80
 8002456:	00db      	lsls	r3, r3, #3
 8002458:	445b      	add	r3, fp
 800245a:	2b00      	cmp	r3, #0
 800245c:	dc00      	bgt.n	8002460 <__aeabi_dmul+0x13c>
 800245e:	e1b1      	b.n	80027c4 <__aeabi_dmul+0x4a0>
 8002460:	4642      	mov	r2, r8
 8002462:	0752      	lsls	r2, r2, #29
 8002464:	d00b      	beq.n	800247e <__aeabi_dmul+0x15a>
 8002466:	220f      	movs	r2, #15
 8002468:	4641      	mov	r1, r8
 800246a:	400a      	ands	r2, r1
 800246c:	2a04      	cmp	r2, #4
 800246e:	d006      	beq.n	800247e <__aeabi_dmul+0x15a>
 8002470:	4642      	mov	r2, r8
 8002472:	1d11      	adds	r1, r2, #4
 8002474:	4541      	cmp	r1, r8
 8002476:	4192      	sbcs	r2, r2
 8002478:	4688      	mov	r8, r1
 800247a:	4252      	negs	r2, r2
 800247c:	4492      	add	sl, r2
 800247e:	4652      	mov	r2, sl
 8002480:	01d2      	lsls	r2, r2, #7
 8002482:	d506      	bpl.n	8002492 <__aeabi_dmul+0x16e>
 8002484:	4652      	mov	r2, sl
 8002486:	4b80      	ldr	r3, [pc, #512]	@ (8002688 <__aeabi_dmul+0x364>)
 8002488:	401a      	ands	r2, r3
 800248a:	2380      	movs	r3, #128	@ 0x80
 800248c:	4692      	mov	sl, r2
 800248e:	00db      	lsls	r3, r3, #3
 8002490:	18c3      	adds	r3, r0, r3
 8002492:	4a7e      	ldr	r2, [pc, #504]	@ (800268c <__aeabi_dmul+0x368>)
 8002494:	4293      	cmp	r3, r2
 8002496:	dd00      	ble.n	800249a <__aeabi_dmul+0x176>
 8002498:	e18f      	b.n	80027ba <__aeabi_dmul+0x496>
 800249a:	4642      	mov	r2, r8
 800249c:	08d1      	lsrs	r1, r2, #3
 800249e:	4652      	mov	r2, sl
 80024a0:	0752      	lsls	r2, r2, #29
 80024a2:	430a      	orrs	r2, r1
 80024a4:	4651      	mov	r1, sl
 80024a6:	055b      	lsls	r3, r3, #21
 80024a8:	024c      	lsls	r4, r1, #9
 80024aa:	0b24      	lsrs	r4, r4, #12
 80024ac:	0d5b      	lsrs	r3, r3, #21
 80024ae:	e797      	b.n	80023e0 <__aeabi_dmul+0xbc>
 80024b0:	4b73      	ldr	r3, [pc, #460]	@ (8002680 <__aeabi_dmul+0x35c>)
 80024b2:	4326      	orrs	r6, r4
 80024b4:	469c      	mov	ip, r3
 80024b6:	44e3      	add	fp, ip
 80024b8:	2e00      	cmp	r6, #0
 80024ba:	d100      	bne.n	80024be <__aeabi_dmul+0x19a>
 80024bc:	e16f      	b.n	800279e <__aeabi_dmul+0x47a>
 80024be:	2303      	movs	r3, #3
 80024c0:	4649      	mov	r1, r9
 80024c2:	431d      	orrs	r5, r3
 80024c4:	9b00      	ldr	r3, [sp, #0]
 80024c6:	4059      	eors	r1, r3
 80024c8:	b2cb      	uxtb	r3, r1
 80024ca:	9303      	str	r3, [sp, #12]
 80024cc:	2d0a      	cmp	r5, #10
 80024ce:	dd00      	ble.n	80024d2 <__aeabi_dmul+0x1ae>
 80024d0:	e133      	b.n	800273a <__aeabi_dmul+0x416>
 80024d2:	2301      	movs	r3, #1
 80024d4:	40ab      	lsls	r3, r5
 80024d6:	001d      	movs	r5, r3
 80024d8:	2303      	movs	r3, #3
 80024da:	9302      	str	r3, [sp, #8]
 80024dc:	2288      	movs	r2, #136	@ 0x88
 80024de:	422a      	tst	r2, r5
 80024e0:	d197      	bne.n	8002412 <__aeabi_dmul+0xee>
 80024e2:	4642      	mov	r2, r8
 80024e4:	4643      	mov	r3, r8
 80024e6:	0412      	lsls	r2, r2, #16
 80024e8:	0c12      	lsrs	r2, r2, #16
 80024ea:	0016      	movs	r6, r2
 80024ec:	9801      	ldr	r0, [sp, #4]
 80024ee:	0c1d      	lsrs	r5, r3, #16
 80024f0:	0c03      	lsrs	r3, r0, #16
 80024f2:	0400      	lsls	r0, r0, #16
 80024f4:	0c00      	lsrs	r0, r0, #16
 80024f6:	4346      	muls	r6, r0
 80024f8:	46b4      	mov	ip, r6
 80024fa:	001e      	movs	r6, r3
 80024fc:	436e      	muls	r6, r5
 80024fe:	9600      	str	r6, [sp, #0]
 8002500:	0016      	movs	r6, r2
 8002502:	0007      	movs	r7, r0
 8002504:	435e      	muls	r6, r3
 8002506:	4661      	mov	r1, ip
 8002508:	46b0      	mov	r8, r6
 800250a:	436f      	muls	r7, r5
 800250c:	0c0e      	lsrs	r6, r1, #16
 800250e:	44b8      	add	r8, r7
 8002510:	4446      	add	r6, r8
 8002512:	42b7      	cmp	r7, r6
 8002514:	d905      	bls.n	8002522 <__aeabi_dmul+0x1fe>
 8002516:	2180      	movs	r1, #128	@ 0x80
 8002518:	0249      	lsls	r1, r1, #9
 800251a:	4688      	mov	r8, r1
 800251c:	9f00      	ldr	r7, [sp, #0]
 800251e:	4447      	add	r7, r8
 8002520:	9700      	str	r7, [sp, #0]
 8002522:	4661      	mov	r1, ip
 8002524:	0409      	lsls	r1, r1, #16
 8002526:	0c09      	lsrs	r1, r1, #16
 8002528:	0c37      	lsrs	r7, r6, #16
 800252a:	0436      	lsls	r6, r6, #16
 800252c:	468c      	mov	ip, r1
 800252e:	0031      	movs	r1, r6
 8002530:	4461      	add	r1, ip
 8002532:	9101      	str	r1, [sp, #4]
 8002534:	0011      	movs	r1, r2
 8002536:	0c26      	lsrs	r6, r4, #16
 8002538:	0424      	lsls	r4, r4, #16
 800253a:	0c24      	lsrs	r4, r4, #16
 800253c:	4361      	muls	r1, r4
 800253e:	468c      	mov	ip, r1
 8002540:	0021      	movs	r1, r4
 8002542:	4369      	muls	r1, r5
 8002544:	4689      	mov	r9, r1
 8002546:	4661      	mov	r1, ip
 8002548:	0c09      	lsrs	r1, r1, #16
 800254a:	4688      	mov	r8, r1
 800254c:	4372      	muls	r2, r6
 800254e:	444a      	add	r2, r9
 8002550:	4442      	add	r2, r8
 8002552:	4375      	muls	r5, r6
 8002554:	4591      	cmp	r9, r2
 8002556:	d903      	bls.n	8002560 <__aeabi_dmul+0x23c>
 8002558:	2180      	movs	r1, #128	@ 0x80
 800255a:	0249      	lsls	r1, r1, #9
 800255c:	4688      	mov	r8, r1
 800255e:	4445      	add	r5, r8
 8002560:	0c11      	lsrs	r1, r2, #16
 8002562:	4688      	mov	r8, r1
 8002564:	4661      	mov	r1, ip
 8002566:	0409      	lsls	r1, r1, #16
 8002568:	0c09      	lsrs	r1, r1, #16
 800256a:	468c      	mov	ip, r1
 800256c:	0412      	lsls	r2, r2, #16
 800256e:	4462      	add	r2, ip
 8002570:	18b9      	adds	r1, r7, r2
 8002572:	9102      	str	r1, [sp, #8]
 8002574:	4651      	mov	r1, sl
 8002576:	0c09      	lsrs	r1, r1, #16
 8002578:	468c      	mov	ip, r1
 800257a:	4651      	mov	r1, sl
 800257c:	040f      	lsls	r7, r1, #16
 800257e:	0c3f      	lsrs	r7, r7, #16
 8002580:	0039      	movs	r1, r7
 8002582:	4341      	muls	r1, r0
 8002584:	4445      	add	r5, r8
 8002586:	4688      	mov	r8, r1
 8002588:	4661      	mov	r1, ip
 800258a:	4341      	muls	r1, r0
 800258c:	468a      	mov	sl, r1
 800258e:	4641      	mov	r1, r8
 8002590:	4660      	mov	r0, ip
 8002592:	0c09      	lsrs	r1, r1, #16
 8002594:	4689      	mov	r9, r1
 8002596:	4358      	muls	r0, r3
 8002598:	437b      	muls	r3, r7
 800259a:	4453      	add	r3, sl
 800259c:	444b      	add	r3, r9
 800259e:	459a      	cmp	sl, r3
 80025a0:	d903      	bls.n	80025aa <__aeabi_dmul+0x286>
 80025a2:	2180      	movs	r1, #128	@ 0x80
 80025a4:	0249      	lsls	r1, r1, #9
 80025a6:	4689      	mov	r9, r1
 80025a8:	4448      	add	r0, r9
 80025aa:	0c19      	lsrs	r1, r3, #16
 80025ac:	4689      	mov	r9, r1
 80025ae:	4641      	mov	r1, r8
 80025b0:	0409      	lsls	r1, r1, #16
 80025b2:	0c09      	lsrs	r1, r1, #16
 80025b4:	4688      	mov	r8, r1
 80025b6:	0039      	movs	r1, r7
 80025b8:	4361      	muls	r1, r4
 80025ba:	041b      	lsls	r3, r3, #16
 80025bc:	4443      	add	r3, r8
 80025be:	4688      	mov	r8, r1
 80025c0:	4661      	mov	r1, ip
 80025c2:	434c      	muls	r4, r1
 80025c4:	4371      	muls	r1, r6
 80025c6:	468c      	mov	ip, r1
 80025c8:	4641      	mov	r1, r8
 80025ca:	4377      	muls	r7, r6
 80025cc:	0c0e      	lsrs	r6, r1, #16
 80025ce:	193f      	adds	r7, r7, r4
 80025d0:	19f6      	adds	r6, r6, r7
 80025d2:	4448      	add	r0, r9
 80025d4:	42b4      	cmp	r4, r6
 80025d6:	d903      	bls.n	80025e0 <__aeabi_dmul+0x2bc>
 80025d8:	2180      	movs	r1, #128	@ 0x80
 80025da:	0249      	lsls	r1, r1, #9
 80025dc:	4689      	mov	r9, r1
 80025de:	44cc      	add	ip, r9
 80025e0:	9902      	ldr	r1, [sp, #8]
 80025e2:	9f00      	ldr	r7, [sp, #0]
 80025e4:	4689      	mov	r9, r1
 80025e6:	0431      	lsls	r1, r6, #16
 80025e8:	444f      	add	r7, r9
 80025ea:	4689      	mov	r9, r1
 80025ec:	4641      	mov	r1, r8
 80025ee:	4297      	cmp	r7, r2
 80025f0:	4192      	sbcs	r2, r2
 80025f2:	040c      	lsls	r4, r1, #16
 80025f4:	0c24      	lsrs	r4, r4, #16
 80025f6:	444c      	add	r4, r9
 80025f8:	18ff      	adds	r7, r7, r3
 80025fa:	4252      	negs	r2, r2
 80025fc:	1964      	adds	r4, r4, r5
 80025fe:	18a1      	adds	r1, r4, r2
 8002600:	429f      	cmp	r7, r3
 8002602:	419b      	sbcs	r3, r3
 8002604:	4688      	mov	r8, r1
 8002606:	4682      	mov	sl, r0
 8002608:	425b      	negs	r3, r3
 800260a:	4699      	mov	r9, r3
 800260c:	4590      	cmp	r8, r2
 800260e:	4192      	sbcs	r2, r2
 8002610:	42ac      	cmp	r4, r5
 8002612:	41a4      	sbcs	r4, r4
 8002614:	44c2      	add	sl, r8
 8002616:	44d1      	add	r9, sl
 8002618:	4252      	negs	r2, r2
 800261a:	4264      	negs	r4, r4
 800261c:	4314      	orrs	r4, r2
 800261e:	4599      	cmp	r9, r3
 8002620:	419b      	sbcs	r3, r3
 8002622:	4582      	cmp	sl, r0
 8002624:	4192      	sbcs	r2, r2
 8002626:	425b      	negs	r3, r3
 8002628:	4252      	negs	r2, r2
 800262a:	4313      	orrs	r3, r2
 800262c:	464a      	mov	r2, r9
 800262e:	0c36      	lsrs	r6, r6, #16
 8002630:	19a4      	adds	r4, r4, r6
 8002632:	18e3      	adds	r3, r4, r3
 8002634:	4463      	add	r3, ip
 8002636:	025b      	lsls	r3, r3, #9
 8002638:	0dd2      	lsrs	r2, r2, #23
 800263a:	431a      	orrs	r2, r3
 800263c:	9901      	ldr	r1, [sp, #4]
 800263e:	4692      	mov	sl, r2
 8002640:	027a      	lsls	r2, r7, #9
 8002642:	430a      	orrs	r2, r1
 8002644:	1e50      	subs	r0, r2, #1
 8002646:	4182      	sbcs	r2, r0
 8002648:	0dff      	lsrs	r7, r7, #23
 800264a:	4317      	orrs	r7, r2
 800264c:	464a      	mov	r2, r9
 800264e:	0252      	lsls	r2, r2, #9
 8002650:	4317      	orrs	r7, r2
 8002652:	46b8      	mov	r8, r7
 8002654:	01db      	lsls	r3, r3, #7
 8002656:	d500      	bpl.n	800265a <__aeabi_dmul+0x336>
 8002658:	e6ed      	b.n	8002436 <__aeabi_dmul+0x112>
 800265a:	4b0d      	ldr	r3, [pc, #52]	@ (8002690 <__aeabi_dmul+0x36c>)
 800265c:	9a03      	ldr	r2, [sp, #12]
 800265e:	445b      	add	r3, fp
 8002660:	4691      	mov	r9, r2
 8002662:	2b00      	cmp	r3, #0
 8002664:	dc00      	bgt.n	8002668 <__aeabi_dmul+0x344>
 8002666:	e0ac      	b.n	80027c2 <__aeabi_dmul+0x49e>
 8002668:	003a      	movs	r2, r7
 800266a:	0752      	lsls	r2, r2, #29
 800266c:	d100      	bne.n	8002670 <__aeabi_dmul+0x34c>
 800266e:	e710      	b.n	8002492 <__aeabi_dmul+0x16e>
 8002670:	220f      	movs	r2, #15
 8002672:	4658      	mov	r0, fp
 8002674:	403a      	ands	r2, r7
 8002676:	2a04      	cmp	r2, #4
 8002678:	d000      	beq.n	800267c <__aeabi_dmul+0x358>
 800267a:	e6f9      	b.n	8002470 <__aeabi_dmul+0x14c>
 800267c:	e709      	b.n	8002492 <__aeabi_dmul+0x16e>
 800267e:	46c0      	nop			@ (mov r8, r8)
 8002680:	000007ff 	.word	0x000007ff
 8002684:	fffffc01 	.word	0xfffffc01
 8002688:	feffffff 	.word	0xfeffffff
 800268c:	000007fe 	.word	0x000007fe
 8002690:	000003ff 	.word	0x000003ff
 8002694:	0022      	movs	r2, r4
 8002696:	4332      	orrs	r2, r6
 8002698:	d06f      	beq.n	800277a <__aeabi_dmul+0x456>
 800269a:	2c00      	cmp	r4, #0
 800269c:	d100      	bne.n	80026a0 <__aeabi_dmul+0x37c>
 800269e:	e0c2      	b.n	8002826 <__aeabi_dmul+0x502>
 80026a0:	0020      	movs	r0, r4
 80026a2:	f000 fe87 	bl	80033b4 <__clzsi2>
 80026a6:	0002      	movs	r2, r0
 80026a8:	0003      	movs	r3, r0
 80026aa:	3a0b      	subs	r2, #11
 80026ac:	201d      	movs	r0, #29
 80026ae:	1a82      	subs	r2, r0, r2
 80026b0:	0030      	movs	r0, r6
 80026b2:	0019      	movs	r1, r3
 80026b4:	40d0      	lsrs	r0, r2
 80026b6:	3908      	subs	r1, #8
 80026b8:	408c      	lsls	r4, r1
 80026ba:	0002      	movs	r2, r0
 80026bc:	4322      	orrs	r2, r4
 80026be:	0034      	movs	r4, r6
 80026c0:	408c      	lsls	r4, r1
 80026c2:	4659      	mov	r1, fp
 80026c4:	1acb      	subs	r3, r1, r3
 80026c6:	4986      	ldr	r1, [pc, #536]	@ (80028e0 <__aeabi_dmul+0x5bc>)
 80026c8:	468b      	mov	fp, r1
 80026ca:	449b      	add	fp, r3
 80026cc:	2d0a      	cmp	r5, #10
 80026ce:	dd00      	ble.n	80026d2 <__aeabi_dmul+0x3ae>
 80026d0:	e6a4      	b.n	800241c <__aeabi_dmul+0xf8>
 80026d2:	4649      	mov	r1, r9
 80026d4:	9b00      	ldr	r3, [sp, #0]
 80026d6:	9401      	str	r4, [sp, #4]
 80026d8:	4059      	eors	r1, r3
 80026da:	b2cb      	uxtb	r3, r1
 80026dc:	0014      	movs	r4, r2
 80026de:	2000      	movs	r0, #0
 80026e0:	9303      	str	r3, [sp, #12]
 80026e2:	2d02      	cmp	r5, #2
 80026e4:	dd00      	ble.n	80026e8 <__aeabi_dmul+0x3c4>
 80026e6:	e667      	b.n	80023b8 <__aeabi_dmul+0x94>
 80026e8:	e6fb      	b.n	80024e2 <__aeabi_dmul+0x1be>
 80026ea:	4653      	mov	r3, sl
 80026ec:	4303      	orrs	r3, r0
 80026ee:	4698      	mov	r8, r3
 80026f0:	d03c      	beq.n	800276c <__aeabi_dmul+0x448>
 80026f2:	4653      	mov	r3, sl
 80026f4:	2b00      	cmp	r3, #0
 80026f6:	d100      	bne.n	80026fa <__aeabi_dmul+0x3d6>
 80026f8:	e0a3      	b.n	8002842 <__aeabi_dmul+0x51e>
 80026fa:	4650      	mov	r0, sl
 80026fc:	f000 fe5a 	bl	80033b4 <__clzsi2>
 8002700:	230b      	movs	r3, #11
 8002702:	425b      	negs	r3, r3
 8002704:	469c      	mov	ip, r3
 8002706:	0002      	movs	r2, r0
 8002708:	4484      	add	ip, r0
 800270a:	0011      	movs	r1, r2
 800270c:	4650      	mov	r0, sl
 800270e:	3908      	subs	r1, #8
 8002710:	4088      	lsls	r0, r1
 8002712:	231d      	movs	r3, #29
 8002714:	4680      	mov	r8, r0
 8002716:	4660      	mov	r0, ip
 8002718:	1a1b      	subs	r3, r3, r0
 800271a:	0020      	movs	r0, r4
 800271c:	40d8      	lsrs	r0, r3
 800271e:	0003      	movs	r3, r0
 8002720:	4640      	mov	r0, r8
 8002722:	4303      	orrs	r3, r0
 8002724:	469a      	mov	sl, r3
 8002726:	0023      	movs	r3, r4
 8002728:	408b      	lsls	r3, r1
 800272a:	4698      	mov	r8, r3
 800272c:	4b6c      	ldr	r3, [pc, #432]	@ (80028e0 <__aeabi_dmul+0x5bc>)
 800272e:	2500      	movs	r5, #0
 8002730:	1a9b      	subs	r3, r3, r2
 8002732:	469b      	mov	fp, r3
 8002734:	2300      	movs	r3, #0
 8002736:	9302      	str	r3, [sp, #8]
 8002738:	e61a      	b.n	8002370 <__aeabi_dmul+0x4c>
 800273a:	2d0f      	cmp	r5, #15
 800273c:	d000      	beq.n	8002740 <__aeabi_dmul+0x41c>
 800273e:	e0c9      	b.n	80028d4 <__aeabi_dmul+0x5b0>
 8002740:	2380      	movs	r3, #128	@ 0x80
 8002742:	4652      	mov	r2, sl
 8002744:	031b      	lsls	r3, r3, #12
 8002746:	421a      	tst	r2, r3
 8002748:	d002      	beq.n	8002750 <__aeabi_dmul+0x42c>
 800274a:	421c      	tst	r4, r3
 800274c:	d100      	bne.n	8002750 <__aeabi_dmul+0x42c>
 800274e:	e092      	b.n	8002876 <__aeabi_dmul+0x552>
 8002750:	2480      	movs	r4, #128	@ 0x80
 8002752:	4653      	mov	r3, sl
 8002754:	0324      	lsls	r4, r4, #12
 8002756:	431c      	orrs	r4, r3
 8002758:	0324      	lsls	r4, r4, #12
 800275a:	4642      	mov	r2, r8
 800275c:	0b24      	lsrs	r4, r4, #12
 800275e:	e63e      	b.n	80023de <__aeabi_dmul+0xba>
 8002760:	469b      	mov	fp, r3
 8002762:	2303      	movs	r3, #3
 8002764:	4680      	mov	r8, r0
 8002766:	250c      	movs	r5, #12
 8002768:	9302      	str	r3, [sp, #8]
 800276a:	e601      	b.n	8002370 <__aeabi_dmul+0x4c>
 800276c:	2300      	movs	r3, #0
 800276e:	469a      	mov	sl, r3
 8002770:	469b      	mov	fp, r3
 8002772:	3301      	adds	r3, #1
 8002774:	2504      	movs	r5, #4
 8002776:	9302      	str	r3, [sp, #8]
 8002778:	e5fa      	b.n	8002370 <__aeabi_dmul+0x4c>
 800277a:	2101      	movs	r1, #1
 800277c:	430d      	orrs	r5, r1
 800277e:	2d0a      	cmp	r5, #10
 8002780:	dd00      	ble.n	8002784 <__aeabi_dmul+0x460>
 8002782:	e64b      	b.n	800241c <__aeabi_dmul+0xf8>
 8002784:	4649      	mov	r1, r9
 8002786:	9800      	ldr	r0, [sp, #0]
 8002788:	4041      	eors	r1, r0
 800278a:	b2c9      	uxtb	r1, r1
 800278c:	9103      	str	r1, [sp, #12]
 800278e:	2d02      	cmp	r5, #2
 8002790:	dc00      	bgt.n	8002794 <__aeabi_dmul+0x470>
 8002792:	e096      	b.n	80028c2 <__aeabi_dmul+0x59e>
 8002794:	2300      	movs	r3, #0
 8002796:	2400      	movs	r4, #0
 8002798:	2001      	movs	r0, #1
 800279a:	9301      	str	r3, [sp, #4]
 800279c:	e60c      	b.n	80023b8 <__aeabi_dmul+0x94>
 800279e:	4649      	mov	r1, r9
 80027a0:	2302      	movs	r3, #2
 80027a2:	9a00      	ldr	r2, [sp, #0]
 80027a4:	432b      	orrs	r3, r5
 80027a6:	4051      	eors	r1, r2
 80027a8:	b2ca      	uxtb	r2, r1
 80027aa:	9203      	str	r2, [sp, #12]
 80027ac:	2b0a      	cmp	r3, #10
 80027ae:	dd00      	ble.n	80027b2 <__aeabi_dmul+0x48e>
 80027b0:	e634      	b.n	800241c <__aeabi_dmul+0xf8>
 80027b2:	2d00      	cmp	r5, #0
 80027b4:	d157      	bne.n	8002866 <__aeabi_dmul+0x542>
 80027b6:	9b03      	ldr	r3, [sp, #12]
 80027b8:	4699      	mov	r9, r3
 80027ba:	2400      	movs	r4, #0
 80027bc:	2200      	movs	r2, #0
 80027be:	4b49      	ldr	r3, [pc, #292]	@ (80028e4 <__aeabi_dmul+0x5c0>)
 80027c0:	e60e      	b.n	80023e0 <__aeabi_dmul+0xbc>
 80027c2:	4658      	mov	r0, fp
 80027c4:	2101      	movs	r1, #1
 80027c6:	1ac9      	subs	r1, r1, r3
 80027c8:	2938      	cmp	r1, #56	@ 0x38
 80027ca:	dd00      	ble.n	80027ce <__aeabi_dmul+0x4aa>
 80027cc:	e62f      	b.n	800242e <__aeabi_dmul+0x10a>
 80027ce:	291f      	cmp	r1, #31
 80027d0:	dd56      	ble.n	8002880 <__aeabi_dmul+0x55c>
 80027d2:	221f      	movs	r2, #31
 80027d4:	4654      	mov	r4, sl
 80027d6:	4252      	negs	r2, r2
 80027d8:	1ad3      	subs	r3, r2, r3
 80027da:	40dc      	lsrs	r4, r3
 80027dc:	2920      	cmp	r1, #32
 80027de:	d007      	beq.n	80027f0 <__aeabi_dmul+0x4cc>
 80027e0:	4b41      	ldr	r3, [pc, #260]	@ (80028e8 <__aeabi_dmul+0x5c4>)
 80027e2:	4642      	mov	r2, r8
 80027e4:	469c      	mov	ip, r3
 80027e6:	4653      	mov	r3, sl
 80027e8:	4460      	add	r0, ip
 80027ea:	4083      	lsls	r3, r0
 80027ec:	431a      	orrs	r2, r3
 80027ee:	4690      	mov	r8, r2
 80027f0:	4642      	mov	r2, r8
 80027f2:	2107      	movs	r1, #7
 80027f4:	1e53      	subs	r3, r2, #1
 80027f6:	419a      	sbcs	r2, r3
 80027f8:	000b      	movs	r3, r1
 80027fa:	4322      	orrs	r2, r4
 80027fc:	4013      	ands	r3, r2
 80027fe:	2400      	movs	r4, #0
 8002800:	4211      	tst	r1, r2
 8002802:	d009      	beq.n	8002818 <__aeabi_dmul+0x4f4>
 8002804:	230f      	movs	r3, #15
 8002806:	4013      	ands	r3, r2
 8002808:	2b04      	cmp	r3, #4
 800280a:	d05d      	beq.n	80028c8 <__aeabi_dmul+0x5a4>
 800280c:	1d11      	adds	r1, r2, #4
 800280e:	4291      	cmp	r1, r2
 8002810:	419b      	sbcs	r3, r3
 8002812:	000a      	movs	r2, r1
 8002814:	425b      	negs	r3, r3
 8002816:	075b      	lsls	r3, r3, #29
 8002818:	08d2      	lsrs	r2, r2, #3
 800281a:	431a      	orrs	r2, r3
 800281c:	2300      	movs	r3, #0
 800281e:	e5df      	b.n	80023e0 <__aeabi_dmul+0xbc>
 8002820:	9b03      	ldr	r3, [sp, #12]
 8002822:	4699      	mov	r9, r3
 8002824:	e5fa      	b.n	800241c <__aeabi_dmul+0xf8>
 8002826:	9801      	ldr	r0, [sp, #4]
 8002828:	f000 fdc4 	bl	80033b4 <__clzsi2>
 800282c:	0002      	movs	r2, r0
 800282e:	0003      	movs	r3, r0
 8002830:	3215      	adds	r2, #21
 8002832:	3320      	adds	r3, #32
 8002834:	2a1c      	cmp	r2, #28
 8002836:	dc00      	bgt.n	800283a <__aeabi_dmul+0x516>
 8002838:	e738      	b.n	80026ac <__aeabi_dmul+0x388>
 800283a:	9a01      	ldr	r2, [sp, #4]
 800283c:	3808      	subs	r0, #8
 800283e:	4082      	lsls	r2, r0
 8002840:	e73f      	b.n	80026c2 <__aeabi_dmul+0x39e>
 8002842:	f000 fdb7 	bl	80033b4 <__clzsi2>
 8002846:	2315      	movs	r3, #21
 8002848:	469c      	mov	ip, r3
 800284a:	4484      	add	ip, r0
 800284c:	0002      	movs	r2, r0
 800284e:	4663      	mov	r3, ip
 8002850:	3220      	adds	r2, #32
 8002852:	2b1c      	cmp	r3, #28
 8002854:	dc00      	bgt.n	8002858 <__aeabi_dmul+0x534>
 8002856:	e758      	b.n	800270a <__aeabi_dmul+0x3e6>
 8002858:	2300      	movs	r3, #0
 800285a:	4698      	mov	r8, r3
 800285c:	0023      	movs	r3, r4
 800285e:	3808      	subs	r0, #8
 8002860:	4083      	lsls	r3, r0
 8002862:	469a      	mov	sl, r3
 8002864:	e762      	b.n	800272c <__aeabi_dmul+0x408>
 8002866:	001d      	movs	r5, r3
 8002868:	2300      	movs	r3, #0
 800286a:	2400      	movs	r4, #0
 800286c:	2002      	movs	r0, #2
 800286e:	9301      	str	r3, [sp, #4]
 8002870:	e5a2      	b.n	80023b8 <__aeabi_dmul+0x94>
 8002872:	9002      	str	r0, [sp, #8]
 8002874:	e632      	b.n	80024dc <__aeabi_dmul+0x1b8>
 8002876:	431c      	orrs	r4, r3
 8002878:	9b00      	ldr	r3, [sp, #0]
 800287a:	9a01      	ldr	r2, [sp, #4]
 800287c:	4699      	mov	r9, r3
 800287e:	e5ae      	b.n	80023de <__aeabi_dmul+0xba>
 8002880:	4b1a      	ldr	r3, [pc, #104]	@ (80028ec <__aeabi_dmul+0x5c8>)
 8002882:	4652      	mov	r2, sl
 8002884:	18c3      	adds	r3, r0, r3
 8002886:	4640      	mov	r0, r8
 8002888:	409a      	lsls	r2, r3
 800288a:	40c8      	lsrs	r0, r1
 800288c:	4302      	orrs	r2, r0
 800288e:	4640      	mov	r0, r8
 8002890:	4098      	lsls	r0, r3
 8002892:	0003      	movs	r3, r0
 8002894:	1e58      	subs	r0, r3, #1
 8002896:	4183      	sbcs	r3, r0
 8002898:	4654      	mov	r4, sl
 800289a:	431a      	orrs	r2, r3
 800289c:	40cc      	lsrs	r4, r1
 800289e:	0753      	lsls	r3, r2, #29
 80028a0:	d009      	beq.n	80028b6 <__aeabi_dmul+0x592>
 80028a2:	230f      	movs	r3, #15
 80028a4:	4013      	ands	r3, r2
 80028a6:	2b04      	cmp	r3, #4
 80028a8:	d005      	beq.n	80028b6 <__aeabi_dmul+0x592>
 80028aa:	1d13      	adds	r3, r2, #4
 80028ac:	4293      	cmp	r3, r2
 80028ae:	4192      	sbcs	r2, r2
 80028b0:	4252      	negs	r2, r2
 80028b2:	18a4      	adds	r4, r4, r2
 80028b4:	001a      	movs	r2, r3
 80028b6:	0223      	lsls	r3, r4, #8
 80028b8:	d508      	bpl.n	80028cc <__aeabi_dmul+0x5a8>
 80028ba:	2301      	movs	r3, #1
 80028bc:	2400      	movs	r4, #0
 80028be:	2200      	movs	r2, #0
 80028c0:	e58e      	b.n	80023e0 <__aeabi_dmul+0xbc>
 80028c2:	4689      	mov	r9, r1
 80028c4:	2400      	movs	r4, #0
 80028c6:	e58b      	b.n	80023e0 <__aeabi_dmul+0xbc>
 80028c8:	2300      	movs	r3, #0
 80028ca:	e7a5      	b.n	8002818 <__aeabi_dmul+0x4f4>
 80028cc:	0763      	lsls	r3, r4, #29
 80028ce:	0264      	lsls	r4, r4, #9
 80028d0:	0b24      	lsrs	r4, r4, #12
 80028d2:	e7a1      	b.n	8002818 <__aeabi_dmul+0x4f4>
 80028d4:	9b00      	ldr	r3, [sp, #0]
 80028d6:	46a2      	mov	sl, r4
 80028d8:	4699      	mov	r9, r3
 80028da:	9b01      	ldr	r3, [sp, #4]
 80028dc:	4698      	mov	r8, r3
 80028de:	e737      	b.n	8002750 <__aeabi_dmul+0x42c>
 80028e0:	fffffc0d 	.word	0xfffffc0d
 80028e4:	000007ff 	.word	0x000007ff
 80028e8:	0000043e 	.word	0x0000043e
 80028ec:	0000041e 	.word	0x0000041e

080028f0 <__aeabi_dsub>:
 80028f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80028f2:	4657      	mov	r7, sl
 80028f4:	464e      	mov	r6, r9
 80028f6:	4645      	mov	r5, r8
 80028f8:	46de      	mov	lr, fp
 80028fa:	b5e0      	push	{r5, r6, r7, lr}
 80028fc:	b083      	sub	sp, #12
 80028fe:	9000      	str	r0, [sp, #0]
 8002900:	9101      	str	r1, [sp, #4]
 8002902:	030c      	lsls	r4, r1, #12
 8002904:	004d      	lsls	r5, r1, #1
 8002906:	0fce      	lsrs	r6, r1, #31
 8002908:	0a61      	lsrs	r1, r4, #9
 800290a:	9c00      	ldr	r4, [sp, #0]
 800290c:	005f      	lsls	r7, r3, #1
 800290e:	0f64      	lsrs	r4, r4, #29
 8002910:	430c      	orrs	r4, r1
 8002912:	9900      	ldr	r1, [sp, #0]
 8002914:	9200      	str	r2, [sp, #0]
 8002916:	9301      	str	r3, [sp, #4]
 8002918:	00c8      	lsls	r0, r1, #3
 800291a:	0319      	lsls	r1, r3, #12
 800291c:	0d7b      	lsrs	r3, r7, #21
 800291e:	4699      	mov	r9, r3
 8002920:	9b01      	ldr	r3, [sp, #4]
 8002922:	4fcc      	ldr	r7, [pc, #816]	@ (8002c54 <__aeabi_dsub+0x364>)
 8002924:	0fdb      	lsrs	r3, r3, #31
 8002926:	469c      	mov	ip, r3
 8002928:	0a4b      	lsrs	r3, r1, #9
 800292a:	9900      	ldr	r1, [sp, #0]
 800292c:	4680      	mov	r8, r0
 800292e:	0f49      	lsrs	r1, r1, #29
 8002930:	4319      	orrs	r1, r3
 8002932:	9b00      	ldr	r3, [sp, #0]
 8002934:	468b      	mov	fp, r1
 8002936:	00da      	lsls	r2, r3, #3
 8002938:	4692      	mov	sl, r2
 800293a:	0d6d      	lsrs	r5, r5, #21
 800293c:	45b9      	cmp	r9, r7
 800293e:	d100      	bne.n	8002942 <__aeabi_dsub+0x52>
 8002940:	e0bf      	b.n	8002ac2 <__aeabi_dsub+0x1d2>
 8002942:	2301      	movs	r3, #1
 8002944:	4661      	mov	r1, ip
 8002946:	4059      	eors	r1, r3
 8002948:	464b      	mov	r3, r9
 800294a:	468c      	mov	ip, r1
 800294c:	1aeb      	subs	r3, r5, r3
 800294e:	428e      	cmp	r6, r1
 8002950:	d075      	beq.n	8002a3e <__aeabi_dsub+0x14e>
 8002952:	2b00      	cmp	r3, #0
 8002954:	dc00      	bgt.n	8002958 <__aeabi_dsub+0x68>
 8002956:	e2a3      	b.n	8002ea0 <__aeabi_dsub+0x5b0>
 8002958:	4649      	mov	r1, r9
 800295a:	2900      	cmp	r1, #0
 800295c:	d100      	bne.n	8002960 <__aeabi_dsub+0x70>
 800295e:	e0ce      	b.n	8002afe <__aeabi_dsub+0x20e>
 8002960:	42bd      	cmp	r5, r7
 8002962:	d100      	bne.n	8002966 <__aeabi_dsub+0x76>
 8002964:	e200      	b.n	8002d68 <__aeabi_dsub+0x478>
 8002966:	2701      	movs	r7, #1
 8002968:	2b38      	cmp	r3, #56	@ 0x38
 800296a:	dc19      	bgt.n	80029a0 <__aeabi_dsub+0xb0>
 800296c:	2780      	movs	r7, #128	@ 0x80
 800296e:	4659      	mov	r1, fp
 8002970:	043f      	lsls	r7, r7, #16
 8002972:	4339      	orrs	r1, r7
 8002974:	468b      	mov	fp, r1
 8002976:	2b1f      	cmp	r3, #31
 8002978:	dd00      	ble.n	800297c <__aeabi_dsub+0x8c>
 800297a:	e1fa      	b.n	8002d72 <__aeabi_dsub+0x482>
 800297c:	2720      	movs	r7, #32
 800297e:	1af9      	subs	r1, r7, r3
 8002980:	468c      	mov	ip, r1
 8002982:	4659      	mov	r1, fp
 8002984:	4667      	mov	r7, ip
 8002986:	40b9      	lsls	r1, r7
 8002988:	000f      	movs	r7, r1
 800298a:	0011      	movs	r1, r2
 800298c:	40d9      	lsrs	r1, r3
 800298e:	430f      	orrs	r7, r1
 8002990:	4661      	mov	r1, ip
 8002992:	408a      	lsls	r2, r1
 8002994:	1e51      	subs	r1, r2, #1
 8002996:	418a      	sbcs	r2, r1
 8002998:	4659      	mov	r1, fp
 800299a:	40d9      	lsrs	r1, r3
 800299c:	4317      	orrs	r7, r2
 800299e:	1a64      	subs	r4, r4, r1
 80029a0:	1bc7      	subs	r7, r0, r7
 80029a2:	42b8      	cmp	r0, r7
 80029a4:	4180      	sbcs	r0, r0
 80029a6:	4240      	negs	r0, r0
 80029a8:	1a24      	subs	r4, r4, r0
 80029aa:	0223      	lsls	r3, r4, #8
 80029ac:	d400      	bmi.n	80029b0 <__aeabi_dsub+0xc0>
 80029ae:	e140      	b.n	8002c32 <__aeabi_dsub+0x342>
 80029b0:	0264      	lsls	r4, r4, #9
 80029b2:	0a64      	lsrs	r4, r4, #9
 80029b4:	2c00      	cmp	r4, #0
 80029b6:	d100      	bne.n	80029ba <__aeabi_dsub+0xca>
 80029b8:	e154      	b.n	8002c64 <__aeabi_dsub+0x374>
 80029ba:	0020      	movs	r0, r4
 80029bc:	f000 fcfa 	bl	80033b4 <__clzsi2>
 80029c0:	0003      	movs	r3, r0
 80029c2:	3b08      	subs	r3, #8
 80029c4:	2120      	movs	r1, #32
 80029c6:	0038      	movs	r0, r7
 80029c8:	1aca      	subs	r2, r1, r3
 80029ca:	40d0      	lsrs	r0, r2
 80029cc:	409c      	lsls	r4, r3
 80029ce:	0002      	movs	r2, r0
 80029d0:	409f      	lsls	r7, r3
 80029d2:	4322      	orrs	r2, r4
 80029d4:	429d      	cmp	r5, r3
 80029d6:	dd00      	ble.n	80029da <__aeabi_dsub+0xea>
 80029d8:	e1a6      	b.n	8002d28 <__aeabi_dsub+0x438>
 80029da:	1b58      	subs	r0, r3, r5
 80029dc:	3001      	adds	r0, #1
 80029de:	1a09      	subs	r1, r1, r0
 80029e0:	003c      	movs	r4, r7
 80029e2:	408f      	lsls	r7, r1
 80029e4:	40c4      	lsrs	r4, r0
 80029e6:	1e7b      	subs	r3, r7, #1
 80029e8:	419f      	sbcs	r7, r3
 80029ea:	0013      	movs	r3, r2
 80029ec:	408b      	lsls	r3, r1
 80029ee:	4327      	orrs	r7, r4
 80029f0:	431f      	orrs	r7, r3
 80029f2:	40c2      	lsrs	r2, r0
 80029f4:	003b      	movs	r3, r7
 80029f6:	0014      	movs	r4, r2
 80029f8:	2500      	movs	r5, #0
 80029fa:	4313      	orrs	r3, r2
 80029fc:	d100      	bne.n	8002a00 <__aeabi_dsub+0x110>
 80029fe:	e1f7      	b.n	8002df0 <__aeabi_dsub+0x500>
 8002a00:	077b      	lsls	r3, r7, #29
 8002a02:	d100      	bne.n	8002a06 <__aeabi_dsub+0x116>
 8002a04:	e377      	b.n	80030f6 <__aeabi_dsub+0x806>
 8002a06:	230f      	movs	r3, #15
 8002a08:	0038      	movs	r0, r7
 8002a0a:	403b      	ands	r3, r7
 8002a0c:	2b04      	cmp	r3, #4
 8002a0e:	d004      	beq.n	8002a1a <__aeabi_dsub+0x12a>
 8002a10:	1d38      	adds	r0, r7, #4
 8002a12:	42b8      	cmp	r0, r7
 8002a14:	41bf      	sbcs	r7, r7
 8002a16:	427f      	negs	r7, r7
 8002a18:	19e4      	adds	r4, r4, r7
 8002a1a:	0223      	lsls	r3, r4, #8
 8002a1c:	d400      	bmi.n	8002a20 <__aeabi_dsub+0x130>
 8002a1e:	e368      	b.n	80030f2 <__aeabi_dsub+0x802>
 8002a20:	4b8c      	ldr	r3, [pc, #560]	@ (8002c54 <__aeabi_dsub+0x364>)
 8002a22:	3501      	adds	r5, #1
 8002a24:	429d      	cmp	r5, r3
 8002a26:	d100      	bne.n	8002a2a <__aeabi_dsub+0x13a>
 8002a28:	e0f4      	b.n	8002c14 <__aeabi_dsub+0x324>
 8002a2a:	4b8b      	ldr	r3, [pc, #556]	@ (8002c58 <__aeabi_dsub+0x368>)
 8002a2c:	056d      	lsls	r5, r5, #21
 8002a2e:	401c      	ands	r4, r3
 8002a30:	0d6d      	lsrs	r5, r5, #21
 8002a32:	0767      	lsls	r7, r4, #29
 8002a34:	08c0      	lsrs	r0, r0, #3
 8002a36:	0264      	lsls	r4, r4, #9
 8002a38:	4307      	orrs	r7, r0
 8002a3a:	0b24      	lsrs	r4, r4, #12
 8002a3c:	e0ec      	b.n	8002c18 <__aeabi_dsub+0x328>
 8002a3e:	2b00      	cmp	r3, #0
 8002a40:	dc00      	bgt.n	8002a44 <__aeabi_dsub+0x154>
 8002a42:	e329      	b.n	8003098 <__aeabi_dsub+0x7a8>
 8002a44:	4649      	mov	r1, r9
 8002a46:	2900      	cmp	r1, #0
 8002a48:	d000      	beq.n	8002a4c <__aeabi_dsub+0x15c>
 8002a4a:	e0d6      	b.n	8002bfa <__aeabi_dsub+0x30a>
 8002a4c:	4659      	mov	r1, fp
 8002a4e:	4311      	orrs	r1, r2
 8002a50:	d100      	bne.n	8002a54 <__aeabi_dsub+0x164>
 8002a52:	e12e      	b.n	8002cb2 <__aeabi_dsub+0x3c2>
 8002a54:	1e59      	subs	r1, r3, #1
 8002a56:	2b01      	cmp	r3, #1
 8002a58:	d100      	bne.n	8002a5c <__aeabi_dsub+0x16c>
 8002a5a:	e1e6      	b.n	8002e2a <__aeabi_dsub+0x53a>
 8002a5c:	42bb      	cmp	r3, r7
 8002a5e:	d100      	bne.n	8002a62 <__aeabi_dsub+0x172>
 8002a60:	e182      	b.n	8002d68 <__aeabi_dsub+0x478>
 8002a62:	2701      	movs	r7, #1
 8002a64:	000b      	movs	r3, r1
 8002a66:	2938      	cmp	r1, #56	@ 0x38
 8002a68:	dc14      	bgt.n	8002a94 <__aeabi_dsub+0x1a4>
 8002a6a:	2b1f      	cmp	r3, #31
 8002a6c:	dd00      	ble.n	8002a70 <__aeabi_dsub+0x180>
 8002a6e:	e23c      	b.n	8002eea <__aeabi_dsub+0x5fa>
 8002a70:	2720      	movs	r7, #32
 8002a72:	1af9      	subs	r1, r7, r3
 8002a74:	468c      	mov	ip, r1
 8002a76:	4659      	mov	r1, fp
 8002a78:	4667      	mov	r7, ip
 8002a7a:	40b9      	lsls	r1, r7
 8002a7c:	000f      	movs	r7, r1
 8002a7e:	0011      	movs	r1, r2
 8002a80:	40d9      	lsrs	r1, r3
 8002a82:	430f      	orrs	r7, r1
 8002a84:	4661      	mov	r1, ip
 8002a86:	408a      	lsls	r2, r1
 8002a88:	1e51      	subs	r1, r2, #1
 8002a8a:	418a      	sbcs	r2, r1
 8002a8c:	4659      	mov	r1, fp
 8002a8e:	40d9      	lsrs	r1, r3
 8002a90:	4317      	orrs	r7, r2
 8002a92:	1864      	adds	r4, r4, r1
 8002a94:	183f      	adds	r7, r7, r0
 8002a96:	4287      	cmp	r7, r0
 8002a98:	4180      	sbcs	r0, r0
 8002a9a:	4240      	negs	r0, r0
 8002a9c:	1824      	adds	r4, r4, r0
 8002a9e:	0223      	lsls	r3, r4, #8
 8002aa0:	d400      	bmi.n	8002aa4 <__aeabi_dsub+0x1b4>
 8002aa2:	e0c6      	b.n	8002c32 <__aeabi_dsub+0x342>
 8002aa4:	4b6b      	ldr	r3, [pc, #428]	@ (8002c54 <__aeabi_dsub+0x364>)
 8002aa6:	3501      	adds	r5, #1
 8002aa8:	429d      	cmp	r5, r3
 8002aaa:	d100      	bne.n	8002aae <__aeabi_dsub+0x1be>
 8002aac:	e0b2      	b.n	8002c14 <__aeabi_dsub+0x324>
 8002aae:	2101      	movs	r1, #1
 8002ab0:	4b69      	ldr	r3, [pc, #420]	@ (8002c58 <__aeabi_dsub+0x368>)
 8002ab2:	087a      	lsrs	r2, r7, #1
 8002ab4:	401c      	ands	r4, r3
 8002ab6:	4039      	ands	r1, r7
 8002ab8:	430a      	orrs	r2, r1
 8002aba:	07e7      	lsls	r7, r4, #31
 8002abc:	4317      	orrs	r7, r2
 8002abe:	0864      	lsrs	r4, r4, #1
 8002ac0:	e79e      	b.n	8002a00 <__aeabi_dsub+0x110>
 8002ac2:	4b66      	ldr	r3, [pc, #408]	@ (8002c5c <__aeabi_dsub+0x36c>)
 8002ac4:	4311      	orrs	r1, r2
 8002ac6:	468a      	mov	sl, r1
 8002ac8:	18eb      	adds	r3, r5, r3
 8002aca:	2900      	cmp	r1, #0
 8002acc:	d028      	beq.n	8002b20 <__aeabi_dsub+0x230>
 8002ace:	4566      	cmp	r6, ip
 8002ad0:	d02c      	beq.n	8002b2c <__aeabi_dsub+0x23c>
 8002ad2:	2b00      	cmp	r3, #0
 8002ad4:	d05b      	beq.n	8002b8e <__aeabi_dsub+0x29e>
 8002ad6:	2d00      	cmp	r5, #0
 8002ad8:	d100      	bne.n	8002adc <__aeabi_dsub+0x1ec>
 8002ada:	e12c      	b.n	8002d36 <__aeabi_dsub+0x446>
 8002adc:	465b      	mov	r3, fp
 8002ade:	4666      	mov	r6, ip
 8002ae0:	075f      	lsls	r7, r3, #29
 8002ae2:	08d2      	lsrs	r2, r2, #3
 8002ae4:	4317      	orrs	r7, r2
 8002ae6:	08dd      	lsrs	r5, r3, #3
 8002ae8:	003b      	movs	r3, r7
 8002aea:	432b      	orrs	r3, r5
 8002aec:	d100      	bne.n	8002af0 <__aeabi_dsub+0x200>
 8002aee:	e0e2      	b.n	8002cb6 <__aeabi_dsub+0x3c6>
 8002af0:	2480      	movs	r4, #128	@ 0x80
 8002af2:	0324      	lsls	r4, r4, #12
 8002af4:	432c      	orrs	r4, r5
 8002af6:	0324      	lsls	r4, r4, #12
 8002af8:	4d56      	ldr	r5, [pc, #344]	@ (8002c54 <__aeabi_dsub+0x364>)
 8002afa:	0b24      	lsrs	r4, r4, #12
 8002afc:	e08c      	b.n	8002c18 <__aeabi_dsub+0x328>
 8002afe:	4659      	mov	r1, fp
 8002b00:	4311      	orrs	r1, r2
 8002b02:	d100      	bne.n	8002b06 <__aeabi_dsub+0x216>
 8002b04:	e0d5      	b.n	8002cb2 <__aeabi_dsub+0x3c2>
 8002b06:	1e59      	subs	r1, r3, #1
 8002b08:	2b01      	cmp	r3, #1
 8002b0a:	d100      	bne.n	8002b0e <__aeabi_dsub+0x21e>
 8002b0c:	e1b9      	b.n	8002e82 <__aeabi_dsub+0x592>
 8002b0e:	42bb      	cmp	r3, r7
 8002b10:	d100      	bne.n	8002b14 <__aeabi_dsub+0x224>
 8002b12:	e1b1      	b.n	8002e78 <__aeabi_dsub+0x588>
 8002b14:	2701      	movs	r7, #1
 8002b16:	000b      	movs	r3, r1
 8002b18:	2938      	cmp	r1, #56	@ 0x38
 8002b1a:	dd00      	ble.n	8002b1e <__aeabi_dsub+0x22e>
 8002b1c:	e740      	b.n	80029a0 <__aeabi_dsub+0xb0>
 8002b1e:	e72a      	b.n	8002976 <__aeabi_dsub+0x86>
 8002b20:	4661      	mov	r1, ip
 8002b22:	2701      	movs	r7, #1
 8002b24:	4079      	eors	r1, r7
 8002b26:	468c      	mov	ip, r1
 8002b28:	4566      	cmp	r6, ip
 8002b2a:	d1d2      	bne.n	8002ad2 <__aeabi_dsub+0x1e2>
 8002b2c:	2b00      	cmp	r3, #0
 8002b2e:	d100      	bne.n	8002b32 <__aeabi_dsub+0x242>
 8002b30:	e0c5      	b.n	8002cbe <__aeabi_dsub+0x3ce>
 8002b32:	2d00      	cmp	r5, #0
 8002b34:	d000      	beq.n	8002b38 <__aeabi_dsub+0x248>
 8002b36:	e155      	b.n	8002de4 <__aeabi_dsub+0x4f4>
 8002b38:	464b      	mov	r3, r9
 8002b3a:	0025      	movs	r5, r4
 8002b3c:	4305      	orrs	r5, r0
 8002b3e:	d100      	bne.n	8002b42 <__aeabi_dsub+0x252>
 8002b40:	e212      	b.n	8002f68 <__aeabi_dsub+0x678>
 8002b42:	1e59      	subs	r1, r3, #1
 8002b44:	468c      	mov	ip, r1
 8002b46:	2b01      	cmp	r3, #1
 8002b48:	d100      	bne.n	8002b4c <__aeabi_dsub+0x25c>
 8002b4a:	e249      	b.n	8002fe0 <__aeabi_dsub+0x6f0>
 8002b4c:	4d41      	ldr	r5, [pc, #260]	@ (8002c54 <__aeabi_dsub+0x364>)
 8002b4e:	42ab      	cmp	r3, r5
 8002b50:	d100      	bne.n	8002b54 <__aeabi_dsub+0x264>
 8002b52:	e28f      	b.n	8003074 <__aeabi_dsub+0x784>
 8002b54:	2701      	movs	r7, #1
 8002b56:	2938      	cmp	r1, #56	@ 0x38
 8002b58:	dc11      	bgt.n	8002b7e <__aeabi_dsub+0x28e>
 8002b5a:	4663      	mov	r3, ip
 8002b5c:	2b1f      	cmp	r3, #31
 8002b5e:	dd00      	ble.n	8002b62 <__aeabi_dsub+0x272>
 8002b60:	e25b      	b.n	800301a <__aeabi_dsub+0x72a>
 8002b62:	4661      	mov	r1, ip
 8002b64:	2320      	movs	r3, #32
 8002b66:	0027      	movs	r7, r4
 8002b68:	1a5b      	subs	r3, r3, r1
 8002b6a:	0005      	movs	r5, r0
 8002b6c:	4098      	lsls	r0, r3
 8002b6e:	409f      	lsls	r7, r3
 8002b70:	40cd      	lsrs	r5, r1
 8002b72:	1e43      	subs	r3, r0, #1
 8002b74:	4198      	sbcs	r0, r3
 8002b76:	40cc      	lsrs	r4, r1
 8002b78:	432f      	orrs	r7, r5
 8002b7a:	4307      	orrs	r7, r0
 8002b7c:	44a3      	add	fp, r4
 8002b7e:	18bf      	adds	r7, r7, r2
 8002b80:	4297      	cmp	r7, r2
 8002b82:	4192      	sbcs	r2, r2
 8002b84:	4252      	negs	r2, r2
 8002b86:	445a      	add	r2, fp
 8002b88:	0014      	movs	r4, r2
 8002b8a:	464d      	mov	r5, r9
 8002b8c:	e787      	b.n	8002a9e <__aeabi_dsub+0x1ae>
 8002b8e:	4f34      	ldr	r7, [pc, #208]	@ (8002c60 <__aeabi_dsub+0x370>)
 8002b90:	1c6b      	adds	r3, r5, #1
 8002b92:	423b      	tst	r3, r7
 8002b94:	d000      	beq.n	8002b98 <__aeabi_dsub+0x2a8>
 8002b96:	e0b6      	b.n	8002d06 <__aeabi_dsub+0x416>
 8002b98:	4659      	mov	r1, fp
 8002b9a:	0023      	movs	r3, r4
 8002b9c:	4311      	orrs	r1, r2
 8002b9e:	000f      	movs	r7, r1
 8002ba0:	4303      	orrs	r3, r0
 8002ba2:	2d00      	cmp	r5, #0
 8002ba4:	d000      	beq.n	8002ba8 <__aeabi_dsub+0x2b8>
 8002ba6:	e126      	b.n	8002df6 <__aeabi_dsub+0x506>
 8002ba8:	2b00      	cmp	r3, #0
 8002baa:	d100      	bne.n	8002bae <__aeabi_dsub+0x2be>
 8002bac:	e1c0      	b.n	8002f30 <__aeabi_dsub+0x640>
 8002bae:	2900      	cmp	r1, #0
 8002bb0:	d100      	bne.n	8002bb4 <__aeabi_dsub+0x2c4>
 8002bb2:	e0a1      	b.n	8002cf8 <__aeabi_dsub+0x408>
 8002bb4:	1a83      	subs	r3, r0, r2
 8002bb6:	4698      	mov	r8, r3
 8002bb8:	465b      	mov	r3, fp
 8002bba:	4540      	cmp	r0, r8
 8002bbc:	41ad      	sbcs	r5, r5
 8002bbe:	1ae3      	subs	r3, r4, r3
 8002bc0:	426d      	negs	r5, r5
 8002bc2:	1b5b      	subs	r3, r3, r5
 8002bc4:	2580      	movs	r5, #128	@ 0x80
 8002bc6:	042d      	lsls	r5, r5, #16
 8002bc8:	422b      	tst	r3, r5
 8002bca:	d100      	bne.n	8002bce <__aeabi_dsub+0x2de>
 8002bcc:	e14b      	b.n	8002e66 <__aeabi_dsub+0x576>
 8002bce:	465b      	mov	r3, fp
 8002bd0:	1a10      	subs	r0, r2, r0
 8002bd2:	4282      	cmp	r2, r0
 8002bd4:	4192      	sbcs	r2, r2
 8002bd6:	1b1c      	subs	r4, r3, r4
 8002bd8:	0007      	movs	r7, r0
 8002bda:	2601      	movs	r6, #1
 8002bdc:	4663      	mov	r3, ip
 8002bde:	4252      	negs	r2, r2
 8002be0:	1aa4      	subs	r4, r4, r2
 8002be2:	4327      	orrs	r7, r4
 8002be4:	401e      	ands	r6, r3
 8002be6:	2f00      	cmp	r7, #0
 8002be8:	d100      	bne.n	8002bec <__aeabi_dsub+0x2fc>
 8002bea:	e142      	b.n	8002e72 <__aeabi_dsub+0x582>
 8002bec:	422c      	tst	r4, r5
 8002bee:	d100      	bne.n	8002bf2 <__aeabi_dsub+0x302>
 8002bf0:	e26d      	b.n	80030ce <__aeabi_dsub+0x7de>
 8002bf2:	4b19      	ldr	r3, [pc, #100]	@ (8002c58 <__aeabi_dsub+0x368>)
 8002bf4:	2501      	movs	r5, #1
 8002bf6:	401c      	ands	r4, r3
 8002bf8:	e71b      	b.n	8002a32 <__aeabi_dsub+0x142>
 8002bfa:	42bd      	cmp	r5, r7
 8002bfc:	d100      	bne.n	8002c00 <__aeabi_dsub+0x310>
 8002bfe:	e13b      	b.n	8002e78 <__aeabi_dsub+0x588>
 8002c00:	2701      	movs	r7, #1
 8002c02:	2b38      	cmp	r3, #56	@ 0x38
 8002c04:	dd00      	ble.n	8002c08 <__aeabi_dsub+0x318>
 8002c06:	e745      	b.n	8002a94 <__aeabi_dsub+0x1a4>
 8002c08:	2780      	movs	r7, #128	@ 0x80
 8002c0a:	4659      	mov	r1, fp
 8002c0c:	043f      	lsls	r7, r7, #16
 8002c0e:	4339      	orrs	r1, r7
 8002c10:	468b      	mov	fp, r1
 8002c12:	e72a      	b.n	8002a6a <__aeabi_dsub+0x17a>
 8002c14:	2400      	movs	r4, #0
 8002c16:	2700      	movs	r7, #0
 8002c18:	052d      	lsls	r5, r5, #20
 8002c1a:	4325      	orrs	r5, r4
 8002c1c:	07f6      	lsls	r6, r6, #31
 8002c1e:	4335      	orrs	r5, r6
 8002c20:	0038      	movs	r0, r7
 8002c22:	0029      	movs	r1, r5
 8002c24:	b003      	add	sp, #12
 8002c26:	bcf0      	pop	{r4, r5, r6, r7}
 8002c28:	46bb      	mov	fp, r7
 8002c2a:	46b2      	mov	sl, r6
 8002c2c:	46a9      	mov	r9, r5
 8002c2e:	46a0      	mov	r8, r4
 8002c30:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002c32:	077b      	lsls	r3, r7, #29
 8002c34:	d004      	beq.n	8002c40 <__aeabi_dsub+0x350>
 8002c36:	230f      	movs	r3, #15
 8002c38:	403b      	ands	r3, r7
 8002c3a:	2b04      	cmp	r3, #4
 8002c3c:	d000      	beq.n	8002c40 <__aeabi_dsub+0x350>
 8002c3e:	e6e7      	b.n	8002a10 <__aeabi_dsub+0x120>
 8002c40:	002b      	movs	r3, r5
 8002c42:	08f8      	lsrs	r0, r7, #3
 8002c44:	4a03      	ldr	r2, [pc, #12]	@ (8002c54 <__aeabi_dsub+0x364>)
 8002c46:	0767      	lsls	r7, r4, #29
 8002c48:	4307      	orrs	r7, r0
 8002c4a:	08e5      	lsrs	r5, r4, #3
 8002c4c:	4293      	cmp	r3, r2
 8002c4e:	d100      	bne.n	8002c52 <__aeabi_dsub+0x362>
 8002c50:	e74a      	b.n	8002ae8 <__aeabi_dsub+0x1f8>
 8002c52:	e0a5      	b.n	8002da0 <__aeabi_dsub+0x4b0>
 8002c54:	000007ff 	.word	0x000007ff
 8002c58:	ff7fffff 	.word	0xff7fffff
 8002c5c:	fffff801 	.word	0xfffff801
 8002c60:	000007fe 	.word	0x000007fe
 8002c64:	0038      	movs	r0, r7
 8002c66:	f000 fba5 	bl	80033b4 <__clzsi2>
 8002c6a:	0003      	movs	r3, r0
 8002c6c:	3318      	adds	r3, #24
 8002c6e:	2b1f      	cmp	r3, #31
 8002c70:	dc00      	bgt.n	8002c74 <__aeabi_dsub+0x384>
 8002c72:	e6a7      	b.n	80029c4 <__aeabi_dsub+0xd4>
 8002c74:	003a      	movs	r2, r7
 8002c76:	3808      	subs	r0, #8
 8002c78:	4082      	lsls	r2, r0
 8002c7a:	429d      	cmp	r5, r3
 8002c7c:	dd00      	ble.n	8002c80 <__aeabi_dsub+0x390>
 8002c7e:	e08a      	b.n	8002d96 <__aeabi_dsub+0x4a6>
 8002c80:	1b5b      	subs	r3, r3, r5
 8002c82:	1c58      	adds	r0, r3, #1
 8002c84:	281f      	cmp	r0, #31
 8002c86:	dc00      	bgt.n	8002c8a <__aeabi_dsub+0x39a>
 8002c88:	e1d8      	b.n	800303c <__aeabi_dsub+0x74c>
 8002c8a:	0017      	movs	r7, r2
 8002c8c:	3b1f      	subs	r3, #31
 8002c8e:	40df      	lsrs	r7, r3
 8002c90:	2820      	cmp	r0, #32
 8002c92:	d005      	beq.n	8002ca0 <__aeabi_dsub+0x3b0>
 8002c94:	2340      	movs	r3, #64	@ 0x40
 8002c96:	1a1b      	subs	r3, r3, r0
 8002c98:	409a      	lsls	r2, r3
 8002c9a:	1e53      	subs	r3, r2, #1
 8002c9c:	419a      	sbcs	r2, r3
 8002c9e:	4317      	orrs	r7, r2
 8002ca0:	2500      	movs	r5, #0
 8002ca2:	2f00      	cmp	r7, #0
 8002ca4:	d100      	bne.n	8002ca8 <__aeabi_dsub+0x3b8>
 8002ca6:	e0e5      	b.n	8002e74 <__aeabi_dsub+0x584>
 8002ca8:	077b      	lsls	r3, r7, #29
 8002caa:	d000      	beq.n	8002cae <__aeabi_dsub+0x3be>
 8002cac:	e6ab      	b.n	8002a06 <__aeabi_dsub+0x116>
 8002cae:	002c      	movs	r4, r5
 8002cb0:	e7c6      	b.n	8002c40 <__aeabi_dsub+0x350>
 8002cb2:	08c0      	lsrs	r0, r0, #3
 8002cb4:	e7c6      	b.n	8002c44 <__aeabi_dsub+0x354>
 8002cb6:	2700      	movs	r7, #0
 8002cb8:	2400      	movs	r4, #0
 8002cba:	4dd1      	ldr	r5, [pc, #836]	@ (8003000 <__aeabi_dsub+0x710>)
 8002cbc:	e7ac      	b.n	8002c18 <__aeabi_dsub+0x328>
 8002cbe:	4fd1      	ldr	r7, [pc, #836]	@ (8003004 <__aeabi_dsub+0x714>)
 8002cc0:	1c6b      	adds	r3, r5, #1
 8002cc2:	423b      	tst	r3, r7
 8002cc4:	d171      	bne.n	8002daa <__aeabi_dsub+0x4ba>
 8002cc6:	0023      	movs	r3, r4
 8002cc8:	4303      	orrs	r3, r0
 8002cca:	2d00      	cmp	r5, #0
 8002ccc:	d000      	beq.n	8002cd0 <__aeabi_dsub+0x3e0>
 8002cce:	e14e      	b.n	8002f6e <__aeabi_dsub+0x67e>
 8002cd0:	4657      	mov	r7, sl
 8002cd2:	2b00      	cmp	r3, #0
 8002cd4:	d100      	bne.n	8002cd8 <__aeabi_dsub+0x3e8>
 8002cd6:	e1b5      	b.n	8003044 <__aeabi_dsub+0x754>
 8002cd8:	2f00      	cmp	r7, #0
 8002cda:	d00d      	beq.n	8002cf8 <__aeabi_dsub+0x408>
 8002cdc:	1883      	adds	r3, r0, r2
 8002cde:	4283      	cmp	r3, r0
 8002ce0:	4180      	sbcs	r0, r0
 8002ce2:	445c      	add	r4, fp
 8002ce4:	4240      	negs	r0, r0
 8002ce6:	1824      	adds	r4, r4, r0
 8002ce8:	0222      	lsls	r2, r4, #8
 8002cea:	d500      	bpl.n	8002cee <__aeabi_dsub+0x3fe>
 8002cec:	e1c8      	b.n	8003080 <__aeabi_dsub+0x790>
 8002cee:	001f      	movs	r7, r3
 8002cf0:	4698      	mov	r8, r3
 8002cf2:	4327      	orrs	r7, r4
 8002cf4:	d100      	bne.n	8002cf8 <__aeabi_dsub+0x408>
 8002cf6:	e0bc      	b.n	8002e72 <__aeabi_dsub+0x582>
 8002cf8:	4643      	mov	r3, r8
 8002cfa:	0767      	lsls	r7, r4, #29
 8002cfc:	08db      	lsrs	r3, r3, #3
 8002cfe:	431f      	orrs	r7, r3
 8002d00:	08e5      	lsrs	r5, r4, #3
 8002d02:	2300      	movs	r3, #0
 8002d04:	e04c      	b.n	8002da0 <__aeabi_dsub+0x4b0>
 8002d06:	1a83      	subs	r3, r0, r2
 8002d08:	4698      	mov	r8, r3
 8002d0a:	465b      	mov	r3, fp
 8002d0c:	4540      	cmp	r0, r8
 8002d0e:	41bf      	sbcs	r7, r7
 8002d10:	1ae3      	subs	r3, r4, r3
 8002d12:	427f      	negs	r7, r7
 8002d14:	1bdb      	subs	r3, r3, r7
 8002d16:	021f      	lsls	r7, r3, #8
 8002d18:	d47c      	bmi.n	8002e14 <__aeabi_dsub+0x524>
 8002d1a:	4647      	mov	r7, r8
 8002d1c:	431f      	orrs	r7, r3
 8002d1e:	d100      	bne.n	8002d22 <__aeabi_dsub+0x432>
 8002d20:	e0a6      	b.n	8002e70 <__aeabi_dsub+0x580>
 8002d22:	001c      	movs	r4, r3
 8002d24:	4647      	mov	r7, r8
 8002d26:	e645      	b.n	80029b4 <__aeabi_dsub+0xc4>
 8002d28:	4cb7      	ldr	r4, [pc, #732]	@ (8003008 <__aeabi_dsub+0x718>)
 8002d2a:	1aed      	subs	r5, r5, r3
 8002d2c:	4014      	ands	r4, r2
 8002d2e:	077b      	lsls	r3, r7, #29
 8002d30:	d000      	beq.n	8002d34 <__aeabi_dsub+0x444>
 8002d32:	e780      	b.n	8002c36 <__aeabi_dsub+0x346>
 8002d34:	e784      	b.n	8002c40 <__aeabi_dsub+0x350>
 8002d36:	464b      	mov	r3, r9
 8002d38:	0025      	movs	r5, r4
 8002d3a:	4305      	orrs	r5, r0
 8002d3c:	d066      	beq.n	8002e0c <__aeabi_dsub+0x51c>
 8002d3e:	1e5f      	subs	r7, r3, #1
 8002d40:	2b01      	cmp	r3, #1
 8002d42:	d100      	bne.n	8002d46 <__aeabi_dsub+0x456>
 8002d44:	e0fc      	b.n	8002f40 <__aeabi_dsub+0x650>
 8002d46:	4dae      	ldr	r5, [pc, #696]	@ (8003000 <__aeabi_dsub+0x710>)
 8002d48:	42ab      	cmp	r3, r5
 8002d4a:	d100      	bne.n	8002d4e <__aeabi_dsub+0x45e>
 8002d4c:	e15e      	b.n	800300c <__aeabi_dsub+0x71c>
 8002d4e:	4666      	mov	r6, ip
 8002d50:	2f38      	cmp	r7, #56	@ 0x38
 8002d52:	dc00      	bgt.n	8002d56 <__aeabi_dsub+0x466>
 8002d54:	e0b4      	b.n	8002ec0 <__aeabi_dsub+0x5d0>
 8002d56:	2001      	movs	r0, #1
 8002d58:	1a17      	subs	r7, r2, r0
 8002d5a:	42ba      	cmp	r2, r7
 8002d5c:	4192      	sbcs	r2, r2
 8002d5e:	465b      	mov	r3, fp
 8002d60:	4252      	negs	r2, r2
 8002d62:	464d      	mov	r5, r9
 8002d64:	1a9c      	subs	r4, r3, r2
 8002d66:	e620      	b.n	80029aa <__aeabi_dsub+0xba>
 8002d68:	0767      	lsls	r7, r4, #29
 8002d6a:	08c0      	lsrs	r0, r0, #3
 8002d6c:	4307      	orrs	r7, r0
 8002d6e:	08e5      	lsrs	r5, r4, #3
 8002d70:	e6ba      	b.n	8002ae8 <__aeabi_dsub+0x1f8>
 8002d72:	001f      	movs	r7, r3
 8002d74:	4659      	mov	r1, fp
 8002d76:	3f20      	subs	r7, #32
 8002d78:	40f9      	lsrs	r1, r7
 8002d7a:	000f      	movs	r7, r1
 8002d7c:	2b20      	cmp	r3, #32
 8002d7e:	d005      	beq.n	8002d8c <__aeabi_dsub+0x49c>
 8002d80:	2140      	movs	r1, #64	@ 0x40
 8002d82:	1acb      	subs	r3, r1, r3
 8002d84:	4659      	mov	r1, fp
 8002d86:	4099      	lsls	r1, r3
 8002d88:	430a      	orrs	r2, r1
 8002d8a:	4692      	mov	sl, r2
 8002d8c:	4653      	mov	r3, sl
 8002d8e:	1e5a      	subs	r2, r3, #1
 8002d90:	4193      	sbcs	r3, r2
 8002d92:	431f      	orrs	r7, r3
 8002d94:	e604      	b.n	80029a0 <__aeabi_dsub+0xb0>
 8002d96:	1aeb      	subs	r3, r5, r3
 8002d98:	4d9b      	ldr	r5, [pc, #620]	@ (8003008 <__aeabi_dsub+0x718>)
 8002d9a:	4015      	ands	r5, r2
 8002d9c:	076f      	lsls	r7, r5, #29
 8002d9e:	08ed      	lsrs	r5, r5, #3
 8002da0:	032c      	lsls	r4, r5, #12
 8002da2:	055d      	lsls	r5, r3, #21
 8002da4:	0b24      	lsrs	r4, r4, #12
 8002da6:	0d6d      	lsrs	r5, r5, #21
 8002da8:	e736      	b.n	8002c18 <__aeabi_dsub+0x328>
 8002daa:	4d95      	ldr	r5, [pc, #596]	@ (8003000 <__aeabi_dsub+0x710>)
 8002dac:	42ab      	cmp	r3, r5
 8002dae:	d100      	bne.n	8002db2 <__aeabi_dsub+0x4c2>
 8002db0:	e0d6      	b.n	8002f60 <__aeabi_dsub+0x670>
 8002db2:	1882      	adds	r2, r0, r2
 8002db4:	0021      	movs	r1, r4
 8002db6:	4282      	cmp	r2, r0
 8002db8:	4180      	sbcs	r0, r0
 8002dba:	4459      	add	r1, fp
 8002dbc:	4240      	negs	r0, r0
 8002dbe:	1808      	adds	r0, r1, r0
 8002dc0:	07c7      	lsls	r7, r0, #31
 8002dc2:	0852      	lsrs	r2, r2, #1
 8002dc4:	4317      	orrs	r7, r2
 8002dc6:	0844      	lsrs	r4, r0, #1
 8002dc8:	0752      	lsls	r2, r2, #29
 8002dca:	d400      	bmi.n	8002dce <__aeabi_dsub+0x4de>
 8002dcc:	e185      	b.n	80030da <__aeabi_dsub+0x7ea>
 8002dce:	220f      	movs	r2, #15
 8002dd0:	001d      	movs	r5, r3
 8002dd2:	403a      	ands	r2, r7
 8002dd4:	2a04      	cmp	r2, #4
 8002dd6:	d000      	beq.n	8002dda <__aeabi_dsub+0x4ea>
 8002dd8:	e61a      	b.n	8002a10 <__aeabi_dsub+0x120>
 8002dda:	08ff      	lsrs	r7, r7, #3
 8002ddc:	0764      	lsls	r4, r4, #29
 8002dde:	4327      	orrs	r7, r4
 8002de0:	0905      	lsrs	r5, r0, #4
 8002de2:	e7dd      	b.n	8002da0 <__aeabi_dsub+0x4b0>
 8002de4:	465b      	mov	r3, fp
 8002de6:	08d2      	lsrs	r2, r2, #3
 8002de8:	075f      	lsls	r7, r3, #29
 8002dea:	4317      	orrs	r7, r2
 8002dec:	08dd      	lsrs	r5, r3, #3
 8002dee:	e67b      	b.n	8002ae8 <__aeabi_dsub+0x1f8>
 8002df0:	2700      	movs	r7, #0
 8002df2:	2400      	movs	r4, #0
 8002df4:	e710      	b.n	8002c18 <__aeabi_dsub+0x328>
 8002df6:	2b00      	cmp	r3, #0
 8002df8:	d000      	beq.n	8002dfc <__aeabi_dsub+0x50c>
 8002dfa:	e0d6      	b.n	8002faa <__aeabi_dsub+0x6ba>
 8002dfc:	2900      	cmp	r1, #0
 8002dfe:	d000      	beq.n	8002e02 <__aeabi_dsub+0x512>
 8002e00:	e12f      	b.n	8003062 <__aeabi_dsub+0x772>
 8002e02:	2480      	movs	r4, #128	@ 0x80
 8002e04:	2600      	movs	r6, #0
 8002e06:	4d7e      	ldr	r5, [pc, #504]	@ (8003000 <__aeabi_dsub+0x710>)
 8002e08:	0324      	lsls	r4, r4, #12
 8002e0a:	e705      	b.n	8002c18 <__aeabi_dsub+0x328>
 8002e0c:	4666      	mov	r6, ip
 8002e0e:	465c      	mov	r4, fp
 8002e10:	08d0      	lsrs	r0, r2, #3
 8002e12:	e717      	b.n	8002c44 <__aeabi_dsub+0x354>
 8002e14:	465b      	mov	r3, fp
 8002e16:	1a17      	subs	r7, r2, r0
 8002e18:	42ba      	cmp	r2, r7
 8002e1a:	4192      	sbcs	r2, r2
 8002e1c:	1b1c      	subs	r4, r3, r4
 8002e1e:	2601      	movs	r6, #1
 8002e20:	4663      	mov	r3, ip
 8002e22:	4252      	negs	r2, r2
 8002e24:	1aa4      	subs	r4, r4, r2
 8002e26:	401e      	ands	r6, r3
 8002e28:	e5c4      	b.n	80029b4 <__aeabi_dsub+0xc4>
 8002e2a:	1883      	adds	r3, r0, r2
 8002e2c:	4283      	cmp	r3, r0
 8002e2e:	4180      	sbcs	r0, r0
 8002e30:	445c      	add	r4, fp
 8002e32:	4240      	negs	r0, r0
 8002e34:	1825      	adds	r5, r4, r0
 8002e36:	022a      	lsls	r2, r5, #8
 8002e38:	d400      	bmi.n	8002e3c <__aeabi_dsub+0x54c>
 8002e3a:	e0da      	b.n	8002ff2 <__aeabi_dsub+0x702>
 8002e3c:	4a72      	ldr	r2, [pc, #456]	@ (8003008 <__aeabi_dsub+0x718>)
 8002e3e:	085b      	lsrs	r3, r3, #1
 8002e40:	4015      	ands	r5, r2
 8002e42:	07ea      	lsls	r2, r5, #31
 8002e44:	431a      	orrs	r2, r3
 8002e46:	0869      	lsrs	r1, r5, #1
 8002e48:	075b      	lsls	r3, r3, #29
 8002e4a:	d400      	bmi.n	8002e4e <__aeabi_dsub+0x55e>
 8002e4c:	e14a      	b.n	80030e4 <__aeabi_dsub+0x7f4>
 8002e4e:	230f      	movs	r3, #15
 8002e50:	4013      	ands	r3, r2
 8002e52:	2b04      	cmp	r3, #4
 8002e54:	d100      	bne.n	8002e58 <__aeabi_dsub+0x568>
 8002e56:	e0fc      	b.n	8003052 <__aeabi_dsub+0x762>
 8002e58:	1d17      	adds	r7, r2, #4
 8002e5a:	4297      	cmp	r7, r2
 8002e5c:	41a4      	sbcs	r4, r4
 8002e5e:	4264      	negs	r4, r4
 8002e60:	2502      	movs	r5, #2
 8002e62:	1864      	adds	r4, r4, r1
 8002e64:	e6ec      	b.n	8002c40 <__aeabi_dsub+0x350>
 8002e66:	4647      	mov	r7, r8
 8002e68:	001c      	movs	r4, r3
 8002e6a:	431f      	orrs	r7, r3
 8002e6c:	d000      	beq.n	8002e70 <__aeabi_dsub+0x580>
 8002e6e:	e743      	b.n	8002cf8 <__aeabi_dsub+0x408>
 8002e70:	2600      	movs	r6, #0
 8002e72:	2500      	movs	r5, #0
 8002e74:	2400      	movs	r4, #0
 8002e76:	e6cf      	b.n	8002c18 <__aeabi_dsub+0x328>
 8002e78:	08c0      	lsrs	r0, r0, #3
 8002e7a:	0767      	lsls	r7, r4, #29
 8002e7c:	4307      	orrs	r7, r0
 8002e7e:	08e5      	lsrs	r5, r4, #3
 8002e80:	e632      	b.n	8002ae8 <__aeabi_dsub+0x1f8>
 8002e82:	1a87      	subs	r7, r0, r2
 8002e84:	465b      	mov	r3, fp
 8002e86:	42b8      	cmp	r0, r7
 8002e88:	4180      	sbcs	r0, r0
 8002e8a:	1ae4      	subs	r4, r4, r3
 8002e8c:	4240      	negs	r0, r0
 8002e8e:	1a24      	subs	r4, r4, r0
 8002e90:	0223      	lsls	r3, r4, #8
 8002e92:	d428      	bmi.n	8002ee6 <__aeabi_dsub+0x5f6>
 8002e94:	0763      	lsls	r3, r4, #29
 8002e96:	08ff      	lsrs	r7, r7, #3
 8002e98:	431f      	orrs	r7, r3
 8002e9a:	08e5      	lsrs	r5, r4, #3
 8002e9c:	2301      	movs	r3, #1
 8002e9e:	e77f      	b.n	8002da0 <__aeabi_dsub+0x4b0>
 8002ea0:	2b00      	cmp	r3, #0
 8002ea2:	d100      	bne.n	8002ea6 <__aeabi_dsub+0x5b6>
 8002ea4:	e673      	b.n	8002b8e <__aeabi_dsub+0x29e>
 8002ea6:	464b      	mov	r3, r9
 8002ea8:	1b5f      	subs	r7, r3, r5
 8002eaa:	003b      	movs	r3, r7
 8002eac:	2d00      	cmp	r5, #0
 8002eae:	d100      	bne.n	8002eb2 <__aeabi_dsub+0x5c2>
 8002eb0:	e742      	b.n	8002d38 <__aeabi_dsub+0x448>
 8002eb2:	2f38      	cmp	r7, #56	@ 0x38
 8002eb4:	dd00      	ble.n	8002eb8 <__aeabi_dsub+0x5c8>
 8002eb6:	e0ec      	b.n	8003092 <__aeabi_dsub+0x7a2>
 8002eb8:	2380      	movs	r3, #128	@ 0x80
 8002eba:	000e      	movs	r6, r1
 8002ebc:	041b      	lsls	r3, r3, #16
 8002ebe:	431c      	orrs	r4, r3
 8002ec0:	2f1f      	cmp	r7, #31
 8002ec2:	dc25      	bgt.n	8002f10 <__aeabi_dsub+0x620>
 8002ec4:	2520      	movs	r5, #32
 8002ec6:	0023      	movs	r3, r4
 8002ec8:	1bed      	subs	r5, r5, r7
 8002eca:	0001      	movs	r1, r0
 8002ecc:	40a8      	lsls	r0, r5
 8002ece:	40ab      	lsls	r3, r5
 8002ed0:	40f9      	lsrs	r1, r7
 8002ed2:	1e45      	subs	r5, r0, #1
 8002ed4:	41a8      	sbcs	r0, r5
 8002ed6:	430b      	orrs	r3, r1
 8002ed8:	40fc      	lsrs	r4, r7
 8002eda:	4318      	orrs	r0, r3
 8002edc:	465b      	mov	r3, fp
 8002ede:	1b1b      	subs	r3, r3, r4
 8002ee0:	469b      	mov	fp, r3
 8002ee2:	e739      	b.n	8002d58 <__aeabi_dsub+0x468>
 8002ee4:	4666      	mov	r6, ip
 8002ee6:	2501      	movs	r5, #1
 8002ee8:	e562      	b.n	80029b0 <__aeabi_dsub+0xc0>
 8002eea:	001f      	movs	r7, r3
 8002eec:	4659      	mov	r1, fp
 8002eee:	3f20      	subs	r7, #32
 8002ef0:	40f9      	lsrs	r1, r7
 8002ef2:	468c      	mov	ip, r1
 8002ef4:	2b20      	cmp	r3, #32
 8002ef6:	d005      	beq.n	8002f04 <__aeabi_dsub+0x614>
 8002ef8:	2740      	movs	r7, #64	@ 0x40
 8002efa:	4659      	mov	r1, fp
 8002efc:	1afb      	subs	r3, r7, r3
 8002efe:	4099      	lsls	r1, r3
 8002f00:	430a      	orrs	r2, r1
 8002f02:	4692      	mov	sl, r2
 8002f04:	4657      	mov	r7, sl
 8002f06:	1e7b      	subs	r3, r7, #1
 8002f08:	419f      	sbcs	r7, r3
 8002f0a:	4663      	mov	r3, ip
 8002f0c:	431f      	orrs	r7, r3
 8002f0e:	e5c1      	b.n	8002a94 <__aeabi_dsub+0x1a4>
 8002f10:	003b      	movs	r3, r7
 8002f12:	0025      	movs	r5, r4
 8002f14:	3b20      	subs	r3, #32
 8002f16:	40dd      	lsrs	r5, r3
 8002f18:	2f20      	cmp	r7, #32
 8002f1a:	d004      	beq.n	8002f26 <__aeabi_dsub+0x636>
 8002f1c:	2340      	movs	r3, #64	@ 0x40
 8002f1e:	1bdb      	subs	r3, r3, r7
 8002f20:	409c      	lsls	r4, r3
 8002f22:	4320      	orrs	r0, r4
 8002f24:	4680      	mov	r8, r0
 8002f26:	4640      	mov	r0, r8
 8002f28:	1e43      	subs	r3, r0, #1
 8002f2a:	4198      	sbcs	r0, r3
 8002f2c:	4328      	orrs	r0, r5
 8002f2e:	e713      	b.n	8002d58 <__aeabi_dsub+0x468>
 8002f30:	2900      	cmp	r1, #0
 8002f32:	d09d      	beq.n	8002e70 <__aeabi_dsub+0x580>
 8002f34:	2601      	movs	r6, #1
 8002f36:	4663      	mov	r3, ip
 8002f38:	465c      	mov	r4, fp
 8002f3a:	4690      	mov	r8, r2
 8002f3c:	401e      	ands	r6, r3
 8002f3e:	e6db      	b.n	8002cf8 <__aeabi_dsub+0x408>
 8002f40:	1a17      	subs	r7, r2, r0
 8002f42:	465b      	mov	r3, fp
 8002f44:	42ba      	cmp	r2, r7
 8002f46:	4192      	sbcs	r2, r2
 8002f48:	1b1c      	subs	r4, r3, r4
 8002f4a:	4252      	negs	r2, r2
 8002f4c:	1aa4      	subs	r4, r4, r2
 8002f4e:	0223      	lsls	r3, r4, #8
 8002f50:	d4c8      	bmi.n	8002ee4 <__aeabi_dsub+0x5f4>
 8002f52:	0763      	lsls	r3, r4, #29
 8002f54:	08ff      	lsrs	r7, r7, #3
 8002f56:	431f      	orrs	r7, r3
 8002f58:	4666      	mov	r6, ip
 8002f5a:	2301      	movs	r3, #1
 8002f5c:	08e5      	lsrs	r5, r4, #3
 8002f5e:	e71f      	b.n	8002da0 <__aeabi_dsub+0x4b0>
 8002f60:	001d      	movs	r5, r3
 8002f62:	2400      	movs	r4, #0
 8002f64:	2700      	movs	r7, #0
 8002f66:	e657      	b.n	8002c18 <__aeabi_dsub+0x328>
 8002f68:	465c      	mov	r4, fp
 8002f6a:	08d0      	lsrs	r0, r2, #3
 8002f6c:	e66a      	b.n	8002c44 <__aeabi_dsub+0x354>
 8002f6e:	2b00      	cmp	r3, #0
 8002f70:	d100      	bne.n	8002f74 <__aeabi_dsub+0x684>
 8002f72:	e737      	b.n	8002de4 <__aeabi_dsub+0x4f4>
 8002f74:	4653      	mov	r3, sl
 8002f76:	08c0      	lsrs	r0, r0, #3
 8002f78:	0767      	lsls	r7, r4, #29
 8002f7a:	4307      	orrs	r7, r0
 8002f7c:	08e5      	lsrs	r5, r4, #3
 8002f7e:	2b00      	cmp	r3, #0
 8002f80:	d100      	bne.n	8002f84 <__aeabi_dsub+0x694>
 8002f82:	e5b1      	b.n	8002ae8 <__aeabi_dsub+0x1f8>
 8002f84:	2380      	movs	r3, #128	@ 0x80
 8002f86:	031b      	lsls	r3, r3, #12
 8002f88:	421d      	tst	r5, r3
 8002f8a:	d008      	beq.n	8002f9e <__aeabi_dsub+0x6ae>
 8002f8c:	4659      	mov	r1, fp
 8002f8e:	08c8      	lsrs	r0, r1, #3
 8002f90:	4218      	tst	r0, r3
 8002f92:	d104      	bne.n	8002f9e <__aeabi_dsub+0x6ae>
 8002f94:	08d2      	lsrs	r2, r2, #3
 8002f96:	0749      	lsls	r1, r1, #29
 8002f98:	430a      	orrs	r2, r1
 8002f9a:	0017      	movs	r7, r2
 8002f9c:	0005      	movs	r5, r0
 8002f9e:	0f7b      	lsrs	r3, r7, #29
 8002fa0:	00ff      	lsls	r7, r7, #3
 8002fa2:	08ff      	lsrs	r7, r7, #3
 8002fa4:	075b      	lsls	r3, r3, #29
 8002fa6:	431f      	orrs	r7, r3
 8002fa8:	e59e      	b.n	8002ae8 <__aeabi_dsub+0x1f8>
 8002faa:	08c0      	lsrs	r0, r0, #3
 8002fac:	0763      	lsls	r3, r4, #29
 8002fae:	4318      	orrs	r0, r3
 8002fb0:	08e5      	lsrs	r5, r4, #3
 8002fb2:	2900      	cmp	r1, #0
 8002fb4:	d053      	beq.n	800305e <__aeabi_dsub+0x76e>
 8002fb6:	2380      	movs	r3, #128	@ 0x80
 8002fb8:	031b      	lsls	r3, r3, #12
 8002fba:	421d      	tst	r5, r3
 8002fbc:	d00a      	beq.n	8002fd4 <__aeabi_dsub+0x6e4>
 8002fbe:	4659      	mov	r1, fp
 8002fc0:	08cc      	lsrs	r4, r1, #3
 8002fc2:	421c      	tst	r4, r3
 8002fc4:	d106      	bne.n	8002fd4 <__aeabi_dsub+0x6e4>
 8002fc6:	2601      	movs	r6, #1
 8002fc8:	4663      	mov	r3, ip
 8002fca:	0025      	movs	r5, r4
 8002fcc:	08d0      	lsrs	r0, r2, #3
 8002fce:	0749      	lsls	r1, r1, #29
 8002fd0:	4308      	orrs	r0, r1
 8002fd2:	401e      	ands	r6, r3
 8002fd4:	0f47      	lsrs	r7, r0, #29
 8002fd6:	00c0      	lsls	r0, r0, #3
 8002fd8:	08c0      	lsrs	r0, r0, #3
 8002fda:	077f      	lsls	r7, r7, #29
 8002fdc:	4307      	orrs	r7, r0
 8002fde:	e583      	b.n	8002ae8 <__aeabi_dsub+0x1f8>
 8002fe0:	1883      	adds	r3, r0, r2
 8002fe2:	4293      	cmp	r3, r2
 8002fe4:	4192      	sbcs	r2, r2
 8002fe6:	445c      	add	r4, fp
 8002fe8:	4252      	negs	r2, r2
 8002fea:	18a5      	adds	r5, r4, r2
 8002fec:	022a      	lsls	r2, r5, #8
 8002fee:	d500      	bpl.n	8002ff2 <__aeabi_dsub+0x702>
 8002ff0:	e724      	b.n	8002e3c <__aeabi_dsub+0x54c>
 8002ff2:	076f      	lsls	r7, r5, #29
 8002ff4:	08db      	lsrs	r3, r3, #3
 8002ff6:	431f      	orrs	r7, r3
 8002ff8:	08ed      	lsrs	r5, r5, #3
 8002ffa:	2301      	movs	r3, #1
 8002ffc:	e6d0      	b.n	8002da0 <__aeabi_dsub+0x4b0>
 8002ffe:	46c0      	nop			@ (mov r8, r8)
 8003000:	000007ff 	.word	0x000007ff
 8003004:	000007fe 	.word	0x000007fe
 8003008:	ff7fffff 	.word	0xff7fffff
 800300c:	465b      	mov	r3, fp
 800300e:	08d2      	lsrs	r2, r2, #3
 8003010:	075f      	lsls	r7, r3, #29
 8003012:	4666      	mov	r6, ip
 8003014:	4317      	orrs	r7, r2
 8003016:	08dd      	lsrs	r5, r3, #3
 8003018:	e566      	b.n	8002ae8 <__aeabi_dsub+0x1f8>
 800301a:	0025      	movs	r5, r4
 800301c:	3b20      	subs	r3, #32
 800301e:	40dd      	lsrs	r5, r3
 8003020:	4663      	mov	r3, ip
 8003022:	2b20      	cmp	r3, #32
 8003024:	d005      	beq.n	8003032 <__aeabi_dsub+0x742>
 8003026:	2340      	movs	r3, #64	@ 0x40
 8003028:	4661      	mov	r1, ip
 800302a:	1a5b      	subs	r3, r3, r1
 800302c:	409c      	lsls	r4, r3
 800302e:	4320      	orrs	r0, r4
 8003030:	4680      	mov	r8, r0
 8003032:	4647      	mov	r7, r8
 8003034:	1e7b      	subs	r3, r7, #1
 8003036:	419f      	sbcs	r7, r3
 8003038:	432f      	orrs	r7, r5
 800303a:	e5a0      	b.n	8002b7e <__aeabi_dsub+0x28e>
 800303c:	2120      	movs	r1, #32
 800303e:	2700      	movs	r7, #0
 8003040:	1a09      	subs	r1, r1, r0
 8003042:	e4d2      	b.n	80029ea <__aeabi_dsub+0xfa>
 8003044:	2f00      	cmp	r7, #0
 8003046:	d100      	bne.n	800304a <__aeabi_dsub+0x75a>
 8003048:	e713      	b.n	8002e72 <__aeabi_dsub+0x582>
 800304a:	465c      	mov	r4, fp
 800304c:	0017      	movs	r7, r2
 800304e:	2500      	movs	r5, #0
 8003050:	e5f6      	b.n	8002c40 <__aeabi_dsub+0x350>
 8003052:	08d7      	lsrs	r7, r2, #3
 8003054:	0749      	lsls	r1, r1, #29
 8003056:	2302      	movs	r3, #2
 8003058:	430f      	orrs	r7, r1
 800305a:	092d      	lsrs	r5, r5, #4
 800305c:	e6a0      	b.n	8002da0 <__aeabi_dsub+0x4b0>
 800305e:	0007      	movs	r7, r0
 8003060:	e542      	b.n	8002ae8 <__aeabi_dsub+0x1f8>
 8003062:	465b      	mov	r3, fp
 8003064:	2601      	movs	r6, #1
 8003066:	075f      	lsls	r7, r3, #29
 8003068:	08dd      	lsrs	r5, r3, #3
 800306a:	4663      	mov	r3, ip
 800306c:	08d2      	lsrs	r2, r2, #3
 800306e:	4317      	orrs	r7, r2
 8003070:	401e      	ands	r6, r3
 8003072:	e539      	b.n	8002ae8 <__aeabi_dsub+0x1f8>
 8003074:	465b      	mov	r3, fp
 8003076:	08d2      	lsrs	r2, r2, #3
 8003078:	075f      	lsls	r7, r3, #29
 800307a:	4317      	orrs	r7, r2
 800307c:	08dd      	lsrs	r5, r3, #3
 800307e:	e533      	b.n	8002ae8 <__aeabi_dsub+0x1f8>
 8003080:	4a1e      	ldr	r2, [pc, #120]	@ (80030fc <__aeabi_dsub+0x80c>)
 8003082:	08db      	lsrs	r3, r3, #3
 8003084:	4022      	ands	r2, r4
 8003086:	0757      	lsls	r7, r2, #29
 8003088:	0252      	lsls	r2, r2, #9
 800308a:	2501      	movs	r5, #1
 800308c:	431f      	orrs	r7, r3
 800308e:	0b14      	lsrs	r4, r2, #12
 8003090:	e5c2      	b.n	8002c18 <__aeabi_dsub+0x328>
 8003092:	000e      	movs	r6, r1
 8003094:	2001      	movs	r0, #1
 8003096:	e65f      	b.n	8002d58 <__aeabi_dsub+0x468>
 8003098:	2b00      	cmp	r3, #0
 800309a:	d00d      	beq.n	80030b8 <__aeabi_dsub+0x7c8>
 800309c:	464b      	mov	r3, r9
 800309e:	1b5b      	subs	r3, r3, r5
 80030a0:	469c      	mov	ip, r3
 80030a2:	2d00      	cmp	r5, #0
 80030a4:	d100      	bne.n	80030a8 <__aeabi_dsub+0x7b8>
 80030a6:	e548      	b.n	8002b3a <__aeabi_dsub+0x24a>
 80030a8:	2701      	movs	r7, #1
 80030aa:	2b38      	cmp	r3, #56	@ 0x38
 80030ac:	dd00      	ble.n	80030b0 <__aeabi_dsub+0x7c0>
 80030ae:	e566      	b.n	8002b7e <__aeabi_dsub+0x28e>
 80030b0:	2380      	movs	r3, #128	@ 0x80
 80030b2:	041b      	lsls	r3, r3, #16
 80030b4:	431c      	orrs	r4, r3
 80030b6:	e550      	b.n	8002b5a <__aeabi_dsub+0x26a>
 80030b8:	1c6b      	adds	r3, r5, #1
 80030ba:	4d11      	ldr	r5, [pc, #68]	@ (8003100 <__aeabi_dsub+0x810>)
 80030bc:	422b      	tst	r3, r5
 80030be:	d000      	beq.n	80030c2 <__aeabi_dsub+0x7d2>
 80030c0:	e673      	b.n	8002daa <__aeabi_dsub+0x4ba>
 80030c2:	4659      	mov	r1, fp
 80030c4:	0023      	movs	r3, r4
 80030c6:	4311      	orrs	r1, r2
 80030c8:	468a      	mov	sl, r1
 80030ca:	4303      	orrs	r3, r0
 80030cc:	e600      	b.n	8002cd0 <__aeabi_dsub+0x3e0>
 80030ce:	0767      	lsls	r7, r4, #29
 80030d0:	08c0      	lsrs	r0, r0, #3
 80030d2:	2300      	movs	r3, #0
 80030d4:	4307      	orrs	r7, r0
 80030d6:	08e5      	lsrs	r5, r4, #3
 80030d8:	e662      	b.n	8002da0 <__aeabi_dsub+0x4b0>
 80030da:	0764      	lsls	r4, r4, #29
 80030dc:	08ff      	lsrs	r7, r7, #3
 80030de:	4327      	orrs	r7, r4
 80030e0:	0905      	lsrs	r5, r0, #4
 80030e2:	e65d      	b.n	8002da0 <__aeabi_dsub+0x4b0>
 80030e4:	08d2      	lsrs	r2, r2, #3
 80030e6:	0749      	lsls	r1, r1, #29
 80030e8:	4311      	orrs	r1, r2
 80030ea:	000f      	movs	r7, r1
 80030ec:	2302      	movs	r3, #2
 80030ee:	092d      	lsrs	r5, r5, #4
 80030f0:	e656      	b.n	8002da0 <__aeabi_dsub+0x4b0>
 80030f2:	0007      	movs	r7, r0
 80030f4:	e5a4      	b.n	8002c40 <__aeabi_dsub+0x350>
 80030f6:	0038      	movs	r0, r7
 80030f8:	e48f      	b.n	8002a1a <__aeabi_dsub+0x12a>
 80030fa:	46c0      	nop			@ (mov r8, r8)
 80030fc:	ff7fffff 	.word	0xff7fffff
 8003100:	000007fe 	.word	0x000007fe

08003104 <__aeabi_d2iz>:
 8003104:	000b      	movs	r3, r1
 8003106:	0002      	movs	r2, r0
 8003108:	b570      	push	{r4, r5, r6, lr}
 800310a:	4d16      	ldr	r5, [pc, #88]	@ (8003164 <__aeabi_d2iz+0x60>)
 800310c:	030c      	lsls	r4, r1, #12
 800310e:	b082      	sub	sp, #8
 8003110:	0049      	lsls	r1, r1, #1
 8003112:	2000      	movs	r0, #0
 8003114:	9200      	str	r2, [sp, #0]
 8003116:	9301      	str	r3, [sp, #4]
 8003118:	0b24      	lsrs	r4, r4, #12
 800311a:	0d49      	lsrs	r1, r1, #21
 800311c:	0fde      	lsrs	r6, r3, #31
 800311e:	42a9      	cmp	r1, r5
 8003120:	dd04      	ble.n	800312c <__aeabi_d2iz+0x28>
 8003122:	4811      	ldr	r0, [pc, #68]	@ (8003168 <__aeabi_d2iz+0x64>)
 8003124:	4281      	cmp	r1, r0
 8003126:	dd03      	ble.n	8003130 <__aeabi_d2iz+0x2c>
 8003128:	4b10      	ldr	r3, [pc, #64]	@ (800316c <__aeabi_d2iz+0x68>)
 800312a:	18f0      	adds	r0, r6, r3
 800312c:	b002      	add	sp, #8
 800312e:	bd70      	pop	{r4, r5, r6, pc}
 8003130:	2080      	movs	r0, #128	@ 0x80
 8003132:	0340      	lsls	r0, r0, #13
 8003134:	4320      	orrs	r0, r4
 8003136:	4c0e      	ldr	r4, [pc, #56]	@ (8003170 <__aeabi_d2iz+0x6c>)
 8003138:	1a64      	subs	r4, r4, r1
 800313a:	2c1f      	cmp	r4, #31
 800313c:	dd08      	ble.n	8003150 <__aeabi_d2iz+0x4c>
 800313e:	4b0d      	ldr	r3, [pc, #52]	@ (8003174 <__aeabi_d2iz+0x70>)
 8003140:	1a5b      	subs	r3, r3, r1
 8003142:	40d8      	lsrs	r0, r3
 8003144:	0003      	movs	r3, r0
 8003146:	4258      	negs	r0, r3
 8003148:	2e00      	cmp	r6, #0
 800314a:	d1ef      	bne.n	800312c <__aeabi_d2iz+0x28>
 800314c:	0018      	movs	r0, r3
 800314e:	e7ed      	b.n	800312c <__aeabi_d2iz+0x28>
 8003150:	4b09      	ldr	r3, [pc, #36]	@ (8003178 <__aeabi_d2iz+0x74>)
 8003152:	9a00      	ldr	r2, [sp, #0]
 8003154:	469c      	mov	ip, r3
 8003156:	0003      	movs	r3, r0
 8003158:	4461      	add	r1, ip
 800315a:	408b      	lsls	r3, r1
 800315c:	40e2      	lsrs	r2, r4
 800315e:	4313      	orrs	r3, r2
 8003160:	e7f1      	b.n	8003146 <__aeabi_d2iz+0x42>
 8003162:	46c0      	nop			@ (mov r8, r8)
 8003164:	000003fe 	.word	0x000003fe
 8003168:	0000041d 	.word	0x0000041d
 800316c:	7fffffff 	.word	0x7fffffff
 8003170:	00000433 	.word	0x00000433
 8003174:	00000413 	.word	0x00000413
 8003178:	fffffbed 	.word	0xfffffbed

0800317c <__aeabi_i2d>:
 800317c:	b570      	push	{r4, r5, r6, lr}
 800317e:	2800      	cmp	r0, #0
 8003180:	d016      	beq.n	80031b0 <__aeabi_i2d+0x34>
 8003182:	17c3      	asrs	r3, r0, #31
 8003184:	18c5      	adds	r5, r0, r3
 8003186:	405d      	eors	r5, r3
 8003188:	0fc4      	lsrs	r4, r0, #31
 800318a:	0028      	movs	r0, r5
 800318c:	f000 f912 	bl	80033b4 <__clzsi2>
 8003190:	4b10      	ldr	r3, [pc, #64]	@ (80031d4 <__aeabi_i2d+0x58>)
 8003192:	1a1b      	subs	r3, r3, r0
 8003194:	055b      	lsls	r3, r3, #21
 8003196:	0d5b      	lsrs	r3, r3, #21
 8003198:	280a      	cmp	r0, #10
 800319a:	dc14      	bgt.n	80031c6 <__aeabi_i2d+0x4a>
 800319c:	0002      	movs	r2, r0
 800319e:	002e      	movs	r6, r5
 80031a0:	3215      	adds	r2, #21
 80031a2:	4096      	lsls	r6, r2
 80031a4:	220b      	movs	r2, #11
 80031a6:	1a12      	subs	r2, r2, r0
 80031a8:	40d5      	lsrs	r5, r2
 80031aa:	032d      	lsls	r5, r5, #12
 80031ac:	0b2d      	lsrs	r5, r5, #12
 80031ae:	e003      	b.n	80031b8 <__aeabi_i2d+0x3c>
 80031b0:	2400      	movs	r4, #0
 80031b2:	2300      	movs	r3, #0
 80031b4:	2500      	movs	r5, #0
 80031b6:	2600      	movs	r6, #0
 80031b8:	051b      	lsls	r3, r3, #20
 80031ba:	432b      	orrs	r3, r5
 80031bc:	07e4      	lsls	r4, r4, #31
 80031be:	4323      	orrs	r3, r4
 80031c0:	0030      	movs	r0, r6
 80031c2:	0019      	movs	r1, r3
 80031c4:	bd70      	pop	{r4, r5, r6, pc}
 80031c6:	380b      	subs	r0, #11
 80031c8:	4085      	lsls	r5, r0
 80031ca:	032d      	lsls	r5, r5, #12
 80031cc:	2600      	movs	r6, #0
 80031ce:	0b2d      	lsrs	r5, r5, #12
 80031d0:	e7f2      	b.n	80031b8 <__aeabi_i2d+0x3c>
 80031d2:	46c0      	nop			@ (mov r8, r8)
 80031d4:	0000041e 	.word	0x0000041e

080031d8 <__aeabi_ui2d>:
 80031d8:	b510      	push	{r4, lr}
 80031da:	1e04      	subs	r4, r0, #0
 80031dc:	d010      	beq.n	8003200 <__aeabi_ui2d+0x28>
 80031de:	f000 f8e9 	bl	80033b4 <__clzsi2>
 80031e2:	4b0e      	ldr	r3, [pc, #56]	@ (800321c <__aeabi_ui2d+0x44>)
 80031e4:	1a1b      	subs	r3, r3, r0
 80031e6:	055b      	lsls	r3, r3, #21
 80031e8:	0d5b      	lsrs	r3, r3, #21
 80031ea:	280a      	cmp	r0, #10
 80031ec:	dc0f      	bgt.n	800320e <__aeabi_ui2d+0x36>
 80031ee:	220b      	movs	r2, #11
 80031f0:	0021      	movs	r1, r4
 80031f2:	1a12      	subs	r2, r2, r0
 80031f4:	40d1      	lsrs	r1, r2
 80031f6:	3015      	adds	r0, #21
 80031f8:	030a      	lsls	r2, r1, #12
 80031fa:	4084      	lsls	r4, r0
 80031fc:	0b12      	lsrs	r2, r2, #12
 80031fe:	e001      	b.n	8003204 <__aeabi_ui2d+0x2c>
 8003200:	2300      	movs	r3, #0
 8003202:	2200      	movs	r2, #0
 8003204:	051b      	lsls	r3, r3, #20
 8003206:	4313      	orrs	r3, r2
 8003208:	0020      	movs	r0, r4
 800320a:	0019      	movs	r1, r3
 800320c:	bd10      	pop	{r4, pc}
 800320e:	0022      	movs	r2, r4
 8003210:	380b      	subs	r0, #11
 8003212:	4082      	lsls	r2, r0
 8003214:	0312      	lsls	r2, r2, #12
 8003216:	2400      	movs	r4, #0
 8003218:	0b12      	lsrs	r2, r2, #12
 800321a:	e7f3      	b.n	8003204 <__aeabi_ui2d+0x2c>
 800321c:	0000041e 	.word	0x0000041e

08003220 <__aeabi_f2d>:
 8003220:	b570      	push	{r4, r5, r6, lr}
 8003222:	0242      	lsls	r2, r0, #9
 8003224:	0043      	lsls	r3, r0, #1
 8003226:	0fc4      	lsrs	r4, r0, #31
 8003228:	20fe      	movs	r0, #254	@ 0xfe
 800322a:	0e1b      	lsrs	r3, r3, #24
 800322c:	1c59      	adds	r1, r3, #1
 800322e:	0a55      	lsrs	r5, r2, #9
 8003230:	4208      	tst	r0, r1
 8003232:	d00c      	beq.n	800324e <__aeabi_f2d+0x2e>
 8003234:	21e0      	movs	r1, #224	@ 0xe0
 8003236:	0089      	lsls	r1, r1, #2
 8003238:	468c      	mov	ip, r1
 800323a:	076d      	lsls	r5, r5, #29
 800323c:	0b12      	lsrs	r2, r2, #12
 800323e:	4463      	add	r3, ip
 8003240:	051b      	lsls	r3, r3, #20
 8003242:	4313      	orrs	r3, r2
 8003244:	07e4      	lsls	r4, r4, #31
 8003246:	4323      	orrs	r3, r4
 8003248:	0028      	movs	r0, r5
 800324a:	0019      	movs	r1, r3
 800324c:	bd70      	pop	{r4, r5, r6, pc}
 800324e:	2b00      	cmp	r3, #0
 8003250:	d114      	bne.n	800327c <__aeabi_f2d+0x5c>
 8003252:	2d00      	cmp	r5, #0
 8003254:	d01b      	beq.n	800328e <__aeabi_f2d+0x6e>
 8003256:	0028      	movs	r0, r5
 8003258:	f000 f8ac 	bl	80033b4 <__clzsi2>
 800325c:	280a      	cmp	r0, #10
 800325e:	dc1c      	bgt.n	800329a <__aeabi_f2d+0x7a>
 8003260:	230b      	movs	r3, #11
 8003262:	002a      	movs	r2, r5
 8003264:	1a1b      	subs	r3, r3, r0
 8003266:	40da      	lsrs	r2, r3
 8003268:	0003      	movs	r3, r0
 800326a:	3315      	adds	r3, #21
 800326c:	409d      	lsls	r5, r3
 800326e:	4b0e      	ldr	r3, [pc, #56]	@ (80032a8 <__aeabi_f2d+0x88>)
 8003270:	0312      	lsls	r2, r2, #12
 8003272:	1a1b      	subs	r3, r3, r0
 8003274:	055b      	lsls	r3, r3, #21
 8003276:	0b12      	lsrs	r2, r2, #12
 8003278:	0d5b      	lsrs	r3, r3, #21
 800327a:	e7e1      	b.n	8003240 <__aeabi_f2d+0x20>
 800327c:	2d00      	cmp	r5, #0
 800327e:	d009      	beq.n	8003294 <__aeabi_f2d+0x74>
 8003280:	0b13      	lsrs	r3, r2, #12
 8003282:	2280      	movs	r2, #128	@ 0x80
 8003284:	0312      	lsls	r2, r2, #12
 8003286:	431a      	orrs	r2, r3
 8003288:	076d      	lsls	r5, r5, #29
 800328a:	4b08      	ldr	r3, [pc, #32]	@ (80032ac <__aeabi_f2d+0x8c>)
 800328c:	e7d8      	b.n	8003240 <__aeabi_f2d+0x20>
 800328e:	2300      	movs	r3, #0
 8003290:	2200      	movs	r2, #0
 8003292:	e7d5      	b.n	8003240 <__aeabi_f2d+0x20>
 8003294:	2200      	movs	r2, #0
 8003296:	4b05      	ldr	r3, [pc, #20]	@ (80032ac <__aeabi_f2d+0x8c>)
 8003298:	e7d2      	b.n	8003240 <__aeabi_f2d+0x20>
 800329a:	0003      	movs	r3, r0
 800329c:	002a      	movs	r2, r5
 800329e:	3b0b      	subs	r3, #11
 80032a0:	409a      	lsls	r2, r3
 80032a2:	2500      	movs	r5, #0
 80032a4:	e7e3      	b.n	800326e <__aeabi_f2d+0x4e>
 80032a6:	46c0      	nop			@ (mov r8, r8)
 80032a8:	00000389 	.word	0x00000389
 80032ac:	000007ff 	.word	0x000007ff

080032b0 <__aeabi_d2f>:
 80032b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80032b2:	004b      	lsls	r3, r1, #1
 80032b4:	030f      	lsls	r7, r1, #12
 80032b6:	0d5b      	lsrs	r3, r3, #21
 80032b8:	4c3a      	ldr	r4, [pc, #232]	@ (80033a4 <__aeabi_d2f+0xf4>)
 80032ba:	0f45      	lsrs	r5, r0, #29
 80032bc:	b083      	sub	sp, #12
 80032be:	0a7f      	lsrs	r7, r7, #9
 80032c0:	1c5e      	adds	r6, r3, #1
 80032c2:	432f      	orrs	r7, r5
 80032c4:	9000      	str	r0, [sp, #0]
 80032c6:	9101      	str	r1, [sp, #4]
 80032c8:	0fca      	lsrs	r2, r1, #31
 80032ca:	00c5      	lsls	r5, r0, #3
 80032cc:	4226      	tst	r6, r4
 80032ce:	d00b      	beq.n	80032e8 <__aeabi_d2f+0x38>
 80032d0:	4935      	ldr	r1, [pc, #212]	@ (80033a8 <__aeabi_d2f+0xf8>)
 80032d2:	185c      	adds	r4, r3, r1
 80032d4:	2cfe      	cmp	r4, #254	@ 0xfe
 80032d6:	dd13      	ble.n	8003300 <__aeabi_d2f+0x50>
 80032d8:	20ff      	movs	r0, #255	@ 0xff
 80032da:	2300      	movs	r3, #0
 80032dc:	05c0      	lsls	r0, r0, #23
 80032de:	4318      	orrs	r0, r3
 80032e0:	07d2      	lsls	r2, r2, #31
 80032e2:	4310      	orrs	r0, r2
 80032e4:	b003      	add	sp, #12
 80032e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80032e8:	433d      	orrs	r5, r7
 80032ea:	2b00      	cmp	r3, #0
 80032ec:	d101      	bne.n	80032f2 <__aeabi_d2f+0x42>
 80032ee:	2000      	movs	r0, #0
 80032f0:	e7f4      	b.n	80032dc <__aeabi_d2f+0x2c>
 80032f2:	2d00      	cmp	r5, #0
 80032f4:	d0f0      	beq.n	80032d8 <__aeabi_d2f+0x28>
 80032f6:	2380      	movs	r3, #128	@ 0x80
 80032f8:	03db      	lsls	r3, r3, #15
 80032fa:	20ff      	movs	r0, #255	@ 0xff
 80032fc:	433b      	orrs	r3, r7
 80032fe:	e7ed      	b.n	80032dc <__aeabi_d2f+0x2c>
 8003300:	2c00      	cmp	r4, #0
 8003302:	dd0c      	ble.n	800331e <__aeabi_d2f+0x6e>
 8003304:	9b00      	ldr	r3, [sp, #0]
 8003306:	00ff      	lsls	r7, r7, #3
 8003308:	019b      	lsls	r3, r3, #6
 800330a:	1e58      	subs	r0, r3, #1
 800330c:	4183      	sbcs	r3, r0
 800330e:	0f69      	lsrs	r1, r5, #29
 8003310:	433b      	orrs	r3, r7
 8003312:	430b      	orrs	r3, r1
 8003314:	0759      	lsls	r1, r3, #29
 8003316:	d127      	bne.n	8003368 <__aeabi_d2f+0xb8>
 8003318:	08db      	lsrs	r3, r3, #3
 800331a:	b2e0      	uxtb	r0, r4
 800331c:	e7de      	b.n	80032dc <__aeabi_d2f+0x2c>
 800331e:	0021      	movs	r1, r4
 8003320:	3117      	adds	r1, #23
 8003322:	db31      	blt.n	8003388 <__aeabi_d2f+0xd8>
 8003324:	2180      	movs	r1, #128	@ 0x80
 8003326:	201e      	movs	r0, #30
 8003328:	0409      	lsls	r1, r1, #16
 800332a:	4339      	orrs	r1, r7
 800332c:	1b00      	subs	r0, r0, r4
 800332e:	281f      	cmp	r0, #31
 8003330:	dd2d      	ble.n	800338e <__aeabi_d2f+0xde>
 8003332:	2602      	movs	r6, #2
 8003334:	4276      	negs	r6, r6
 8003336:	1b34      	subs	r4, r6, r4
 8003338:	000e      	movs	r6, r1
 800333a:	40e6      	lsrs	r6, r4
 800333c:	0034      	movs	r4, r6
 800333e:	2820      	cmp	r0, #32
 8003340:	d004      	beq.n	800334c <__aeabi_d2f+0x9c>
 8003342:	481a      	ldr	r0, [pc, #104]	@ (80033ac <__aeabi_d2f+0xfc>)
 8003344:	4684      	mov	ip, r0
 8003346:	4463      	add	r3, ip
 8003348:	4099      	lsls	r1, r3
 800334a:	430d      	orrs	r5, r1
 800334c:	002b      	movs	r3, r5
 800334e:	1e59      	subs	r1, r3, #1
 8003350:	418b      	sbcs	r3, r1
 8003352:	4323      	orrs	r3, r4
 8003354:	0759      	lsls	r1, r3, #29
 8003356:	d003      	beq.n	8003360 <__aeabi_d2f+0xb0>
 8003358:	210f      	movs	r1, #15
 800335a:	4019      	ands	r1, r3
 800335c:	2904      	cmp	r1, #4
 800335e:	d10b      	bne.n	8003378 <__aeabi_d2f+0xc8>
 8003360:	019b      	lsls	r3, r3, #6
 8003362:	2000      	movs	r0, #0
 8003364:	0a5b      	lsrs	r3, r3, #9
 8003366:	e7b9      	b.n	80032dc <__aeabi_d2f+0x2c>
 8003368:	210f      	movs	r1, #15
 800336a:	4019      	ands	r1, r3
 800336c:	2904      	cmp	r1, #4
 800336e:	d104      	bne.n	800337a <__aeabi_d2f+0xca>
 8003370:	019b      	lsls	r3, r3, #6
 8003372:	0a5b      	lsrs	r3, r3, #9
 8003374:	b2e0      	uxtb	r0, r4
 8003376:	e7b1      	b.n	80032dc <__aeabi_d2f+0x2c>
 8003378:	2400      	movs	r4, #0
 800337a:	3304      	adds	r3, #4
 800337c:	0159      	lsls	r1, r3, #5
 800337e:	d5f7      	bpl.n	8003370 <__aeabi_d2f+0xc0>
 8003380:	3401      	adds	r4, #1
 8003382:	2300      	movs	r3, #0
 8003384:	b2e0      	uxtb	r0, r4
 8003386:	e7a9      	b.n	80032dc <__aeabi_d2f+0x2c>
 8003388:	2000      	movs	r0, #0
 800338a:	2300      	movs	r3, #0
 800338c:	e7a6      	b.n	80032dc <__aeabi_d2f+0x2c>
 800338e:	4c08      	ldr	r4, [pc, #32]	@ (80033b0 <__aeabi_d2f+0x100>)
 8003390:	191c      	adds	r4, r3, r4
 8003392:	002b      	movs	r3, r5
 8003394:	40a5      	lsls	r5, r4
 8003396:	40c3      	lsrs	r3, r0
 8003398:	40a1      	lsls	r1, r4
 800339a:	1e68      	subs	r0, r5, #1
 800339c:	4185      	sbcs	r5, r0
 800339e:	4329      	orrs	r1, r5
 80033a0:	430b      	orrs	r3, r1
 80033a2:	e7d7      	b.n	8003354 <__aeabi_d2f+0xa4>
 80033a4:	000007fe 	.word	0x000007fe
 80033a8:	fffffc80 	.word	0xfffffc80
 80033ac:	fffffca2 	.word	0xfffffca2
 80033b0:	fffffc82 	.word	0xfffffc82

080033b4 <__clzsi2>:
 80033b4:	211c      	movs	r1, #28
 80033b6:	2301      	movs	r3, #1
 80033b8:	041b      	lsls	r3, r3, #16
 80033ba:	4298      	cmp	r0, r3
 80033bc:	d301      	bcc.n	80033c2 <__clzsi2+0xe>
 80033be:	0c00      	lsrs	r0, r0, #16
 80033c0:	3910      	subs	r1, #16
 80033c2:	0a1b      	lsrs	r3, r3, #8
 80033c4:	4298      	cmp	r0, r3
 80033c6:	d301      	bcc.n	80033cc <__clzsi2+0x18>
 80033c8:	0a00      	lsrs	r0, r0, #8
 80033ca:	3908      	subs	r1, #8
 80033cc:	091b      	lsrs	r3, r3, #4
 80033ce:	4298      	cmp	r0, r3
 80033d0:	d301      	bcc.n	80033d6 <__clzsi2+0x22>
 80033d2:	0900      	lsrs	r0, r0, #4
 80033d4:	3904      	subs	r1, #4
 80033d6:	a202      	add	r2, pc, #8	@ (adr r2, 80033e0 <__clzsi2+0x2c>)
 80033d8:	5c10      	ldrb	r0, [r2, r0]
 80033da:	1840      	adds	r0, r0, r1
 80033dc:	4770      	bx	lr
 80033de:	46c0      	nop			@ (mov r8, r8)
 80033e0:	02020304 	.word	0x02020304
 80033e4:	01010101 	.word	0x01010101
	...

080033f0 <calculate_crc_smbus>:

/**
 * Calculate CRC-8 SMBus using polynomial X^8 + X^2 + X + 1 (0x07)
 */

uint8_t calculate_crc_smbus(uint32_t raw_angle, uint8_t status) {
 80033f0:	b580      	push	{r7, lr}
 80033f2:	b088      	sub	sp, #32
 80033f4:	af00      	add	r7, sp, #0
 80033f6:	6078      	str	r0, [r7, #4]
 80033f8:	000a      	movs	r2, r1
 80033fa:	1cfb      	adds	r3, r7, #3
 80033fc:	701a      	strb	r2, [r3, #0]
    uint32_t data = ((raw_angle & 0x1FFFFF) << 3) | (status & 0x07); // Combine angle and status
 80033fe:	687b      	ldr	r3, [r7, #4]
 8003400:	00db      	lsls	r3, r3, #3
 8003402:	4a2e      	ldr	r2, [pc, #184]	@ (80034bc <calculate_crc_smbus+0xcc>)
 8003404:	401a      	ands	r2, r3
 8003406:	1cfb      	adds	r3, r7, #3
 8003408:	781b      	ldrb	r3, [r3, #0]
 800340a:	2107      	movs	r1, #7
 800340c:	400b      	ands	r3, r1
 800340e:	4313      	orrs	r3, r2
 8003410:	613b      	str	r3, [r7, #16]
    uint8_t data_bytes[3] = {
        (data >> 16) & 0xFF,
 8003412:	693b      	ldr	r3, [r7, #16]
 8003414:	0c1b      	lsrs	r3, r3, #16
    uint8_t data_bytes[3] = {
 8003416:	b2da      	uxtb	r2, r3
 8003418:	210c      	movs	r1, #12
 800341a:	187b      	adds	r3, r7, r1
 800341c:	701a      	strb	r2, [r3, #0]
        (data >> 8) & 0xFF,
 800341e:	693b      	ldr	r3, [r7, #16]
 8003420:	0a1b      	lsrs	r3, r3, #8
    uint8_t data_bytes[3] = {
 8003422:	b2da      	uxtb	r2, r3
 8003424:	187b      	adds	r3, r7, r1
 8003426:	705a      	strb	r2, [r3, #1]
 8003428:	693b      	ldr	r3, [r7, #16]
 800342a:	b2da      	uxtb	r2, r3
 800342c:	187b      	adds	r3, r7, r1
 800342e:	709a      	strb	r2, [r3, #2]
        data & 0xFF
    };

    uint8_t crc = CRC8_INITIAL_VALUE;
 8003430:	231f      	movs	r3, #31
 8003432:	18fb      	adds	r3, r7, r3
 8003434:	2200      	movs	r2, #0
 8003436:	701a      	strb	r2, [r3, #0]

    for (size_t i = 0; i < 3; i++) {
 8003438:	2300      	movs	r3, #0
 800343a:	61bb      	str	r3, [r7, #24]
 800343c:	e034      	b.n	80034a8 <calculate_crc_smbus+0xb8>
        crc ^= data_bytes[i]; // XOR the current data byte into the CRC
 800343e:	230c      	movs	r3, #12
 8003440:	18fa      	adds	r2, r7, r3
 8003442:	69bb      	ldr	r3, [r7, #24]
 8003444:	18d3      	adds	r3, r2, r3
 8003446:	7819      	ldrb	r1, [r3, #0]
 8003448:	221f      	movs	r2, #31
 800344a:	18bb      	adds	r3, r7, r2
 800344c:	18ba      	adds	r2, r7, r2
 800344e:	7812      	ldrb	r2, [r2, #0]
 8003450:	404a      	eors	r2, r1
 8003452:	701a      	strb	r2, [r3, #0]
        for (uint8_t bit = 0; bit < 8; bit++) {
 8003454:	2317      	movs	r3, #23
 8003456:	18fb      	adds	r3, r7, r3
 8003458:	2200      	movs	r2, #0
 800345a:	701a      	strb	r2, [r3, #0]
 800345c:	e01c      	b.n	8003498 <calculate_crc_smbus+0xa8>
            if (crc & 0x80) {
 800345e:	211f      	movs	r1, #31
 8003460:	187b      	adds	r3, r7, r1
 8003462:	781b      	ldrb	r3, [r3, #0]
 8003464:	b25b      	sxtb	r3, r3
 8003466:	2b00      	cmp	r3, #0
 8003468:	da0a      	bge.n	8003480 <calculate_crc_smbus+0x90>
                crc = (crc << 1) ^ CRC8_POLYNOMIAL;
 800346a:	187b      	adds	r3, r7, r1
 800346c:	781b      	ldrb	r3, [r3, #0]
 800346e:	b25b      	sxtb	r3, r3
 8003470:	18db      	adds	r3, r3, r3
 8003472:	b25b      	sxtb	r3, r3
 8003474:	2207      	movs	r2, #7
 8003476:	4053      	eors	r3, r2
 8003478:	b25a      	sxtb	r2, r3
 800347a:	187b      	adds	r3, r7, r1
 800347c:	701a      	strb	r2, [r3, #0]
 800347e:	e005      	b.n	800348c <calculate_crc_smbus+0x9c>
            } else {
                crc <<= 1;
 8003480:	231f      	movs	r3, #31
 8003482:	18fa      	adds	r2, r7, r3
 8003484:	18fb      	adds	r3, r7, r3
 8003486:	781b      	ldrb	r3, [r3, #0]
 8003488:	18db      	adds	r3, r3, r3
 800348a:	7013      	strb	r3, [r2, #0]
        for (uint8_t bit = 0; bit < 8; bit++) {
 800348c:	2117      	movs	r1, #23
 800348e:	187b      	adds	r3, r7, r1
 8003490:	781a      	ldrb	r2, [r3, #0]
 8003492:	187b      	adds	r3, r7, r1
 8003494:	3201      	adds	r2, #1
 8003496:	701a      	strb	r2, [r3, #0]
 8003498:	2317      	movs	r3, #23
 800349a:	18fb      	adds	r3, r7, r3
 800349c:	781b      	ldrb	r3, [r3, #0]
 800349e:	2b07      	cmp	r3, #7
 80034a0:	d9dd      	bls.n	800345e <calculate_crc_smbus+0x6e>
    for (size_t i = 0; i < 3; i++) {
 80034a2:	69bb      	ldr	r3, [r7, #24]
 80034a4:	3301      	adds	r3, #1
 80034a6:	61bb      	str	r3, [r7, #24]
 80034a8:	69bb      	ldr	r3, [r7, #24]
 80034aa:	2b02      	cmp	r3, #2
 80034ac:	d9c7      	bls.n	800343e <calculate_crc_smbus+0x4e>
            }
        }
    }

    return crc;
 80034ae:	231f      	movs	r3, #31
 80034b0:	18fb      	adds	r3, r7, r3
 80034b2:	781b      	ldrb	r3, [r3, #0]
}
 80034b4:	0018      	movs	r0, r3
 80034b6:	46bd      	mov	sp, r7
 80034b8:	b008      	add	sp, #32
 80034ba:	bd80      	pop	{r7, pc}
 80034bc:	00fffff8 	.word	0x00fffff8

080034c0 <mt6835_update_counts>:
//    // If CRC fails, return 0 (indicating an error)
//    return 0;
//}

int mt6835_update_counts(SPI_HandleTypeDef *hspi)
{
 80034c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80034c2:	b089      	sub	sp, #36	@ 0x24
 80034c4:	af00      	add	r7, sp, #0
 80034c6:	6078      	str	r0, [r7, #4]
    uint8_t data[4] = {0};
 80034c8:	230c      	movs	r3, #12
 80034ca:	18fb      	adds	r3, r7, r3
 80034cc:	2200      	movs	r2, #0
 80034ce:	601a      	str	r2, [r3, #0]
    // Example command: high nibble might be operation, low nibble might be register
    uint8_t command[2] = {
 80034d0:	2108      	movs	r1, #8
 80034d2:	187b      	adds	r3, r7, r1
 80034d4:	22e8      	movs	r2, #232	@ 0xe8
 80034d6:	0092      	lsls	r2, r2, #2
 80034d8:	801a      	strh	r2, [r3, #0]
        (uint8_t)(MT6835_OP_ANGLE << 4),
        MT6835_REG_ANGLE1
    };

    // 1) Transmit the command
    HAL_StatusTypeDef spiStatus = HAL_SPI_Transmit(hspi, command, 2, SPI_1_TIMEOUT);
 80034da:	221b      	movs	r2, #27
 80034dc:	18be      	adds	r6, r7, r2
 80034de:	1879      	adds	r1, r7, r1
 80034e0:	6878      	ldr	r0, [r7, #4]
 80034e2:	2303      	movs	r3, #3
 80034e4:	2202      	movs	r2, #2
 80034e6:	f006 fffd 	bl	800a4e4 <HAL_SPI_Transmit>
 80034ea:	0003      	movs	r3, r0
 80034ec:	7033      	strb	r3, [r6, #0]
    if (spiStatus != HAL_OK) {
 80034ee:	221b      	movs	r2, #27
 80034f0:	18bb      	adds	r3, r7, r2
 80034f2:	781b      	ldrb	r3, [r3, #0]
 80034f4:	2b00      	cmp	r3, #0
 80034f6:	d002      	beq.n	80034fe <mt6835_update_counts+0x3e>
        return spiStatus; // HAL_TIMEOUT or HAL_ERROR
 80034f8:	18bb      	adds	r3, r7, r2
 80034fa:	781b      	ldrb	r3, [r3, #0]
 80034fc:	e098      	b.n	8003630 <mt6835_update_counts+0x170>
    }

    // 2) Receive the data (4 bytes)
    spiStatus = HAL_SPI_Receive(hspi, data, 6, SPI_1_TIMEOUT);
 80034fe:	221b      	movs	r2, #27
 8003500:	18be      	adds	r6, r7, r2
 8003502:	230c      	movs	r3, #12
 8003504:	18f9      	adds	r1, r7, r3
 8003506:	6878      	ldr	r0, [r7, #4]
 8003508:	2303      	movs	r3, #3
 800350a:	2206      	movs	r2, #6
 800350c:	f007 f94a 	bl	800a7a4 <HAL_SPI_Receive>
 8003510:	0003      	movs	r3, r0
 8003512:	7033      	strb	r3, [r6, #0]
    if (spiStatus != HAL_OK) {
 8003514:	221b      	movs	r2, #27
 8003516:	18bb      	adds	r3, r7, r2
 8003518:	781b      	ldrb	r3, [r3, #0]
 800351a:	2b00      	cmp	r3, #0
 800351c:	d002      	beq.n	8003524 <mt6835_update_counts+0x64>
        return spiStatus;
 800351e:	18bb      	adds	r3, r7, r2
 8003520:	781b      	ldrb	r3, [r3, #0]
 8003522:	e085      	b.n	8003630 <mt6835_update_counts+0x170>
    //  data[2] => low bits of angle (upper 5 bits) + status in lower 3 bits
    //  data[3] => 8-bit CRC

    // Extract raw 21-bit angle
    //   (Note: mask with 0x1FFFFF as a safeguard)
    uint32_t raw_counts = ((uint32_t)data[0] << 13) & 0x1FFFFF;
 8003524:	200c      	movs	r0, #12
 8003526:	183b      	adds	r3, r7, r0
 8003528:	781b      	ldrb	r3, [r3, #0]
 800352a:	035b      	lsls	r3, r3, #13
 800352c:	02db      	lsls	r3, r3, #11
 800352e:	0adb      	lsrs	r3, r3, #11
 8003530:	617b      	str	r3, [r7, #20]
    raw_counts         |= ((uint32_t)data[1] << 5)  & 0x1FFFFF;
 8003532:	183b      	adds	r3, r7, r0
 8003534:	785b      	ldrb	r3, [r3, #1]
 8003536:	015b      	lsls	r3, r3, #5
 8003538:	02db      	lsls	r3, r3, #11
 800353a:	0adb      	lsrs	r3, r3, #11
 800353c:	697a      	ldr	r2, [r7, #20]
 800353e:	4313      	orrs	r3, r2
 8003540:	617b      	str	r3, [r7, #20]
    raw_counts         |= (((uint32_t)data[2] >> 3) & 0x1F);
 8003542:	183b      	adds	r3, r7, r0
 8003544:	789b      	ldrb	r3, [r3, #2]
 8003546:	08db      	lsrs	r3, r3, #3
 8003548:	b2db      	uxtb	r3, r3
 800354a:	001a      	movs	r2, r3
 800354c:	231f      	movs	r3, #31
 800354e:	4013      	ands	r3, r2
 8003550:	697a      	ldr	r2, [r7, #20]
 8003552:	4313      	orrs	r3, r2
 8003554:	617b      	str	r3, [r7, #20]

    // Extract status
    uint8_t statusBits = data[2] & 0x07; // lower 3 bits
 8003556:	183b      	adds	r3, r7, r0
 8003558:	789a      	ldrb	r2, [r3, #2]
 800355a:	2313      	movs	r3, #19
 800355c:	18fb      	adds	r3, r7, r3
 800355e:	2107      	movs	r1, #7
 8003560:	400a      	ands	r2, r1
 8003562:	701a      	strb	r2, [r3, #0]
    // Extract CRC
    uint8_t crc_received   = data[3];
 8003564:	2212      	movs	r2, #18
 8003566:	18bb      	adds	r3, r7, r2
 8003568:	183a      	adds	r2, r7, r0
 800356a:	78d2      	ldrb	r2, [r2, #3]
 800356c:	701a      	strb	r2, [r3, #0]
    uint8_t crc_calculated = calculate_crc_smbus(raw_counts, statusBits);
 800356e:	2111      	movs	r1, #17
 8003570:	187e      	adds	r6, r7, r1
 8003572:	2313      	movs	r3, #19
 8003574:	18fb      	adds	r3, r7, r3
 8003576:	781a      	ldrb	r2, [r3, #0]
 8003578:	697b      	ldr	r3, [r7, #20]
 800357a:	0011      	movs	r1, r2
 800357c:	0018      	movs	r0, r3
 800357e:	f7ff ff37 	bl	80033f0 <calculate_crc_smbus>
 8003582:	0003      	movs	r3, r0
 8003584:	7033      	strb	r3, [r6, #0]

    // Verify CRC
    if (crc_received != crc_calculated) {
 8003586:	2212      	movs	r2, #18
 8003588:	18ba      	adds	r2, r7, r2
 800358a:	2111      	movs	r1, #17
 800358c:	187b      	adds	r3, r7, r1
 800358e:	7812      	ldrb	r2, [r2, #0]
 8003590:	781b      	ldrb	r3, [r3, #0]
 8003592:	429a      	cmp	r2, r3
 8003594:	d001      	beq.n	800359a <mt6835_update_counts+0xda>
        return HAL_ERROR;  // CRC mismatch
 8003596:	2301      	movs	r3, #1
 8003598:	e04a      	b.n	8003630 <mt6835_update_counts+0x170>
    }

    // Update warnings
    rotationOverspeedWarning = (statusBits & 0x01) ? 1 : 0;
 800359a:	2113      	movs	r1, #19
 800359c:	187b      	adds	r3, r7, r1
 800359e:	781b      	ldrb	r3, [r3, #0]
 80035a0:	2201      	movs	r2, #1
 80035a2:	4013      	ands	r3, r2
 80035a4:	b2da      	uxtb	r2, r3
 80035a6:	4b24      	ldr	r3, [pc, #144]	@ (8003638 <mt6835_update_counts+0x178>)
 80035a8:	701a      	strb	r2, [r3, #0]
    weakMagneticFieldWarning = (statusBits & 0x02) ? 1 : 0;
 80035aa:	187b      	adds	r3, r7, r1
 80035ac:	781b      	ldrb	r3, [r3, #0]
 80035ae:	105b      	asrs	r3, r3, #1
 80035b0:	b2db      	uxtb	r3, r3
 80035b2:	2201      	movs	r2, #1
 80035b4:	4013      	ands	r3, r2
 80035b6:	b2da      	uxtb	r2, r3
 80035b8:	4b20      	ldr	r3, [pc, #128]	@ (800363c <mt6835_update_counts+0x17c>)
 80035ba:	701a      	strb	r2, [r3, #0]
    underVoltageWarning      = (statusBits & 0x04) ? 1 : 0;
 80035bc:	187b      	adds	r3, r7, r1
 80035be:	781b      	ldrb	r3, [r3, #0]
 80035c0:	109b      	asrs	r3, r3, #2
 80035c2:	b2db      	uxtb	r3, r3
 80035c4:	2201      	movs	r2, #1
 80035c6:	4013      	ands	r3, r2
 80035c8:	b2da      	uxtb	r2, r3
 80035ca:	4b1d      	ldr	r3, [pc, #116]	@ (8003640 <mt6835_update_counts+0x180>)
 80035cc:	701a      	strb	r2, [r3, #0]

    // 1) Adjust 'delta' for rollovers
    static uint32_t previousSingleTurn = 0;  // track last 21-bit reading
    int32_t delta = (int32_t)raw_counts - (int32_t)previousSingleTurn;
 80035ce:	697a      	ldr	r2, [r7, #20]
 80035d0:	4b1c      	ldr	r3, [pc, #112]	@ (8003644 <mt6835_update_counts+0x184>)
 80035d2:	681b      	ldr	r3, [r3, #0]
 80035d4:	1ad3      	subs	r3, r2, r3
 80035d6:	61fb      	str	r3, [r7, #28]

    // If delta is too large => we rolled under
    if (delta > HALF_RANGE) {
 80035d8:	69fa      	ldr	r2, [r7, #28]
 80035da:	2380      	movs	r3, #128	@ 0x80
 80035dc:	035b      	lsls	r3, r3, #13
 80035de:	429a      	cmp	r2, r3
 80035e0:	dd05      	ble.n	80035ee <mt6835_update_counts+0x12e>
        // e.g., new reading is near 0, old reading near max => negative rollover
        delta -= FULL_RANGE;
 80035e2:	69fb      	ldr	r3, [r7, #28]
 80035e4:	4a18      	ldr	r2, [pc, #96]	@ (8003648 <mt6835_update_counts+0x188>)
 80035e6:	4694      	mov	ip, r2
 80035e8:	4463      	add	r3, ip
 80035ea:	61fb      	str	r3, [r7, #28]
 80035ec:	e009      	b.n	8003602 <mt6835_update_counts+0x142>
    }
    // If delta is too negative => we rolled over
    else if (delta < -HALF_RANGE) {
 80035ee:	69fb      	ldr	r3, [r7, #28]
 80035f0:	4a16      	ldr	r2, [pc, #88]	@ (800364c <mt6835_update_counts+0x18c>)
 80035f2:	4293      	cmp	r3, r2
 80035f4:	da05      	bge.n	8003602 <mt6835_update_counts+0x142>
        // e.g., new reading near max, old reading near 0 => positive rollover
        delta += FULL_RANGE;
 80035f6:	69fb      	ldr	r3, [r7, #28]
 80035f8:	2280      	movs	r2, #128	@ 0x80
 80035fa:	0392      	lsls	r2, r2, #14
 80035fc:	4694      	mov	ip, r2
 80035fe:	4463      	add	r3, ip
 8003600:	61fb      	str	r3, [r7, #28]
    }

    // 2) Accumulate the delta into 'multiTurnSensorCounts'
    //    so that multiTurnSensorCounts now holds the absolute total.
    multiTurnSensorCounts += delta * encoderDirection;
 8003602:	4b13      	ldr	r3, [pc, #76]	@ (8003650 <mt6835_update_counts+0x190>)
 8003604:	781b      	ldrb	r3, [r3, #0]
 8003606:	001a      	movs	r2, r3
 8003608:	69fb      	ldr	r3, [r7, #28]
 800360a:	4353      	muls	r3, r2
 800360c:	001c      	movs	r4, r3
 800360e:	17db      	asrs	r3, r3, #31
 8003610:	001d      	movs	r5, r3
 8003612:	4b10      	ldr	r3, [pc, #64]	@ (8003654 <mt6835_update_counts+0x194>)
 8003614:	681a      	ldr	r2, [r3, #0]
 8003616:	685b      	ldr	r3, [r3, #4]
 8003618:	1912      	adds	r2, r2, r4
 800361a:	416b      	adcs	r3, r5
 800361c:	490d      	ldr	r1, [pc, #52]	@ (8003654 <mt6835_update_counts+0x194>)
 800361e:	600a      	str	r2, [r1, #0]
 8003620:	604b      	str	r3, [r1, #4]

    previousSingleTurn = raw_counts;
 8003622:	4b08      	ldr	r3, [pc, #32]	@ (8003644 <mt6835_update_counts+0x184>)
 8003624:	697a      	ldr	r2, [r7, #20]
 8003626:	601a      	str	r2, [r3, #0]
    singleTurnSensorCounts = raw_counts;
 8003628:	4b0b      	ldr	r3, [pc, #44]	@ (8003658 <mt6835_update_counts+0x198>)
 800362a:	697a      	ldr	r2, [r7, #20]
 800362c:	601a      	str	r2, [r3, #0]

    // If we got here => success
    return HAL_OK;
 800362e:	2300      	movs	r3, #0
}
 8003630:	0018      	movs	r0, r3
 8003632:	46bd      	mov	sp, r7
 8003634:	b009      	add	sp, #36	@ 0x24
 8003636:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003638:	20000158 	.word	0x20000158
 800363c:	20000159 	.word	0x20000159
 8003640:	2000015a 	.word	0x2000015a
 8003644:	2000015c 	.word	0x2000015c
 8003648:	ffe00000 	.word	0xffe00000
 800364c:	fff00000 	.word	0xfff00000
 8003650:	20000000 	.word	0x20000000
 8003654:	20000150 	.word	0x20000150
 8003658:	2000014c 	.word	0x2000014c

0800365c <get_counts_single_turn>:

uint32_t get_counts_single_turn(void)
{
 800365c:	b580      	push	{r7, lr}
 800365e:	af00      	add	r7, sp, #0
    return singleTurnSensorCounts;
 8003660:	4b02      	ldr	r3, [pc, #8]	@ (800366c <get_counts_single_turn+0x10>)
 8003662:	681b      	ldr	r3, [r3, #0]
}
 8003664:	0018      	movs	r0, r3
 8003666:	46bd      	mov	sp, r7
 8003668:	bd80      	pop	{r7, pc}
 800366a:	46c0      	nop			@ (mov r8, r8)
 800366c:	2000014c 	.word	0x2000014c

08003670 <get_rotation_overspeed_warning>:

// Getter methods for warning variables
uint8_t get_rotation_overspeed_warning(void) {
 8003670:	b580      	push	{r7, lr}
 8003672:	af00      	add	r7, sp, #0
    return rotationOverspeedWarning;
 8003674:	4b02      	ldr	r3, [pc, #8]	@ (8003680 <get_rotation_overspeed_warning+0x10>)
 8003676:	781b      	ldrb	r3, [r3, #0]
}
 8003678:	0018      	movs	r0, r3
 800367a:	46bd      	mov	sp, r7
 800367c:	bd80      	pop	{r7, pc}
 800367e:	46c0      	nop			@ (mov r8, r8)
 8003680:	20000158 	.word	0x20000158

08003684 <get_weak_magnetic_field_warning>:

uint8_t get_weak_magnetic_field_warning(void) {
 8003684:	b580      	push	{r7, lr}
 8003686:	af00      	add	r7, sp, #0
    return weakMagneticFieldWarning;
 8003688:	4b02      	ldr	r3, [pc, #8]	@ (8003694 <get_weak_magnetic_field_warning+0x10>)
 800368a:	781b      	ldrb	r3, [r3, #0]
}
 800368c:	0018      	movs	r0, r3
 800368e:	46bd      	mov	sp, r7
 8003690:	bd80      	pop	{r7, pc}
 8003692:	46c0      	nop			@ (mov r8, r8)
 8003694:	20000159 	.word	0x20000159

08003698 <get_under_voltage_warning>:

uint8_t get_under_voltage_warning(void) {
 8003698:	b580      	push	{r7, lr}
 800369a:	af00      	add	r7, sp, #0
    return underVoltageWarning;
 800369c:	4b02      	ldr	r3, [pc, #8]	@ (80036a8 <get_under_voltage_warning+0x10>)
 800369e:	781b      	ldrb	r3, [r3, #0]
}
 80036a0:	0018      	movs	r0, r3
 80036a2:	46bd      	mov	sp, r7
 80036a4:	bd80      	pop	{r7, pc}
 80036a6:	46c0      	nop			@ (mov r8, r8)
 80036a8:	2000015a 	.word	0x2000015a

080036ac <get_counts_multi_turn>:

int64_t get_counts_multi_turn(void)
{
 80036ac:	b580      	push	{r7, lr}
 80036ae:	af00      	add	r7, sp, #0
    return multiTurnSensorCounts;
 80036b0:	4b03      	ldr	r3, [pc, #12]	@ (80036c0 <get_counts_multi_turn+0x14>)
 80036b2:	681a      	ldr	r2, [r3, #0]
 80036b4:	685b      	ldr	r3, [r3, #4]
}
 80036b6:	0010      	movs	r0, r2
 80036b8:	0019      	movs	r1, r3
 80036ba:	46bd      	mov	sp, r7
 80036bc:	bd80      	pop	{r7, pc}
 80036be:	46c0      	nop			@ (mov r8, r8)
 80036c0:	20000150 	.word	0x20000150

080036c4 <reset_counts>:
    // Combine multi-turn << 21 with single-turn
    return ((int64_t)multiTurnSensorCounts << 21) + (int64_t)singleTurnSensorCounts;
}

void reset_counts(void)
{
 80036c4:	b580      	push	{r7, lr}
 80036c6:	af00      	add	r7, sp, #0
    // Reset both single-turn and multi-turn counts
    singleTurnSensorCounts = 0;
 80036c8:	4b05      	ldr	r3, [pc, #20]	@ (80036e0 <reset_counts+0x1c>)
 80036ca:	2200      	movs	r2, #0
 80036cc:	601a      	str	r2, [r3, #0]
    multiTurnSensorCounts = 0;
 80036ce:	4905      	ldr	r1, [pc, #20]	@ (80036e4 <reset_counts+0x20>)
 80036d0:	2200      	movs	r2, #0
 80036d2:	2300      	movs	r3, #0
 80036d4:	600a      	str	r2, [r1, #0]
 80036d6:	604b      	str	r3, [r1, #4]
}
 80036d8:	46c0      	nop			@ (mov r8, r8)
 80036da:	46bd      	mov	sp, r7
 80036dc:	bd80      	pop	{r7, pc}
 80036de:	46c0      	nop			@ (mov r8, r8)
 80036e0:	2000014c 	.word	0x2000014c
 80036e4:	20000150 	.word	0x20000150

080036e8 <set_counts>:

void set_counts(int64_t counts)
{
 80036e8:	b580      	push	{r7, lr}
 80036ea:	b082      	sub	sp, #8
 80036ec:	af00      	add	r7, sp, #0
 80036ee:	6038      	str	r0, [r7, #0]
 80036f0:	6079      	str	r1, [r7, #4]
    // Set the multi-turn counts and reset single-turn counts
    multiTurnSensorCounts = counts; // Extract multi-turn part
 80036f2:	4906      	ldr	r1, [pc, #24]	@ (800370c <set_counts+0x24>)
 80036f4:	683a      	ldr	r2, [r7, #0]
 80036f6:	687b      	ldr	r3, [r7, #4]
 80036f8:	600a      	str	r2, [r1, #0]
 80036fa:	604b      	str	r3, [r1, #4]
    singleTurnSensorCounts = (int32_t)counts; // Extract single-turn part
 80036fc:	683a      	ldr	r2, [r7, #0]
 80036fe:	4b04      	ldr	r3, [pc, #16]	@ (8003710 <set_counts+0x28>)
 8003700:	601a      	str	r2, [r3, #0]
}
 8003702:	46c0      	nop			@ (mov r8, r8)
 8003704:	46bd      	mov	sp, r7
 8003706:	b002      	add	sp, #8
 8003708:	bd80      	pop	{r7, pc}
 800370a:	46c0      	nop			@ (mov r8, r8)
 800370c:	20000150 	.word	0x20000150
 8003710:	2000014c 	.word	0x2000014c

08003714 <set_encoder_direction>:

void set_encoder_direction(int dir) {
 8003714:	b580      	push	{r7, lr}
 8003716:	b082      	sub	sp, #8
 8003718:	af00      	add	r7, sp, #0
 800371a:	6078      	str	r0, [r7, #4]
    encoderDirection = (dir >= 0) ? 1 : -1;
 800371c:	687b      	ldr	r3, [r7, #4]
 800371e:	2b00      	cmp	r3, #0
 8003720:	db01      	blt.n	8003726 <set_encoder_direction+0x12>
 8003722:	2201      	movs	r2, #1
 8003724:	e000      	b.n	8003728 <set_encoder_direction+0x14>
 8003726:	22ff      	movs	r2, #255	@ 0xff
 8003728:	4b02      	ldr	r3, [pc, #8]	@ (8003734 <set_encoder_direction+0x20>)
 800372a:	701a      	strb	r2, [r3, #0]
}
 800372c:	46c0      	nop			@ (mov r8, r8)
 800372e:	46bd      	mov	sp, r7
 8003730:	b002      	add	sp, #8
 8003732:	bd80      	pop	{r7, pc}
 8003734:	20000000 	.word	0x20000000

08003738 <handle_error_blink>:
 */
// static ErrorCode s_currentError = ENCODER_STATUS_OK;
static bool s_isBlinking = false;
static bool error_occoured = false;

void handle_error_blink(const char *message, float hue2) {
 8003738:	b580      	push	{r7, lr}
 800373a:	b082      	sub	sp, #8
 800373c:	af00      	add	r7, sp, #0
 800373e:	6078      	str	r0, [r7, #4]
 8003740:	6039      	str	r1, [r7, #0]
    error_occoured = true;
 8003742:	4b0f      	ldr	r3, [pc, #60]	@ (8003780 <handle_error_blink+0x48>)
 8003744:	2201      	movs	r2, #1
 8003746:	701a      	strb	r2, [r3, #0]

    if (!s_isBlinking) {
 8003748:	4b0e      	ldr	r3, [pc, #56]	@ (8003784 <handle_error_blink+0x4c>)
 800374a:	781b      	ldrb	r3, [r3, #0]
 800374c:	2201      	movs	r2, #1
 800374e:	4053      	eors	r3, r2
 8003750:	b2db      	uxtb	r3, r3
 8003752:	2b00      	cmp	r3, #0
 8003754:	d008      	beq.n	8003768 <handle_error_blink+0x30>
        blink_led_morse_init(message, hue2);
 8003756:	683a      	ldr	r2, [r7, #0]
 8003758:	687b      	ldr	r3, [r7, #4]
 800375a:	1c11      	adds	r1, r2, #0
 800375c:	0018      	movs	r0, r3
 800375e:	f002 fb91 	bl	8005e84 <blink_led_morse_init>
        s_isBlinking = true;
 8003762:	4b08      	ldr	r3, [pc, #32]	@ (8003784 <handle_error_blink+0x4c>)
 8003764:	2201      	movs	r2, #1
 8003766:	701a      	strb	r2, [r3, #0]
    }

    if (blink_led_morse_process()) {
 8003768:	f002 fba6 	bl	8005eb8 <blink_led_morse_process>
 800376c:	1e03      	subs	r3, r0, #0
 800376e:	d002      	beq.n	8003776 <handle_error_blink+0x3e>
        s_isBlinking = false;
 8003770:	4b04      	ldr	r3, [pc, #16]	@ (8003784 <handle_error_blink+0x4c>)
 8003772:	2200      	movs	r2, #0
 8003774:	701a      	strb	r2, [r3, #0]
    }
}
 8003776:	46c0      	nop			@ (mov r8, r8)
 8003778:	46bd      	mov	sp, r7
 800377a:	b002      	add	sp, #8
 800377c:	bd80      	pop	{r7, pc}
 800377e:	46c0      	nop			@ (mov r8, r8)
 8003780:	20000161 	.word	0x20000161
 8003784:	20000160 	.word	0x20000160

08003788 <flash_crc32>:
//===================================================================================

/**
 * @brief Calculate CRC32 checksum using polynomial 0xEDB88320
 */
uint32_t flash_crc32(const uint8_t* data, size_t length) {
 8003788:	b580      	push	{r7, lr}
 800378a:	b086      	sub	sp, #24
 800378c:	af00      	add	r7, sp, #0
 800378e:	6078      	str	r0, [r7, #4]
 8003790:	6039      	str	r1, [r7, #0]
    uint32_t crc = 0xFFFFFFFF;
 8003792:	2301      	movs	r3, #1
 8003794:	425b      	negs	r3, r3
 8003796:	617b      	str	r3, [r7, #20]

    for (size_t i = 0; i < length; i++) {
 8003798:	2300      	movs	r3, #0
 800379a:	613b      	str	r3, [r7, #16]
 800379c:	e020      	b.n	80037e0 <flash_crc32+0x58>
        crc ^= data[i];
 800379e:	687a      	ldr	r2, [r7, #4]
 80037a0:	693b      	ldr	r3, [r7, #16]
 80037a2:	18d3      	adds	r3, r2, r3
 80037a4:	781b      	ldrb	r3, [r3, #0]
 80037a6:	001a      	movs	r2, r3
 80037a8:	697b      	ldr	r3, [r7, #20]
 80037aa:	4053      	eors	r3, r2
 80037ac:	617b      	str	r3, [r7, #20]
        for (int j = 0; j < 8; j++) {
 80037ae:	2300      	movs	r3, #0
 80037b0:	60fb      	str	r3, [r7, #12]
 80037b2:	e00f      	b.n	80037d4 <flash_crc32+0x4c>
            if (crc & 1) {
 80037b4:	697b      	ldr	r3, [r7, #20]
 80037b6:	2201      	movs	r2, #1
 80037b8:	4013      	ands	r3, r2
 80037ba:	d005      	beq.n	80037c8 <flash_crc32+0x40>
                crc = (crc >> 1) ^ 0xEDB88320;
 80037bc:	697b      	ldr	r3, [r7, #20]
 80037be:	085b      	lsrs	r3, r3, #1
 80037c0:	4a0c      	ldr	r2, [pc, #48]	@ (80037f4 <flash_crc32+0x6c>)
 80037c2:	4053      	eors	r3, r2
 80037c4:	617b      	str	r3, [r7, #20]
 80037c6:	e002      	b.n	80037ce <flash_crc32+0x46>
            } else {
                crc >>= 1;
 80037c8:	697b      	ldr	r3, [r7, #20]
 80037ca:	085b      	lsrs	r3, r3, #1
 80037cc:	617b      	str	r3, [r7, #20]
        for (int j = 0; j < 8; j++) {
 80037ce:	68fb      	ldr	r3, [r7, #12]
 80037d0:	3301      	adds	r3, #1
 80037d2:	60fb      	str	r3, [r7, #12]
 80037d4:	68fb      	ldr	r3, [r7, #12]
 80037d6:	2b07      	cmp	r3, #7
 80037d8:	ddec      	ble.n	80037b4 <flash_crc32+0x2c>
    for (size_t i = 0; i < length; i++) {
 80037da:	693b      	ldr	r3, [r7, #16]
 80037dc:	3301      	adds	r3, #1
 80037de:	613b      	str	r3, [r7, #16]
 80037e0:	693a      	ldr	r2, [r7, #16]
 80037e2:	683b      	ldr	r3, [r7, #0]
 80037e4:	429a      	cmp	r2, r3
 80037e6:	d3da      	bcc.n	800379e <flash_crc32+0x16>
            }
        }
    }

    return ~crc;
 80037e8:	697b      	ldr	r3, [r7, #20]
 80037ea:	43db      	mvns	r3, r3
}
 80037ec:	0018      	movs	r0, r3
 80037ee:	46bd      	mov	sp, r7
 80037f0:	b006      	add	sp, #24
 80037f2:	bd80      	pop	{r7, pc}
 80037f4:	edb88320 	.word	0xedb88320

080037f8 <init_user_config_defaults>:
//===================================================================================

/**
 * @brief Initialize user configuration with factory defaults
 */
static void init_user_config_defaults(void) {
 80037f8:	b590      	push	{r4, r7, lr}
 80037fa:	b083      	sub	sp, #12
 80037fc:	af00      	add	r7, sp, #0
    memset(&g_user_config, 0, sizeof(g_user_config));
 80037fe:	4af2      	ldr	r2, [pc, #968]	@ (8003bc8 <init_user_config_defaults+0x3d0>)
 8003800:	4bf2      	ldr	r3, [pc, #968]	@ (8003bcc <init_user_config_defaults+0x3d4>)
 8003802:	2100      	movs	r1, #0
 8003804:	0018      	movs	r0, r3
 8003806:	f008 fc2d 	bl	800c064 <memset>

    g_user_config.magic = 0xCAFEBABE;
 800380a:	4bf0      	ldr	r3, [pc, #960]	@ (8003bcc <init_user_config_defaults+0x3d4>)
 800380c:	4af0      	ldr	r2, [pc, #960]	@ (8003bd0 <init_user_config_defaults+0x3d8>)
 800380e:	601a      	str	r2, [r3, #0]

    // Device Identity defaults
    g_user_config.device_can_id = 0;
 8003810:	4bee      	ldr	r3, [pc, #952]	@ (8003bcc <init_user_config_defaults+0x3d4>)
 8003812:	2200      	movs	r2, #0
 8003814:	605a      	str	r2, [r3, #4]
    strcpy(g_user_config.device_name, "STM32_Encoder_512K");
 8003816:	4bef      	ldr	r3, [pc, #956]	@ (8003bd4 <init_user_config_defaults+0x3dc>)
 8003818:	4aef      	ldr	r2, [pc, #956]	@ (8003bd8 <init_user_config_defaults+0x3e0>)
 800381a:	ca13      	ldmia	r2!, {r0, r1, r4}
 800381c:	c313      	stmia	r3!, {r0, r1, r4}
 800381e:	6811      	ldr	r1, [r2, #0]
 8003820:	6019      	str	r1, [r3, #0]
 8003822:	8891      	ldrh	r1, [r2, #4]
 8003824:	8099      	strh	r1, [r3, #4]
 8003826:	7992      	ldrb	r2, [r2, #6]
 8003828:	719a      	strb	r2, [r3, #6]
    g_user_config.device_group_id = 0;
 800382a:	4be8      	ldr	r3, [pc, #928]	@ (8003bcc <init_user_config_defaults+0x3d4>)
 800382c:	2200      	movs	r2, #0
 800382e:	629a      	str	r2, [r3, #40]	@ 0x28

    // Encoder Configuration defaults
    g_user_config.encoder_direction = 0;
 8003830:	4be6      	ldr	r3, [pc, #920]	@ (8003bcc <init_user_config_defaults+0x3d4>)
 8003832:	222c      	movs	r2, #44	@ 0x2c
 8003834:	2100      	movs	r1, #0
 8003836:	5499      	strb	r1, [r3, r2]
    g_user_config.position_offset = 0;
 8003838:	4be4      	ldr	r3, [pc, #912]	@ (8003bcc <init_user_config_defaults+0x3d4>)
 800383a:	332d      	adds	r3, #45	@ 0x2d
 800383c:	781a      	ldrb	r2, [r3, #0]
 800383e:	2100      	movs	r1, #0
 8003840:	400a      	ands	r2, r1
 8003842:	701a      	strb	r2, [r3, #0]
 8003844:	785a      	ldrb	r2, [r3, #1]
 8003846:	2100      	movs	r1, #0
 8003848:	400a      	ands	r2, r1
 800384a:	705a      	strb	r2, [r3, #1]
 800384c:	789a      	ldrb	r2, [r3, #2]
 800384e:	2100      	movs	r1, #0
 8003850:	400a      	ands	r2, r1
 8003852:	709a      	strb	r2, [r3, #2]
 8003854:	78da      	ldrb	r2, [r3, #3]
 8003856:	2100      	movs	r1, #0
 8003858:	400a      	ands	r2, r1
 800385a:	70da      	strb	r2, [r3, #3]
 800385c:	791a      	ldrb	r2, [r3, #4]
 800385e:	2100      	movs	r1, #0
 8003860:	400a      	ands	r2, r1
 8003862:	711a      	strb	r2, [r3, #4]
 8003864:	795a      	ldrb	r2, [r3, #5]
 8003866:	2100      	movs	r1, #0
 8003868:	400a      	ands	r2, r1
 800386a:	715a      	strb	r2, [r3, #5]
 800386c:	799a      	ldrb	r2, [r3, #6]
 800386e:	2100      	movs	r1, #0
 8003870:	400a      	ands	r2, r1
 8003872:	719a      	strb	r2, [r3, #6]
 8003874:	79da      	ldrb	r2, [r3, #7]
 8003876:	2100      	movs	r1, #0
 8003878:	400a      	ands	r2, r1
 800387a:	71da      	strb	r2, [r3, #7]
    g_user_config.gear_ratio = 1.0f;
 800387c:	4bd3      	ldr	r3, [pc, #844]	@ (8003bcc <init_user_config_defaults+0x3d4>)
 800387e:	3335      	adds	r3, #53	@ 0x35
 8003880:	22fe      	movs	r2, #254	@ 0xfe
 8003882:	0592      	lsls	r2, r2, #22
 8003884:	21ff      	movs	r1, #255	@ 0xff
 8003886:	4011      	ands	r1, r2
 8003888:	000c      	movs	r4, r1
 800388a:	7819      	ldrb	r1, [r3, #0]
 800388c:	2000      	movs	r0, #0
 800388e:	4001      	ands	r1, r0
 8003890:	1c08      	adds	r0, r1, #0
 8003892:	1c21      	adds	r1, r4, #0
 8003894:	4301      	orrs	r1, r0
 8003896:	7019      	strb	r1, [r3, #0]
 8003898:	0a11      	lsrs	r1, r2, #8
 800389a:	20ff      	movs	r0, #255	@ 0xff
 800389c:	4001      	ands	r1, r0
 800389e:	000c      	movs	r4, r1
 80038a0:	7859      	ldrb	r1, [r3, #1]
 80038a2:	2000      	movs	r0, #0
 80038a4:	4001      	ands	r1, r0
 80038a6:	1c08      	adds	r0, r1, #0
 80038a8:	1c21      	adds	r1, r4, #0
 80038aa:	4301      	orrs	r1, r0
 80038ac:	7059      	strb	r1, [r3, #1]
 80038ae:	0c11      	lsrs	r1, r2, #16
 80038b0:	20ff      	movs	r0, #255	@ 0xff
 80038b2:	4001      	ands	r1, r0
 80038b4:	000c      	movs	r4, r1
 80038b6:	7899      	ldrb	r1, [r3, #2]
 80038b8:	2000      	movs	r0, #0
 80038ba:	4001      	ands	r1, r0
 80038bc:	1c08      	adds	r0, r1, #0
 80038be:	1c21      	adds	r1, r4, #0
 80038c0:	4301      	orrs	r1, r0
 80038c2:	7099      	strb	r1, [r3, #2]
 80038c4:	0e10      	lsrs	r0, r2, #24
 80038c6:	78da      	ldrb	r2, [r3, #3]
 80038c8:	2100      	movs	r1, #0
 80038ca:	400a      	ands	r2, r1
 80038cc:	1c11      	adds	r1, r2, #0
 80038ce:	1c02      	adds	r2, r0, #0
 80038d0:	430a      	orrs	r2, r1
 80038d2:	70da      	strb	r2, [r3, #3]
    g_user_config.multi_turn_enabled = 1;
 80038d4:	4bbd      	ldr	r3, [pc, #756]	@ (8003bcc <init_user_config_defaults+0x3d4>)
 80038d6:	2239      	movs	r2, #57	@ 0x39
 80038d8:	2101      	movs	r1, #1
 80038da:	5499      	strb	r1, [r3, r2]

    // CAN Configuration defaults
    g_user_config.can_base_id = 0xA110000;
 80038dc:	4bbb      	ldr	r3, [pc, #748]	@ (8003bcc <init_user_config_defaults+0x3d4>)
 80038de:	333a      	adds	r3, #58	@ 0x3a
 80038e0:	881a      	ldrh	r2, [r3, #0]
 80038e2:	2100      	movs	r1, #0
 80038e4:	400a      	ands	r2, r1
 80038e6:	801a      	strh	r2, [r3, #0]
 80038e8:	885a      	ldrh	r2, [r3, #2]
 80038ea:	2100      	movs	r1, #0
 80038ec:	400a      	ands	r2, r1
 80038ee:	1c11      	adds	r1, r2, #0
 80038f0:	4aba      	ldr	r2, [pc, #744]	@ (8003bdc <init_user_config_defaults+0x3e4>)
 80038f2:	430a      	orrs	r2, r1
 80038f4:	805a      	strh	r2, [r3, #2]
    g_user_config.can_heartbeat_enabled = 1;
 80038f6:	4bb5      	ldr	r3, [pc, #724]	@ (8003bcc <init_user_config_defaults+0x3d4>)
 80038f8:	223e      	movs	r2, #62	@ 0x3e
 80038fa:	2101      	movs	r1, #1
 80038fc:	5499      	strb	r1, [r3, r2]
    g_user_config.can_heartbeat_timeout = 1000;
 80038fe:	4bb3      	ldr	r3, [pc, #716]	@ (8003bcc <init_user_config_defaults+0x3d4>)
 8003900:	333f      	adds	r3, #63	@ 0x3f
 8003902:	781a      	ldrb	r2, [r3, #0]
 8003904:	2100      	movs	r1, #0
 8003906:	400a      	ands	r2, r1
 8003908:	1c11      	adds	r1, r2, #0
 800390a:	2218      	movs	r2, #24
 800390c:	4252      	negs	r2, r2
 800390e:	430a      	orrs	r2, r1
 8003910:	701a      	strb	r2, [r3, #0]
 8003912:	785a      	ldrb	r2, [r3, #1]
 8003914:	2100      	movs	r1, #0
 8003916:	400a      	ands	r2, r1
 8003918:	1c11      	adds	r1, r2, #0
 800391a:	2203      	movs	r2, #3
 800391c:	430a      	orrs	r2, r1
 800391e:	705a      	strb	r2, [r3, #1]
    g_user_config.can_transmit_rate = 100;
 8003920:	4baa      	ldr	r3, [pc, #680]	@ (8003bcc <init_user_config_defaults+0x3d4>)
 8003922:	2241      	movs	r2, #65	@ 0x41
 8003924:	2164      	movs	r1, #100	@ 0x64
 8003926:	5499      	strb	r1, [r3, r2]

    // Sensor Configuration defaults
    g_user_config.proximity_sensor_enabled = 0;
 8003928:	4ba8      	ldr	r3, [pc, #672]	@ (8003bcc <init_user_config_defaults+0x3d4>)
 800392a:	2242      	movs	r2, #66	@ 0x42
 800392c:	2100      	movs	r1, #0
 800392e:	5499      	strb	r1, [r3, r2]
    g_user_config.proximity_threshold_low = 1500;
 8003930:	4ba6      	ldr	r3, [pc, #664]	@ (8003bcc <init_user_config_defaults+0x3d4>)
 8003932:	2243      	movs	r2, #67	@ 0x43
 8003934:	5c99      	ldrb	r1, [r3, r2]
 8003936:	2000      	movs	r0, #0
 8003938:	4001      	ands	r1, r0
 800393a:	1c08      	adds	r0, r1, #0
 800393c:	2124      	movs	r1, #36	@ 0x24
 800393e:	4249      	negs	r1, r1
 8003940:	4301      	orrs	r1, r0
 8003942:	5499      	strb	r1, [r3, r2]
 8003944:	189b      	adds	r3, r3, r2
 8003946:	785a      	ldrb	r2, [r3, #1]
 8003948:	2100      	movs	r1, #0
 800394a:	400a      	ands	r2, r1
 800394c:	1c11      	adds	r1, r2, #0
 800394e:	2205      	movs	r2, #5
 8003950:	430a      	orrs	r2, r1
 8003952:	705a      	strb	r2, [r3, #1]
    g_user_config.proximity_threshold_high = 2500;
 8003954:	4b9d      	ldr	r3, [pc, #628]	@ (8003bcc <init_user_config_defaults+0x3d4>)
 8003956:	2245      	movs	r2, #69	@ 0x45
 8003958:	5c99      	ldrb	r1, [r3, r2]
 800395a:	2000      	movs	r0, #0
 800395c:	4001      	ands	r1, r0
 800395e:	1c08      	adds	r0, r1, #0
 8003960:	213c      	movs	r1, #60	@ 0x3c
 8003962:	4249      	negs	r1, r1
 8003964:	4301      	orrs	r1, r0
 8003966:	5499      	strb	r1, [r3, r2]
 8003968:	189b      	adds	r3, r3, r2
 800396a:	785a      	ldrb	r2, [r3, #1]
 800396c:	2100      	movs	r1, #0
 800396e:	400a      	ands	r2, r1
 8003970:	1c11      	adds	r1, r2, #0
 8003972:	2209      	movs	r2, #9
 8003974:	430a      	orrs	r2, r1
 8003976:	705a      	strb	r2, [r3, #1]
    g_user_config.temperature_monitoring = 1;
 8003978:	4b94      	ldr	r3, [pc, #592]	@ (8003bcc <init_user_config_defaults+0x3d4>)
 800397a:	2247      	movs	r2, #71	@ 0x47
 800397c:	2101      	movs	r1, #1
 800397e:	5499      	strb	r1, [r3, r2]

    // LED Configuration defaults
    g_user_config.led_brightness = 255;
 8003980:	4b92      	ldr	r3, [pc, #584]	@ (8003bcc <init_user_config_defaults+0x3d4>)
 8003982:	2248      	movs	r2, #72	@ 0x48
 8003984:	21ff      	movs	r1, #255	@ 0xff
 8003986:	5499      	strb	r1, [r3, r2]
    g_user_config.led_mode = 0;
 8003988:	4b90      	ldr	r3, [pc, #576]	@ (8003bcc <init_user_config_defaults+0x3d4>)
 800398a:	2249      	movs	r2, #73	@ 0x49
 800398c:	2100      	movs	r1, #0
 800398e:	5499      	strb	r1, [r3, r2]

    // Error colors (RGB format: 0xRRGGBB)
    g_user_config.led_error_colors[0] = 0xFF0000;  // Red - Hardware fault
 8003990:	4b8e      	ldr	r3, [pc, #568]	@ (8003bcc <init_user_config_defaults+0x3d4>)
 8003992:	334a      	adds	r3, #74	@ 0x4a
 8003994:	881a      	ldrh	r2, [r3, #0]
 8003996:	2100      	movs	r1, #0
 8003998:	400a      	ands	r2, r1
 800399a:	801a      	strh	r2, [r3, #0]
 800399c:	885a      	ldrh	r2, [r3, #2]
 800399e:	2100      	movs	r1, #0
 80039a0:	400a      	ands	r2, r1
 80039a2:	1c11      	adds	r1, r2, #0
 80039a4:	22ff      	movs	r2, #255	@ 0xff
 80039a6:	430a      	orrs	r2, r1
 80039a8:	805a      	strh	r2, [r3, #2]
    g_user_config.led_error_colors[1] = 0xFFFF00;  // Yellow - Loop overrun
 80039aa:	4b88      	ldr	r3, [pc, #544]	@ (8003bcc <init_user_config_defaults+0x3d4>)
 80039ac:	334e      	adds	r3, #78	@ 0x4e
 80039ae:	881a      	ldrh	r2, [r3, #0]
 80039b0:	2100      	movs	r1, #0
 80039b2:	400a      	ands	r2, r1
 80039b4:	1c11      	adds	r1, r2, #0
 80039b6:	4a8a      	ldr	r2, [pc, #552]	@ (8003be0 <init_user_config_defaults+0x3e8>)
 80039b8:	430a      	orrs	r2, r1
 80039ba:	801a      	strh	r2, [r3, #0]
 80039bc:	885a      	ldrh	r2, [r3, #2]
 80039be:	2100      	movs	r1, #0
 80039c0:	400a      	ands	r2, r1
 80039c2:	1c11      	adds	r1, r2, #0
 80039c4:	22ff      	movs	r2, #255	@ 0xff
 80039c6:	430a      	orrs	r2, r1
 80039c8:	805a      	strh	r2, [r3, #2]
    g_user_config.led_error_colors[2] = 0xFF8000;  // Orange - Under voltage
 80039ca:	4b80      	ldr	r3, [pc, #512]	@ (8003bcc <init_user_config_defaults+0x3d4>)
 80039cc:	3352      	adds	r3, #82	@ 0x52
 80039ce:	881a      	ldrh	r2, [r3, #0]
 80039d0:	2100      	movs	r1, #0
 80039d2:	400a      	ands	r2, r1
 80039d4:	1c11      	adds	r1, r2, #0
 80039d6:	4a83      	ldr	r2, [pc, #524]	@ (8003be4 <init_user_config_defaults+0x3ec>)
 80039d8:	430a      	orrs	r2, r1
 80039da:	801a      	strh	r2, [r3, #0]
 80039dc:	885a      	ldrh	r2, [r3, #2]
 80039de:	2100      	movs	r1, #0
 80039e0:	400a      	ands	r2, r1
 80039e2:	1c11      	adds	r1, r2, #0
 80039e4:	22ff      	movs	r2, #255	@ 0xff
 80039e6:	430a      	orrs	r2, r1
 80039e8:	805a      	strh	r2, [r3, #2]
    g_user_config.led_error_colors[3] = 0xFFFF00;  // Yellow - Overspeed
 80039ea:	4b78      	ldr	r3, [pc, #480]	@ (8003bcc <init_user_config_defaults+0x3d4>)
 80039ec:	3356      	adds	r3, #86	@ 0x56
 80039ee:	881a      	ldrh	r2, [r3, #0]
 80039f0:	2100      	movs	r1, #0
 80039f2:	400a      	ands	r2, r1
 80039f4:	1c11      	adds	r1, r2, #0
 80039f6:	4a7a      	ldr	r2, [pc, #488]	@ (8003be0 <init_user_config_defaults+0x3e8>)
 80039f8:	430a      	orrs	r2, r1
 80039fa:	801a      	strh	r2, [r3, #0]
 80039fc:	885a      	ldrh	r2, [r3, #2]
 80039fe:	2100      	movs	r1, #0
 8003a00:	400a      	ands	r2, r1
 8003a02:	1c11      	adds	r1, r2, #0
 8003a04:	22ff      	movs	r2, #255	@ 0xff
 8003a06:	430a      	orrs	r2, r1
 8003a08:	805a      	strh	r2, [r3, #2]
    g_user_config.led_error_colors[4] = 0x8000FF;  // Purple - CAN invalid
 8003a0a:	4b70      	ldr	r3, [pc, #448]	@ (8003bcc <init_user_config_defaults+0x3d4>)
 8003a0c:	335a      	adds	r3, #90	@ 0x5a
 8003a0e:	881a      	ldrh	r2, [r3, #0]
 8003a10:	2100      	movs	r1, #0
 8003a12:	400a      	ands	r2, r1
 8003a14:	1c11      	adds	r1, r2, #0
 8003a16:	22ff      	movs	r2, #255	@ 0xff
 8003a18:	430a      	orrs	r2, r1
 8003a1a:	801a      	strh	r2, [r3, #0]
 8003a1c:	885a      	ldrh	r2, [r3, #2]
 8003a1e:	2100      	movs	r1, #0
 8003a20:	400a      	ands	r2, r1
 8003a22:	1c11      	adds	r1, r2, #0
 8003a24:	2280      	movs	r2, #128	@ 0x80
 8003a26:	430a      	orrs	r2, r1
 8003a28:	805a      	strh	r2, [r3, #2]
    g_user_config.led_error_colors[5] = 0x8000FF;  // Purple - CAN clogged
 8003a2a:	4b68      	ldr	r3, [pc, #416]	@ (8003bcc <init_user_config_defaults+0x3d4>)
 8003a2c:	335e      	adds	r3, #94	@ 0x5e
 8003a2e:	881a      	ldrh	r2, [r3, #0]
 8003a30:	2100      	movs	r1, #0
 8003a32:	400a      	ands	r2, r1
 8003a34:	1c11      	adds	r1, r2, #0
 8003a36:	22ff      	movs	r2, #255	@ 0xff
 8003a38:	430a      	orrs	r2, r1
 8003a3a:	801a      	strh	r2, [r3, #0]
 8003a3c:	885a      	ldrh	r2, [r3, #2]
 8003a3e:	2100      	movs	r1, #0
 8003a40:	400a      	ands	r2, r1
 8003a42:	1c11      	adds	r1, r2, #0
 8003a44:	2280      	movs	r2, #128	@ 0x80
 8003a46:	430a      	orrs	r2, r1
 8003a48:	805a      	strh	r2, [r3, #2]
    g_user_config.led_error_colors[6] = 0xFF8000;  // Orange - Reset during enable
 8003a4a:	4b60      	ldr	r3, [pc, #384]	@ (8003bcc <init_user_config_defaults+0x3d4>)
 8003a4c:	3362      	adds	r3, #98	@ 0x62
 8003a4e:	881a      	ldrh	r2, [r3, #0]
 8003a50:	2100      	movs	r1, #0
 8003a52:	400a      	ands	r2, r1
 8003a54:	1c11      	adds	r1, r2, #0
 8003a56:	4a63      	ldr	r2, [pc, #396]	@ (8003be4 <init_user_config_defaults+0x3ec>)
 8003a58:	430a      	orrs	r2, r1
 8003a5a:	801a      	strh	r2, [r3, #0]
 8003a5c:	885a      	ldrh	r2, [r3, #2]
 8003a5e:	2100      	movs	r1, #0
 8003a60:	400a      	ands	r2, r1
 8003a62:	1c11      	adds	r1, r2, #0
 8003a64:	22ff      	movs	r2, #255	@ 0xff
 8003a66:	430a      	orrs	r2, r1
 8003a68:	805a      	strh	r2, [r3, #2]
    g_user_config.led_error_colors[7] = 0xFF8000;  // Orange - Weak magnet
 8003a6a:	4b58      	ldr	r3, [pc, #352]	@ (8003bcc <init_user_config_defaults+0x3d4>)
 8003a6c:	3366      	adds	r3, #102	@ 0x66
 8003a6e:	881a      	ldrh	r2, [r3, #0]
 8003a70:	2100      	movs	r1, #0
 8003a72:	400a      	ands	r2, r1
 8003a74:	1c11      	adds	r1, r2, #0
 8003a76:	4a5b      	ldr	r2, [pc, #364]	@ (8003be4 <init_user_config_defaults+0x3ec>)
 8003a78:	430a      	orrs	r2, r1
 8003a7a:	801a      	strh	r2, [r3, #0]
 8003a7c:	885a      	ldrh	r2, [r3, #2]
 8003a7e:	2100      	movs	r1, #0
 8003a80:	400a      	ands	r2, r1
 8003a82:	1c11      	adds	r1, r2, #0
 8003a84:	22ff      	movs	r2, #255	@ 0xff
 8003a86:	430a      	orrs	r2, r1
 8003a88:	805a      	strh	r2, [r3, #2]

    // Signal Processing defaults
    g_user_config.velocity_filter_alpha = 0.2f;
 8003a8a:	4b50      	ldr	r3, [pc, #320]	@ (8003bcc <init_user_config_defaults+0x3d4>)
 8003a8c:	336a      	adds	r3, #106	@ 0x6a
 8003a8e:	4a56      	ldr	r2, [pc, #344]	@ (8003be8 <init_user_config_defaults+0x3f0>)
 8003a90:	0411      	lsls	r1, r2, #16
 8003a92:	0c0c      	lsrs	r4, r1, #16
 8003a94:	8819      	ldrh	r1, [r3, #0]
 8003a96:	2000      	movs	r0, #0
 8003a98:	4001      	ands	r1, r0
 8003a9a:	1c08      	adds	r0, r1, #0
 8003a9c:	1c21      	adds	r1, r4, #0
 8003a9e:	4301      	orrs	r1, r0
 8003aa0:	8019      	strh	r1, [r3, #0]
 8003aa2:	0c10      	lsrs	r0, r2, #16
 8003aa4:	885a      	ldrh	r2, [r3, #2]
 8003aa6:	2100      	movs	r1, #0
 8003aa8:	400a      	ands	r2, r1
 8003aaa:	1c11      	adds	r1, r2, #0
 8003aac:	1c02      	adds	r2, r0, #0
 8003aae:	430a      	orrs	r2, r1
 8003ab0:	805a      	strh	r2, [r3, #2]
    g_user_config.accel_filter_alpha = 0.1f;
 8003ab2:	4b46      	ldr	r3, [pc, #280]	@ (8003bcc <init_user_config_defaults+0x3d4>)
 8003ab4:	336e      	adds	r3, #110	@ 0x6e
 8003ab6:	4a4d      	ldr	r2, [pc, #308]	@ (8003bec <init_user_config_defaults+0x3f4>)
 8003ab8:	0411      	lsls	r1, r2, #16
 8003aba:	0c0c      	lsrs	r4, r1, #16
 8003abc:	8819      	ldrh	r1, [r3, #0]
 8003abe:	2000      	movs	r0, #0
 8003ac0:	4001      	ands	r1, r0
 8003ac2:	1c08      	adds	r0, r1, #0
 8003ac4:	1c21      	adds	r1, r4, #0
 8003ac6:	4301      	orrs	r1, r0
 8003ac8:	8019      	strh	r1, [r3, #0]
 8003aca:	0c10      	lsrs	r0, r2, #16
 8003acc:	885a      	ldrh	r2, [r3, #2]
 8003ace:	2100      	movs	r1, #0
 8003ad0:	400a      	ands	r2, r1
 8003ad2:	1c11      	adds	r1, r2, #0
 8003ad4:	1c02      	adds	r2, r0, #0
 8003ad6:	430a      	orrs	r2, r1
 8003ad8:	805a      	strh	r2, [r3, #2]
    g_user_config.noise_filtering_level = 1;
 8003ada:	4b3c      	ldr	r3, [pc, #240]	@ (8003bcc <init_user_config_defaults+0x3d4>)
 8003adc:	2272      	movs	r2, #114	@ 0x72
 8003ade:	2101      	movs	r1, #1
 8003ae0:	5499      	strb	r1, [r3, r2]

    // Runtime Statistics
    g_user_config.boot_count = 1;
 8003ae2:	4b3a      	ldr	r3, [pc, #232]	@ (8003bcc <init_user_config_defaults+0x3d4>)
 8003ae4:	3373      	adds	r3, #115	@ 0x73
 8003ae6:	781a      	ldrb	r2, [r3, #0]
 8003ae8:	2100      	movs	r1, #0
 8003aea:	400a      	ands	r2, r1
 8003aec:	1c11      	adds	r1, r2, #0
 8003aee:	2201      	movs	r2, #1
 8003af0:	430a      	orrs	r2, r1
 8003af2:	701a      	strb	r2, [r3, #0]
 8003af4:	785a      	ldrb	r2, [r3, #1]
 8003af6:	2100      	movs	r1, #0
 8003af8:	400a      	ands	r2, r1
 8003afa:	705a      	strb	r2, [r3, #1]
 8003afc:	789a      	ldrb	r2, [r3, #2]
 8003afe:	2100      	movs	r1, #0
 8003b00:	400a      	ands	r2, r1
 8003b02:	709a      	strb	r2, [r3, #2]
 8003b04:	78da      	ldrb	r2, [r3, #3]
 8003b06:	2100      	movs	r1, #0
 8003b08:	400a      	ands	r2, r1
 8003b0a:	70da      	strb	r2, [r3, #3]
    g_user_config.total_runtime_hours = 0;
 8003b0c:	4b2f      	ldr	r3, [pc, #188]	@ (8003bcc <init_user_config_defaults+0x3d4>)
 8003b0e:	3377      	adds	r3, #119	@ 0x77
 8003b10:	781a      	ldrb	r2, [r3, #0]
 8003b12:	2100      	movs	r1, #0
 8003b14:	400a      	ands	r2, r1
 8003b16:	701a      	strb	r2, [r3, #0]
 8003b18:	785a      	ldrb	r2, [r3, #1]
 8003b1a:	2100      	movs	r1, #0
 8003b1c:	400a      	ands	r2, r1
 8003b1e:	705a      	strb	r2, [r3, #1]
 8003b20:	789a      	ldrb	r2, [r3, #2]
 8003b22:	2100      	movs	r1, #0
 8003b24:	400a      	ands	r2, r1
 8003b26:	709a      	strb	r2, [r3, #2]
 8003b28:	78da      	ldrb	r2, [r3, #3]
 8003b2a:	2100      	movs	r1, #0
 8003b2c:	400a      	ands	r2, r1
 8003b2e:	70da      	strb	r2, [r3, #3]
    g_user_config.max_velocity_cps = 0;
 8003b30:	4b26      	ldr	r3, [pc, #152]	@ (8003bcc <init_user_config_defaults+0x3d4>)
 8003b32:	337b      	adds	r3, #123	@ 0x7b
 8003b34:	781a      	ldrb	r2, [r3, #0]
 8003b36:	2100      	movs	r1, #0
 8003b38:	400a      	ands	r2, r1
 8003b3a:	701a      	strb	r2, [r3, #0]
 8003b3c:	785a      	ldrb	r2, [r3, #1]
 8003b3e:	2100      	movs	r1, #0
 8003b40:	400a      	ands	r2, r1
 8003b42:	705a      	strb	r2, [r3, #1]
 8003b44:	789a      	ldrb	r2, [r3, #2]
 8003b46:	2100      	movs	r1, #0
 8003b48:	400a      	ands	r2, r1
 8003b4a:	709a      	strb	r2, [r3, #2]
 8003b4c:	78da      	ldrb	r2, [r3, #3]
 8003b4e:	2100      	movs	r1, #0
 8003b50:	400a      	ands	r2, r1
 8003b52:	70da      	strb	r2, [r3, #3]
    g_user_config.max_temperature_c = 0.0f;
 8003b54:	4b1d      	ldr	r3, [pc, #116]	@ (8003bcc <init_user_config_defaults+0x3d4>)
 8003b56:	337f      	adds	r3, #127	@ 0x7f
 8003b58:	2200      	movs	r2, #0
 8003b5a:	21ff      	movs	r1, #255	@ 0xff
 8003b5c:	4011      	ands	r1, r2
 8003b5e:	000c      	movs	r4, r1
 8003b60:	7819      	ldrb	r1, [r3, #0]
 8003b62:	2000      	movs	r0, #0
 8003b64:	4001      	ands	r1, r0
 8003b66:	1c08      	adds	r0, r1, #0
 8003b68:	1c21      	adds	r1, r4, #0
 8003b6a:	4301      	orrs	r1, r0
 8003b6c:	7019      	strb	r1, [r3, #0]
 8003b6e:	0a11      	lsrs	r1, r2, #8
 8003b70:	20ff      	movs	r0, #255	@ 0xff
 8003b72:	4001      	ands	r1, r0
 8003b74:	000c      	movs	r4, r1
 8003b76:	7859      	ldrb	r1, [r3, #1]
 8003b78:	2000      	movs	r0, #0
 8003b7a:	4001      	ands	r1, r0
 8003b7c:	1c08      	adds	r0, r1, #0
 8003b7e:	1c21      	adds	r1, r4, #0
 8003b80:	4301      	orrs	r1, r0
 8003b82:	7059      	strb	r1, [r3, #1]
 8003b84:	0c11      	lsrs	r1, r2, #16
 8003b86:	20ff      	movs	r0, #255	@ 0xff
 8003b88:	4001      	ands	r1, r0
 8003b8a:	000c      	movs	r4, r1
 8003b8c:	7899      	ldrb	r1, [r3, #2]
 8003b8e:	2000      	movs	r0, #0
 8003b90:	4001      	ands	r1, r0
 8003b92:	1c08      	adds	r0, r1, #0
 8003b94:	1c21      	adds	r1, r4, #0
 8003b96:	4301      	orrs	r1, r0
 8003b98:	7099      	strb	r1, [r3, #2]
 8003b9a:	0e10      	lsrs	r0, r2, #24
 8003b9c:	78da      	ldrb	r2, [r3, #3]
 8003b9e:	2100      	movs	r1, #0
 8003ba0:	400a      	ands	r2, r1
 8003ba2:	1c11      	adds	r1, r2, #0
 8003ba4:	1c02      	adds	r2, r0, #0
 8003ba6:	430a      	orrs	r2, r1
 8003ba8:	70da      	strb	r2, [r3, #3]

    // User flags
    g_user_config.user_flags = 0;
 8003baa:	4b08      	ldr	r3, [pc, #32]	@ (8003bcc <init_user_config_defaults+0x3d4>)
 8003bac:	3383      	adds	r3, #131	@ 0x83
 8003bae:	781a      	ldrb	r2, [r3, #0]
 8003bb0:	2100      	movs	r1, #0
 8003bb2:	400a      	ands	r2, r1
 8003bb4:	701a      	strb	r2, [r3, #0]
 8003bb6:	785a      	ldrb	r2, [r3, #1]
 8003bb8:	2100      	movs	r1, #0
 8003bba:	400a      	ands	r2, r1
 8003bbc:	705a      	strb	r2, [r3, #1]
 8003bbe:	789a      	ldrb	r2, [r3, #2]
 8003bc0:	2100      	movs	r1, #0
 8003bc2:	400a      	ands	r2, r1
 8003bc4:	709a      	strb	r2, [r3, #2]
 8003bc6:	e013      	b.n	8003bf0 <init_user_config_defaults+0x3f8>
 8003bc8:	00007e2f 	.word	0x00007e2f
 8003bcc:	20000164 	.word	0x20000164
 8003bd0:	cafebabe 	.word	0xcafebabe
 8003bd4:	2000016c 	.word	0x2000016c
 8003bd8:	0800c0f8 	.word	0x0800c0f8
 8003bdc:	00000a11 	.word	0x00000a11
 8003be0:	ffffff00 	.word	0xffffff00
 8003be4:	ffff8000 	.word	0xffff8000
 8003be8:	3e4ccccd 	.word	0x3e4ccccd
 8003bec:	3dcccccd 	.word	0x3dcccccd
 8003bf0:	78da      	ldrb	r2, [r3, #3]
 8003bf2:	2100      	movs	r1, #0
 8003bf4:	400a      	ands	r2, r1
 8003bf6:	70da      	strb	r2, [r3, #3]
 8003bf8:	791a      	ldrb	r2, [r3, #4]
 8003bfa:	2100      	movs	r1, #0
 8003bfc:	400a      	ands	r2, r1
 8003bfe:	711a      	strb	r2, [r3, #4]
 8003c00:	795a      	ldrb	r2, [r3, #5]
 8003c02:	2100      	movs	r1, #0
 8003c04:	400a      	ands	r2, r1
 8003c06:	715a      	strb	r2, [r3, #5]
 8003c08:	799a      	ldrb	r2, [r3, #6]
 8003c0a:	2100      	movs	r1, #0
 8003c0c:	400a      	ands	r2, r1
 8003c0e:	719a      	strb	r2, [r3, #6]
 8003c10:	79da      	ldrb	r2, [r3, #7]
 8003c12:	2100      	movs	r1, #0
 8003c14:	400a      	ands	r2, r1
 8003c16:	71da      	strb	r2, [r3, #7]

    // Initialize all test arrays to zero
    memset(g_user_config.test_array_u32, 0, sizeof(g_user_config.test_array_u32));
 8003c18:	2380      	movs	r3, #128	@ 0x80
 8003c1a:	005a      	lsls	r2, r3, #1
 8003c1c:	4b4e      	ldr	r3, [pc, #312]	@ (8003d58 <init_user_config_defaults+0x560>)
 8003c1e:	2100      	movs	r1, #0
 8003c20:	0018      	movs	r0, r3
 8003c22:	f008 fa1f 	bl	800c064 <memset>
    memset(g_user_config.test_array_u16, 0, sizeof(g_user_config.test_array_u16));
 8003c26:	2380      	movs	r3, #128	@ 0x80
 8003c28:	005a      	lsls	r2, r3, #1
 8003c2a:	4b4c      	ldr	r3, [pc, #304]	@ (8003d5c <init_user_config_defaults+0x564>)
 8003c2c:	2100      	movs	r1, #0
 8003c2e:	0018      	movs	r0, r3
 8003c30:	f008 fa18 	bl	800c064 <memset>
    memset(g_user_config.test_array_u8, 0, sizeof(g_user_config.test_array_u8));
 8003c34:	2380      	movs	r3, #128	@ 0x80
 8003c36:	005a      	lsls	r2, r3, #1
 8003c38:	4b49      	ldr	r3, [pc, #292]	@ (8003d60 <init_user_config_defaults+0x568>)
 8003c3a:	2100      	movs	r1, #0
 8003c3c:	0018      	movs	r0, r3
 8003c3e:	f008 fa11 	bl	800c064 <memset>
    memset(g_user_config.test_array_float, 0, sizeof(g_user_config.test_array_float));
 8003c42:	2380      	movs	r3, #128	@ 0x80
 8003c44:	005a      	lsls	r2, r3, #1
 8003c46:	4b47      	ldr	r3, [pc, #284]	@ (8003d64 <init_user_config_defaults+0x56c>)
 8003c48:	2100      	movs	r1, #0
 8003c4a:	0018      	movs	r0, r3
 8003c4c:	f008 fa0a 	bl	800c064 <memset>
    memset(g_user_config.test_array_i32, 0, sizeof(g_user_config.test_array_i32));
 8003c50:	2380      	movs	r3, #128	@ 0x80
 8003c52:	005a      	lsls	r2, r3, #1
 8003c54:	4b44      	ldr	r3, [pc, #272]	@ (8003d68 <init_user_config_defaults+0x570>)
 8003c56:	2100      	movs	r1, #0
 8003c58:	0018      	movs	r0, r3
 8003c5a:	f008 fa03 	bl	800c064 <memset>

    // Initialize position correction table to unity
    for (int i = 0; i < 360; i++) {
 8003c5e:	2300      	movs	r3, #0
 8003c60:	607b      	str	r3, [r7, #4]
 8003c62:	e033      	b.n	8003ccc <init_user_config_defaults+0x4d4>
        g_user_config.position_correction_table[i] = 1.0f;
 8003c64:	4a41      	ldr	r2, [pc, #260]	@ (8003d6c <init_user_config_defaults+0x574>)
 8003c66:	687b      	ldr	r3, [r7, #4]
 8003c68:	33e3      	adds	r3, #227	@ 0xe3
 8003c6a:	33ff      	adds	r3, #255	@ 0xff
 8003c6c:	009b      	lsls	r3, r3, #2
 8003c6e:	18d3      	adds	r3, r2, r3
 8003c70:	3303      	adds	r3, #3
 8003c72:	22fe      	movs	r2, #254	@ 0xfe
 8003c74:	0592      	lsls	r2, r2, #22
 8003c76:	21ff      	movs	r1, #255	@ 0xff
 8003c78:	4011      	ands	r1, r2
 8003c7a:	000c      	movs	r4, r1
 8003c7c:	7819      	ldrb	r1, [r3, #0]
 8003c7e:	2000      	movs	r0, #0
 8003c80:	4001      	ands	r1, r0
 8003c82:	1c08      	adds	r0, r1, #0
 8003c84:	1c21      	adds	r1, r4, #0
 8003c86:	4301      	orrs	r1, r0
 8003c88:	7019      	strb	r1, [r3, #0]
 8003c8a:	0a11      	lsrs	r1, r2, #8
 8003c8c:	20ff      	movs	r0, #255	@ 0xff
 8003c8e:	4001      	ands	r1, r0
 8003c90:	000c      	movs	r4, r1
 8003c92:	7859      	ldrb	r1, [r3, #1]
 8003c94:	2000      	movs	r0, #0
 8003c96:	4001      	ands	r1, r0
 8003c98:	1c08      	adds	r0, r1, #0
 8003c9a:	1c21      	adds	r1, r4, #0
 8003c9c:	4301      	orrs	r1, r0
 8003c9e:	7059      	strb	r1, [r3, #1]
 8003ca0:	0c11      	lsrs	r1, r2, #16
 8003ca2:	20ff      	movs	r0, #255	@ 0xff
 8003ca4:	4001      	ands	r1, r0
 8003ca6:	000c      	movs	r4, r1
 8003ca8:	7899      	ldrb	r1, [r3, #2]
 8003caa:	2000      	movs	r0, #0
 8003cac:	4001      	ands	r1, r0
 8003cae:	1c08      	adds	r0, r1, #0
 8003cb0:	1c21      	adds	r1, r4, #0
 8003cb2:	4301      	orrs	r1, r0
 8003cb4:	7099      	strb	r1, [r3, #2]
 8003cb6:	0e10      	lsrs	r0, r2, #24
 8003cb8:	78da      	ldrb	r2, [r3, #3]
 8003cba:	2100      	movs	r1, #0
 8003cbc:	400a      	ands	r2, r1
 8003cbe:	1c11      	adds	r1, r2, #0
 8003cc0:	1c02      	adds	r2, r0, #0
 8003cc2:	430a      	orrs	r2, r1
 8003cc4:	70da      	strb	r2, [r3, #3]
    for (int i = 0; i < 360; i++) {
 8003cc6:	687b      	ldr	r3, [r7, #4]
 8003cc8:	3301      	adds	r3, #1
 8003cca:	607b      	str	r3, [r7, #4]
 8003ccc:	687a      	ldr	r2, [r7, #4]
 8003cce:	23b4      	movs	r3, #180	@ 0xb4
 8003cd0:	005b      	lsls	r3, r3, #1
 8003cd2:	429a      	cmp	r2, r3
 8003cd4:	dbc6      	blt.n	8003c64 <init_user_config_defaults+0x46c>
    }

    // Initialize temperature compensation to unity
    for (int i = 0; i < 64; i++) {
 8003cd6:	2300      	movs	r3, #0
 8003cd8:	603b      	str	r3, [r7, #0]
 8003cda:	e034      	b.n	8003d46 <init_user_config_defaults+0x54e>
        g_user_config.temperature_compensation[i] = 1.0f;
 8003cdc:	4a23      	ldr	r2, [pc, #140]	@ (8003d6c <init_user_config_defaults+0x574>)
 8003cde:	683b      	ldr	r3, [r7, #0]
 8003ce0:	4923      	ldr	r1, [pc, #140]	@ (8003d70 <init_user_config_defaults+0x578>)
 8003ce2:	468c      	mov	ip, r1
 8003ce4:	4463      	add	r3, ip
 8003ce6:	009b      	lsls	r3, r3, #2
 8003ce8:	18d3      	adds	r3, r2, r3
 8003cea:	3303      	adds	r3, #3
 8003cec:	22fe      	movs	r2, #254	@ 0xfe
 8003cee:	0592      	lsls	r2, r2, #22
 8003cf0:	21ff      	movs	r1, #255	@ 0xff
 8003cf2:	4011      	ands	r1, r2
 8003cf4:	000c      	movs	r4, r1
 8003cf6:	7819      	ldrb	r1, [r3, #0]
 8003cf8:	2000      	movs	r0, #0
 8003cfa:	4001      	ands	r1, r0
 8003cfc:	1c08      	adds	r0, r1, #0
 8003cfe:	1c21      	adds	r1, r4, #0
 8003d00:	4301      	orrs	r1, r0
 8003d02:	7019      	strb	r1, [r3, #0]
 8003d04:	0a11      	lsrs	r1, r2, #8
 8003d06:	20ff      	movs	r0, #255	@ 0xff
 8003d08:	4001      	ands	r1, r0
 8003d0a:	000c      	movs	r4, r1
 8003d0c:	7859      	ldrb	r1, [r3, #1]
 8003d0e:	2000      	movs	r0, #0
 8003d10:	4001      	ands	r1, r0
 8003d12:	1c08      	adds	r0, r1, #0
 8003d14:	1c21      	adds	r1, r4, #0
 8003d16:	4301      	orrs	r1, r0
 8003d18:	7059      	strb	r1, [r3, #1]
 8003d1a:	0c11      	lsrs	r1, r2, #16
 8003d1c:	20ff      	movs	r0, #255	@ 0xff
 8003d1e:	4001      	ands	r1, r0
 8003d20:	000c      	movs	r4, r1
 8003d22:	7899      	ldrb	r1, [r3, #2]
 8003d24:	2000      	movs	r0, #0
 8003d26:	4001      	ands	r1, r0
 8003d28:	1c08      	adds	r0, r1, #0
 8003d2a:	1c21      	adds	r1, r4, #0
 8003d2c:	4301      	orrs	r1, r0
 8003d2e:	7099      	strb	r1, [r3, #2]
 8003d30:	0e10      	lsrs	r0, r2, #24
 8003d32:	78da      	ldrb	r2, [r3, #3]
 8003d34:	2100      	movs	r1, #0
 8003d36:	400a      	ands	r2, r1
 8003d38:	1c11      	adds	r1, r2, #0
 8003d3a:	1c02      	adds	r2, r0, #0
 8003d3c:	430a      	orrs	r2, r1
 8003d3e:	70da      	strb	r2, [r3, #3]
    for (int i = 0; i < 64; i++) {
 8003d40:	683b      	ldr	r3, [r7, #0]
 8003d42:	3301      	adds	r3, #1
 8003d44:	603b      	str	r3, [r7, #0]
 8003d46:	683b      	ldr	r3, [r7, #0]
 8003d48:	2b3f      	cmp	r3, #63	@ 0x3f
 8003d4a:	ddc7      	ble.n	8003cdc <init_user_config_defaults+0x4e4>
    }
}
 8003d4c:	46c0      	nop			@ (mov r8, r8)
 8003d4e:	46c0      	nop			@ (mov r8, r8)
 8003d50:	46bd      	mov	sp, r7
 8003d52:	b003      	add	sp, #12
 8003d54:	bd90      	pop	{r4, r7, pc}
 8003d56:	46c0      	nop			@ (mov r8, r8)
 8003d58:	200001ef 	.word	0x200001ef
 8003d5c:	200002ef 	.word	0x200002ef
 8003d60:	200003ef 	.word	0x200003ef
 8003d64:	200004ef 	.word	0x200004ef
 8003d68:	200005ef 	.word	0x200005ef
 8003d6c:	20000164 	.word	0x20000164
 8003d70:	0000034a 	.word	0x0000034a

08003d74 <init_critical_data_defaults>:

/**
 * @brief Initialize critical data with factory defaults
 */
static void init_critical_data_defaults(void) {
 8003d74:	b580      	push	{r7, lr}
 8003d76:	b082      	sub	sp, #8
 8003d78:	af00      	add	r7, sp, #0
    memset(&g_critical_data, 0, sizeof(g_critical_data));
 8003d7a:	4a33      	ldr	r2, [pc, #204]	@ (8003e48 <init_critical_data_defaults+0xd4>)
 8003d7c:	4b33      	ldr	r3, [pc, #204]	@ (8003e4c <init_critical_data_defaults+0xd8>)
 8003d7e:	2100      	movs	r1, #0
 8003d80:	0018      	movs	r0, r3
 8003d82:	f008 f96f 	bl	800c064 <memset>

    g_critical_data.magic = 0xDEADBEEF;
 8003d86:	4b31      	ldr	r3, [pc, #196]	@ (8003e4c <init_critical_data_defaults+0xd8>)
 8003d88:	4a31      	ldr	r2, [pc, #196]	@ (8003e50 <init_critical_data_defaults+0xdc>)
 8003d8a:	601a      	str	r2, [r3, #0]

    // System Identity
    g_critical_data.firmware_version = 0x00020000;  // Version 2.0.0
 8003d8c:	4b2f      	ldr	r3, [pc, #188]	@ (8003e4c <init_critical_data_defaults+0xd8>)
 8003d8e:	2280      	movs	r2, #128	@ 0x80
 8003d90:	0292      	lsls	r2, r2, #10
 8003d92:	605a      	str	r2, [r3, #4]
    g_critical_data.hardware_revision = 2;
 8003d94:	4b2d      	ldr	r3, [pc, #180]	@ (8003e4c <init_critical_data_defaults+0xd8>)
 8003d96:	2202      	movs	r2, #2
 8003d98:	609a      	str	r2, [r3, #8]
    g_critical_data.device_serial_number = HAL_GetUIDw0();
 8003d9a:	f003 f86f 	bl	8006e7c <HAL_GetUIDw0>
 8003d9e:	0002      	movs	r2, r0
 8003da0:	4b2a      	ldr	r3, [pc, #168]	@ (8003e4c <init_critical_data_defaults+0xd8>)
 8003da2:	60da      	str	r2, [r3, #12]
    g_critical_data.factory_calibration_date = 0;
 8003da4:	4b29      	ldr	r3, [pc, #164]	@ (8003e4c <init_critical_data_defaults+0xd8>)
 8003da6:	2200      	movs	r2, #0
 8003da8:	611a      	str	r2, [r3, #16]

    // Factory Calibration defaults
    g_critical_data.magnetic_offset_degrees = 0.0f;
 8003daa:	4b28      	ldr	r3, [pc, #160]	@ (8003e4c <init_critical_data_defaults+0xd8>)
 8003dac:	2200      	movs	r2, #0
 8003dae:	615a      	str	r2, [r3, #20]
    g_critical_data.temperature_coefficient = 1.0f;
 8003db0:	4b26      	ldr	r3, [pc, #152]	@ (8003e4c <init_critical_data_defaults+0xd8>)
 8003db2:	22fe      	movs	r2, #254	@ 0xfe
 8003db4:	0592      	lsls	r2, r2, #22
 8003db6:	619a      	str	r2, [r3, #24]
    g_critical_data.encoder_cpr = 2097152;  // 2^21 for MT6835
 8003db8:	4b24      	ldr	r3, [pc, #144]	@ (8003e4c <init_critical_data_defaults+0xd8>)
 8003dba:	2280      	movs	r2, #128	@ 0x80
 8003dbc:	0392      	lsls	r2, r2, #14
 8003dbe:	61da      	str	r2, [r3, #28]

    // Initialize expanded linearity correction to unity
    for (int i = 0; i < 64; i++) {
 8003dc0:	2300      	movs	r3, #0
 8003dc2:	607b      	str	r3, [r7, #4]
 8003dc4:	e009      	b.n	8003dda <init_critical_data_defaults+0x66>
        g_critical_data.linearity_correction[i] = 1.0f;
 8003dc6:	4b21      	ldr	r3, [pc, #132]	@ (8003e4c <init_critical_data_defaults+0xd8>)
 8003dc8:	687a      	ldr	r2, [r7, #4]
 8003dca:	3208      	adds	r2, #8
 8003dcc:	0092      	lsls	r2, r2, #2
 8003dce:	21fe      	movs	r1, #254	@ 0xfe
 8003dd0:	0589      	lsls	r1, r1, #22
 8003dd2:	50d1      	str	r1, [r2, r3]
    for (int i = 0; i < 64; i++) {
 8003dd4:	687b      	ldr	r3, [r7, #4]
 8003dd6:	3301      	adds	r3, #1
 8003dd8:	607b      	str	r3, [r7, #4]
 8003dda:	687b      	ldr	r3, [r7, #4]
 8003ddc:	2b3f      	cmp	r3, #63	@ 0x3f
 8003dde:	ddf2      	ble.n	8003dc6 <init_critical_data_defaults+0x52>
    }

    // System fault tracking
    g_critical_data.reset_sticky_flag = 0;
 8003de0:	4a1a      	ldr	r2, [pc, #104]	@ (8003e4c <init_critical_data_defaults+0xd8>)
 8003de2:	2390      	movs	r3, #144	@ 0x90
 8003de4:	005b      	lsls	r3, r3, #1
 8003de6:	2100      	movs	r1, #0
 8003de8:	50d1      	str	r1, [r2, r3]

    // Power management defaults
    g_critical_data.min_voltage_recorded = 3.3f;
 8003dea:	4a18      	ldr	r2, [pc, #96]	@ (8003e4c <init_critical_data_defaults+0xd8>)
 8003dec:	23a0      	movs	r3, #160	@ 0xa0
 8003dee:	005b      	lsls	r3, r3, #1
 8003df0:	4918      	ldr	r1, [pc, #96]	@ (8003e54 <init_critical_data_defaults+0xe0>)
 8003df2:	50d1      	str	r1, [r2, r3]
    g_critical_data.max_voltage_recorded = 3.3f;
 8003df4:	4a15      	ldr	r2, [pc, #84]	@ (8003e4c <init_critical_data_defaults+0xd8>)
 8003df6:	23a2      	movs	r3, #162	@ 0xa2
 8003df8:	005b      	lsls	r3, r3, #1
 8003dfa:	4916      	ldr	r1, [pc, #88]	@ (8003e54 <init_critical_data_defaults+0xe0>)
 8003dfc:	50d1      	str	r1, [r2, r3]

    // Performance metrics defaults
    g_critical_data.max_loop_time_us = 0;
 8003dfe:	4a13      	ldr	r2, [pc, #76]	@ (8003e4c <init_critical_data_defaults+0xd8>)
 8003e00:	23ac      	movs	r3, #172	@ 0xac
 8003e02:	005b      	lsls	r3, r3, #1
 8003e04:	2100      	movs	r1, #0
 8003e06:	50d1      	str	r1, [r2, r3]
    g_critical_data.avg_loop_time_us = 0;
 8003e08:	4a10      	ldr	r2, [pc, #64]	@ (8003e4c <init_critical_data_defaults+0xd8>)
 8003e0a:	23ae      	movs	r3, #174	@ 0xae
 8003e0c:	005b      	lsls	r3, r3, #1
 8003e0e:	2100      	movs	r1, #0
 8003e10:	50d1      	str	r1, [r2, r3]
    g_critical_data.cpu_usage_percent = 0;
 8003e12:	4a0e      	ldr	r2, [pc, #56]	@ (8003e4c <init_critical_data_defaults+0xd8>)
 8003e14:	23b0      	movs	r3, #176	@ 0xb0
 8003e16:	005b      	lsls	r3, r3, #1
 8003e18:	2100      	movs	r1, #0
 8003e1a:	50d1      	str	r1, [r2, r3]

    // Manufacturing data
    strcpy(g_critical_data.manufacturing_date, "2024-01-01");
 8003e1c:	4b0e      	ldr	r3, [pc, #56]	@ (8003e58 <init_critical_data_defaults+0xe4>)
 8003e1e:	4a0f      	ldr	r2, [pc, #60]	@ (8003e5c <init_critical_data_defaults+0xe8>)
 8003e20:	ca03      	ldmia	r2!, {r0, r1}
 8003e22:	c303      	stmia	r3!, {r0, r1}
 8003e24:	8811      	ldrh	r1, [r2, #0]
 8003e26:	8019      	strh	r1, [r3, #0]
 8003e28:	7892      	ldrb	r2, [r2, #2]
 8003e2a:	709a      	strb	r2, [r3, #2]
    strcpy(g_critical_data.test_station_id, "TEST-01");
 8003e2c:	4b0c      	ldr	r3, [pc, #48]	@ (8003e60 <init_critical_data_defaults+0xec>)
 8003e2e:	4a0d      	ldr	r2, [pc, #52]	@ (8003e64 <init_critical_data_defaults+0xf0>)
 8003e30:	ca03      	ldmia	r2!, {r0, r1}
 8003e32:	c303      	stmia	r3!, {r0, r1}
    g_critical_data.manufacturing_batch = 1;
 8003e34:	4a05      	ldr	r2, [pc, #20]	@ (8003e4c <init_critical_data_defaults+0xd8>)
 8003e36:	2382      	movs	r3, #130	@ 0x82
 8003e38:	009b      	lsls	r3, r3, #2
 8003e3a:	2101      	movs	r1, #1
 8003e3c:	50d1      	str	r1, [r2, r3]
}
 8003e3e:	46c0      	nop			@ (mov r8, r8)
 8003e40:	46bd      	mov	sp, r7
 8003e42:	b002      	add	sp, #8
 8003e44:	bd80      	pop	{r7, pc}
 8003e46:	46c0      	nop			@ (mov r8, r8)
 8003e48:	00004010 	.word	0x00004010
 8003e4c:	20007f94 	.word	0x20007f94
 8003e50:	deadbeef 	.word	0xdeadbeef
 8003e54:	40533333 	.word	0x40533333
 8003e58:	2000817c 	.word	0x2000817c
 8003e5c:	0800c10c 	.word	0x0800c10c
 8003e60:	2000818c 	.word	0x2000818c
 8003e64:	0800c118 	.word	0x0800c118

08003e68 <init_array_header_defaults>:

/**
 * @brief Initialize array storage header with defaults
 */
static void init_array_header_defaults(void) {
 8003e68:	b580      	push	{r7, lr}
 8003e6a:	b082      	sub	sp, #8
 8003e6c:	af00      	add	r7, sp, #0
    memset(&g_array_header, 0, sizeof(g_array_header));
 8003e6e:	4a16      	ldr	r2, [pc, #88]	@ (8003ec8 <init_array_header_defaults+0x60>)
 8003e70:	4b16      	ldr	r3, [pc, #88]	@ (8003ecc <init_array_header_defaults+0x64>)
 8003e72:	2100      	movs	r1, #0
 8003e74:	0018      	movs	r0, r3
 8003e76:	f008 f8f5 	bl	800c064 <memset>

    g_array_header.magic = 0x41525241;  // "ARRA" in hex
 8003e7a:	4b14      	ldr	r3, [pc, #80]	@ (8003ecc <init_array_header_defaults+0x64>)
 8003e7c:	4a14      	ldr	r2, [pc, #80]	@ (8003ed0 <init_array_header_defaults+0x68>)
 8003e7e:	601a      	str	r2, [r3, #0]
    g_array_header.version = 1;
 8003e80:	4b12      	ldr	r3, [pc, #72]	@ (8003ecc <init_array_header_defaults+0x64>)
 8003e82:	2201      	movs	r2, #1
 8003e84:	605a      	str	r2, [r3, #4]
    g_array_header.array_count = 0;
 8003e86:	4b11      	ldr	r3, [pc, #68]	@ (8003ecc <init_array_header_defaults+0x64>)
 8003e88:	2200      	movs	r2, #0
 8003e8a:	609a      	str	r2, [r3, #8]
    g_array_header.next_free_offset = sizeof(array_storage_header_t);
 8003e8c:	4b0f      	ldr	r3, [pc, #60]	@ (8003ecc <init_array_header_defaults+0x64>)
 8003e8e:	4a0e      	ldr	r2, [pc, #56]	@ (8003ec8 <init_array_header_defaults+0x60>)
 8003e90:	60da      	str	r2, [r3, #12]

    // Initialize all array descriptors as inactive
    for (int i = 0; i < MAX_USER_ARRAYS; i++) {
 8003e92:	2300      	movs	r3, #0
 8003e94:	607b      	str	r3, [r7, #4]
 8003e96:	e00e      	b.n	8003eb6 <init_array_header_defaults+0x4e>
        g_array_header.arrays[i].active = 0;
 8003e98:	490c      	ldr	r1, [pc, #48]	@ (8003ecc <init_array_header_defaults+0x64>)
 8003e9a:	687a      	ldr	r2, [r7, #4]
 8003e9c:	202d      	movs	r0, #45	@ 0x2d
 8003e9e:	0013      	movs	r3, r2
 8003ea0:	00db      	lsls	r3, r3, #3
 8003ea2:	189b      	adds	r3, r3, r2
 8003ea4:	009b      	lsls	r3, r3, #2
 8003ea6:	189b      	adds	r3, r3, r2
 8003ea8:	18cb      	adds	r3, r1, r3
 8003eaa:	181b      	adds	r3, r3, r0
 8003eac:	2200      	movs	r2, #0
 8003eae:	701a      	strb	r2, [r3, #0]
    for (int i = 0; i < MAX_USER_ARRAYS; i++) {
 8003eb0:	687b      	ldr	r3, [r7, #4]
 8003eb2:	3301      	adds	r3, #1
 8003eb4:	607b      	str	r3, [r7, #4]
 8003eb6:	687b      	ldr	r3, [r7, #4]
 8003eb8:	2b1f      	cmp	r3, #31
 8003eba:	dded      	ble.n	8003e98 <init_array_header_defaults+0x30>
    }
}
 8003ebc:	46c0      	nop			@ (mov r8, r8)
 8003ebe:	46c0      	nop			@ (mov r8, r8)
 8003ec0:	46bd      	mov	sp, r7
 8003ec2:	b002      	add	sp, #8
 8003ec4:	bd80      	pop	{r7, pc}
 8003ec6:	46c0      	nop			@ (mov r8, r8)
 8003ec8:	00001434 	.word	0x00001434
 8003ecc:	2000bfa4 	.word	0x2000bfa4
 8003ed0:	41525241 	.word	0x41525241

08003ed4 <erase_user_config_pages>:
//===================================================================================

/**
 * @brief Erase user configuration flash pages
 */
static HAL_StatusTypeDef erase_user_config_pages(void) {
 8003ed4:	b5b0      	push	{r4, r5, r7, lr}
 8003ed6:	b088      	sub	sp, #32
 8003ed8:	af00      	add	r7, sp, #0
    HAL_FLASH_Unlock();
 8003eda:	f004 fd75 	bl	80089c8 <HAL_FLASH_Unlock>

    uint32_t start_page = (USER_CONFIG_START - FLASH_BASE_ADDR) / FLASH_PAGE_SIZE;
 8003ede:	23e0      	movs	r3, #224	@ 0xe0
 8003ee0:	61fb      	str	r3, [r7, #28]
    uint32_t num_pages = USER_CONFIG_SIZE / FLASH_PAGE_SIZE;
 8003ee2:	2310      	movs	r3, #16
 8003ee4:	61bb      	str	r3, [r7, #24]

    FLASH_EraseInitTypeDef erase_init;
    erase_init.TypeErase = FLASH_TYPEERASE_PAGES;
 8003ee6:	1d3b      	adds	r3, r7, #4
 8003ee8:	2202      	movs	r2, #2
 8003eea:	601a      	str	r2, [r3, #0]
    erase_init.Banks = FLASH_BANK_1;
 8003eec:	1d3b      	adds	r3, r7, #4
 8003eee:	2204      	movs	r2, #4
 8003ef0:	605a      	str	r2, [r3, #4]
    erase_init.Page = start_page;
 8003ef2:	1d3b      	adds	r3, r7, #4
 8003ef4:	69fa      	ldr	r2, [r7, #28]
 8003ef6:	609a      	str	r2, [r3, #8]
    erase_init.NbPages = num_pages;
 8003ef8:	1d3b      	adds	r3, r7, #4
 8003efa:	69ba      	ldr	r2, [r7, #24]
 8003efc:	60da      	str	r2, [r3, #12]

    uint32_t page_error = 0;
 8003efe:	2300      	movs	r3, #0
 8003f00:	603b      	str	r3, [r7, #0]
    HAL_StatusTypeDef status = HAL_FLASHEx_Erase(&erase_init, &page_error);
 8003f02:	2517      	movs	r5, #23
 8003f04:	197c      	adds	r4, r7, r5
 8003f06:	003a      	movs	r2, r7
 8003f08:	1d3b      	adds	r3, r7, #4
 8003f0a:	0011      	movs	r1, r2
 8003f0c:	0018      	movs	r0, r3
 8003f0e:	f004 fe0f 	bl	8008b30 <HAL_FLASHEx_Erase>
 8003f12:	0003      	movs	r3, r0
 8003f14:	7023      	strb	r3, [r4, #0]

    HAL_FLASH_Lock();
 8003f16:	f004 fd7b 	bl	8008a10 <HAL_FLASH_Lock>
    return status;
 8003f1a:	197b      	adds	r3, r7, r5
 8003f1c:	781b      	ldrb	r3, [r3, #0]
}
 8003f1e:	0018      	movs	r0, r3
 8003f20:	46bd      	mov	sp, r7
 8003f22:	b008      	add	sp, #32
 8003f24:	bdb0      	pop	{r4, r5, r7, pc}
	...

08003f28 <save_user_config_to_flash>:
}

/**
 * @brief Save user configuration to flash
 */
static HAL_StatusTypeDef save_user_config_to_flash(void) {
 8003f28:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003f2a:	b087      	sub	sp, #28
 8003f2c:	af00      	add	r7, sp, #0
    // Calculate and store checksum
    g_user_config.checksum = flash_crc32((uint8_t*)&g_user_config,
 8003f2e:	4a3c      	ldr	r2, [pc, #240]	@ (8004020 <save_user_config_to_flash+0xf8>)
 8003f30:	4b3c      	ldr	r3, [pc, #240]	@ (8004024 <save_user_config_to_flash+0xfc>)
 8003f32:	0011      	movs	r1, r2
 8003f34:	0018      	movs	r0, r3
 8003f36:	f7ff fc27 	bl	8003788 <flash_crc32>
 8003f3a:	0001      	movs	r1, r0
 8003f3c:	4b39      	ldr	r3, [pc, #228]	@ (8004024 <save_user_config_to_flash+0xfc>)
 8003f3e:	4a38      	ldr	r2, [pc, #224]	@ (8004020 <save_user_config_to_flash+0xf8>)
 8003f40:	20ff      	movs	r0, #255	@ 0xff
 8003f42:	4008      	ands	r0, r1
 8003f44:	0005      	movs	r5, r0
 8003f46:	5c98      	ldrb	r0, [r3, r2]
 8003f48:	2400      	movs	r4, #0
 8003f4a:	4020      	ands	r0, r4
 8003f4c:	1c04      	adds	r4, r0, #0
 8003f4e:	1c28      	adds	r0, r5, #0
 8003f50:	4320      	orrs	r0, r4
 8003f52:	5498      	strb	r0, [r3, r2]
 8003f54:	0a08      	lsrs	r0, r1, #8
 8003f56:	24ff      	movs	r4, #255	@ 0xff
 8003f58:	4020      	ands	r0, r4
 8003f5a:	0006      	movs	r6, r0
 8003f5c:	1898      	adds	r0, r3, r2
 8003f5e:	7844      	ldrb	r4, [r0, #1]
 8003f60:	2500      	movs	r5, #0
 8003f62:	402c      	ands	r4, r5
 8003f64:	1c25      	adds	r5, r4, #0
 8003f66:	1c34      	adds	r4, r6, #0
 8003f68:	432c      	orrs	r4, r5
 8003f6a:	7044      	strb	r4, [r0, #1]
 8003f6c:	0c08      	lsrs	r0, r1, #16
 8003f6e:	24ff      	movs	r4, #255	@ 0xff
 8003f70:	4020      	ands	r0, r4
 8003f72:	0006      	movs	r6, r0
 8003f74:	1898      	adds	r0, r3, r2
 8003f76:	7884      	ldrb	r4, [r0, #2]
 8003f78:	2500      	movs	r5, #0
 8003f7a:	402c      	ands	r4, r5
 8003f7c:	1c25      	adds	r5, r4, #0
 8003f7e:	1c34      	adds	r4, r6, #0
 8003f80:	432c      	orrs	r4, r5
 8003f82:	7084      	strb	r4, [r0, #2]
 8003f84:	0e08      	lsrs	r0, r1, #24
 8003f86:	189b      	adds	r3, r3, r2
 8003f88:	78da      	ldrb	r2, [r3, #3]
 8003f8a:	2100      	movs	r1, #0
 8003f8c:	400a      	ands	r2, r1
 8003f8e:	1c11      	adds	r1, r2, #0
 8003f90:	1c02      	adds	r2, r0, #0
 8003f92:	430a      	orrs	r2, r1
 8003f94:	70da      	strb	r2, [r3, #3]
                                        sizeof(g_user_config) - sizeof(uint32_t));

    // Erase pages first
    HAL_StatusTypeDef status = erase_user_config_pages();
 8003f96:	250f      	movs	r5, #15
 8003f98:	197c      	adds	r4, r7, r5
 8003f9a:	f7ff ff9b 	bl	8003ed4 <erase_user_config_pages>
 8003f9e:	0003      	movs	r3, r0
 8003fa0:	7023      	strb	r3, [r4, #0]
    if (status != HAL_OK) {
 8003fa2:	002a      	movs	r2, r5
 8003fa4:	18bb      	adds	r3, r7, r2
 8003fa6:	781b      	ldrb	r3, [r3, #0]
 8003fa8:	2b00      	cmp	r3, #0
 8003faa:	d002      	beq.n	8003fb2 <save_user_config_to_flash+0x8a>
        return status;
 8003fac:	18bb      	adds	r3, r7, r2
 8003fae:	781b      	ldrb	r3, [r3, #0]
 8003fb0:	e031      	b.n	8004016 <save_user_config_to_flash+0xee>
    }

    // Write data in 64-bit chunks
    HAL_FLASH_Unlock();
 8003fb2:	f004 fd09 	bl	80089c8 <HAL_FLASH_Unlock>

    uint64_t* src = (uint64_t*)&g_user_config;
 8003fb6:	4b1b      	ldr	r3, [pc, #108]	@ (8004024 <save_user_config_to_flash+0xfc>)
 8003fb8:	60bb      	str	r3, [r7, #8]
    uint32_t addr = USER_CONFIG_START;
 8003fba:	4b1b      	ldr	r3, [pc, #108]	@ (8004028 <save_user_config_to_flash+0x100>)
 8003fbc:	617b      	str	r3, [r7, #20]
    size_t chunks = (sizeof(g_user_config) + 7) / 8;
 8003fbe:	4b1b      	ldr	r3, [pc, #108]	@ (800402c <save_user_config_to_flash+0x104>)
 8003fc0:	607b      	str	r3, [r7, #4]

    for (size_t i = 0; i < chunks; i++) {
 8003fc2:	2300      	movs	r3, #0
 8003fc4:	613b      	str	r3, [r7, #16]
 8003fc6:	e01c      	b.n	8004002 <save_user_config_to_flash+0xda>
        status = HAL_FLASH_Program(FLASH_TYPEPROGRAM_DOUBLEWORD, addr, src[i]);
 8003fc8:	693b      	ldr	r3, [r7, #16]
 8003fca:	00db      	lsls	r3, r3, #3
 8003fcc:	68ba      	ldr	r2, [r7, #8]
 8003fce:	18d3      	adds	r3, r2, r3
 8003fd0:	681a      	ldr	r2, [r3, #0]
 8003fd2:	685b      	ldr	r3, [r3, #4]
 8003fd4:	250f      	movs	r5, #15
 8003fd6:	197c      	adds	r4, r7, r5
 8003fd8:	6979      	ldr	r1, [r7, #20]
 8003fda:	2001      	movs	r0, #1
 8003fdc:	f004 fca6 	bl	800892c <HAL_FLASH_Program>
 8003fe0:	0003      	movs	r3, r0
 8003fe2:	7023      	strb	r3, [r4, #0]
        if (status != HAL_OK) {
 8003fe4:	197b      	adds	r3, r7, r5
 8003fe6:	781b      	ldrb	r3, [r3, #0]
 8003fe8:	2b00      	cmp	r3, #0
 8003fea:	d004      	beq.n	8003ff6 <save_user_config_to_flash+0xce>
            HAL_FLASH_Lock();
 8003fec:	f004 fd10 	bl	8008a10 <HAL_FLASH_Lock>
            return status;
 8003ff0:	197b      	adds	r3, r7, r5
 8003ff2:	781b      	ldrb	r3, [r3, #0]
 8003ff4:	e00f      	b.n	8004016 <save_user_config_to_flash+0xee>
        }
        addr += 8;
 8003ff6:	697b      	ldr	r3, [r7, #20]
 8003ff8:	3308      	adds	r3, #8
 8003ffa:	617b      	str	r3, [r7, #20]
    for (size_t i = 0; i < chunks; i++) {
 8003ffc:	693b      	ldr	r3, [r7, #16]
 8003ffe:	3301      	adds	r3, #1
 8004000:	613b      	str	r3, [r7, #16]
 8004002:	693a      	ldr	r2, [r7, #16]
 8004004:	687b      	ldr	r3, [r7, #4]
 8004006:	429a      	cmp	r2, r3
 8004008:	d3de      	bcc.n	8003fc8 <save_user_config_to_flash+0xa0>
    }

    HAL_FLASH_Lock();
 800400a:	f004 fd01 	bl	8008a10 <HAL_FLASH_Lock>
    g_user_config_dirty = 0;
 800400e:	4b08      	ldr	r3, [pc, #32]	@ (8004030 <save_user_config_to_flash+0x108>)
 8004010:	2200      	movs	r2, #0
 8004012:	701a      	strb	r2, [r3, #0]
    return HAL_OK;
 8004014:	2300      	movs	r3, #0
}
 8004016:	0018      	movs	r0, r3
 8004018:	46bd      	mov	sp, r7
 800401a:	b007      	add	sp, #28
 800401c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800401e:	46c0      	nop			@ (mov r8, r8)
 8004020:	00007e2b 	.word	0x00007e2b
 8004024:	20000164 	.word	0x20000164
 8004028:	08070000 	.word	0x08070000
 800402c:	00000fc6 	.word	0x00000fc6
 8004030:	2000d3d9 	.word	0x2000d3d9

08004034 <save_critical_data_to_flash>:

/**
 * @brief Save critical data to flash
 */
static HAL_StatusTypeDef save_critical_data_to_flash(void) {
 8004034:	b5b0      	push	{r4, r5, r7, lr}
 8004036:	b086      	sub	sp, #24
 8004038:	af00      	add	r7, sp, #0
    // Calculate and store checksum
    g_critical_data.checksum = flash_crc32((uint8_t*)&g_critical_data,
 800403a:	4a27      	ldr	r2, [pc, #156]	@ (80040d8 <save_critical_data_to_flash+0xa4>)
 800403c:	4b27      	ldr	r3, [pc, #156]	@ (80040dc <save_critical_data_to_flash+0xa8>)
 800403e:	0011      	movs	r1, r2
 8004040:	0018      	movs	r0, r3
 8004042:	f7ff fba1 	bl	8003788 <flash_crc32>
 8004046:	0002      	movs	r2, r0
 8004048:	4b24      	ldr	r3, [pc, #144]	@ (80040dc <save_critical_data_to_flash+0xa8>)
 800404a:	4923      	ldr	r1, [pc, #140]	@ (80040d8 <save_critical_data_to_flash+0xa4>)
 800404c:	505a      	str	r2, [r3, r1]
                                          sizeof(g_critical_data) - sizeof(uint32_t));

    // Erase pages first
    HAL_StatusTypeDef status = erase_critical_data_pages();
 800404e:	250f      	movs	r5, #15
 8004050:	197c      	adds	r4, r7, r5
 8004052:	f000 facf 	bl	80045f4 <erase_critical_data_pages>
 8004056:	0003      	movs	r3, r0
 8004058:	7023      	strb	r3, [r4, #0]
    if (status != HAL_OK) {
 800405a:	002a      	movs	r2, r5
 800405c:	18bb      	adds	r3, r7, r2
 800405e:	781b      	ldrb	r3, [r3, #0]
 8004060:	2b00      	cmp	r3, #0
 8004062:	d002      	beq.n	800406a <save_critical_data_to_flash+0x36>
        return status;
 8004064:	18bb      	adds	r3, r7, r2
 8004066:	781b      	ldrb	r3, [r3, #0]
 8004068:	e031      	b.n	80040ce <save_critical_data_to_flash+0x9a>
    }

    // Write data in 64-bit chunks
    HAL_FLASH_Unlock();
 800406a:	f004 fcad 	bl	80089c8 <HAL_FLASH_Unlock>

    uint64_t* src = (uint64_t*)&g_critical_data;
 800406e:	4b1b      	ldr	r3, [pc, #108]	@ (80040dc <save_critical_data_to_flash+0xa8>)
 8004070:	60bb      	str	r3, [r7, #8]
    uint32_t addr = CRITICAL_DATA_START;
 8004072:	4b1b      	ldr	r3, [pc, #108]	@ (80040e0 <save_critical_data_to_flash+0xac>)
 8004074:	617b      	str	r3, [r7, #20]
    size_t chunks = (sizeof(g_critical_data) + 7) / 8;
 8004076:	4b1b      	ldr	r3, [pc, #108]	@ (80040e4 <save_critical_data_to_flash+0xb0>)
 8004078:	607b      	str	r3, [r7, #4]

    for (size_t i = 0; i < chunks; i++) {
 800407a:	2300      	movs	r3, #0
 800407c:	613b      	str	r3, [r7, #16]
 800407e:	e01c      	b.n	80040ba <save_critical_data_to_flash+0x86>
        status = HAL_FLASH_Program(FLASH_TYPEPROGRAM_DOUBLEWORD, addr, src[i]);
 8004080:	693b      	ldr	r3, [r7, #16]
 8004082:	00db      	lsls	r3, r3, #3
 8004084:	68ba      	ldr	r2, [r7, #8]
 8004086:	18d3      	adds	r3, r2, r3
 8004088:	681a      	ldr	r2, [r3, #0]
 800408a:	685b      	ldr	r3, [r3, #4]
 800408c:	250f      	movs	r5, #15
 800408e:	197c      	adds	r4, r7, r5
 8004090:	6979      	ldr	r1, [r7, #20]
 8004092:	2001      	movs	r0, #1
 8004094:	f004 fc4a 	bl	800892c <HAL_FLASH_Program>
 8004098:	0003      	movs	r3, r0
 800409a:	7023      	strb	r3, [r4, #0]
        if (status != HAL_OK) {
 800409c:	197b      	adds	r3, r7, r5
 800409e:	781b      	ldrb	r3, [r3, #0]
 80040a0:	2b00      	cmp	r3, #0
 80040a2:	d004      	beq.n	80040ae <save_critical_data_to_flash+0x7a>
            HAL_FLASH_Lock();
 80040a4:	f004 fcb4 	bl	8008a10 <HAL_FLASH_Lock>
            return status;
 80040a8:	197b      	adds	r3, r7, r5
 80040aa:	781b      	ldrb	r3, [r3, #0]
 80040ac:	e00f      	b.n	80040ce <save_critical_data_to_flash+0x9a>
        }
        addr += 8;
 80040ae:	697b      	ldr	r3, [r7, #20]
 80040b0:	3308      	adds	r3, #8
 80040b2:	617b      	str	r3, [r7, #20]
    for (size_t i = 0; i < chunks; i++) {
 80040b4:	693b      	ldr	r3, [r7, #16]
 80040b6:	3301      	adds	r3, #1
 80040b8:	613b      	str	r3, [r7, #16]
 80040ba:	693a      	ldr	r2, [r7, #16]
 80040bc:	687b      	ldr	r3, [r7, #4]
 80040be:	429a      	cmp	r2, r3
 80040c0:	d3de      	bcc.n	8004080 <save_critical_data_to_flash+0x4c>
    }

    HAL_FLASH_Lock();
 80040c2:	f004 fca5 	bl	8008a10 <HAL_FLASH_Lock>
    g_critical_data_dirty = 0;
 80040c6:	4b08      	ldr	r3, [pc, #32]	@ (80040e8 <save_critical_data_to_flash+0xb4>)
 80040c8:	2200      	movs	r2, #0
 80040ca:	701a      	strb	r2, [r3, #0]
    return HAL_OK;
 80040cc:	2300      	movs	r3, #0
}
 80040ce:	0018      	movs	r0, r3
 80040d0:	46bd      	mov	sp, r7
 80040d2:	b006      	add	sp, #24
 80040d4:	bdb0      	pop	{r4, r5, r7, pc}
 80040d6:	46c0      	nop			@ (mov r8, r8)
 80040d8:	0000400c 	.word	0x0000400c
 80040dc:	20007f94 	.word	0x20007f94
 80040e0:	08078000 	.word	0x08078000
 80040e4:	00000802 	.word	0x00000802
 80040e8:	2000d3da 	.word	0x2000d3da

080040ec <load_config_from_flash>:
}

/**
 * @brief Load configuration data from flash memory
 */
static HAL_StatusTypeDef load_config_from_flash(void) {
 80040ec:	b580      	push	{r7, lr}
 80040ee:	b086      	sub	sp, #24
 80040f0:	af00      	add	r7, sp, #0
    // Load user configuration
    memcpy(&g_user_config, (void*)USER_CONFIG_START, sizeof(g_user_config));
 80040f2:	4b3d      	ldr	r3, [pc, #244]	@ (80041e8 <load_config_from_flash+0xfc>)
 80040f4:	4a3d      	ldr	r2, [pc, #244]	@ (80041ec <load_config_from_flash+0x100>)
 80040f6:	0018      	movs	r0, r3
 80040f8:	0011      	movs	r1, r2
 80040fa:	4b3d      	ldr	r3, [pc, #244]	@ (80041f0 <load_config_from_flash+0x104>)
 80040fc:	001a      	movs	r2, r3
 80040fe:	f007 ffdd 	bl	800c0bc <memcpy>

    // Validate user configuration
    if (g_user_config.magic != 0xCAFEBABE) {
 8004102:	4b39      	ldr	r3, [pc, #228]	@ (80041e8 <load_config_from_flash+0xfc>)
 8004104:	681b      	ldr	r3, [r3, #0]
 8004106:	4a3b      	ldr	r2, [pc, #236]	@ (80041f4 <load_config_from_flash+0x108>)
 8004108:	4293      	cmp	r3, r2
 800410a:	d002      	beq.n	8004112 <load_config_from_flash+0x26>
        init_user_config_defaults();
 800410c:	f7ff fb74 	bl	80037f8 <init_user_config_defaults>
 8004110:	e016      	b.n	8004140 <load_config_from_flash+0x54>
    } else {
        uint32_t calc_crc = flash_crc32((uint8_t*)&g_user_config,
 8004112:	4a39      	ldr	r2, [pc, #228]	@ (80041f8 <load_config_from_flash+0x10c>)
 8004114:	4b34      	ldr	r3, [pc, #208]	@ (80041e8 <load_config_from_flash+0xfc>)
 8004116:	0011      	movs	r1, r2
 8004118:	0018      	movs	r0, r3
 800411a:	f7ff fb35 	bl	8003788 <flash_crc32>
 800411e:	0003      	movs	r3, r0
 8004120:	617b      	str	r3, [r7, #20]
                                       sizeof(g_user_config) - sizeof(uint32_t));
        if (calc_crc != g_user_config.checksum) {
 8004122:	4b31      	ldr	r3, [pc, #196]	@ (80041e8 <load_config_from_flash+0xfc>)
 8004124:	4a34      	ldr	r2, [pc, #208]	@ (80041f8 <load_config_from_flash+0x10c>)
 8004126:	5c9a      	ldrb	r2, [r3, r2]
 8004128:	4934      	ldr	r1, [pc, #208]	@ (80041fc <load_config_from_flash+0x110>)
 800412a:	585b      	ldr	r3, [r3, r1]
 800412c:	021b      	lsls	r3, r3, #8
 800412e:	0a1b      	lsrs	r3, r3, #8
 8004130:	021b      	lsls	r3, r3, #8
 8004132:	4313      	orrs	r3, r2
 8004134:	001a      	movs	r2, r3
 8004136:	697b      	ldr	r3, [r7, #20]
 8004138:	4293      	cmp	r3, r2
 800413a:	d001      	beq.n	8004140 <load_config_from_flash+0x54>
            init_user_config_defaults();
 800413c:	f7ff fb5c 	bl	80037f8 <init_user_config_defaults>
        }
    }

    // Load critical data
    memcpy(&g_critical_data, (void*)CRITICAL_DATA_START, sizeof(g_critical_data));
 8004140:	4b2f      	ldr	r3, [pc, #188]	@ (8004200 <load_config_from_flash+0x114>)
 8004142:	4a30      	ldr	r2, [pc, #192]	@ (8004204 <load_config_from_flash+0x118>)
 8004144:	0018      	movs	r0, r3
 8004146:	0011      	movs	r1, r2
 8004148:	4b2f      	ldr	r3, [pc, #188]	@ (8004208 <load_config_from_flash+0x11c>)
 800414a:	001a      	movs	r2, r3
 800414c:	f007 ffb6 	bl	800c0bc <memcpy>

    // Validate critical data
    if (g_critical_data.magic != 0xDEADBEEF) {
 8004150:	4b2b      	ldr	r3, [pc, #172]	@ (8004200 <load_config_from_flash+0x114>)
 8004152:	681b      	ldr	r3, [r3, #0]
 8004154:	4a2d      	ldr	r2, [pc, #180]	@ (800420c <load_config_from_flash+0x120>)
 8004156:	4293      	cmp	r3, r2
 8004158:	d002      	beq.n	8004160 <load_config_from_flash+0x74>
        init_critical_data_defaults();
 800415a:	f7ff fe0b 	bl	8003d74 <init_critical_data_defaults>
 800415e:	e01b      	b.n	8004198 <load_config_from_flash+0xac>
    } else {
        uint32_t calc_crc = flash_crc32((uint8_t*)&g_critical_data,
 8004160:	4a2b      	ldr	r2, [pc, #172]	@ (8004210 <load_config_from_flash+0x124>)
 8004162:	4b27      	ldr	r3, [pc, #156]	@ (8004200 <load_config_from_flash+0x114>)
 8004164:	0011      	movs	r1, r2
 8004166:	0018      	movs	r0, r3
 8004168:	f7ff fb0e 	bl	8003788 <flash_crc32>
 800416c:	0003      	movs	r3, r0
 800416e:	613b      	str	r3, [r7, #16]
                                       sizeof(g_critical_data) - sizeof(uint32_t));
        if (calc_crc != g_critical_data.checksum) {
 8004170:	4b23      	ldr	r3, [pc, #140]	@ (8004200 <load_config_from_flash+0x114>)
 8004172:	4a27      	ldr	r2, [pc, #156]	@ (8004210 <load_config_from_flash+0x124>)
 8004174:	589b      	ldr	r3, [r3, r2]
 8004176:	693a      	ldr	r2, [r7, #16]
 8004178:	429a      	cmp	r2, r3
 800417a:	d00d      	beq.n	8004198 <load_config_from_flash+0xac>
            uint32_t saved_serial = g_critical_data.device_serial_number;
 800417c:	4b20      	ldr	r3, [pc, #128]	@ (8004200 <load_config_from_flash+0x114>)
 800417e:	68db      	ldr	r3, [r3, #12]
 8004180:	60fb      	str	r3, [r7, #12]
            uint32_t saved_version = g_critical_data.firmware_version;
 8004182:	4b1f      	ldr	r3, [pc, #124]	@ (8004200 <load_config_from_flash+0x114>)
 8004184:	685b      	ldr	r3, [r3, #4]
 8004186:	60bb      	str	r3, [r7, #8]
            init_critical_data_defaults();
 8004188:	f7ff fdf4 	bl	8003d74 <init_critical_data_defaults>
            g_critical_data.device_serial_number = saved_serial;
 800418c:	4b1c      	ldr	r3, [pc, #112]	@ (8004200 <load_config_from_flash+0x114>)
 800418e:	68fa      	ldr	r2, [r7, #12]
 8004190:	60da      	str	r2, [r3, #12]
            g_critical_data.firmware_version = saved_version;
 8004192:	4b1b      	ldr	r3, [pc, #108]	@ (8004200 <load_config_from_flash+0x114>)
 8004194:	68ba      	ldr	r2, [r7, #8]
 8004196:	605a      	str	r2, [r3, #4]
        }
    }

    // Load array header
    memcpy(&g_array_header, (void*)ARRAY_STORAGE_START, sizeof(g_array_header));
 8004198:	4b1e      	ldr	r3, [pc, #120]	@ (8004214 <load_config_from_flash+0x128>)
 800419a:	4a1f      	ldr	r2, [pc, #124]	@ (8004218 <load_config_from_flash+0x12c>)
 800419c:	0018      	movs	r0, r3
 800419e:	0011      	movs	r1, r2
 80041a0:	4b1e      	ldr	r3, [pc, #120]	@ (800421c <load_config_from_flash+0x130>)
 80041a2:	001a      	movs	r2, r3
 80041a4:	f007 ff8a 	bl	800c0bc <memcpy>

    // Validate array header
    if (g_array_header.magic != 0x41525241) {
 80041a8:	4b1a      	ldr	r3, [pc, #104]	@ (8004214 <load_config_from_flash+0x128>)
 80041aa:	681b      	ldr	r3, [r3, #0]
 80041ac:	4a1c      	ldr	r2, [pc, #112]	@ (8004220 <load_config_from_flash+0x134>)
 80041ae:	4293      	cmp	r3, r2
 80041b0:	d002      	beq.n	80041b8 <load_config_from_flash+0xcc>
        init_array_header_defaults();
 80041b2:	f7ff fe59 	bl	8003e68 <init_array_header_defaults>
 80041b6:	e00f      	b.n	80041d8 <load_config_from_flash+0xec>
    } else {
        uint32_t calc_crc = flash_crc32((uint8_t*)&g_array_header,
 80041b8:	4a1a      	ldr	r2, [pc, #104]	@ (8004224 <load_config_from_flash+0x138>)
 80041ba:	4b16      	ldr	r3, [pc, #88]	@ (8004214 <load_config_from_flash+0x128>)
 80041bc:	0011      	movs	r1, r2
 80041be:	0018      	movs	r0, r3
 80041c0:	f7ff fae2 	bl	8003788 <flash_crc32>
 80041c4:	0003      	movs	r3, r0
 80041c6:	607b      	str	r3, [r7, #4]
                                       sizeof(g_array_header) - sizeof(uint32_t));
        if (calc_crc != g_array_header.checksum) {
 80041c8:	4b12      	ldr	r3, [pc, #72]	@ (8004214 <load_config_from_flash+0x128>)
 80041ca:	4a16      	ldr	r2, [pc, #88]	@ (8004224 <load_config_from_flash+0x138>)
 80041cc:	589b      	ldr	r3, [r3, r2]
 80041ce:	687a      	ldr	r2, [r7, #4]
 80041d0:	429a      	cmp	r2, r3
 80041d2:	d001      	beq.n	80041d8 <load_config_from_flash+0xec>
            init_array_header_defaults();
 80041d4:	f7ff fe48 	bl	8003e68 <init_array_header_defaults>
        }
    }

    g_config_loaded = 1;
 80041d8:	4b13      	ldr	r3, [pc, #76]	@ (8004228 <load_config_from_flash+0x13c>)
 80041da:	2201      	movs	r2, #1
 80041dc:	701a      	strb	r2, [r3, #0]
    return HAL_OK;
 80041de:	2300      	movs	r3, #0
}
 80041e0:	0018      	movs	r0, r3
 80041e2:	46bd      	mov	sp, r7
 80041e4:	b006      	add	sp, #24
 80041e6:	bd80      	pop	{r7, pc}
 80041e8:	20000164 	.word	0x20000164
 80041ec:	08070000 	.word	0x08070000
 80041f0:	00007e2f 	.word	0x00007e2f
 80041f4:	cafebabe 	.word	0xcafebabe
 80041f8:	00007e2b 	.word	0x00007e2b
 80041fc:	00007e2c 	.word	0x00007e2c
 8004200:	20007f94 	.word	0x20007f94
 8004204:	08078000 	.word	0x08078000
 8004208:	00004010 	.word	0x00004010
 800420c:	deadbeef 	.word	0xdeadbeef
 8004210:	0000400c 	.word	0x0000400c
 8004214:	2000bfa4 	.word	0x2000bfa4
 8004218:	0807c000 	.word	0x0807c000
 800421c:	00001434 	.word	0x00001434
 8004220:	41525241 	.word	0x41525241
 8004224:	00001430 	.word	0x00001430
 8004228:	2000d3d8 	.word	0x2000d3d8

0800422c <flash_config_init>:
//===================================================================================

/**
 * @brief Initialize flash configuration system
 */
HAL_StatusTypeDef flash_config_init(void) {
 800422c:	b580      	push	{r7, lr}
 800422e:	af00      	add	r7, sp, #0
    return load_config_from_flash();
 8004230:	f7ff ff5c 	bl	80040ec <load_config_from_flash>
 8004234:	0003      	movs	r3, r0
}
 8004236:	0018      	movs	r0, r3
 8004238:	46bd      	mov	sp, r7
 800423a:	bd80      	pop	{r7, pc}

0800423c <flash_get_device_id>:

/**
 * @brief Get device CAN ID
 */
uint32_t flash_get_device_id(void) {
 800423c:	b580      	push	{r7, lr}
 800423e:	af00      	add	r7, sp, #0
    if (!g_config_loaded) {
 8004240:	4b05      	ldr	r3, [pc, #20]	@ (8004258 <flash_get_device_id+0x1c>)
 8004242:	781b      	ldrb	r3, [r3, #0]
 8004244:	2b00      	cmp	r3, #0
 8004246:	d101      	bne.n	800424c <flash_get_device_id+0x10>
        load_config_from_flash();
 8004248:	f7ff ff50 	bl	80040ec <load_config_from_flash>
    }
    return g_user_config.device_can_id;
 800424c:	4b03      	ldr	r3, [pc, #12]	@ (800425c <flash_get_device_id+0x20>)
 800424e:	685b      	ldr	r3, [r3, #4]
}
 8004250:	0018      	movs	r0, r3
 8004252:	46bd      	mov	sp, r7
 8004254:	bd80      	pop	{r7, pc}
 8004256:	46c0      	nop			@ (mov r8, r8)
 8004258:	2000d3d8 	.word	0x2000d3d8
 800425c:	20000164 	.word	0x20000164

08004260 <flash_set_device_id>:

/**
 * @brief Set device CAN ID
 */
HAL_StatusTypeDef flash_set_device_id(uint32_t id) {
 8004260:	b580      	push	{r7, lr}
 8004262:	b082      	sub	sp, #8
 8004264:	af00      	add	r7, sp, #0
 8004266:	6078      	str	r0, [r7, #4]
    if (!g_config_loaded) {
 8004268:	4b0c      	ldr	r3, [pc, #48]	@ (800429c <flash_set_device_id+0x3c>)
 800426a:	781b      	ldrb	r3, [r3, #0]
 800426c:	2b00      	cmp	r3, #0
 800426e:	d101      	bne.n	8004274 <flash_set_device_id+0x14>
        load_config_from_flash();
 8004270:	f7ff ff3c 	bl	80040ec <load_config_from_flash>
    }

    if (g_user_config.device_can_id != id) {
 8004274:	4b0a      	ldr	r3, [pc, #40]	@ (80042a0 <flash_set_device_id+0x40>)
 8004276:	685b      	ldr	r3, [r3, #4]
 8004278:	687a      	ldr	r2, [r7, #4]
 800427a:	429a      	cmp	r2, r3
 800427c:	d009      	beq.n	8004292 <flash_set_device_id+0x32>
        g_user_config.device_can_id = id;
 800427e:	4b08      	ldr	r3, [pc, #32]	@ (80042a0 <flash_set_device_id+0x40>)
 8004280:	687a      	ldr	r2, [r7, #4]
 8004282:	605a      	str	r2, [r3, #4]
        g_user_config_dirty = 1;
 8004284:	4b07      	ldr	r3, [pc, #28]	@ (80042a4 <flash_set_device_id+0x44>)
 8004286:	2201      	movs	r2, #1
 8004288:	701a      	strb	r2, [r3, #0]
        return save_user_config_to_flash();
 800428a:	f7ff fe4d 	bl	8003f28 <save_user_config_to_flash>
 800428e:	0003      	movs	r3, r0
 8004290:	e000      	b.n	8004294 <flash_set_device_id+0x34>
    }

    return HAL_OK;
 8004292:	2300      	movs	r3, #0
}
 8004294:	0018      	movs	r0, r3
 8004296:	46bd      	mov	sp, r7
 8004298:	b002      	add	sp, #8
 800429a:	bd80      	pop	{r7, pc}
 800429c:	2000d3d8 	.word	0x2000d3d8
 80042a0:	20000164 	.word	0x20000164
 80042a4:	2000d3d9 	.word	0x2000d3d9

080042a8 <flash_set_encoder_direction>:
}

/**
 * @brief Set encoder direction  
 */
HAL_StatusTypeDef flash_set_encoder_direction(uint8_t direction) {
 80042a8:	b580      	push	{r7, lr}
 80042aa:	b082      	sub	sp, #8
 80042ac:	af00      	add	r7, sp, #0
 80042ae:	0002      	movs	r2, r0
 80042b0:	1dfb      	adds	r3, r7, #7
 80042b2:	701a      	strb	r2, [r3, #0]
    if (!g_config_loaded) {
 80042b4:	4b0e      	ldr	r3, [pc, #56]	@ (80042f0 <flash_set_encoder_direction+0x48>)
 80042b6:	781b      	ldrb	r3, [r3, #0]
 80042b8:	2b00      	cmp	r3, #0
 80042ba:	d101      	bne.n	80042c0 <flash_set_encoder_direction+0x18>
        load_config_from_flash();
 80042bc:	f7ff ff16 	bl	80040ec <load_config_from_flash>
    }

    if (g_user_config.encoder_direction != direction) {
 80042c0:	4b0c      	ldr	r3, [pc, #48]	@ (80042f4 <flash_set_encoder_direction+0x4c>)
 80042c2:	222c      	movs	r2, #44	@ 0x2c
 80042c4:	5c9b      	ldrb	r3, [r3, r2]
 80042c6:	1dfa      	adds	r2, r7, #7
 80042c8:	7812      	ldrb	r2, [r2, #0]
 80042ca:	429a      	cmp	r2, r3
 80042cc:	d00b      	beq.n	80042e6 <flash_set_encoder_direction+0x3e>
        g_user_config.encoder_direction = direction;
 80042ce:	4b09      	ldr	r3, [pc, #36]	@ (80042f4 <flash_set_encoder_direction+0x4c>)
 80042d0:	1dfa      	adds	r2, r7, #7
 80042d2:	212c      	movs	r1, #44	@ 0x2c
 80042d4:	7812      	ldrb	r2, [r2, #0]
 80042d6:	545a      	strb	r2, [r3, r1]
        g_user_config_dirty = 1;
 80042d8:	4b07      	ldr	r3, [pc, #28]	@ (80042f8 <flash_set_encoder_direction+0x50>)
 80042da:	2201      	movs	r2, #1
 80042dc:	701a      	strb	r2, [r3, #0]
        return save_user_config_to_flash();
 80042de:	f7ff fe23 	bl	8003f28 <save_user_config_to_flash>
 80042e2:	0003      	movs	r3, r0
 80042e4:	e000      	b.n	80042e8 <flash_set_encoder_direction+0x40>
    }

    return HAL_OK;
 80042e6:	2300      	movs	r3, #0
}
 80042e8:	0018      	movs	r0, r3
 80042ea:	46bd      	mov	sp, r7
 80042ec:	b002      	add	sp, #8
 80042ee:	bd80      	pop	{r7, pc}
 80042f0:	2000d3d8 	.word	0x2000d3d8
 80042f4:	20000164 	.word	0x20000164
 80042f8:	2000d3d9 	.word	0x2000d3d9

080042fc <flash_get_velocity_alpha>:
}

/**
 * @brief Get velocity filter alpha
 */
float flash_get_velocity_alpha(void) {
 80042fc:	b580      	push	{r7, lr}
 80042fe:	af00      	add	r7, sp, #0
    if (!g_config_loaded) {
 8004300:	4b07      	ldr	r3, [pc, #28]	@ (8004320 <flash_get_velocity_alpha+0x24>)
 8004302:	781b      	ldrb	r3, [r3, #0]
 8004304:	2b00      	cmp	r3, #0
 8004306:	d101      	bne.n	800430c <flash_get_velocity_alpha+0x10>
        load_config_from_flash();
 8004308:	f7ff fef0 	bl	80040ec <load_config_from_flash>
    }
    return g_user_config.velocity_filter_alpha;
 800430c:	4b05      	ldr	r3, [pc, #20]	@ (8004324 <flash_get_velocity_alpha+0x28>)
 800430e:	226a      	movs	r2, #106	@ 0x6a
 8004310:	5a9a      	ldrh	r2, [r3, r2]
 8004312:	216c      	movs	r1, #108	@ 0x6c
 8004314:	5a5b      	ldrh	r3, [r3, r1]
 8004316:	041b      	lsls	r3, r3, #16
 8004318:	4313      	orrs	r3, r2
}
 800431a:	1c18      	adds	r0, r3, #0
 800431c:	46bd      	mov	sp, r7
 800431e:	bd80      	pop	{r7, pc}
 8004320:	2000d3d8 	.word	0x2000d3d8
 8004324:	20000164 	.word	0x20000164

08004328 <flash_set_velocity_alpha>:

/**
 * @brief Set velocity filter alpha
 */
HAL_StatusTypeDef flash_set_velocity_alpha(float alpha) {
 8004328:	b590      	push	{r4, r7, lr}
 800432a:	b083      	sub	sp, #12
 800432c:	af00      	add	r7, sp, #0
 800432e:	6078      	str	r0, [r7, #4]
    if (alpha < 0.0f || alpha > 1.0f) {
 8004330:	2100      	movs	r1, #0
 8004332:	6878      	ldr	r0, [r7, #4]
 8004334:	f7fc f870 	bl	8000418 <__aeabi_fcmplt>
 8004338:	1e03      	subs	r3, r0, #0
 800433a:	d106      	bne.n	800434a <flash_set_velocity_alpha+0x22>
 800433c:	21fe      	movs	r1, #254	@ 0xfe
 800433e:	0589      	lsls	r1, r1, #22
 8004340:	6878      	ldr	r0, [r7, #4]
 8004342:	f7fc f87d 	bl	8000440 <__aeabi_fcmpgt>
 8004346:	1e03      	subs	r3, r0, #0
 8004348:	d001      	beq.n	800434e <flash_set_velocity_alpha+0x26>
        return HAL_ERROR;
 800434a:	2301      	movs	r3, #1
 800434c:	e02e      	b.n	80043ac <flash_set_velocity_alpha+0x84>
    }

    if (!g_config_loaded) {
 800434e:	4b19      	ldr	r3, [pc, #100]	@ (80043b4 <flash_set_velocity_alpha+0x8c>)
 8004350:	781b      	ldrb	r3, [r3, #0]
 8004352:	2b00      	cmp	r3, #0
 8004354:	d101      	bne.n	800435a <flash_set_velocity_alpha+0x32>
        load_config_from_flash();
 8004356:	f7ff fec9 	bl	80040ec <load_config_from_flash>
    }

    if (g_user_config.velocity_filter_alpha != alpha) {
 800435a:	4b17      	ldr	r3, [pc, #92]	@ (80043b8 <flash_set_velocity_alpha+0x90>)
 800435c:	226a      	movs	r2, #106	@ 0x6a
 800435e:	5a9a      	ldrh	r2, [r3, r2]
 8004360:	216c      	movs	r1, #108	@ 0x6c
 8004362:	5a5b      	ldrh	r3, [r3, r1]
 8004364:	041b      	lsls	r3, r3, #16
 8004366:	4313      	orrs	r3, r2
 8004368:	1c19      	adds	r1, r3, #0
 800436a:	6878      	ldr	r0, [r7, #4]
 800436c:	f7fc f84e 	bl	800040c <__aeabi_fcmpeq>
 8004370:	1e03      	subs	r3, r0, #0
 8004372:	d11a      	bne.n	80043aa <flash_set_velocity_alpha+0x82>
        g_user_config.velocity_filter_alpha = alpha;
 8004374:	4b10      	ldr	r3, [pc, #64]	@ (80043b8 <flash_set_velocity_alpha+0x90>)
 8004376:	336a      	adds	r3, #106	@ 0x6a
 8004378:	687a      	ldr	r2, [r7, #4]
 800437a:	0411      	lsls	r1, r2, #16
 800437c:	0c0c      	lsrs	r4, r1, #16
 800437e:	8819      	ldrh	r1, [r3, #0]
 8004380:	2000      	movs	r0, #0
 8004382:	4001      	ands	r1, r0
 8004384:	1c08      	adds	r0, r1, #0
 8004386:	1c21      	adds	r1, r4, #0
 8004388:	4301      	orrs	r1, r0
 800438a:	8019      	strh	r1, [r3, #0]
 800438c:	0c10      	lsrs	r0, r2, #16
 800438e:	885a      	ldrh	r2, [r3, #2]
 8004390:	2100      	movs	r1, #0
 8004392:	400a      	ands	r2, r1
 8004394:	1c11      	adds	r1, r2, #0
 8004396:	1c02      	adds	r2, r0, #0
 8004398:	430a      	orrs	r2, r1
 800439a:	805a      	strh	r2, [r3, #2]
        g_user_config_dirty = 1;
 800439c:	4b07      	ldr	r3, [pc, #28]	@ (80043bc <flash_set_velocity_alpha+0x94>)
 800439e:	2201      	movs	r2, #1
 80043a0:	701a      	strb	r2, [r3, #0]
        return save_user_config_to_flash();
 80043a2:	f7ff fdc1 	bl	8003f28 <save_user_config_to_flash>
 80043a6:	0003      	movs	r3, r0
 80043a8:	e000      	b.n	80043ac <flash_set_velocity_alpha+0x84>
    }

    return HAL_OK;
 80043aa:	2300      	movs	r3, #0
}
 80043ac:	0018      	movs	r0, r3
 80043ae:	46bd      	mov	sp, r7
 80043b0:	b003      	add	sp, #12
 80043b2:	bd90      	pop	{r4, r7, pc}
 80043b4:	2000d3d8 	.word	0x2000d3d8
 80043b8:	20000164 	.word	0x20000164
 80043bc:	2000d3d9 	.word	0x2000d3d9

080043c0 <flash_get_accel_alpha>:

/**
 * @brief Get acceleration filter alpha
 */
float flash_get_accel_alpha(void) {
 80043c0:	b580      	push	{r7, lr}
 80043c2:	af00      	add	r7, sp, #0
    if (!g_config_loaded) {
 80043c4:	4b07      	ldr	r3, [pc, #28]	@ (80043e4 <flash_get_accel_alpha+0x24>)
 80043c6:	781b      	ldrb	r3, [r3, #0]
 80043c8:	2b00      	cmp	r3, #0
 80043ca:	d101      	bne.n	80043d0 <flash_get_accel_alpha+0x10>
        load_config_from_flash();
 80043cc:	f7ff fe8e 	bl	80040ec <load_config_from_flash>
    }
    return g_user_config.accel_filter_alpha;
 80043d0:	4b05      	ldr	r3, [pc, #20]	@ (80043e8 <flash_get_accel_alpha+0x28>)
 80043d2:	226e      	movs	r2, #110	@ 0x6e
 80043d4:	5a9a      	ldrh	r2, [r3, r2]
 80043d6:	2170      	movs	r1, #112	@ 0x70
 80043d8:	5a5b      	ldrh	r3, [r3, r1]
 80043da:	041b      	lsls	r3, r3, #16
 80043dc:	4313      	orrs	r3, r2
}
 80043de:	1c18      	adds	r0, r3, #0
 80043e0:	46bd      	mov	sp, r7
 80043e2:	bd80      	pop	{r7, pc}
 80043e4:	2000d3d8 	.word	0x2000d3d8
 80043e8:	20000164 	.word	0x20000164

080043ec <flash_set_accel_alpha>:

/**
 * @brief Set acceleration filter alpha
 */
HAL_StatusTypeDef flash_set_accel_alpha(float alpha) {
 80043ec:	b590      	push	{r4, r7, lr}
 80043ee:	b083      	sub	sp, #12
 80043f0:	af00      	add	r7, sp, #0
 80043f2:	6078      	str	r0, [r7, #4]
    if (alpha < 0.0f || alpha > 1.0f) {
 80043f4:	2100      	movs	r1, #0
 80043f6:	6878      	ldr	r0, [r7, #4]
 80043f8:	f7fc f80e 	bl	8000418 <__aeabi_fcmplt>
 80043fc:	1e03      	subs	r3, r0, #0
 80043fe:	d106      	bne.n	800440e <flash_set_accel_alpha+0x22>
 8004400:	21fe      	movs	r1, #254	@ 0xfe
 8004402:	0589      	lsls	r1, r1, #22
 8004404:	6878      	ldr	r0, [r7, #4]
 8004406:	f7fc f81b 	bl	8000440 <__aeabi_fcmpgt>
 800440a:	1e03      	subs	r3, r0, #0
 800440c:	d001      	beq.n	8004412 <flash_set_accel_alpha+0x26>
        return HAL_ERROR;
 800440e:	2301      	movs	r3, #1
 8004410:	e02e      	b.n	8004470 <flash_set_accel_alpha+0x84>
    }

    if (!g_config_loaded) {
 8004412:	4b19      	ldr	r3, [pc, #100]	@ (8004478 <flash_set_accel_alpha+0x8c>)
 8004414:	781b      	ldrb	r3, [r3, #0]
 8004416:	2b00      	cmp	r3, #0
 8004418:	d101      	bne.n	800441e <flash_set_accel_alpha+0x32>
        load_config_from_flash();
 800441a:	f7ff fe67 	bl	80040ec <load_config_from_flash>
    }

    if (g_user_config.accel_filter_alpha != alpha) {
 800441e:	4b17      	ldr	r3, [pc, #92]	@ (800447c <flash_set_accel_alpha+0x90>)
 8004420:	226e      	movs	r2, #110	@ 0x6e
 8004422:	5a9a      	ldrh	r2, [r3, r2]
 8004424:	2170      	movs	r1, #112	@ 0x70
 8004426:	5a5b      	ldrh	r3, [r3, r1]
 8004428:	041b      	lsls	r3, r3, #16
 800442a:	4313      	orrs	r3, r2
 800442c:	1c19      	adds	r1, r3, #0
 800442e:	6878      	ldr	r0, [r7, #4]
 8004430:	f7fb ffec 	bl	800040c <__aeabi_fcmpeq>
 8004434:	1e03      	subs	r3, r0, #0
 8004436:	d11a      	bne.n	800446e <flash_set_accel_alpha+0x82>
        g_user_config.accel_filter_alpha = alpha;
 8004438:	4b10      	ldr	r3, [pc, #64]	@ (800447c <flash_set_accel_alpha+0x90>)
 800443a:	336e      	adds	r3, #110	@ 0x6e
 800443c:	687a      	ldr	r2, [r7, #4]
 800443e:	0411      	lsls	r1, r2, #16
 8004440:	0c0c      	lsrs	r4, r1, #16
 8004442:	8819      	ldrh	r1, [r3, #0]
 8004444:	2000      	movs	r0, #0
 8004446:	4001      	ands	r1, r0
 8004448:	1c08      	adds	r0, r1, #0
 800444a:	1c21      	adds	r1, r4, #0
 800444c:	4301      	orrs	r1, r0
 800444e:	8019      	strh	r1, [r3, #0]
 8004450:	0c10      	lsrs	r0, r2, #16
 8004452:	885a      	ldrh	r2, [r3, #2]
 8004454:	2100      	movs	r1, #0
 8004456:	400a      	ands	r2, r1
 8004458:	1c11      	adds	r1, r2, #0
 800445a:	1c02      	adds	r2, r0, #0
 800445c:	430a      	orrs	r2, r1
 800445e:	805a      	strh	r2, [r3, #2]
        g_user_config_dirty = 1;
 8004460:	4b07      	ldr	r3, [pc, #28]	@ (8004480 <flash_set_accel_alpha+0x94>)
 8004462:	2201      	movs	r2, #1
 8004464:	701a      	strb	r2, [r3, #0]
        return save_user_config_to_flash();
 8004466:	f7ff fd5f 	bl	8003f28 <save_user_config_to_flash>
 800446a:	0003      	movs	r3, r0
 800446c:	e000      	b.n	8004470 <flash_set_accel_alpha+0x84>
    }

    return HAL_OK;
 800446e:	2300      	movs	r3, #0
}
 8004470:	0018      	movs	r0, r3
 8004472:	46bd      	mov	sp, r7
 8004474:	b003      	add	sp, #12
 8004476:	bd90      	pop	{r4, r7, pc}
 8004478:	2000d3d8 	.word	0x2000d3d8
 800447c:	20000164 	.word	0x20000164
 8004480:	2000d3d9 	.word	0x2000d3d9

08004484 <flash_increment_boot_count>:
}

/**
 * @brief Increment boot counter
 */
HAL_StatusTypeDef flash_increment_boot_count(void) {
 8004484:	b5b0      	push	{r4, r5, r7, lr}
 8004486:	af00      	add	r7, sp, #0
    if (!g_config_loaded) {
 8004488:	4b20      	ldr	r3, [pc, #128]	@ (800450c <flash_increment_boot_count+0x88>)
 800448a:	781b      	ldrb	r3, [r3, #0]
 800448c:	2b00      	cmp	r3, #0
 800448e:	d101      	bne.n	8004494 <flash_increment_boot_count+0x10>
        load_config_from_flash();
 8004490:	f7ff fe2c 	bl	80040ec <load_config_from_flash>
    }

    g_user_config.boot_count++;
 8004494:	4b1e      	ldr	r3, [pc, #120]	@ (8004510 <flash_increment_boot_count+0x8c>)
 8004496:	2273      	movs	r2, #115	@ 0x73
 8004498:	5c9a      	ldrb	r2, [r3, r2]
 800449a:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800449c:	021b      	lsls	r3, r3, #8
 800449e:	0a1b      	lsrs	r3, r3, #8
 80044a0:	021b      	lsls	r3, r3, #8
 80044a2:	4313      	orrs	r3, r2
 80044a4:	1c5a      	adds	r2, r3, #1
 80044a6:	4b1a      	ldr	r3, [pc, #104]	@ (8004510 <flash_increment_boot_count+0x8c>)
 80044a8:	3373      	adds	r3, #115	@ 0x73
 80044aa:	21ff      	movs	r1, #255	@ 0xff
 80044ac:	4011      	ands	r1, r2
 80044ae:	000c      	movs	r4, r1
 80044b0:	7819      	ldrb	r1, [r3, #0]
 80044b2:	2000      	movs	r0, #0
 80044b4:	4001      	ands	r1, r0
 80044b6:	1c08      	adds	r0, r1, #0
 80044b8:	1c21      	adds	r1, r4, #0
 80044ba:	4301      	orrs	r1, r0
 80044bc:	7019      	strb	r1, [r3, #0]
 80044be:	0a11      	lsrs	r1, r2, #8
 80044c0:	20ff      	movs	r0, #255	@ 0xff
 80044c2:	4001      	ands	r1, r0
 80044c4:	000c      	movs	r4, r1
 80044c6:	7859      	ldrb	r1, [r3, #1]
 80044c8:	2000      	movs	r0, #0
 80044ca:	4001      	ands	r1, r0
 80044cc:	1c08      	adds	r0, r1, #0
 80044ce:	1c21      	adds	r1, r4, #0
 80044d0:	4301      	orrs	r1, r0
 80044d2:	7059      	strb	r1, [r3, #1]
 80044d4:	0c11      	lsrs	r1, r2, #16
 80044d6:	20ff      	movs	r0, #255	@ 0xff
 80044d8:	4001      	ands	r1, r0
 80044da:	000c      	movs	r4, r1
 80044dc:	7899      	ldrb	r1, [r3, #2]
 80044de:	2000      	movs	r0, #0
 80044e0:	4001      	ands	r1, r0
 80044e2:	1c08      	adds	r0, r1, #0
 80044e4:	1c21      	adds	r1, r4, #0
 80044e6:	4301      	orrs	r1, r0
 80044e8:	7099      	strb	r1, [r3, #2]
 80044ea:	0e10      	lsrs	r0, r2, #24
 80044ec:	78da      	ldrb	r2, [r3, #3]
 80044ee:	2100      	movs	r1, #0
 80044f0:	400a      	ands	r2, r1
 80044f2:	1c11      	adds	r1, r2, #0
 80044f4:	1c02      	adds	r2, r0, #0
 80044f6:	430a      	orrs	r2, r1
 80044f8:	70da      	strb	r2, [r3, #3]
    g_user_config_dirty = 1;
 80044fa:	4b06      	ldr	r3, [pc, #24]	@ (8004514 <flash_increment_boot_count+0x90>)
 80044fc:	2201      	movs	r2, #1
 80044fe:	701a      	strb	r2, [r3, #0]
    return save_user_config_to_flash();
 8004500:	f7ff fd12 	bl	8003f28 <save_user_config_to_flash>
 8004504:	0003      	movs	r3, r0
}
 8004506:	0018      	movs	r0, r3
 8004508:	46bd      	mov	sp, r7
 800450a:	bdb0      	pop	{r4, r5, r7, pc}
 800450c:	2000d3d8 	.word	0x2000d3d8
 8004510:	20000164 	.word	0x20000164
 8004514:	2000d3d9 	.word	0x2000d3d9

08004518 <flash_set_reset_sticky_flag>:
}

/**
 * @brief Set reset sticky flag
 */
HAL_StatusTypeDef flash_set_reset_sticky_flag(uint32_t flag) {
 8004518:	b580      	push	{r7, lr}
 800451a:	b082      	sub	sp, #8
 800451c:	af00      	add	r7, sp, #0
 800451e:	6078      	str	r0, [r7, #4]
    if (!g_config_loaded) {
 8004520:	4b0d      	ldr	r3, [pc, #52]	@ (8004558 <flash_set_reset_sticky_flag+0x40>)
 8004522:	781b      	ldrb	r3, [r3, #0]
 8004524:	2b00      	cmp	r3, #0
 8004526:	d101      	bne.n	800452c <flash_set_reset_sticky_flag+0x14>
        load_config_from_flash();
 8004528:	f7ff fde0 	bl	80040ec <load_config_from_flash>
    }

    if (g_critical_data.reset_sticky_flag != flag) {
 800452c:	4a0b      	ldr	r2, [pc, #44]	@ (800455c <flash_set_reset_sticky_flag+0x44>)
 800452e:	2390      	movs	r3, #144	@ 0x90
 8004530:	005b      	lsls	r3, r3, #1
 8004532:	58d3      	ldr	r3, [r2, r3]
 8004534:	687a      	ldr	r2, [r7, #4]
 8004536:	429a      	cmp	r2, r3
 8004538:	d008      	beq.n	800454c <flash_set_reset_sticky_flag+0x34>
        g_critical_data.reset_sticky_flag = flag;
 800453a:	4a08      	ldr	r2, [pc, #32]	@ (800455c <flash_set_reset_sticky_flag+0x44>)
 800453c:	2390      	movs	r3, #144	@ 0x90
 800453e:	005b      	lsls	r3, r3, #1
 8004540:	6879      	ldr	r1, [r7, #4]
 8004542:	50d1      	str	r1, [r2, r3]
        return save_critical_data_to_flash();
 8004544:	f7ff fd76 	bl	8004034 <save_critical_data_to_flash>
 8004548:	0003      	movs	r3, r0
 800454a:	e000      	b.n	800454e <flash_set_reset_sticky_flag+0x36>
    }

    return HAL_OK;
 800454c:	2300      	movs	r3, #0
}
 800454e:	0018      	movs	r0, r3
 8004550:	46bd      	mov	sp, r7
 8004552:	b002      	add	sp, #8
 8004554:	bd80      	pop	{r7, pc}
 8004556:	46c0      	nop			@ (mov r8, r8)
 8004558:	2000d3d8 	.word	0x2000d3d8
 800455c:	20007f94 	.word	0x20007f94

08004560 <flash_factory_reset>:
}

/**
 * @brief Factory reset user configuration
 */
HAL_StatusTypeDef flash_factory_reset(void) {
 8004560:	b580      	push	{r7, lr}
 8004562:	b082      	sub	sp, #8
 8004564:	af00      	add	r7, sp, #0
    if (!g_config_loaded) {
 8004566:	4b20      	ldr	r3, [pc, #128]	@ (80045e8 <flash_factory_reset+0x88>)
 8004568:	781b      	ldrb	r3, [r3, #0]
 800456a:	2b00      	cmp	r3, #0
 800456c:	d101      	bne.n	8004572 <flash_factory_reset+0x12>
        load_config_from_flash();
 800456e:	f7ff fdbd 	bl	80040ec <load_config_from_flash>
    }

    uint32_t saved_boot_count = g_user_config.boot_count;
 8004572:	4b1e      	ldr	r3, [pc, #120]	@ (80045ec <flash_factory_reset+0x8c>)
 8004574:	2273      	movs	r2, #115	@ 0x73
 8004576:	5c9a      	ldrb	r2, [r3, r2]
 8004578:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800457a:	021b      	lsls	r3, r3, #8
 800457c:	0a1b      	lsrs	r3, r3, #8
 800457e:	021b      	lsls	r3, r3, #8
 8004580:	4313      	orrs	r3, r2
 8004582:	607b      	str	r3, [r7, #4]
    init_user_config_defaults();
 8004584:	f7ff f938 	bl	80037f8 <init_user_config_defaults>
    g_user_config.boot_count = saved_boot_count;
 8004588:	4b18      	ldr	r3, [pc, #96]	@ (80045ec <flash_factory_reset+0x8c>)
 800458a:	3373      	adds	r3, #115	@ 0x73
 800458c:	1d3a      	adds	r2, r7, #4
 800458e:	7810      	ldrb	r0, [r2, #0]
 8004590:	781a      	ldrb	r2, [r3, #0]
 8004592:	2100      	movs	r1, #0
 8004594:	400a      	ands	r2, r1
 8004596:	1c11      	adds	r1, r2, #0
 8004598:	1c02      	adds	r2, r0, #0
 800459a:	430a      	orrs	r2, r1
 800459c:	701a      	strb	r2, [r3, #0]
 800459e:	1d7a      	adds	r2, r7, #5
 80045a0:	7810      	ldrb	r0, [r2, #0]
 80045a2:	785a      	ldrb	r2, [r3, #1]
 80045a4:	2100      	movs	r1, #0
 80045a6:	400a      	ands	r2, r1
 80045a8:	1c11      	adds	r1, r2, #0
 80045aa:	1c02      	adds	r2, r0, #0
 80045ac:	430a      	orrs	r2, r1
 80045ae:	705a      	strb	r2, [r3, #1]
 80045b0:	1dba      	adds	r2, r7, #6
 80045b2:	7810      	ldrb	r0, [r2, #0]
 80045b4:	789a      	ldrb	r2, [r3, #2]
 80045b6:	2100      	movs	r1, #0
 80045b8:	400a      	ands	r2, r1
 80045ba:	1c11      	adds	r1, r2, #0
 80045bc:	1c02      	adds	r2, r0, #0
 80045be:	430a      	orrs	r2, r1
 80045c0:	709a      	strb	r2, [r3, #2]
 80045c2:	1dfa      	adds	r2, r7, #7
 80045c4:	7810      	ldrb	r0, [r2, #0]
 80045c6:	78da      	ldrb	r2, [r3, #3]
 80045c8:	2100      	movs	r1, #0
 80045ca:	400a      	ands	r2, r1
 80045cc:	1c11      	adds	r1, r2, #0
 80045ce:	1c02      	adds	r2, r0, #0
 80045d0:	430a      	orrs	r2, r1
 80045d2:	70da      	strb	r2, [r3, #3]

    g_user_config_dirty = 1;
 80045d4:	4b06      	ldr	r3, [pc, #24]	@ (80045f0 <flash_factory_reset+0x90>)
 80045d6:	2201      	movs	r2, #1
 80045d8:	701a      	strb	r2, [r3, #0]
    return save_user_config_to_flash();
 80045da:	f7ff fca5 	bl	8003f28 <save_user_config_to_flash>
 80045de:	0003      	movs	r3, r0
}
 80045e0:	0018      	movs	r0, r3
 80045e2:	46bd      	mov	sp, r7
 80045e4:	b002      	add	sp, #8
 80045e6:	bd80      	pop	{r7, pc}
 80045e8:	2000d3d8 	.word	0x2000d3d8
 80045ec:	20000164 	.word	0x20000164
 80045f0:	2000d3d9 	.word	0x2000d3d9

080045f4 <erase_critical_data_pages>:


/**
 * @brief Erase critical data flash pages
 */
static HAL_StatusTypeDef erase_critical_data_pages(void) {
 80045f4:	b5b0      	push	{r4, r5, r7, lr}
 80045f6:	b088      	sub	sp, #32
 80045f8:	af00      	add	r7, sp, #0
    HAL_FLASH_Unlock();
 80045fa:	f004 f9e5 	bl	80089c8 <HAL_FLASH_Unlock>

    uint32_t start_page = (CRITICAL_DATA_START - FLASH_BASE_ADDR) / FLASH_PAGE_SIZE;
 80045fe:	23f0      	movs	r3, #240	@ 0xf0
 8004600:	61fb      	str	r3, [r7, #28]
    uint32_t num_pages = CRITICAL_DATA_SIZE / FLASH_PAGE_SIZE;
 8004602:	2308      	movs	r3, #8
 8004604:	61bb      	str	r3, [r7, #24]

    FLASH_EraseInitTypeDef erase_init;
    erase_init.TypeErase = FLASH_TYPEERASE_PAGES;
 8004606:	1d3b      	adds	r3, r7, #4
 8004608:	2202      	movs	r2, #2
 800460a:	601a      	str	r2, [r3, #0]
    erase_init.Banks = FLASH_BANK_1;
 800460c:	1d3b      	adds	r3, r7, #4
 800460e:	2204      	movs	r2, #4
 8004610:	605a      	str	r2, [r3, #4]
    erase_init.Page = start_page;
 8004612:	1d3b      	adds	r3, r7, #4
 8004614:	69fa      	ldr	r2, [r7, #28]
 8004616:	609a      	str	r2, [r3, #8]
    erase_init.NbPages = num_pages;
 8004618:	1d3b      	adds	r3, r7, #4
 800461a:	69ba      	ldr	r2, [r7, #24]
 800461c:	60da      	str	r2, [r3, #12]

    uint32_t page_error = 0;
 800461e:	2300      	movs	r3, #0
 8004620:	603b      	str	r3, [r7, #0]
    HAL_StatusTypeDef status = HAL_FLASHEx_Erase(&erase_init, &page_error);
 8004622:	2517      	movs	r5, #23
 8004624:	197c      	adds	r4, r7, r5
 8004626:	003a      	movs	r2, r7
 8004628:	1d3b      	adds	r3, r7, #4
 800462a:	0011      	movs	r1, r2
 800462c:	0018      	movs	r0, r3
 800462e:	f004 fa7f 	bl	8008b30 <HAL_FLASHEx_Erase>
 8004632:	0003      	movs	r3, r0
 8004634:	7023      	strb	r3, [r4, #0]

    HAL_FLASH_Lock();
 8004636:	f004 f9eb 	bl	8008a10 <HAL_FLASH_Lock>
    return status;
 800463a:	197b      	adds	r3, r7, r5
 800463c:	781b      	ldrb	r3, [r3, #0]
 800463e:	0018      	movs	r0, r3
 8004640:	46bd      	mov	sp, r7
 8004642:	b008      	add	sp, #32
 8004644:	bdb0      	pop	{r4, r5, r7, pc}
	...

08004648 <__NVIC_SystemReset>:
/**
  \brief   System Reset
  \details Initiates a system reset request to reset the MCU.
 */
__NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
{
 8004648:	b580      	push	{r7, lr}
 800464a:	af00      	add	r7, sp, #0
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 800464c:	f3bf 8f4f 	dsb	sy
}
 8004650:	46c0      	nop			@ (mov r8, r8)
  __DSB();                                                          /* Ensure all outstanding memory accesses included
                                                                       buffered write are completed before reset */
  SCB->AIRCR  = ((0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8004652:	4b04      	ldr	r3, [pc, #16]	@ (8004664 <__NVIC_SystemReset+0x1c>)
 8004654:	4a04      	ldr	r2, [pc, #16]	@ (8004668 <__NVIC_SystemReset+0x20>)
 8004656:	60da      	str	r2, [r3, #12]
  __ASM volatile ("dsb 0xF":::"memory");
 8004658:	f3bf 8f4f 	dsb	sy
}
 800465c:	46c0      	nop			@ (mov r8, r8)
                 SCB_AIRCR_SYSRESETREQ_Msk);
  __DSB();                                                          /* Ensure completion of memory access */

  for(;;)                                                           /* wait until reset */
  {
    __NOP();
 800465e:	46c0      	nop			@ (mov r8, r8)
 8004660:	e7fd      	b.n	800465e <__NVIC_SystemReset+0x16>
 8004662:	46c0      	nop			@ (mov r8, r8)
 8004664:	e000ed00 	.word	0xe000ed00
 8004668:	05fa0004 	.word	0x05fa0004

0800466c <HAL_FDCAN_RxFifo0Callback>:
/***************************************************************************************************
 *
 *   HAL_FDCAN_RxFifo0Callback()
 *
 **************************************************************************************************/
void HAL_FDCAN_RxFifo0Callback(FDCAN_HandleTypeDef *hfdcan, uint32_t RxFifo0ITs) {
 800466c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800466e:	b0b9      	sub	sp, #228	@ 0xe4
 8004670:	af00      	add	r7, sp, #0
 8004672:	23a4      	movs	r3, #164	@ 0xa4
 8004674:	18fb      	adds	r3, r7, r3
 8004676:	6018      	str	r0, [r3, #0]
 8004678:	23a0      	movs	r3, #160	@ 0xa0
 800467a:	18fb      	adds	r3, r7, r3
 800467c:	6019      	str	r1, [r3, #0]
  if ((RxFifo0ITs & FDCAN_IT_RX_FIFO0_NEW_MESSAGE) != RESET) {
 800467e:	23a0      	movs	r3, #160	@ 0xa0
 8004680:	18fb      	adds	r3, r7, r3
 8004682:	681a      	ldr	r2, [r3, #0]
 8004684:	2301      	movs	r3, #1
 8004686:	4013      	ands	r3, r2
 8004688:	d100      	bne.n	800468c <HAL_FDCAN_RxFifo0Callback+0x20>
 800468a:	e285      	b.n	8004b98 <HAL_FDCAN_RxFifo0Callback+0x52c>
  if (HAL_FDCAN_GetRxMessage(hfdcan, FDCAN_RX_FIFO0, &RxHeader, RxData) != HAL_OK) {
 800468c:	4ba8      	ldr	r3, [pc, #672]	@ (8004930 <HAL_FDCAN_RxFifo0Callback+0x2c4>)
 800468e:	4aa9      	ldr	r2, [pc, #676]	@ (8004934 <HAL_FDCAN_RxFifo0Callback+0x2c8>)
 8004690:	21a4      	movs	r1, #164	@ 0xa4
 8004692:	1879      	adds	r1, r7, r1
 8004694:	6808      	ldr	r0, [r1, #0]
 8004696:	2140      	movs	r1, #64	@ 0x40
 8004698:	f003 fcd8 	bl	800804c <HAL_FDCAN_GetRxMessage>
 800469c:	1e03      	subs	r3, r0, #0
 800469e:	d001      	beq.n	80046a4 <HAL_FDCAN_RxFifo0Callback+0x38>
    Error_Handler();
 80046a0:	f001 fbb2 	bl	8005e08 <Error_Handler>
  }

  if (HAL_FDCAN_ActivateNotification(hfdcan, FDCAN_IT_RX_FIFO0_NEW_MESSAGE, 0) != HAL_OK) {
 80046a4:	23a4      	movs	r3, #164	@ 0xa4
 80046a6:	18fb      	adds	r3, r7, r3
 80046a8:	681b      	ldr	r3, [r3, #0]
 80046aa:	2200      	movs	r2, #0
 80046ac:	2101      	movs	r1, #1
 80046ae:	0018      	movs	r0, r3
 80046b0:	f003 fde2 	bl	8008278 <HAL_FDCAN_ActivateNotification>
 80046b4:	1e03      	subs	r3, r0, #0
 80046b6:	d001      	beq.n	80046bc <HAL_FDCAN_RxFifo0Callback+0x50>
    Error_Handler();
 80046b8:	f001 fba6 	bl	8005e08 <Error_Handler>
  }

  // Heartbeat from RoboRIO (special case)
  if (RxHeader.Identifier == ROBORIO_CAN_ID) {
 80046bc:	4b9d      	ldr	r3, [pc, #628]	@ (8004934 <HAL_FDCAN_RxFifo0Callback+0x2c8>)
 80046be:	681a      	ldr	r2, [r3, #0]
 80046c0:	4b9d      	ldr	r3, [pc, #628]	@ (8004938 <HAL_FDCAN_RxFifo0Callback+0x2cc>)
 80046c2:	429a      	cmp	r2, r3
 80046c4:	d105      	bne.n	80046d2 <HAL_FDCAN_RxFifo0Callback+0x66>
    lastHeartbeatTime = HAL_GetTick();
 80046c6:	f002 fbab 	bl	8006e20 <HAL_GetTick>
 80046ca:	0002      	movs	r2, r0
 80046cc:	4b9b      	ldr	r3, [pc, #620]	@ (800493c <HAL_FDCAN_RxFifo0Callback+0x2d0>)
 80046ce:	601a      	str	r2, [r3, #0]
    return;
 80046d0:	e262      	b.n	8004b98 <HAL_FDCAN_RxFifo0Callback+0x52c>
  }

  // Parse WPILib CAN Extended ID
  // 29 bits: [28:23] Manufacturer | [22:13] API ID | [12:7] Device ID | [6:0] Reserved
  uint32_t identifier = RxHeader.Identifier;
 80046d2:	4b98      	ldr	r3, [pc, #608]	@ (8004934 <HAL_FDCAN_RxFifo0Callback+0x2c8>)
 80046d4:	681b      	ldr	r3, [r3, #0]
 80046d6:	22dc      	movs	r2, #220	@ 0xdc
 80046d8:	18ba      	adds	r2, r7, r2
 80046da:	6013      	str	r3, [r2, #0]
  uint8_t manufacturer = (identifier >> 23) & 0x3F;
 80046dc:	23dc      	movs	r3, #220	@ 0xdc
 80046de:	18fb      	adds	r3, r7, r3
 80046e0:	681b      	ldr	r3, [r3, #0]
 80046e2:	0ddb      	lsrs	r3, r3, #23
 80046e4:	b2da      	uxtb	r2, r3
 80046e6:	233b      	movs	r3, #59	@ 0x3b
 80046e8:	21a0      	movs	r1, #160	@ 0xa0
 80046ea:	185b      	adds	r3, r3, r1
 80046ec:	19d9      	adds	r1, r3, r7
 80046ee:	233f      	movs	r3, #63	@ 0x3f
 80046f0:	4013      	ands	r3, r2
 80046f2:	700b      	strb	r3, [r1, #0]
  uint16_t api_id = (identifier >> 13) & 0x3FF;
 80046f4:	23dc      	movs	r3, #220	@ 0xdc
 80046f6:	18fb      	adds	r3, r7, r3
 80046f8:	681b      	ldr	r3, [r3, #0]
 80046fa:	0b5b      	lsrs	r3, r3, #13
 80046fc:	b29b      	uxth	r3, r3
 80046fe:	2038      	movs	r0, #56	@ 0x38
 8004700:	22a0      	movs	r2, #160	@ 0xa0
 8004702:	1882      	adds	r2, r0, r2
 8004704:	19d2      	adds	r2, r2, r7
 8004706:	059b      	lsls	r3, r3, #22
 8004708:	0d9b      	lsrs	r3, r3, #22
 800470a:	8013      	strh	r3, [r2, #0]
  uint8_t reserved = identifier & 0x7F;
 800470c:	23dc      	movs	r3, #220	@ 0xdc
 800470e:	18fb      	adds	r3, r7, r3
 8004710:	681b      	ldr	r3, [r3, #0]
 8004712:	b2da      	uxtb	r2, r3
 8004714:	2337      	movs	r3, #55	@ 0x37
 8004716:	21a0      	movs	r1, #160	@ 0xa0
 8004718:	185b      	adds	r3, r3, r1
 800471a:	19d9      	adds	r1, r3, r7
 800471c:	237f      	movs	r3, #127	@ 0x7f
 800471e:	4013      	ands	r3, r2
 8004720:	700b      	strb	r3, [r1, #0]

  // Only respond to our manufacturer and reserved bits = 0
    switch (api_id) {
 8004722:	23a0      	movs	r3, #160	@ 0xa0
 8004724:	18c3      	adds	r3, r0, r3
 8004726:	19db      	adds	r3, r3, r7
 8004728:	881b      	ldrh	r3, [r3, #0]
 800472a:	3b08      	subs	r3, #8
 800472c:	2b24      	cmp	r3, #36	@ 0x24
 800472e:	d900      	bls.n	8004732 <HAL_FDCAN_RxFifo0Callback+0xc6>
 8004730:	e227      	b.n	8004b82 <HAL_FDCAN_RxFifo0Callback+0x516>
 8004732:	009a      	lsls	r2, r3, #2
 8004734:	4b82      	ldr	r3, [pc, #520]	@ (8004940 <HAL_FDCAN_RxFifo0Callback+0x2d4>)
 8004736:	18d3      	adds	r3, r2, r3
 8004738:	681b      	ldr	r3, [r3, #0]
 800473a:	469f      	mov	pc, r3
    case 41: {
      // Set device ID (RxData[0] is new device ID)
      uint8_t new_device_id = RxData[0];
 800473c:	2436      	movs	r4, #54	@ 0x36
 800473e:	23a0      	movs	r3, #160	@ 0xa0
 8004740:	18e3      	adds	r3, r4, r3
 8004742:	19db      	adds	r3, r3, r7
 8004744:	4a7a      	ldr	r2, [pc, #488]	@ (8004930 <HAL_FDCAN_RxFifo0Callback+0x2c4>)
 8004746:	7812      	ldrb	r2, [r2, #0]
 8004748:	701a      	strb	r2, [r3, #0]
      flash_set_device_id(new_device_id);
 800474a:	23a0      	movs	r3, #160	@ 0xa0
 800474c:	18e3      	adds	r3, r4, r3
 800474e:	19db      	adds	r3, r3, r7
 8004750:	781b      	ldrb	r3, [r3, #0]
 8004752:	0018      	movs	r0, r3
 8004754:	f7ff fd84 	bl	8004260 <flash_set_device_id>
      TxHeaderPosition.Identifier = (BASE_ID & 0xFFF80000) | (POSITION_API_ID << 13) | (new_device_id << 7);
 8004758:	4b7a      	ldr	r3, [pc, #488]	@ (8004944 <HAL_FDCAN_RxFifo0Callback+0x2d8>)
 800475a:	0cdb      	lsrs	r3, r3, #19
 800475c:	04da      	lsls	r2, r3, #19
 800475e:	2300      	movs	r3, #0
 8004760:	035b      	lsls	r3, r3, #13
 8004762:	431a      	orrs	r2, r3
 8004764:	23a0      	movs	r3, #160	@ 0xa0
 8004766:	18e3      	adds	r3, r4, r3
 8004768:	19db      	adds	r3, r3, r7
 800476a:	781b      	ldrb	r3, [r3, #0]
 800476c:	01db      	lsls	r3, r3, #7
 800476e:	431a      	orrs	r2, r3
 8004770:	4b75      	ldr	r3, [pc, #468]	@ (8004948 <HAL_FDCAN_RxFifo0Callback+0x2dc>)
 8004772:	601a      	str	r2, [r3, #0]
      break;
 8004774:	e210      	b.n	8004b98 <HAL_FDCAN_RxFifo0Callback+0x52c>
    }
    case 42:
      pooptest = 1;
 8004776:	4b75      	ldr	r3, [pc, #468]	@ (800494c <HAL_FDCAN_RxFifo0Callback+0x2e0>)
 8004778:	2201      	movs	r2, #1
 800477a:	601a      	str	r2, [r3, #0]
      break;
 800477c:	e20c      	b.n	8004b98 <HAL_FDCAN_RxFifo0Callback+0x52c>
    case 43:
      flash_factory_reset();
 800477e:	f7ff feef 	bl	8004560 <flash_factory_reset>
      break;
 8004782:	e209      	b.n	8004b98 <HAL_FDCAN_RxFifo0Callback+0x52c>
    case 44: {
      // Query all devices - send device UID
      uint32_t uid[3];
      uid[0] = HAL_GetUIDw0();
 8004784:	f002 fb7a 	bl	8006e7c <HAL_GetUIDw0>
 8004788:	0002      	movs	r2, r0
 800478a:	241c      	movs	r4, #28
 800478c:	23a0      	movs	r3, #160	@ 0xa0
 800478e:	18e3      	adds	r3, r4, r3
 8004790:	19db      	adds	r3, r3, r7
 8004792:	601a      	str	r2, [r3, #0]
      uid[1] = HAL_GetUIDw1();
 8004794:	f002 fb7c 	bl	8006e90 <HAL_GetUIDw1>
 8004798:	0002      	movs	r2, r0
 800479a:	23a0      	movs	r3, #160	@ 0xa0
 800479c:	18e3      	adds	r3, r4, r3
 800479e:	19db      	adds	r3, r3, r7
 80047a0:	605a      	str	r2, [r3, #4]
      uid[2] = HAL_GetUIDw2();
 80047a2:	f002 fb7f 	bl	8006ea4 <HAL_GetUIDw2>
 80047a6:	0002      	movs	r2, r0
 80047a8:	0021      	movs	r1, r4
 80047aa:	23a0      	movs	r3, #160	@ 0xa0
 80047ac:	18cb      	adds	r3, r1, r3
 80047ae:	19db      	adds	r3, r3, r7
 80047b0:	609a      	str	r2, [r3, #8]
      uint8_t uidBytes[12];
      uidBytes[0] = (uint8_t) (uid[0] >> 24);
 80047b2:	23a0      	movs	r3, #160	@ 0xa0
 80047b4:	18cb      	adds	r3, r1, r3
 80047b6:	19db      	adds	r3, r3, r7
 80047b8:	681b      	ldr	r3, [r3, #0]
 80047ba:	0e1b      	lsrs	r3, r3, #24
 80047bc:	b2da      	uxtb	r2, r3
 80047be:	2510      	movs	r5, #16
 80047c0:	23a0      	movs	r3, #160	@ 0xa0
 80047c2:	18eb      	adds	r3, r5, r3
 80047c4:	19db      	adds	r3, r3, r7
 80047c6:	701a      	strb	r2, [r3, #0]
      uidBytes[1] = (uint8_t) (uid[0] >> 16);
 80047c8:	23a0      	movs	r3, #160	@ 0xa0
 80047ca:	18cb      	adds	r3, r1, r3
 80047cc:	19db      	adds	r3, r3, r7
 80047ce:	681b      	ldr	r3, [r3, #0]
 80047d0:	0c1b      	lsrs	r3, r3, #16
 80047d2:	b2da      	uxtb	r2, r3
 80047d4:	23a0      	movs	r3, #160	@ 0xa0
 80047d6:	18eb      	adds	r3, r5, r3
 80047d8:	19db      	adds	r3, r3, r7
 80047da:	705a      	strb	r2, [r3, #1]
      uidBytes[2] = (uint8_t) (uid[0] >> 8);
 80047dc:	23a0      	movs	r3, #160	@ 0xa0
 80047de:	18cb      	adds	r3, r1, r3
 80047e0:	19db      	adds	r3, r3, r7
 80047e2:	681b      	ldr	r3, [r3, #0]
 80047e4:	0a1b      	lsrs	r3, r3, #8
 80047e6:	b2da      	uxtb	r2, r3
 80047e8:	23a0      	movs	r3, #160	@ 0xa0
 80047ea:	18eb      	adds	r3, r5, r3
 80047ec:	19db      	adds	r3, r3, r7
 80047ee:	709a      	strb	r2, [r3, #2]
      uidBytes[3] = (uint8_t) (uid[0]);
 80047f0:	23a0      	movs	r3, #160	@ 0xa0
 80047f2:	18cb      	adds	r3, r1, r3
 80047f4:	19db      	adds	r3, r3, r7
 80047f6:	681b      	ldr	r3, [r3, #0]
 80047f8:	b2da      	uxtb	r2, r3
 80047fa:	23a0      	movs	r3, #160	@ 0xa0
 80047fc:	18eb      	adds	r3, r5, r3
 80047fe:	19db      	adds	r3, r3, r7
 8004800:	70da      	strb	r2, [r3, #3]
      uidBytes[4] = (uint8_t) (uid[1] >> 24);
 8004802:	23a0      	movs	r3, #160	@ 0xa0
 8004804:	18cb      	adds	r3, r1, r3
 8004806:	19db      	adds	r3, r3, r7
 8004808:	685b      	ldr	r3, [r3, #4]
 800480a:	0e1b      	lsrs	r3, r3, #24
 800480c:	b2da      	uxtb	r2, r3
 800480e:	23a0      	movs	r3, #160	@ 0xa0
 8004810:	18eb      	adds	r3, r5, r3
 8004812:	19db      	adds	r3, r3, r7
 8004814:	711a      	strb	r2, [r3, #4]
      uidBytes[5] = (uint8_t) (uid[1] >> 16);
 8004816:	23a0      	movs	r3, #160	@ 0xa0
 8004818:	18cb      	adds	r3, r1, r3
 800481a:	19db      	adds	r3, r3, r7
 800481c:	685b      	ldr	r3, [r3, #4]
 800481e:	0c1b      	lsrs	r3, r3, #16
 8004820:	b2da      	uxtb	r2, r3
 8004822:	23a0      	movs	r3, #160	@ 0xa0
 8004824:	18eb      	adds	r3, r5, r3
 8004826:	19db      	adds	r3, r3, r7
 8004828:	715a      	strb	r2, [r3, #5]
      uidBytes[6] = (uint8_t) (uid[1] >> 8);
 800482a:	23a0      	movs	r3, #160	@ 0xa0
 800482c:	18cb      	adds	r3, r1, r3
 800482e:	19db      	adds	r3, r3, r7
 8004830:	685b      	ldr	r3, [r3, #4]
 8004832:	0a1b      	lsrs	r3, r3, #8
 8004834:	b2da      	uxtb	r2, r3
 8004836:	23a0      	movs	r3, #160	@ 0xa0
 8004838:	18eb      	adds	r3, r5, r3
 800483a:	19db      	adds	r3, r3, r7
 800483c:	719a      	strb	r2, [r3, #6]
      uidBytes[7] = (uint8_t) (uid[1]);
 800483e:	23a0      	movs	r3, #160	@ 0xa0
 8004840:	18cb      	adds	r3, r1, r3
 8004842:	19db      	adds	r3, r3, r7
 8004844:	685b      	ldr	r3, [r3, #4]
 8004846:	b2da      	uxtb	r2, r3
 8004848:	23a0      	movs	r3, #160	@ 0xa0
 800484a:	18eb      	adds	r3, r5, r3
 800484c:	19db      	adds	r3, r3, r7
 800484e:	71da      	strb	r2, [r3, #7]
      uidBytes[8] = (uint8_t) (uid[2] >> 24);
 8004850:	23a0      	movs	r3, #160	@ 0xa0
 8004852:	18cb      	adds	r3, r1, r3
 8004854:	19db      	adds	r3, r3, r7
 8004856:	689b      	ldr	r3, [r3, #8]
 8004858:	0e1b      	lsrs	r3, r3, #24
 800485a:	b2da      	uxtb	r2, r3
 800485c:	23a0      	movs	r3, #160	@ 0xa0
 800485e:	18eb      	adds	r3, r5, r3
 8004860:	19db      	adds	r3, r3, r7
 8004862:	721a      	strb	r2, [r3, #8]
      uidBytes[9] = (uint8_t) (uid[2] >> 16);
 8004864:	23a0      	movs	r3, #160	@ 0xa0
 8004866:	18cb      	adds	r3, r1, r3
 8004868:	19db      	adds	r3, r3, r7
 800486a:	689b      	ldr	r3, [r3, #8]
 800486c:	0c1b      	lsrs	r3, r3, #16
 800486e:	b2da      	uxtb	r2, r3
 8004870:	23a0      	movs	r3, #160	@ 0xa0
 8004872:	18eb      	adds	r3, r5, r3
 8004874:	19db      	adds	r3, r3, r7
 8004876:	725a      	strb	r2, [r3, #9]
      uidBytes[10] = (uint8_t) (uid[2] >> 8);
 8004878:	23a0      	movs	r3, #160	@ 0xa0
 800487a:	18cb      	adds	r3, r1, r3
 800487c:	19db      	adds	r3, r3, r7
 800487e:	689b      	ldr	r3, [r3, #8]
 8004880:	0a1b      	lsrs	r3, r3, #8
 8004882:	b2da      	uxtb	r2, r3
 8004884:	23a0      	movs	r3, #160	@ 0xa0
 8004886:	18eb      	adds	r3, r5, r3
 8004888:	19db      	adds	r3, r3, r7
 800488a:	729a      	strb	r2, [r3, #10]
      uidBytes[11] = (uint8_t) (uid[2]);
 800488c:	23a0      	movs	r3, #160	@ 0xa0
 800488e:	18cb      	adds	r3, r1, r3
 8004890:	19db      	adds	r3, r3, r7
 8004892:	689b      	ldr	r3, [r3, #8]
 8004894:	b2da      	uxtb	r2, r3
 8004896:	23a0      	movs	r3, #160	@ 0xa0
 8004898:	18eb      	adds	r3, r5, r3
 800489a:	19db      	adds	r3, r3, r7
 800489c:	72da      	strb	r2, [r3, #11]
      TxHeaderPosition.DataLength = 8;
 800489e:	4b2a      	ldr	r3, [pc, #168]	@ (8004948 <HAL_FDCAN_RxFifo0Callback+0x2dc>)
 80048a0:	2208      	movs	r2, #8
 80048a2:	60da      	str	r2, [r3, #12]
      TxHeaderPosition.Identifier = (BASE_ID & 0xFFF80000) | (POSITION_API_ID << 13) | (device_id << 7);
 80048a4:	4b27      	ldr	r3, [pc, #156]	@ (8004944 <HAL_FDCAN_RxFifo0Callback+0x2d8>)
 80048a6:	0cdb      	lsrs	r3, r3, #19
 80048a8:	04da      	lsls	r2, r3, #19
 80048aa:	2300      	movs	r3, #0
 80048ac:	035b      	lsls	r3, r3, #13
 80048ae:	431a      	orrs	r2, r3
 80048b0:	0014      	movs	r4, r2
 80048b2:	f7ff fcc3 	bl	800423c <flash_get_device_id>
 80048b6:	0003      	movs	r3, r0
 80048b8:	01db      	lsls	r3, r3, #7
 80048ba:	0022      	movs	r2, r4
 80048bc:	431a      	orrs	r2, r3
 80048be:	4b22      	ldr	r3, [pc, #136]	@ (8004948 <HAL_FDCAN_RxFifo0Callback+0x2dc>)
 80048c0:	601a      	str	r2, [r3, #0]
      HAL_FDCAN_AddMessageToTxFifoQ(&hfdcan1, &TxHeaderPosition, uidBytes);
 80048c2:	23a0      	movs	r3, #160	@ 0xa0
 80048c4:	18eb      	adds	r3, r5, r3
 80048c6:	19da      	adds	r2, r3, r7
 80048c8:	491f      	ldr	r1, [pc, #124]	@ (8004948 <HAL_FDCAN_RxFifo0Callback+0x2dc>)
 80048ca:	4b21      	ldr	r3, [pc, #132]	@ (8004950 <HAL_FDCAN_RxFifo0Callback+0x2e4>)
 80048cc:	0018      	movs	r0, r3
 80048ce:	f003 fb78 	bl	8007fc2 <HAL_FDCAN_AddMessageToTxFifoQ>
      TxHeaderPosition.Identifier = (BASE_ID & 0xFFF80000) | (POSITION_API_ID << 13) | (flash_get_device_id() << 7);
 80048d2:	4b1c      	ldr	r3, [pc, #112]	@ (8004944 <HAL_FDCAN_RxFifo0Callback+0x2d8>)
 80048d4:	0cdb      	lsrs	r3, r3, #19
 80048d6:	04da      	lsls	r2, r3, #19
 80048d8:	2300      	movs	r3, #0
 80048da:	035b      	lsls	r3, r3, #13
 80048dc:	431a      	orrs	r2, r3
 80048de:	0014      	movs	r4, r2
 80048e0:	f7ff fcac 	bl	800423c <flash_get_device_id>
 80048e4:	0003      	movs	r3, r0
 80048e6:	01db      	lsls	r3, r3, #7
 80048e8:	0022      	movs	r2, r4
 80048ea:	431a      	orrs	r2, r3
 80048ec:	4b16      	ldr	r3, [pc, #88]	@ (8004948 <HAL_FDCAN_RxFifo0Callback+0x2dc>)
 80048ee:	601a      	str	r2, [r3, #0]
      break;
 80048f0:	e152      	b.n	8004b98 <HAL_FDCAN_RxFifo0Callback+0x52c>
    }
    case 10:
      reset_counts();
 80048f2:	f7fe fee7 	bl	80036c4 <reset_counts>
      break;
 80048f6:	e14f      	b.n	8004b98 <HAL_FDCAN_RxFifo0Callback+0x52c>
    case 11:
      if (RxHeader.DataLength >= 1) {
 80048f8:	4b0e      	ldr	r3, [pc, #56]	@ (8004934 <HAL_FDCAN_RxFifo0Callback+0x2c8>)
 80048fa:	68db      	ldr	r3, [r3, #12]
 80048fc:	2b00      	cmp	r3, #0
 80048fe:	d100      	bne.n	8004902 <HAL_FDCAN_RxFifo0Callback+0x296>
 8004900:	e141      	b.n	8004b86 <HAL_FDCAN_RxFifo0Callback+0x51a>
      int direction = (RxData[0] != 0) ? 1 : 0;
 8004902:	4b0b      	ldr	r3, [pc, #44]	@ (8004930 <HAL_FDCAN_RxFifo0Callback+0x2c4>)
 8004904:	781b      	ldrb	r3, [r3, #0]
 8004906:	1e5a      	subs	r2, r3, #1
 8004908:	4193      	sbcs	r3, r2
 800490a:	b2db      	uxtb	r3, r3
 800490c:	22d0      	movs	r2, #208	@ 0xd0
 800490e:	18ba      	adds	r2, r7, r2
 8004910:	6013      	str	r3, [r2, #0]
      flash_set_encoder_direction(direction);
 8004912:	23d0      	movs	r3, #208	@ 0xd0
 8004914:	18fb      	adds	r3, r7, r3
 8004916:	681b      	ldr	r3, [r3, #0]
 8004918:	b2db      	uxtb	r3, r3
 800491a:	0018      	movs	r0, r3
 800491c:	f7ff fcc4 	bl	80042a8 <flash_set_encoder_direction>
      set_encoder_direction(direction);
 8004920:	23d0      	movs	r3, #208	@ 0xd0
 8004922:	18fb      	adds	r3, r7, r3
 8004924:	681b      	ldr	r3, [r3, #0]
 8004926:	0018      	movs	r0, r3
 8004928:	f7fe fef4 	bl	8003714 <set_encoder_direction>
      }
      break;
 800492c:	e12b      	b.n	8004b86 <HAL_FDCAN_RxFifo0Callback+0x51a>
 800492e:	46c0      	nop			@ (mov r8, r8)
 8004930:	2000da58 	.word	0x2000da58
 8004934:	2000da1c 	.word	0x2000da1c
 8004938:	01011840 	.word	0x01011840
 800493c:	2000d988 	.word	0x2000d988
 8004940:	0800c2e8 	.word	0x0800c2e8
 8004944:	0a110000 	.word	0x0a110000
 8004948:	2000d9b0 	.word	0x2000d9b0
 800494c:	20000004 	.word	0x20000004
 8004950:	2000d440 	.word	0x2000d440
    case 8:
      if (RxHeader.DataLength == 8) {
 8004954:	4b92      	ldr	r3, [pc, #584]	@ (8004ba0 <HAL_FDCAN_RxFifo0Callback+0x534>)
 8004956:	68db      	ldr	r3, [r3, #12]
 8004958:	2b08      	cmp	r3, #8
 800495a:	d000      	beq.n	800495e <HAL_FDCAN_RxFifo0Callback+0x2f2>
 800495c:	e115      	b.n	8004b8a <HAL_FDCAN_RxFifo0Callback+0x51e>
      int64_t newCounts = ((int64_t)RxData[0] << 56) |
 800495e:	4b91      	ldr	r3, [pc, #580]	@ (8004ba4 <HAL_FDCAN_RxFifo0Callback+0x538>)
 8004960:	781b      	ldrb	r3, [r3, #0]
 8004962:	001c      	movs	r4, r3
 8004964:	2300      	movs	r3, #0
 8004966:	001d      	movs	r5, r3
 8004968:	0023      	movs	r3, r4
 800496a:	061b      	lsls	r3, r3, #24
 800496c:	228c      	movs	r2, #140	@ 0x8c
 800496e:	18ba      	adds	r2, r7, r2
 8004970:	6013      	str	r3, [r2, #0]
 8004972:	2300      	movs	r3, #0
 8004974:	2288      	movs	r2, #136	@ 0x88
 8004976:	18ba      	adds	r2, r7, r2
 8004978:	6013      	str	r3, [r2, #0]
             ((int64_t)RxData[1] << 48) |
 800497a:	4b8a      	ldr	r3, [pc, #552]	@ (8004ba4 <HAL_FDCAN_RxFifo0Callback+0x538>)
 800497c:	785b      	ldrb	r3, [r3, #1]
 800497e:	2280      	movs	r2, #128	@ 0x80
 8004980:	18ba      	adds	r2, r7, r2
 8004982:	6013      	str	r3, [r2, #0]
 8004984:	2300      	movs	r3, #0
 8004986:	2284      	movs	r2, #132	@ 0x84
 8004988:	18ba      	adds	r2, r7, r2
 800498a:	6013      	str	r3, [r2, #0]
 800498c:	2380      	movs	r3, #128	@ 0x80
 800498e:	18fb      	adds	r3, r7, r3
 8004990:	681b      	ldr	r3, [r3, #0]
 8004992:	041b      	lsls	r3, r3, #16
 8004994:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8004996:	2300      	movs	r3, #0
 8004998:	67bb      	str	r3, [r7, #120]	@ 0x78
      int64_t newCounts = ((int64_t)RxData[0] << 56) |
 800499a:	2388      	movs	r3, #136	@ 0x88
 800499c:	18fb      	adds	r3, r7, r3
 800499e:	6818      	ldr	r0, [r3, #0]
 80049a0:	6859      	ldr	r1, [r3, #4]
 80049a2:	0006      	movs	r6, r0
 80049a4:	6fba      	ldr	r2, [r7, #120]	@ 0x78
 80049a6:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 80049a8:	0014      	movs	r4, r2
 80049aa:	4326      	orrs	r6, r4
 80049ac:	673e      	str	r6, [r7, #112]	@ 0x70
 80049ae:	4319      	orrs	r1, r3
 80049b0:	6779      	str	r1, [r7, #116]	@ 0x74
             ((int64_t)RxData[2] << 40) |
 80049b2:	4b7c      	ldr	r3, [pc, #496]	@ (8004ba4 <HAL_FDCAN_RxFifo0Callback+0x538>)
 80049b4:	789b      	ldrb	r3, [r3, #2]
 80049b6:	66bb      	str	r3, [r7, #104]	@ 0x68
 80049b8:	2300      	movs	r3, #0
 80049ba:	66fb      	str	r3, [r7, #108]	@ 0x6c
 80049bc:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 80049be:	021b      	lsls	r3, r3, #8
 80049c0:	667b      	str	r3, [r7, #100]	@ 0x64
 80049c2:	2300      	movs	r3, #0
 80049c4:	663b      	str	r3, [r7, #96]	@ 0x60
             ((int64_t)RxData[1] << 48) |
 80049c6:	6f38      	ldr	r0, [r7, #112]	@ 0x70
 80049c8:	6f79      	ldr	r1, [r7, #116]	@ 0x74
 80049ca:	0006      	movs	r6, r0
 80049cc:	6e3a      	ldr	r2, [r7, #96]	@ 0x60
 80049ce:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 80049d0:	0014      	movs	r4, r2
 80049d2:	4326      	orrs	r6, r4
 80049d4:	65be      	str	r6, [r7, #88]	@ 0x58
 80049d6:	4319      	orrs	r1, r3
 80049d8:	65f9      	str	r1, [r7, #92]	@ 0x5c
             ((int64_t)RxData[3] << 32) |
 80049da:	4b72      	ldr	r3, [pc, #456]	@ (8004ba4 <HAL_FDCAN_RxFifo0Callback+0x538>)
 80049dc:	78db      	ldrb	r3, [r3, #3]
 80049de:	653b      	str	r3, [r7, #80]	@ 0x50
 80049e0:	2300      	movs	r3, #0
 80049e2:	657b      	str	r3, [r7, #84]	@ 0x54
 80049e4:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 80049e6:	001b      	movs	r3, r3
 80049e8:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80049ea:	2300      	movs	r3, #0
 80049ec:	64bb      	str	r3, [r7, #72]	@ 0x48
             ((int64_t)RxData[2] << 40) |
 80049ee:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 80049f0:	6df9      	ldr	r1, [r7, #92]	@ 0x5c
 80049f2:	0006      	movs	r6, r0
 80049f4:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 80049f6:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 80049f8:	0014      	movs	r4, r2
 80049fa:	4326      	orrs	r6, r4
 80049fc:	643e      	str	r6, [r7, #64]	@ 0x40
 80049fe:	4319      	orrs	r1, r3
 8004a00:	6479      	str	r1, [r7, #68]	@ 0x44
             ((int64_t)RxData[4] << 24) |
 8004a02:	4b68      	ldr	r3, [pc, #416]	@ (8004ba4 <HAL_FDCAN_RxFifo0Callback+0x538>)
 8004a04:	791b      	ldrb	r3, [r3, #4]
 8004a06:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004a08:	2300      	movs	r3, #0
 8004a0a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004a0c:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8004a0e:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8004a10:	0011      	movs	r1, r2
 8004a12:	0a09      	lsrs	r1, r1, #8
 8004a14:	6379      	str	r1, [r7, #52]	@ 0x34
 8004a16:	0013      	movs	r3, r2
 8004a18:	061b      	lsls	r3, r3, #24
 8004a1a:	633b      	str	r3, [r7, #48]	@ 0x30
             ((int64_t)RxData[3] << 32) |
 8004a1c:	6c38      	ldr	r0, [r7, #64]	@ 0x40
 8004a1e:	6c79      	ldr	r1, [r7, #68]	@ 0x44
 8004a20:	0006      	movs	r6, r0
 8004a22:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8004a24:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004a26:	0014      	movs	r4, r2
 8004a28:	4326      	orrs	r6, r4
 8004a2a:	62be      	str	r6, [r7, #40]	@ 0x28
 8004a2c:	4319      	orrs	r1, r3
 8004a2e:	62f9      	str	r1, [r7, #44]	@ 0x2c
             ((int64_t)RxData[5] << 16) |
 8004a30:	4b5c      	ldr	r3, [pc, #368]	@ (8004ba4 <HAL_FDCAN_RxFifo0Callback+0x538>)
 8004a32:	795b      	ldrb	r3, [r3, #5]
 8004a34:	623b      	str	r3, [r7, #32]
 8004a36:	2300      	movs	r3, #0
 8004a38:	627b      	str	r3, [r7, #36]	@ 0x24
 8004a3a:	6a39      	ldr	r1, [r7, #32]
 8004a3c:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8004a3e:	000b      	movs	r3, r1
 8004a40:	0c1b      	lsrs	r3, r3, #16
 8004a42:	0010      	movs	r0, r2
 8004a44:	0400      	lsls	r0, r0, #16
 8004a46:	249c      	movs	r4, #156	@ 0x9c
 8004a48:	193c      	adds	r4, r7, r4
 8004a4a:	6020      	str	r0, [r4, #0]
 8004a4c:	209c      	movs	r0, #156	@ 0x9c
 8004a4e:	1838      	adds	r0, r7, r0
 8004a50:	6800      	ldr	r0, [r0, #0]
 8004a52:	4318      	orrs	r0, r3
 8004a54:	239c      	movs	r3, #156	@ 0x9c
 8004a56:	18fb      	adds	r3, r7, r3
 8004a58:	6018      	str	r0, [r3, #0]
 8004a5a:	000b      	movs	r3, r1
 8004a5c:	041b      	lsls	r3, r3, #16
 8004a5e:	2298      	movs	r2, #152	@ 0x98
 8004a60:	18ba      	adds	r2, r7, r2
 8004a62:	6013      	str	r3, [r2, #0]
             ((int64_t)RxData[4] << 24) |
 8004a64:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8004a66:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8004a68:	0006      	movs	r6, r0
 8004a6a:	2398      	movs	r3, #152	@ 0x98
 8004a6c:	18fb      	adds	r3, r7, r3
 8004a6e:	681a      	ldr	r2, [r3, #0]
 8004a70:	685b      	ldr	r3, [r3, #4]
 8004a72:	0014      	movs	r4, r2
 8004a74:	4326      	orrs	r6, r4
 8004a76:	61be      	str	r6, [r7, #24]
 8004a78:	4319      	orrs	r1, r3
 8004a7a:	61f9      	str	r1, [r7, #28]
             ((int64_t)RxData[6] << 8) |
 8004a7c:	4b49      	ldr	r3, [pc, #292]	@ (8004ba4 <HAL_FDCAN_RxFifo0Callback+0x538>)
 8004a7e:	799b      	ldrb	r3, [r3, #6]
 8004a80:	613b      	str	r3, [r7, #16]
 8004a82:	2300      	movs	r3, #0
 8004a84:	617b      	str	r3, [r7, #20]
 8004a86:	6939      	ldr	r1, [r7, #16]
 8004a88:	697a      	ldr	r2, [r7, #20]
 8004a8a:	000b      	movs	r3, r1
 8004a8c:	0e1b      	lsrs	r3, r3, #24
 8004a8e:	0010      	movs	r0, r2
 8004a90:	0200      	lsls	r0, r0, #8
 8004a92:	2494      	movs	r4, #148	@ 0x94
 8004a94:	193c      	adds	r4, r7, r4
 8004a96:	6020      	str	r0, [r4, #0]
 8004a98:	2094      	movs	r0, #148	@ 0x94
 8004a9a:	1838      	adds	r0, r7, r0
 8004a9c:	6800      	ldr	r0, [r0, #0]
 8004a9e:	4318      	orrs	r0, r3
 8004aa0:	2394      	movs	r3, #148	@ 0x94
 8004aa2:	18fb      	adds	r3, r7, r3
 8004aa4:	6018      	str	r0, [r3, #0]
 8004aa6:	000b      	movs	r3, r1
 8004aa8:	021b      	lsls	r3, r3, #8
 8004aaa:	2290      	movs	r2, #144	@ 0x90
 8004aac:	18ba      	adds	r2, r7, r2
 8004aae:	6013      	str	r3, [r2, #0]
             ((int64_t)RxData[5] << 16) |
 8004ab0:	69ba      	ldr	r2, [r7, #24]
 8004ab2:	69fb      	ldr	r3, [r7, #28]
 8004ab4:	0011      	movs	r1, r2
 8004ab6:	2090      	movs	r0, #144	@ 0x90
 8004ab8:	1838      	adds	r0, r7, r0
 8004aba:	6804      	ldr	r4, [r0, #0]
 8004abc:	6845      	ldr	r5, [r0, #4]
 8004abe:	0020      	movs	r0, r4
 8004ac0:	4301      	orrs	r1, r0
 8004ac2:	60b9      	str	r1, [r7, #8]
 8004ac4:	002a      	movs	r2, r5
 8004ac6:	4313      	orrs	r3, r2
 8004ac8:	60fb      	str	r3, [r7, #12]
             ((int64_t)RxData[7]);
 8004aca:	4b36      	ldr	r3, [pc, #216]	@ (8004ba4 <HAL_FDCAN_RxFifo0Callback+0x538>)
 8004acc:	79db      	ldrb	r3, [r3, #7]
 8004ace:	603b      	str	r3, [r7, #0]
 8004ad0:	2300      	movs	r3, #0
 8004ad2:	607b      	str	r3, [r7, #4]
      int64_t newCounts = ((int64_t)RxData[0] << 56) |
 8004ad4:	68bc      	ldr	r4, [r7, #8]
 8004ad6:	68fd      	ldr	r5, [r7, #12]
 8004ad8:	0023      	movs	r3, r4
 8004ada:	6839      	ldr	r1, [r7, #0]
 8004adc:	687a      	ldr	r2, [r7, #4]
 8004ade:	0008      	movs	r0, r1
 8004ae0:	4303      	orrs	r3, r0
 8004ae2:	20c8      	movs	r0, #200	@ 0xc8
 8004ae4:	1838      	adds	r0, r7, r0
 8004ae6:	6003      	str	r3, [r0, #0]
 8004ae8:	002b      	movs	r3, r5
 8004aea:	4313      	orrs	r3, r2
 8004aec:	22cc      	movs	r2, #204	@ 0xcc
 8004aee:	18ba      	adds	r2, r7, r2
 8004af0:	6013      	str	r3, [r2, #0]
      set_counts(newCounts);
 8004af2:	23c8      	movs	r3, #200	@ 0xc8
 8004af4:	18fb      	adds	r3, r7, r3
 8004af6:	681a      	ldr	r2, [r3, #0]
 8004af8:	685b      	ldr	r3, [r3, #4]
 8004afa:	0010      	movs	r0, r2
 8004afc:	0019      	movs	r1, r3
 8004afe:	f7fe fdf3 	bl	80036e8 <set_counts>
      }
      break;
 8004b02:	e042      	b.n	8004b8a <HAL_FDCAN_RxFifo0Callback+0x51e>
    case 13:
      if (RxHeader.DataLength >= 1 && RxData[0] != 0) {
 8004b04:	4b26      	ldr	r3, [pc, #152]	@ (8004ba0 <HAL_FDCAN_RxFifo0Callback+0x534>)
 8004b06:	68db      	ldr	r3, [r3, #12]
 8004b08:	2b00      	cmp	r3, #0
 8004b0a:	d040      	beq.n	8004b8e <HAL_FDCAN_RxFifo0Callback+0x522>
 8004b0c:	4b25      	ldr	r3, [pc, #148]	@ (8004ba4 <HAL_FDCAN_RxFifo0Callback+0x538>)
 8004b0e:	781b      	ldrb	r3, [r3, #0]
 8004b10:	2b00      	cmp	r3, #0
 8004b12:	d03c      	beq.n	8004b8e <HAL_FDCAN_RxFifo0Callback+0x522>
      flash_factory_reset();
 8004b14:	f7ff fd24 	bl	8004560 <flash_factory_reset>
      reset_counts();
 8004b18:	f7fe fdd4 	bl	80036c4 <reset_counts>
      set_encoder_direction(0);
 8004b1c:	2000      	movs	r0, #0
 8004b1e:	f7fe fdf9 	bl	8003714 <set_encoder_direction>
      TxHeaderPosition.Identifier = (BASE_ID & 0xFFF80000) | (POSITION_API_ID << 13) | (flash_get_device_id() << 7);
 8004b22:	4b21      	ldr	r3, [pc, #132]	@ (8004ba8 <HAL_FDCAN_RxFifo0Callback+0x53c>)
 8004b24:	0cdb      	lsrs	r3, r3, #19
 8004b26:	04da      	lsls	r2, r3, #19
 8004b28:	2300      	movs	r3, #0
 8004b2a:	035b      	lsls	r3, r3, #13
 8004b2c:	431a      	orrs	r2, r3
 8004b2e:	0014      	movs	r4, r2
 8004b30:	f7ff fb84 	bl	800423c <flash_get_device_id>
 8004b34:	0003      	movs	r3, r0
 8004b36:	01db      	lsls	r3, r3, #7
 8004b38:	0022      	movs	r2, r4
 8004b3a:	431a      	orrs	r2, r3
 8004b3c:	4b1b      	ldr	r3, [pc, #108]	@ (8004bac <HAL_FDCAN_RxFifo0Callback+0x540>)
 8004b3e:	601a      	str	r2, [r3, #0]
      }
      break;
 8004b40:	e025      	b.n	8004b8e <HAL_FDCAN_RxFifo0Callback+0x522>
    case 20:
      if (RxHeader.DataLength == 4) {
 8004b42:	4b17      	ldr	r3, [pc, #92]	@ (8004ba0 <HAL_FDCAN_RxFifo0Callback+0x534>)
 8004b44:	68db      	ldr	r3, [r3, #12]
 8004b46:	2b04      	cmp	r3, #4
 8004b48:	d123      	bne.n	8004b92 <HAL_FDCAN_RxFifo0Callback+0x526>
      float new_alpha;
      memcpy(&new_alpha, RxData, sizeof(float));
 8004b4a:	4b16      	ldr	r3, [pc, #88]	@ (8004ba4 <HAL_FDCAN_RxFifo0Callback+0x538>)
 8004b4c:	681b      	ldr	r3, [r3, #0]
 8004b4e:	22ac      	movs	r2, #172	@ 0xac
 8004b50:	18ba      	adds	r2, r7, r2
 8004b52:	6013      	str	r3, [r2, #0]
      flash_set_velocity_alpha(new_alpha);
 8004b54:	23ac      	movs	r3, #172	@ 0xac
 8004b56:	18fb      	adds	r3, r7, r3
 8004b58:	681b      	ldr	r3, [r3, #0]
 8004b5a:	1c18      	adds	r0, r3, #0
 8004b5c:	f7ff fbe4 	bl	8004328 <flash_set_velocity_alpha>
      }
      break;
 8004b60:	e017      	b.n	8004b92 <HAL_FDCAN_RxFifo0Callback+0x526>
    case 21:
      if (RxHeader.DataLength == 4) {
 8004b62:	4b0f      	ldr	r3, [pc, #60]	@ (8004ba0 <HAL_FDCAN_RxFifo0Callback+0x534>)
 8004b64:	68db      	ldr	r3, [r3, #12]
 8004b66:	2b04      	cmp	r3, #4
 8004b68:	d115      	bne.n	8004b96 <HAL_FDCAN_RxFifo0Callback+0x52a>
      float new_alpha;
      memcpy(&new_alpha, RxData, sizeof(float));
 8004b6a:	4b0e      	ldr	r3, [pc, #56]	@ (8004ba4 <HAL_FDCAN_RxFifo0Callback+0x538>)
 8004b6c:	681b      	ldr	r3, [r3, #0]
 8004b6e:	22a8      	movs	r2, #168	@ 0xa8
 8004b70:	18ba      	adds	r2, r7, r2
 8004b72:	6013      	str	r3, [r2, #0]
      flash_set_accel_alpha(new_alpha);
 8004b74:	23a8      	movs	r3, #168	@ 0xa8
 8004b76:	18fb      	adds	r3, r7, r3
 8004b78:	681b      	ldr	r3, [r3, #0]
 8004b7a:	1c18      	adds	r0, r3, #0
 8004b7c:	f7ff fc36 	bl	80043ec <flash_set_accel_alpha>
      }
      break;
 8004b80:	e009      	b.n	8004b96 <HAL_FDCAN_RxFifo0Callback+0x52a>
    default:
      // Unknown API ID, ignore
      break;
 8004b82:	46c0      	nop			@ (mov r8, r8)
 8004b84:	e008      	b.n	8004b98 <HAL_FDCAN_RxFifo0Callback+0x52c>
      break;
 8004b86:	46c0      	nop			@ (mov r8, r8)
 8004b88:	e006      	b.n	8004b98 <HAL_FDCAN_RxFifo0Callback+0x52c>
      break;
 8004b8a:	46c0      	nop			@ (mov r8, r8)
 8004b8c:	e004      	b.n	8004b98 <HAL_FDCAN_RxFifo0Callback+0x52c>
      break;
 8004b8e:	46c0      	nop			@ (mov r8, r8)
 8004b90:	e002      	b.n	8004b98 <HAL_FDCAN_RxFifo0Callback+0x52c>
      break;
 8004b92:	46c0      	nop			@ (mov r8, r8)
 8004b94:	e000      	b.n	8004b98 <HAL_FDCAN_RxFifo0Callback+0x52c>
      break;
 8004b96:	46c0      	nop			@ (mov r8, r8)
    }
  
  }
}
 8004b98:	46bd      	mov	sp, r7
 8004b9a:	b039      	add	sp, #228	@ 0xe4
 8004b9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004b9e:	46c0      	nop			@ (mov r8, r8)
 8004ba0:	2000da1c 	.word	0x2000da1c
 8004ba4:	2000da58 	.word	0x2000da58
 8004ba8:	0a110000 	.word	0x0a110000
 8004bac:	2000d9b0 	.word	0x2000d9b0

08004bb0 <main>:

/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void) {
 8004bb0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004bb2:	b0a1      	sub	sp, #132	@ 0x84
 8004bb4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN 1 */
  HAL_StatusTypeDef positionCanStatus = HAL_ERROR;
 8004bb6:	234f      	movs	r3, #79	@ 0x4f
 8004bb8:	2130      	movs	r1, #48	@ 0x30
 8004bba:	185b      	adds	r3, r3, r1
 8004bbc:	19da      	adds	r2, r3, r7
 8004bbe:	2301      	movs	r3, #1
 8004bc0:	7013      	strb	r3, [r2, #0]
  HAL_StatusTypeDef velocityAccelCanStatus = HAL_ERROR;
 8004bc2:	234e      	movs	r3, #78	@ 0x4e
 8004bc4:	185b      	adds	r3, r3, r1
 8004bc6:	19da      	adds	r2, r3, r7
 8004bc8:	2301      	movs	r3, #1
 8004bca:	7013      	strb	r3, [r2, #0]
  HAL_StatusTypeDef booleanStatusCanStatus = HAL_ERROR;  // New status for boolean messages
 8004bcc:	234d      	movs	r3, #77	@ 0x4d
 8004bce:	185b      	adds	r3, r3, r1
 8004bd0:	19da      	adds	r2, r3, r7
 8004bd2:	2301      	movs	r3, #1
 8004bd4:	7013      	strb	r3, [r2, #0]
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8004bd6:	f002 f8a7 	bl	8006d28 <HAL_Init>

  /* USER CODE BEGIN Init */
  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8004bda:	f000 fca3 	bl	8005524 <SystemClock_Config>

  /* USER CODE BEGIN SysInit */
  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8004bde:	f001 f84b 	bl	8005c78 <MX_GPIO_Init>
  MX_FDCAN1_Init();
 8004be2:	f000 fd61 	bl	80056a8 <MX_FDCAN1_Init>
  MX_SPI1_Init();
 8004be6:	f000 fe35 	bl	8005854 <MX_SPI1_Init>
  MX_ADC1_Init();
 8004bea:	f000 fcf7 	bl	80055dc <MX_ADC1_Init>
  MX_TIM3_Init();
 8004bee:	f000 ff0d 	bl	8005a0c <MX_TIM3_Init>
  MX_TIM4_Init();
 8004bf2:	f000 ff8b 	bl	8005b0c <MX_TIM4_Init>
  MX_I2C1_Init();
 8004bf6:	f000 fded 	bl	80057d4 <MX_I2C1_Init>
  MX_USB_DRD_FS_PCD_Init();
 8004bfa:	f001 f807 	bl	8005c0c <MX_USB_DRD_FS_PCD_Init>
  MX_TIM2_Init();
 8004bfe:	f000 fea5 	bl	800594c <MX_TIM2_Init>
  MX_SPI2_Init();
 8004c02:	f000 fe65 	bl	80058d0 <MX_SPI2_Init>
  /* USER CODE BEGIN 2 */

  // Read back from Flash
  uint64_t readData = *((uint64_t*) flashAddress);
 8004c06:	4b4d      	ldr	r3, [pc, #308]	@ (8004d3c <main+0x18c>)
 8004c08:	681b      	ldr	r3, [r3, #0]
 8004c0a:	681a      	ldr	r2, [r3, #0]
 8004c0c:	685b      	ldr	r3, [r3, #4]
 8004c0e:	663a      	str	r2, [r7, #96]	@ 0x60
 8004c10:	667b      	str	r3, [r7, #100]	@ 0x64

  if (flash_config_init() != HAL_OK) {
 8004c12:	f7ff fb0b 	bl	800422c <flash_config_init>
 8004c16:	1e03      	subs	r3, r0, #0
 8004c18:	d001      	beq.n	8004c1e <main+0x6e>
    // Flash initialization failed - use defaults but continue
    Error_Handler();
 8004c1a:	f001 f8f5 	bl	8005e08 <Error_Handler>
  }

  flash_increment_boot_count();
 8004c1e:	f7ff fc31 	bl	8004484 <flash_increment_boot_count>

  if (HAL_FDCAN_Start(&hfdcan1) != HAL_OK) {
 8004c22:	4b47      	ldr	r3, [pc, #284]	@ (8004d40 <main+0x190>)
 8004c24:	0018      	movs	r0, r3
 8004c26:	f003 f9a6 	bl	8007f76 <HAL_FDCAN_Start>
 8004c2a:	1e03      	subs	r3, r0, #0
 8004c2c:	d005      	beq.n	8004c3a <main+0x8a>
    Error_Handler();
 8004c2e:	f001 f8eb 	bl	8005e08 <Error_Handler>
    isCANInvalid = 0;  // CAN initialization failed
 8004c32:	4a44      	ldr	r2, [pc, #272]	@ (8004d44 <main+0x194>)
 8004c34:	2300      	movs	r3, #0
 8004c36:	6013      	str	r3, [r2, #0]
 8004c38:	e002      	b.n	8004c40 <main+0x90>
  } else {
    isCANInvalid = 1;  // CAN initialization successful
 8004c3a:	4a42      	ldr	r2, [pc, #264]	@ (8004d44 <main+0x194>)
 8004c3c:	2301      	movs	r3, #1
 8004c3e:	6013      	str	r3, [r2, #0]
  }

  if (HAL_FDCAN_ActivateNotification(&hfdcan1, FDCAN_IT_RX_FIFO0_NEW_MESSAGE, 0) != HAL_OK) {
 8004c40:	4b3f      	ldr	r3, [pc, #252]	@ (8004d40 <main+0x190>)
 8004c42:	2200      	movs	r2, #0
 8004c44:	2101      	movs	r1, #1
 8004c46:	0018      	movs	r0, r3
 8004c48:	f003 fb16 	bl	8008278 <HAL_FDCAN_ActivateNotification>
 8004c4c:	1e03      	subs	r3, r0, #0
 8004c4e:	d001      	beq.n	8004c54 <main+0xa4>
    Error_Handler();
 8004c50:	f001 f8da 	bl	8005e08 <Error_Handler>
  }
  
  if ((uint32_t) readData == 0xffffffff) {
 8004c54:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8004c56:	3301      	adds	r3, #1
 8004c58:	d104      	bne.n	8004c64 <main+0xb4>
    TxHeaderPosition.Identifier = BASE_ID;
 8004c5a:	4b3b      	ldr	r3, [pc, #236]	@ (8004d48 <main+0x198>)
 8004c5c:	001a      	movs	r2, r3
 8004c5e:	4b3b      	ldr	r3, [pc, #236]	@ (8004d4c <main+0x19c>)
 8004c60:	601a      	str	r2, [r3, #0]
 8004c62:	e002      	b.n	8004c6a <main+0xba>
  } else {
    TxHeaderPosition.Identifier = (uint32_t) readData;
 8004c64:	6e3a      	ldr	r2, [r7, #96]	@ 0x60
 8004c66:	4b39      	ldr	r3, [pc, #228]	@ (8004d4c <main+0x19c>)
 8004c68:	601a      	str	r2, [r3, #0]
  }

  TxHeaderPosition.Identifier = BASE_ID + flash_get_device_id();
 8004c6a:	f7ff fae7 	bl	800423c <flash_get_device_id>
 8004c6e:	0002      	movs	r2, r0
 8004c70:	4b35      	ldr	r3, [pc, #212]	@ (8004d48 <main+0x198>)
 8004c72:	18d2      	adds	r2, r2, r3
 8004c74:	4b35      	ldr	r3, [pc, #212]	@ (8004d4c <main+0x19c>)
 8004c76:	601a      	str	r2, [r3, #0]


  // Configure position message header (8 bytes)
  txHeaderConfigure(&TxHeaderPosition);
 8004c78:	4b34      	ldr	r3, [pc, #208]	@ (8004d4c <main+0x19c>)
 8004c7a:	0018      	movs	r0, r3
 8004c7c:	f001 f86a 	bl	8005d54 <txHeaderConfigure>
  // Configure velocity/acceleration message header (8 bytes)
  txHeaderConfigure(&TxHeaderVelocityAccel);
 8004c80:	4b33      	ldr	r3, [pc, #204]	@ (8004d50 <main+0x1a0>)
 8004c82:	0018      	movs	r0, r3
 8004c84:	f001 f866 	bl	8005d54 <txHeaderConfigure>
  // Configure boolean status message header (1 byte)
  txHeaderConfigureBooleanStatus(&TxHeaderBooleanStatus);
 8004c88:	4b32      	ldr	r3, [pc, #200]	@ (8004d54 <main+0x1a4>)
 8004c8a:	0018      	movs	r0, r3
 8004c8c:	f001 f89b 	bl	8005dc6 <txHeaderConfigureBooleanStatus>

  rxHeaderConfigure(&RxHeader);
 8004c90:	4b31      	ldr	r3, [pc, #196]	@ (8004d58 <main+0x1a8>)
 8004c92:	0018      	movs	r0, r3
 8004c94:	f001 f87f 	bl	8005d96 <rxHeaderConfigure>

  // ADC
  HAL_ADC_Start(&hadc1);
 8004c98:	4b30      	ldr	r3, [pc, #192]	@ (8004d5c <main+0x1ac>)
 8004c9a:	0018      	movs	r0, r3
 8004c9c:	f002 fbee 	bl	800747c <HAL_ADC_Start>

  // start CAN IC
  // Enable CAN transceiver by setting EN and STB_N HIGH
  HAL_GPIO_WritePin(CAN_ENABLE_GPIO_Port, CAN_ENABLE_Pin, GPIO_PIN_SET); // EN HIGH
 8004ca0:	4b2f      	ldr	r3, [pc, #188]	@ (8004d60 <main+0x1b0>)
 8004ca2:	2201      	movs	r2, #1
 8004ca4:	2120      	movs	r1, #32
 8004ca6:	0018      	movs	r0, r3
 8004ca8:	f004 f97b 	bl	8008fa2 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(CAN_NSTANDBY_GPIO_Port, CAN_NSTANDBY_Pin, GPIO_PIN_SET); // STB_N HIGH
 8004cac:	4b2c      	ldr	r3, [pc, #176]	@ (8004d60 <main+0x1b0>)
 8004cae:	2201      	movs	r2, #1
 8004cb0:	2108      	movs	r1, #8
 8004cb2:	0018      	movs	r0, r3
 8004cb4:	f004 f975 	bl	8008fa2 <HAL_GPIO_WritePin>

  // Check if ERR_N is low, indicating an error or flag set
  int err_flag = HAL_GPIO_ReadPin(CAN_NERROR_GPIO_Port, CAN_NERROR_Pin);
 8004cb8:	4b29      	ldr	r3, [pc, #164]	@ (8004d60 <main+0x1b0>)
 8004cba:	2180      	movs	r1, #128	@ 0x80
 8004cbc:	0018      	movs	r0, r3
 8004cbe:	f004 f953 	bl	8008f68 <HAL_GPIO_ReadPin>
 8004cc2:	0003      	movs	r3, r0
 8004cc4:	65fb      	str	r3, [r7, #92]	@ 0x5c

  if (err_flag == GPIO_PIN_RESET) { // ERR_N is LOW
 8004cc6:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8004cc8:	2b00      	cmp	r3, #0
 8004cca:	d11d      	bne.n	8004d08 <main+0x158>
    // Clear flags by toggling STB_N or EN based on the datasheet
    HAL_GPIO_WritePin(CAN_NSTANDBY_GPIO_Port, CAN_NSTANDBY_Pin, GPIO_PIN_RESET); // STB_N LOW
 8004ccc:	4b24      	ldr	r3, [pc, #144]	@ (8004d60 <main+0x1b0>)
 8004cce:	2200      	movs	r2, #0
 8004cd0:	2108      	movs	r1, #8
 8004cd2:	0018      	movs	r0, r3
 8004cd4:	f004 f965 	bl	8008fa2 <HAL_GPIO_WritePin>
    HAL_Delay(10); // Allow some stabilization time
 8004cd8:	200a      	movs	r0, #10
 8004cda:	f002 f8ab 	bl	8006e34 <HAL_Delay>
    HAL_GPIO_WritePin(CAN_NSTANDBY_GPIO_Port, CAN_NSTANDBY_Pin, GPIO_PIN_SET);   // STB_N HIGH
 8004cde:	4b20      	ldr	r3, [pc, #128]	@ (8004d60 <main+0x1b0>)
 8004ce0:	2201      	movs	r2, #1
 8004ce2:	2108      	movs	r1, #8
 8004ce4:	0018      	movs	r0, r3
 8004ce6:	f004 f95c 	bl	8008fa2 <HAL_GPIO_WritePin>

    // Optionally toggle EN if STB_N toggle doesn't clear the flag
    HAL_GPIO_WritePin(CAN_ENABLE_GPIO_Port, CAN_ENABLE_Pin, GPIO_PIN_RESET); // EN LOW
 8004cea:	4b1d      	ldr	r3, [pc, #116]	@ (8004d60 <main+0x1b0>)
 8004cec:	2200      	movs	r2, #0
 8004cee:	2120      	movs	r1, #32
 8004cf0:	0018      	movs	r0, r3
 8004cf2:	f004 f956 	bl	8008fa2 <HAL_GPIO_WritePin>
    HAL_Delay(10); // Allow stabilization
 8004cf6:	200a      	movs	r0, #10
 8004cf8:	f002 f89c 	bl	8006e34 <HAL_Delay>
    HAL_GPIO_WritePin(CAN_ENABLE_GPIO_Port, CAN_ENABLE_Pin, GPIO_PIN_SET); // EN HIGH
 8004cfc:	4b18      	ldr	r3, [pc, #96]	@ (8004d60 <main+0x1b0>)
 8004cfe:	2201      	movs	r2, #1
 8004d00:	2120      	movs	r1, #32
 8004d02:	0018      	movs	r0, r3
 8004d04:	f004 f94d 	bl	8008fa2 <HAL_GPIO_WritePin>
  }

  if (mt6835_update_counts(&hspi1) == HAL_OK) {
 8004d08:	4b16      	ldr	r3, [pc, #88]	@ (8004d64 <main+0x1b4>)
 8004d0a:	0018      	movs	r0, r3
 8004d0c:	f7fe fbd8 	bl	80034c0 <mt6835_update_counts>
 8004d10:	1e03      	subs	r3, r0, #0
 8004d12:	d12d      	bne.n	8004d70 <main+0x1c0>
    // Wait for a few successful reads before declaring ready
    for (int i = 0; i < 10; i++) {
 8004d14:	2300      	movs	r3, #0
 8004d16:	67bb      	str	r3, [r7, #120]	@ 0x78
 8004d18:	e00b      	b.n	8004d32 <main+0x182>
      if (mt6835_update_counts(&hspi1) == HAL_OK) {
 8004d1a:	4b12      	ldr	r3, [pc, #72]	@ (8004d64 <main+0x1b4>)
 8004d1c:	0018      	movs	r0, r3
 8004d1e:	f7fe fbcf 	bl	80034c0 <mt6835_update_counts>
 8004d22:	1e03      	subs	r3, r0, #0
 8004d24:	d120      	bne.n	8004d68 <main+0x1b8>
        HAL_Delay(10);
 8004d26:	200a      	movs	r0, #10
 8004d28:	f002 f884 	bl	8006e34 <HAL_Delay>
    for (int i = 0; i < 10; i++) {
 8004d2c:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8004d2e:	3301      	adds	r3, #1
 8004d30:	67bb      	str	r3, [r7, #120]	@ 0x78
 8004d32:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8004d34:	2b09      	cmp	r3, #9
 8004d36:	ddf0      	ble.n	8004d1a <main+0x16a>
 8004d38:	e017      	b.n	8004d6a <main+0x1ba>
 8004d3a:	46c0      	nop			@ (mov r8, r8)
 8004d3c:	20000008 	.word	0x20000008
 8004d40:	2000d440 	.word	0x2000d440
 8004d44:	2000d994 	.word	0x2000d994
 8004d48:	0a110000 	.word	0x0a110000
 8004d4c:	2000d9b0 	.word	0x2000d9b0
 8004d50:	2000d9d4 	.word	0x2000d9d4
 8004d54:	2000d9f8 	.word	0x2000d9f8
 8004d58:	2000da1c 	.word	0x2000da1c
 8004d5c:	2000d3dc 	.word	0x2000d3dc
 8004d60:	50000400 	.word	0x50000400
 8004d64:	2000d4f8 	.word	0x2000d4f8
      } else {
        break;
 8004d68:	46c0      	nop			@ (mov r8, r8)
      }
    }
    encoder_ready = 1;
 8004d6a:	4ad7      	ldr	r2, [pc, #860]	@ (80050c8 <main+0x518>)
 8004d6c:	2301      	movs	r3, #1
 8004d6e:	6013      	str	r3, [r2, #0]
  }
  vertos_calculations_init();
 8004d70:	f001 fe93 	bl	8006a9a <vertos_calculations_init>


  pooptest = 1;
 8004d74:	4ad5      	ldr	r2, [pc, #852]	@ (80050cc <main+0x51c>)
 8004d76:	2301      	movs	r3, #1
 8004d78:	6013      	str	r3, [r2, #0]
  // Set the flag ONCE to detect future resets
  flash_set_reset_sticky_flag(0xDEADBEEF);
 8004d7a:	4bd5      	ldr	r3, [pc, #852]	@ (80050d0 <main+0x520>)
 8004d7c:	0018      	movs	r0, r3
 8004d7e:	f7ff fbcb 	bl	8004518 <flash_set_reset_sticky_flag>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1) {
  uint32_t currentTimeMillisec = HAL_GetTick();
 8004d82:	f002 f84d 	bl	8006e20 <HAL_GetTick>
 8004d86:	0003      	movs	r3, r0
 8004d88:	65bb      	str	r3, [r7, #88]	@ 0x58
//  }

  //----------------------------------------------------------------------------------------------------------
  // Read the multi-turn counts and single-turn counts
  //----------------------------------------------------------------------------------------------------------
  int64_t multiTurnCounts = get_counts_multi_turn();
 8004d8a:	f7fe fc8f 	bl	80036ac <get_counts_multi_turn>
 8004d8e:	0002      	movs	r2, r0
 8004d90:	000b      	movs	r3, r1
 8004d92:	653a      	str	r2, [r7, #80]	@ 0x50
 8004d94:	657b      	str	r3, [r7, #84]	@ 0x54
  uint32_t singleTurnCounts = get_counts_single_turn();
 8004d96:	f7fe fc61 	bl	800365c <get_counts_single_turn>
 8004d9a:	0003      	movs	r3, r0
 8004d9c:	64fb      	str	r3, [r7, #76]	@ 0x4c

  if (encoder_ready) {
 8004d9e:	4bca      	ldr	r3, [pc, #808]	@ (80050c8 <main+0x518>)
 8004da0:	681b      	ldr	r3, [r3, #0]
 8004da2:	2b00      	cmp	r3, #0
 8004da4:	d100      	bne.n	8004da8 <main+0x1f8>
 8004da6:	e16b      	b.n	8005080 <main+0x4d0>
    // Single encoder update call per loop
    if (mt6835_update_counts(&hspi1) == HAL_OK) {
 8004da8:	4bca      	ldr	r3, [pc, #808]	@ (80050d4 <main+0x524>)
 8004daa:	0018      	movs	r0, r3
 8004dac:	f7fe fb88 	bl	80034c0 <mt6835_update_counts>
 8004db0:	1e03      	subs	r3, r0, #0
 8004db2:	d000      	beq.n	8004db6 <main+0x206>
 8004db4:	e144      	b.n	8005040 <main+0x490>

    // Pack multi-turn counts directly as 64-bit value (8 bytes, big-endian)
    TxDataPosition[0] = (uint8_t)(multiTurnCounts >> 56);  // MSB
 8004db6:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004db8:	161b      	asrs	r3, r3, #24
 8004dba:	61bb      	str	r3, [r7, #24]
 8004dbc:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004dbe:	17db      	asrs	r3, r3, #31
 8004dc0:	61fb      	str	r3, [r7, #28]
 8004dc2:	7e3b      	ldrb	r3, [r7, #24]
 8004dc4:	4ac4      	ldr	r2, [pc, #784]	@ (80050d8 <main+0x528>)
 8004dc6:	7013      	strb	r3, [r2, #0]
    TxDataPosition[1] = (uint8_t)(multiTurnCounts >> 48);
 8004dc8:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004dca:	141b      	asrs	r3, r3, #16
 8004dcc:	613b      	str	r3, [r7, #16]
 8004dce:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004dd0:	17db      	asrs	r3, r3, #31
 8004dd2:	617b      	str	r3, [r7, #20]
 8004dd4:	7c3b      	ldrb	r3, [r7, #16]
 8004dd6:	4ac0      	ldr	r2, [pc, #768]	@ (80050d8 <main+0x528>)
 8004dd8:	7053      	strb	r3, [r2, #1]
    TxDataPosition[2] = (uint8_t)(multiTurnCounts >> 40);
 8004dda:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004ddc:	121b      	asrs	r3, r3, #8
 8004dde:	60bb      	str	r3, [r7, #8]
 8004de0:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004de2:	17db      	asrs	r3, r3, #31
 8004de4:	60fb      	str	r3, [r7, #12]
 8004de6:	7a3b      	ldrb	r3, [r7, #8]
 8004de8:	4abb      	ldr	r2, [pc, #748]	@ (80050d8 <main+0x528>)
 8004dea:	7093      	strb	r3, [r2, #2]
    TxDataPosition[3] = (uint8_t)(multiTurnCounts >> 32);
 8004dec:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004dee:	001b      	movs	r3, r3
 8004df0:	603b      	str	r3, [r7, #0]
 8004df2:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004df4:	17db      	asrs	r3, r3, #31
 8004df6:	607b      	str	r3, [r7, #4]
 8004df8:	783b      	ldrb	r3, [r7, #0]
 8004dfa:	4ab7      	ldr	r2, [pc, #732]	@ (80050d8 <main+0x528>)
 8004dfc:	70d3      	strb	r3, [r2, #3]
    TxDataPosition[4] = (uint8_t)(multiTurnCounts >> 24);
 8004dfe:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004e00:	021a      	lsls	r2, r3, #8
 8004e02:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8004e04:	0e1b      	lsrs	r3, r3, #24
 8004e06:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004e08:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004e0a:	4313      	orrs	r3, r2
 8004e0c:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004e0e:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004e10:	161b      	asrs	r3, r3, #24
 8004e12:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004e14:	2328      	movs	r3, #40	@ 0x28
 8004e16:	18fb      	adds	r3, r7, r3
 8004e18:	781b      	ldrb	r3, [r3, #0]
 8004e1a:	4aaf      	ldr	r2, [pc, #700]	@ (80050d8 <main+0x528>)
 8004e1c:	7113      	strb	r3, [r2, #4]
    TxDataPosition[5] = (uint8_t)(multiTurnCounts >> 16);
 8004e1e:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004e20:	041a      	lsls	r2, r3, #16
 8004e22:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8004e24:	0c1b      	lsrs	r3, r3, #16
 8004e26:	623b      	str	r3, [r7, #32]
 8004e28:	6a3b      	ldr	r3, [r7, #32]
 8004e2a:	4313      	orrs	r3, r2
 8004e2c:	623b      	str	r3, [r7, #32]
 8004e2e:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004e30:	141b      	asrs	r3, r3, #16
 8004e32:	627b      	str	r3, [r7, #36]	@ 0x24
 8004e34:	2320      	movs	r3, #32
 8004e36:	18fb      	adds	r3, r7, r3
 8004e38:	781b      	ldrb	r3, [r3, #0]
 8004e3a:	4aa7      	ldr	r2, [pc, #668]	@ (80050d8 <main+0x528>)
 8004e3c:	7153      	strb	r3, [r2, #5]
    TxDataPosition[6] = (uint8_t)(multiTurnCounts >> 8);
 8004e3e:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004e40:	061a      	lsls	r2, r3, #24
 8004e42:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8004e44:	0a1d      	lsrs	r5, r3, #8
 8004e46:	4315      	orrs	r5, r2
 8004e48:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004e4a:	121e      	asrs	r6, r3, #8
 8004e4c:	b2eb      	uxtb	r3, r5
 8004e4e:	4aa2      	ldr	r2, [pc, #648]	@ (80050d8 <main+0x528>)
 8004e50:	7193      	strb	r3, [r2, #6]
    TxDataPosition[7] = (uint8_t)(multiTurnCounts);        // LSB
 8004e52:	6d3a      	ldr	r2, [r7, #80]	@ 0x50
 8004e54:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004e56:	1c13      	adds	r3, r2, #0
 8004e58:	b2db      	uxtb	r3, r3
 8004e5a:	4a9f      	ldr	r2, [pc, #636]	@ (80050d8 <main+0x528>)
 8004e5c:	71d3      	strb	r3, [r2, #7]

    int flexEncoderMode = 1;
 8004e5e:	2301      	movs	r3, #1
 8004e60:	64bb      	str	r3, [r7, #72]	@ 0x48
    //-----------------------------------------------------------------------------------------------------------
    // Dynamic Linear Regression velocity and acceleration calculations
    //-----------------------------------------------------------------------------------------------------------

    // Update calculations with new encoder data
    vertos_calculations_update(multiTurnCounts, currentTimeMillisec);
 8004e62:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8004e64:	6d38      	ldr	r0, [r7, #80]	@ 0x50
 8004e66:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8004e68:	001a      	movs	r2, r3
 8004e6a:	f001 fe4d 	bl	8006b08 <vertos_calculations_update>

    // Use the results from the calculation
    int32_t velocityCountsScaled = vertos_calculations_get_velocity_scaled();
 8004e6e:	f001 ff1d 	bl	8006cac <vertos_calculations_get_velocity_scaled>
 8004e72:	0003      	movs	r3, r0
 8004e74:	647b      	str	r3, [r7, #68]	@ 0x44
    int32_t accelCountsScaled = vertos_calculations_get_acceleration_scaled();
 8004e76:	f001 ff23 	bl	8006cc0 <vertos_calculations_get_acceleration_scaled>
 8004e7a:	0003      	movs	r3, r0
 8004e7c:	643b      	str	r3, [r7, #64]	@ 0x40

    TxDataBooleanStatus[0] = 0;  // Start with empty byte: 00000000
 8004e7e:	4a97      	ldr	r2, [pc, #604]	@ (80050dc <main+0x52c>)
 8004e80:	2300      	movs	r3, #0
 8004e82:	7013      	strb	r3, [r2, #0]
    TxDataBooleanStatus[0] |= (isHardwareFault & 0x01) << 0;       // Add bit 0
 8004e84:	4b95      	ldr	r3, [pc, #596]	@ (80050dc <main+0x52c>)
 8004e86:	781b      	ldrb	r3, [r3, #0]
 8004e88:	b259      	sxtb	r1, r3
 8004e8a:	4b95      	ldr	r3, [pc, #596]	@ (80050e0 <main+0x530>)
 8004e8c:	681b      	ldr	r3, [r3, #0]
 8004e8e:	b25a      	sxtb	r2, r3
 8004e90:	2301      	movs	r3, #1
 8004e92:	4013      	ands	r3, r2
 8004e94:	b25b      	sxtb	r3, r3
 8004e96:	430b      	orrs	r3, r1
 8004e98:	b25b      	sxtb	r3, r3
 8004e9a:	b2db      	uxtb	r3, r3
 8004e9c:	4a8f      	ldr	r2, [pc, #572]	@ (80050dc <main+0x52c>)
 8004e9e:	7013      	strb	r3, [r2, #0]
    TxDataBooleanStatus[0] |= (isLoopOverrun & 0x01) << 1;         // Add bit 1
 8004ea0:	4b8e      	ldr	r3, [pc, #568]	@ (80050dc <main+0x52c>)
 8004ea2:	781b      	ldrb	r3, [r3, #0]
 8004ea4:	b259      	sxtb	r1, r3
 8004ea6:	4b8f      	ldr	r3, [pc, #572]	@ (80050e4 <main+0x534>)
 8004ea8:	681b      	ldr	r3, [r3, #0]
 8004eaa:	b25b      	sxtb	r3, r3
 8004eac:	18db      	adds	r3, r3, r3
 8004eae:	b25a      	sxtb	r2, r3
 8004eb0:	2302      	movs	r3, #2
 8004eb2:	4013      	ands	r3, r2
 8004eb4:	b25b      	sxtb	r3, r3
 8004eb6:	430b      	orrs	r3, r1
 8004eb8:	b25b      	sxtb	r3, r3
 8004eba:	b2db      	uxtb	r3, r3
 8004ebc:	4a87      	ldr	r2, [pc, #540]	@ (80050dc <main+0x52c>)
 8004ebe:	7013      	strb	r3, [r2, #0]
    TxDataBooleanStatus[0] |= (isCANInvalid & 0x01) << 2;          // Add bit 2
 8004ec0:	4b86      	ldr	r3, [pc, #536]	@ (80050dc <main+0x52c>)
 8004ec2:	781b      	ldrb	r3, [r3, #0]
 8004ec4:	b259      	sxtb	r1, r3
 8004ec6:	4b88      	ldr	r3, [pc, #544]	@ (80050e8 <main+0x538>)
 8004ec8:	681b      	ldr	r3, [r3, #0]
 8004eca:	b25b      	sxtb	r3, r3
 8004ecc:	009b      	lsls	r3, r3, #2
 8004ece:	b25a      	sxtb	r2, r3
 8004ed0:	2304      	movs	r3, #4
 8004ed2:	4013      	ands	r3, r2
 8004ed4:	b25b      	sxtb	r3, r3
 8004ed6:	430b      	orrs	r3, r1
 8004ed8:	b25b      	sxtb	r3, r3
 8004eda:	b2db      	uxtb	r3, r3
 8004edc:	4a7f      	ldr	r2, [pc, #508]	@ (80050dc <main+0x52c>)
 8004ede:	7013      	strb	r3, [r2, #0]
    TxDataBooleanStatus[0] |= (isResetDuringEnable & 0x01) << 3;   // Add bit 3
 8004ee0:	4b7e      	ldr	r3, [pc, #504]	@ (80050dc <main+0x52c>)
 8004ee2:	781b      	ldrb	r3, [r3, #0]
 8004ee4:	b259      	sxtb	r1, r3
 8004ee6:	4b81      	ldr	r3, [pc, #516]	@ (80050ec <main+0x53c>)
 8004ee8:	681b      	ldr	r3, [r3, #0]
 8004eea:	b25b      	sxtb	r3, r3
 8004eec:	00db      	lsls	r3, r3, #3
 8004eee:	b25a      	sxtb	r2, r3
 8004ef0:	2308      	movs	r3, #8
 8004ef2:	4013      	ands	r3, r2
 8004ef4:	b25b      	sxtb	r3, r3
 8004ef6:	430b      	orrs	r3, r1
 8004ef8:	b25b      	sxtb	r3, r3
 8004efa:	b2db      	uxtb	r3, r3
 8004efc:	4a77      	ldr	r2, [pc, #476]	@ (80050dc <main+0x52c>)
 8004efe:	7013      	strb	r3, [r2, #0]
    TxDataBooleanStatus[0] |= (isMagnetWeakSignal & 0x01) << 4;    // Add bit 4
 8004f00:	4b76      	ldr	r3, [pc, #472]	@ (80050dc <main+0x52c>)
 8004f02:	781b      	ldrb	r3, [r3, #0]
 8004f04:	b259      	sxtb	r1, r3
 8004f06:	4b7a      	ldr	r3, [pc, #488]	@ (80050f0 <main+0x540>)
 8004f08:	681b      	ldr	r3, [r3, #0]
 8004f0a:	b25b      	sxtb	r3, r3
 8004f0c:	011b      	lsls	r3, r3, #4
 8004f0e:	b25a      	sxtb	r2, r3
 8004f10:	2310      	movs	r3, #16
 8004f12:	4013      	ands	r3, r2
 8004f14:	b25b      	sxtb	r3, r3
 8004f16:	430b      	orrs	r3, r1
 8004f18:	b25b      	sxtb	r3, r3
 8004f1a:	b2db      	uxtb	r3, r3
 8004f1c:	4a6f      	ldr	r2, [pc, #444]	@ (80050dc <main+0x52c>)
 8004f1e:	7013      	strb	r3, [r2, #0]
    TxDataBooleanStatus[0] |= (isRotationOverspeed & 0x01) << 5;   // Add bit 5
 8004f20:	4b6e      	ldr	r3, [pc, #440]	@ (80050dc <main+0x52c>)
 8004f22:	781b      	ldrb	r3, [r3, #0]
 8004f24:	b259      	sxtb	r1, r3
 8004f26:	4b73      	ldr	r3, [pc, #460]	@ (80050f4 <main+0x544>)
 8004f28:	681b      	ldr	r3, [r3, #0]
 8004f2a:	b25b      	sxtb	r3, r3
 8004f2c:	015b      	lsls	r3, r3, #5
 8004f2e:	b25a      	sxtb	r2, r3
 8004f30:	2320      	movs	r3, #32
 8004f32:	4013      	ands	r3, r2
 8004f34:	b25b      	sxtb	r3, r3
 8004f36:	430b      	orrs	r3, r1
 8004f38:	b25b      	sxtb	r3, r3
 8004f3a:	b2db      	uxtb	r3, r3
 8004f3c:	4a67      	ldr	r2, [pc, #412]	@ (80050dc <main+0x52c>)
 8004f3e:	7013      	strb	r3, [r2, #0]
    TxDataBooleanStatus[0] |= (isCANClogged & 0x01) << 6;          // Add bit 6
 8004f40:	4b66      	ldr	r3, [pc, #408]	@ (80050dc <main+0x52c>)
 8004f42:	781b      	ldrb	r3, [r3, #0]
 8004f44:	b259      	sxtb	r1, r3
 8004f46:	4b6c      	ldr	r3, [pc, #432]	@ (80050f8 <main+0x548>)
 8004f48:	681b      	ldr	r3, [r3, #0]
 8004f4a:	b25b      	sxtb	r3, r3
 8004f4c:	019b      	lsls	r3, r3, #6
 8004f4e:	b25a      	sxtb	r2, r3
 8004f50:	2340      	movs	r3, #64	@ 0x40
 8004f52:	4013      	ands	r3, r2
 8004f54:	b25b      	sxtb	r3, r3
 8004f56:	430b      	orrs	r3, r1
 8004f58:	b25b      	sxtb	r3, r3
 8004f5a:	b2db      	uxtb	r3, r3
 8004f5c:	4a5f      	ldr	r2, [pc, #380]	@ (80050dc <main+0x52c>)
 8004f5e:	7013      	strb	r3, [r2, #0]
    TxDataBooleanStatus[0] |= (isUnderVolted & 0x01) << 7;         // Add bit 7
 8004f60:	4b5e      	ldr	r3, [pc, #376]	@ (80050dc <main+0x52c>)
 8004f62:	781b      	ldrb	r3, [r3, #0]
 8004f64:	b25a      	sxtb	r2, r3
 8004f66:	4b65      	ldr	r3, [pc, #404]	@ (80050fc <main+0x54c>)
 8004f68:	681b      	ldr	r3, [r3, #0]
 8004f6a:	b25b      	sxtb	r3, r3
 8004f6c:	01db      	lsls	r3, r3, #7
 8004f6e:	b25b      	sxtb	r3, r3
 8004f70:	4313      	orrs	r3, r2
 8004f72:	b25b      	sxtb	r3, r3
 8004f74:	b2db      	uxtb	r3, r3
 8004f76:	4a59      	ldr	r2, [pc, #356]	@ (80050dc <main+0x52c>)
 8004f78:	7013      	strb	r3, [r2, #0]

    // Pack combined velocity and acceleration as 8 bytes (4 bytes velocity + 4 bytes acceleration, both 32-bit signed)
    // Big-endian format
    TxDataVelocityAccel[0] = (uint8_t)(velocityCountsScaled >> 24);    // Use scaled values
 8004f7a:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8004f7c:	161b      	asrs	r3, r3, #24
 8004f7e:	b2db      	uxtb	r3, r3
 8004f80:	4a5f      	ldr	r2, [pc, #380]	@ (8005100 <main+0x550>)
 8004f82:	7013      	strb	r3, [r2, #0]
    TxDataVelocityAccel[1] = (uint8_t)(velocityCountsScaled >> 16);
 8004f84:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8004f86:	141b      	asrs	r3, r3, #16
 8004f88:	b2db      	uxtb	r3, r3
 8004f8a:	4a5d      	ldr	r2, [pc, #372]	@ (8005100 <main+0x550>)
 8004f8c:	7053      	strb	r3, [r2, #1]
    TxDataVelocityAccel[2] = (uint8_t)(velocityCountsScaled >> 8);
 8004f8e:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8004f90:	121b      	asrs	r3, r3, #8
 8004f92:	b2db      	uxtb	r3, r3
 8004f94:	4a5a      	ldr	r2, [pc, #360]	@ (8005100 <main+0x550>)
 8004f96:	7093      	strb	r3, [r2, #2]
    TxDataVelocityAccel[3] = (uint8_t)(velocityCountsScaled);          // Velocity LSB
 8004f98:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8004f9a:	b2db      	uxtb	r3, r3
 8004f9c:	4a58      	ldr	r2, [pc, #352]	@ (8005100 <main+0x550>)
 8004f9e:	70d3      	strb	r3, [r2, #3]
    TxDataVelocityAccel[4] = (uint8_t)(accelCountsScaled >> 24);       // Use scaled values
 8004fa0:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8004fa2:	161b      	asrs	r3, r3, #24
 8004fa4:	b2db      	uxtb	r3, r3
 8004fa6:	4a56      	ldr	r2, [pc, #344]	@ (8005100 <main+0x550>)
 8004fa8:	7113      	strb	r3, [r2, #4]
    TxDataVelocityAccel[5] = (uint8_t)(accelCountsScaled >> 16);
 8004faa:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8004fac:	141b      	asrs	r3, r3, #16
 8004fae:	b2db      	uxtb	r3, r3
 8004fb0:	4a53      	ldr	r2, [pc, #332]	@ (8005100 <main+0x550>)
 8004fb2:	7153      	strb	r3, [r2, #5]
    TxDataVelocityAccel[6] = (uint8_t)(accelCountsScaled >> 8);
 8004fb4:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8004fb6:	121b      	asrs	r3, r3, #8
 8004fb8:	b2db      	uxtb	r3, r3
 8004fba:	4a51      	ldr	r2, [pc, #324]	@ (8005100 <main+0x550>)
 8004fbc:	7193      	strb	r3, [r2, #6]
    TxDataVelocityAccel[7] = (uint8_t)(accelCountsScaled);             // Acceleration LSB
 8004fbe:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8004fc0:	b2db      	uxtb	r3, r3
 8004fc2:	4a4f      	ldr	r2, [pc, #316]	@ (8005100 <main+0x550>)
 8004fc4:	71d3      	strb	r3, [r2, #7]

    // Add message to CAN Tx FIFO queue
    // Calculate base CAN ID for this device
    uint32_t baseCanId = BASE_ID + device_id;
 8004fc6:	f7ff f939 	bl	800423c <flash_get_device_id>
 8004fca:	0002      	movs	r2, r0
 8004fcc:	4b4d      	ldr	r3, [pc, #308]	@ (8005104 <main+0x554>)
 8004fce:	18d3      	adds	r3, r2, r3
 8004fd0:	63fb      	str	r3, [r7, #60]	@ 0x3c

    // Position message: embed API ID 0 in the CAN arbitration ID (8 bytes - raw counts)
    TxHeaderPosition.Identifier = baseCanId | (POSITION_API_ID << 6);           // API 0: baseCanId | 0x000
 8004fd2:	2300      	movs	r3, #0
 8004fd4:	019a      	lsls	r2, r3, #6
 8004fd6:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8004fd8:	431a      	orrs	r2, r3
 8004fda:	4b4b      	ldr	r3, [pc, #300]	@ (8005108 <main+0x558>)
 8004fdc:	601a      	str	r2, [r3, #0]
    // Combined velocity/acceleration message: embed API ID 1 in the CAN arbitration ID (8 bytes)
    TxHeaderVelocityAccel.Identifier = baseCanId | (VELOCITY_ACCEL_API_ID << 6); // API 1: baseCanId | 0x040
 8004fde:	2301      	movs	r3, #1
 8004fe0:	019a      	lsls	r2, r3, #6
 8004fe2:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8004fe4:	431a      	orrs	r2, r3
 8004fe6:	4b49      	ldr	r3, [pc, #292]	@ (800510c <main+0x55c>)
 8004fe8:	601a      	str	r2, [r3, #0]
    // Boolean status message: embed API ID 2 in the CAN arbitration ID (1 byte)
    TxHeaderBooleanStatus.Identifier = baseCanId | (BOOLEAN_STATUS_API_ID << 6); // API 2: baseCanId | 0x080
 8004fea:	2302      	movs	r3, #2
 8004fec:	019a      	lsls	r2, r3, #6
 8004fee:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8004ff0:	431a      	orrs	r2, r3
 8004ff2:	4b47      	ldr	r3, [pc, #284]	@ (8005110 <main+0x560>)
 8004ff4:	601a      	str	r2, [r3, #0]

    // returns HAL_Error if fifo queue is full or CAN is not initialized correctly
    // HAL_OK otherwise
    positionCanStatus = HAL_FDCAN_AddMessageToTxFifoQ(&hfdcan1, &TxHeaderPosition, TxDataPosition);
 8004ff6:	234f      	movs	r3, #79	@ 0x4f
 8004ff8:	2230      	movs	r2, #48	@ 0x30
 8004ffa:	189b      	adds	r3, r3, r2
 8004ffc:	19dc      	adds	r4, r3, r7
 8004ffe:	4a36      	ldr	r2, [pc, #216]	@ (80050d8 <main+0x528>)
 8005000:	4941      	ldr	r1, [pc, #260]	@ (8005108 <main+0x558>)
 8005002:	4b44      	ldr	r3, [pc, #272]	@ (8005114 <main+0x564>)
 8005004:	0018      	movs	r0, r3
 8005006:	f002 ffdc 	bl	8007fc2 <HAL_FDCAN_AddMessageToTxFifoQ>
 800500a:	0003      	movs	r3, r0
 800500c:	7023      	strb	r3, [r4, #0]
    velocityAccelCanStatus = HAL_FDCAN_AddMessageToTxFifoQ(&hfdcan1, &TxHeaderVelocityAccel, TxDataVelocityAccel);
 800500e:	234e      	movs	r3, #78	@ 0x4e
 8005010:	2230      	movs	r2, #48	@ 0x30
 8005012:	189b      	adds	r3, r3, r2
 8005014:	19dc      	adds	r4, r3, r7
 8005016:	4a3a      	ldr	r2, [pc, #232]	@ (8005100 <main+0x550>)
 8005018:	493c      	ldr	r1, [pc, #240]	@ (800510c <main+0x55c>)
 800501a:	4b3e      	ldr	r3, [pc, #248]	@ (8005114 <main+0x564>)
 800501c:	0018      	movs	r0, r3
 800501e:	f002 ffd0 	bl	8007fc2 <HAL_FDCAN_AddMessageToTxFifoQ>
 8005022:	0003      	movs	r3, r0
 8005024:	7023      	strb	r3, [r4, #0]
    booleanStatusCanStatus = HAL_FDCAN_AddMessageToTxFifoQ(&hfdcan1, &TxHeaderBooleanStatus, TxDataBooleanStatus);
 8005026:	234d      	movs	r3, #77	@ 0x4d
 8005028:	2230      	movs	r2, #48	@ 0x30
 800502a:	189b      	adds	r3, r3, r2
 800502c:	19dc      	adds	r4, r3, r7
 800502e:	4a2b      	ldr	r2, [pc, #172]	@ (80050dc <main+0x52c>)
 8005030:	4937      	ldr	r1, [pc, #220]	@ (8005110 <main+0x560>)
 8005032:	4b38      	ldr	r3, [pc, #224]	@ (8005114 <main+0x564>)
 8005034:	0018      	movs	r0, r3
 8005036:	f002 ffc4 	bl	8007fc2 <HAL_FDCAN_AddMessageToTxFifoQ>
 800503a:	0003      	movs	r3, r0
 800503c:	7023      	strb	r3, [r4, #0]
 800503e:	e08c      	b.n	800515a <main+0x5aa>

    } else {
    // Encoder read failed while ready - handle gracefully
    mt6835_error_count++;
 8005040:	4b35      	ldr	r3, [pc, #212]	@ (8005118 <main+0x568>)
 8005042:	681b      	ldr	r3, [r3, #0]
 8005044:	1c5a      	adds	r2, r3, #1
 8005046:	4b34      	ldr	r3, [pc, #208]	@ (8005118 <main+0x568>)
 8005048:	601a      	str	r2, [r3, #0]
    if (mt6835_error_count > 10) { // Higher threshold
 800504a:	4b33      	ldr	r3, [pc, #204]	@ (8005118 <main+0x568>)
 800504c:	681b      	ldr	r3, [r3, #0]
 800504e:	2b0a      	cmp	r3, #10
 8005050:	dd05      	ble.n	800505e <main+0x4ae>
      encoder_ready = 0; // Mark as not ready
 8005052:	4a1d      	ldr	r2, [pc, #116]	@ (80050c8 <main+0x518>)
 8005054:	2300      	movs	r3, #0
 8005056:	6013      	str	r3, [r2, #0]
      isHardwareFault = 1;
 8005058:	4a21      	ldr	r2, [pc, #132]	@ (80050e0 <main+0x530>)
 800505a:	2301      	movs	r3, #1
 800505c:	6013      	str	r3, [r2, #0]
    }

    // Set error status but don't flood CAN
    positionCanStatus = HAL_ERROR;
 800505e:	234f      	movs	r3, #79	@ 0x4f
 8005060:	2130      	movs	r1, #48	@ 0x30
 8005062:	185b      	adds	r3, r3, r1
 8005064:	19da      	adds	r2, r3, r7
 8005066:	2301      	movs	r3, #1
 8005068:	7013      	strb	r3, [r2, #0]
    velocityAccelCanStatus = HAL_ERROR;
 800506a:	234e      	movs	r3, #78	@ 0x4e
 800506c:	185b      	adds	r3, r3, r1
 800506e:	19da      	adds	r2, r3, r7
 8005070:	2301      	movs	r3, #1
 8005072:	7013      	strb	r3, [r2, #0]
    booleanStatusCanStatus = HAL_ERROR;
 8005074:	234d      	movs	r3, #77	@ 0x4d
 8005076:	185b      	adds	r3, r3, r1
 8005078:	19da      	adds	r2, r3, r7
 800507a:	2301      	movs	r3, #1
 800507c:	7013      	strb	r3, [r2, #0]
 800507e:	e06c      	b.n	800515a <main+0x5aa>
    }
  } else {
    static uint32_t lastInitAttempt = 0;

    // Only try initialization every 100ms to avoid overwhelming the SPI bus
    if ((currentTimeMillisec - lastInitAttempt) >= 100) {
 8005080:	4b26      	ldr	r3, [pc, #152]	@ (800511c <main+0x56c>)
 8005082:	681a      	ldr	r2, [r3, #0]
 8005084:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8005086:	1a9b      	subs	r3, r3, r2
 8005088:	2b63      	cmp	r3, #99	@ 0x63
 800508a:	d956      	bls.n	800513a <main+0x58a>
    if (mt6835_update_counts(&hspi1) == HAL_OK) {
 800508c:	4b11      	ldr	r3, [pc, #68]	@ (80050d4 <main+0x524>)
 800508e:	0018      	movs	r0, r3
 8005090:	f7fe fa16 	bl	80034c0 <mt6835_update_counts>
 8005094:	1e03      	subs	r3, r0, #0
 8005096:	d14d      	bne.n	8005134 <main+0x584>
      // Need multiple consecutive successful reads
      int success_count = 0;
 8005098:	2300      	movs	r3, #0
 800509a:	677b      	str	r3, [r7, #116]	@ 0x74
      for (int i = 0; i < 5; i++) {
 800509c:	2300      	movs	r3, #0
 800509e:	673b      	str	r3, [r7, #112]	@ 0x70
 80050a0:	e00e      	b.n	80050c0 <main+0x510>
      HAL_Delay(2); // Small delay between reads
 80050a2:	2002      	movs	r0, #2
 80050a4:	f001 fec6 	bl	8006e34 <HAL_Delay>
      if (mt6835_update_counts(&hspi1) == HAL_OK) {
 80050a8:	4b0a      	ldr	r3, [pc, #40]	@ (80050d4 <main+0x524>)
 80050aa:	0018      	movs	r0, r3
 80050ac:	f7fe fa08 	bl	80034c0 <mt6835_update_counts>
 80050b0:	1e03      	subs	r3, r0, #0
 80050b2:	d135      	bne.n	8005120 <main+0x570>
        success_count++;
 80050b4:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 80050b6:	3301      	adds	r3, #1
 80050b8:	677b      	str	r3, [r7, #116]	@ 0x74
      for (int i = 0; i < 5; i++) {
 80050ba:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 80050bc:	3301      	adds	r3, #1
 80050be:	673b      	str	r3, [r7, #112]	@ 0x70
 80050c0:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 80050c2:	2b04      	cmp	r3, #4
 80050c4:	dded      	ble.n	80050a2 <main+0x4f2>
 80050c6:	e02c      	b.n	8005122 <main+0x572>
 80050c8:	2000d984 	.word	0x2000d984
 80050cc:	20000004 	.word	0x20000004
 80050d0:	deadbeef 	.word	0xdeadbeef
 80050d4:	2000d4f8 	.word	0x2000d4f8
 80050d8:	2000da44 	.word	0x2000da44
 80050dc:	2000da54 	.word	0x2000da54
 80050e0:	2000d98c 	.word	0x2000d98c
 80050e4:	2000d990 	.word	0x2000d990
 80050e8:	2000d994 	.word	0x2000d994
 80050ec:	2000d998 	.word	0x2000d998
 80050f0:	2000d99c 	.word	0x2000d99c
 80050f4:	2000d9a0 	.word	0x2000d9a0
 80050f8:	2000d9a4 	.word	0x2000d9a4
 80050fc:	2000d9a8 	.word	0x2000d9a8
 8005100:	2000da4c 	.word	0x2000da4c
 8005104:	0a110000 	.word	0x0a110000
 8005108:	2000d9b0 	.word	0x2000d9b0
 800510c:	2000d9d4 	.word	0x2000d9d4
 8005110:	2000d9f8 	.word	0x2000d9f8
 8005114:	2000d440 	.word	0x2000d440
 8005118:	2000d9ac 	.word	0x2000d9ac
 800511c:	2000da98 	.word	0x2000da98
      } else {
        break;
 8005120:	46c0      	nop			@ (mov r8, r8)
      }
      }

      if (success_count >= 5) {
 8005122:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8005124:	2b04      	cmp	r3, #4
 8005126:	dd05      	ble.n	8005134 <main+0x584>
      encoder_ready = 1;
 8005128:	4ac7      	ldr	r2, [pc, #796]	@ (8005448 <main+0x898>)
 800512a:	2301      	movs	r3, #1
 800512c:	6013      	str	r3, [r2, #0]
      mt6835_error_count = 0;
 800512e:	4ac7      	ldr	r2, [pc, #796]	@ (800544c <main+0x89c>)
 8005130:	2300      	movs	r3, #0
 8005132:	6013      	str	r3, [r2, #0]

      // Reset velocity calculation state
      }
    }
    lastInitAttempt = currentTimeMillisec;
 8005134:	4ac6      	ldr	r2, [pc, #792]	@ (8005450 <main+0x8a0>)
 8005136:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8005138:	6013      	str	r3, [r2, #0]
    }

    // Set error status for CAN
    positionCanStatus = HAL_ERROR;
 800513a:	234f      	movs	r3, #79	@ 0x4f
 800513c:	2130      	movs	r1, #48	@ 0x30
 800513e:	185b      	adds	r3, r3, r1
 8005140:	19da      	adds	r2, r3, r7
 8005142:	2301      	movs	r3, #1
 8005144:	7013      	strb	r3, [r2, #0]
    velocityAccelCanStatus = HAL_ERROR;
 8005146:	234e      	movs	r3, #78	@ 0x4e
 8005148:	185b      	adds	r3, r3, r1
 800514a:	19da      	adds	r2, r3, r7
 800514c:	2301      	movs	r3, #1
 800514e:	7013      	strb	r3, [r2, #0]
    booleanStatusCanStatus = HAL_ERROR;
 8005150:	234d      	movs	r3, #77	@ 0x4d
 8005152:	185b      	adds	r3, r3, r1
 8005154:	19da      	adds	r2, r3, r7
 8005156:	2301      	movs	r3, #1
 8005158:	7013      	strb	r3, [r2, #0]
  }

  //------------------------------------------------------------------------------------------------------------------------
  //  Error handling and status updates
  //--------------------------------------------------------------------------------------------------------
	uint32_t baseCanId = BASE_ID + device_id;
 800515a:	f7ff f86f 	bl	800423c <flash_get_device_id>
 800515e:	0002      	movs	r2, r0
 8005160:	4bbc      	ldr	r3, [pc, #752]	@ (8005454 <main+0x8a4>)
 8005162:	18d3      	adds	r3, r2, r3
 8005164:	63bb      	str	r3, [r7, #56]	@ 0x38

  // Only check for clogging if we actually tried to send messages
  if (encoder_ready) {
 8005166:	4bb8      	ldr	r3, [pc, #736]	@ (8005448 <main+0x898>)
 8005168:	681b      	ldr	r3, [r3, #0]
 800516a:	2b00      	cmp	r3, #0
 800516c:	d069      	beq.n	8005242 <main+0x692>
    if (positionCanStatus != HAL_OK || velocityAccelCanStatus != HAL_OK || booleanStatusCanStatus != HAL_OK) {
 800516e:	234f      	movs	r3, #79	@ 0x4f
 8005170:	2230      	movs	r2, #48	@ 0x30
 8005172:	189b      	adds	r3, r3, r2
 8005174:	19db      	adds	r3, r3, r7
 8005176:	781b      	ldrb	r3, [r3, #0]
 8005178:	2b00      	cmp	r3, #0
 800517a:	d10b      	bne.n	8005194 <main+0x5e4>
 800517c:	234e      	movs	r3, #78	@ 0x4e
 800517e:	189b      	adds	r3, r3, r2
 8005180:	19db      	adds	r3, r3, r7
 8005182:	781b      	ldrb	r3, [r3, #0]
 8005184:	2b00      	cmp	r3, #0
 8005186:	d105      	bne.n	8005194 <main+0x5e4>
 8005188:	234d      	movs	r3, #77	@ 0x4d
 800518a:	189b      	adds	r3, r3, r2
 800518c:	19db      	adds	r3, r3, r7
 800518e:	781b      	ldrb	r3, [r3, #0]
 8005190:	2b00      	cmp	r3, #0
 8005192:	d036      	beq.n	8005202 <main+0x652>
        // Position message: embed API ID 0 in the CAN arbitration ID (8 bytes - raw counts)
        TxHeaderPosition.Identifier = baseCanId | (POSITION_API_ID << 6);           // API 0: baseCanId | 0x000
 8005194:	2300      	movs	r3, #0
 8005196:	019a      	lsls	r2, r3, #6
 8005198:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800519a:	431a      	orrs	r2, r3
 800519c:	4bae      	ldr	r3, [pc, #696]	@ (8005458 <main+0x8a8>)
 800519e:	601a      	str	r2, [r3, #0]
        // Combined velocity/acceleration message: embed API ID 1 in the CAN arbitration ID (8 bytes)
        TxHeaderVelocityAccel.Identifier = baseCanId | (VELOCITY_ACCEL_API_ID << 6); // API 1: baseCanId | 0x040
 80051a0:	2301      	movs	r3, #1
 80051a2:	019a      	lsls	r2, r3, #6
 80051a4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80051a6:	431a      	orrs	r2, r3
 80051a8:	4bac      	ldr	r3, [pc, #688]	@ (800545c <main+0x8ac>)
 80051aa:	601a      	str	r2, [r3, #0]
        // Boolean status message: embed API ID 2 in the CAN arbitration ID (1 byte)
        TxHeaderBooleanStatus.Identifier = baseCanId | (BOOLEAN_STATUS_API_ID << 6); // API 2: baseCanId | 0x080
 80051ac:	2302      	movs	r3, #2
 80051ae:	019a      	lsls	r2, r3, #6
 80051b0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80051b2:	431a      	orrs	r2, r3
 80051b4:	4baa      	ldr	r3, [pc, #680]	@ (8005460 <main+0x8b0>)
 80051b6:	601a      	str	r2, [r3, #0]

        // returns HAL_Error if fifo queue is full or CAN is not initialized correctly
        // HAL_OK otherwise
        positionCanStatus = HAL_FDCAN_AddMessageToTxFifoQ(&hfdcan1, &TxHeaderPosition, TxDataPosition);
 80051b8:	234f      	movs	r3, #79	@ 0x4f
 80051ba:	2230      	movs	r2, #48	@ 0x30
 80051bc:	189b      	adds	r3, r3, r2
 80051be:	19dc      	adds	r4, r3, r7
 80051c0:	4aa8      	ldr	r2, [pc, #672]	@ (8005464 <main+0x8b4>)
 80051c2:	49a5      	ldr	r1, [pc, #660]	@ (8005458 <main+0x8a8>)
 80051c4:	4ba8      	ldr	r3, [pc, #672]	@ (8005468 <main+0x8b8>)
 80051c6:	0018      	movs	r0, r3
 80051c8:	f002 fefb 	bl	8007fc2 <HAL_FDCAN_AddMessageToTxFifoQ>
 80051cc:	0003      	movs	r3, r0
 80051ce:	7023      	strb	r3, [r4, #0]
        velocityAccelCanStatus = HAL_FDCAN_AddMessageToTxFifoQ(&hfdcan1, &TxHeaderVelocityAccel, TxDataVelocityAccel);
 80051d0:	234e      	movs	r3, #78	@ 0x4e
 80051d2:	2230      	movs	r2, #48	@ 0x30
 80051d4:	189b      	adds	r3, r3, r2
 80051d6:	19dc      	adds	r4, r3, r7
 80051d8:	4aa4      	ldr	r2, [pc, #656]	@ (800546c <main+0x8bc>)
 80051da:	49a0      	ldr	r1, [pc, #640]	@ (800545c <main+0x8ac>)
 80051dc:	4ba2      	ldr	r3, [pc, #648]	@ (8005468 <main+0x8b8>)
 80051de:	0018      	movs	r0, r3
 80051e0:	f002 feef 	bl	8007fc2 <HAL_FDCAN_AddMessageToTxFifoQ>
 80051e4:	0003      	movs	r3, r0
 80051e6:	7023      	strb	r3, [r4, #0]
        booleanStatusCanStatus = HAL_FDCAN_AddMessageToTxFifoQ(&hfdcan1, &TxHeaderBooleanStatus, TxDataBooleanStatus);
 80051e8:	234d      	movs	r3, #77	@ 0x4d
 80051ea:	2230      	movs	r2, #48	@ 0x30
 80051ec:	189b      	adds	r3, r3, r2
 80051ee:	19dc      	adds	r4, r3, r7
 80051f0:	4a9f      	ldr	r2, [pc, #636]	@ (8005470 <main+0x8c0>)
 80051f2:	499b      	ldr	r1, [pc, #620]	@ (8005460 <main+0x8b0>)
 80051f4:	4b9c      	ldr	r3, [pc, #624]	@ (8005468 <main+0x8b8>)
 80051f6:	0018      	movs	r0, r3
 80051f8:	f002 fee3 	bl	8007fc2 <HAL_FDCAN_AddMessageToTxFifoQ>
 80051fc:	0003      	movs	r3, r0
 80051fe:	7023      	strb	r3, [r4, #0]
 8005200:	e060      	b.n	80052c4 <main+0x714>

      } else {
        // Encoder read failed while ready - handle gracefully
        mt6835_error_count++;
 8005202:	4b92      	ldr	r3, [pc, #584]	@ (800544c <main+0x89c>)
 8005204:	681b      	ldr	r3, [r3, #0]
 8005206:	1c5a      	adds	r2, r3, #1
 8005208:	4b90      	ldr	r3, [pc, #576]	@ (800544c <main+0x89c>)
 800520a:	601a      	str	r2, [r3, #0]
        if (mt6835_error_count > 10) { // Higher threshold
 800520c:	4b8f      	ldr	r3, [pc, #572]	@ (800544c <main+0x89c>)
 800520e:	681b      	ldr	r3, [r3, #0]
 8005210:	2b0a      	cmp	r3, #10
 8005212:	dd05      	ble.n	8005220 <main+0x670>
          encoder_ready = 0; // Mark as not ready
 8005214:	4a8c      	ldr	r2, [pc, #560]	@ (8005448 <main+0x898>)
 8005216:	2300      	movs	r3, #0
 8005218:	6013      	str	r3, [r2, #0]
          isHardwareFault = 1;
 800521a:	4a96      	ldr	r2, [pc, #600]	@ (8005474 <main+0x8c4>)
 800521c:	2301      	movs	r3, #1
 800521e:	6013      	str	r3, [r2, #0]
        }

        // Set error status but don't flood CAN
        positionCanStatus = HAL_ERROR;
 8005220:	234f      	movs	r3, #79	@ 0x4f
 8005222:	2130      	movs	r1, #48	@ 0x30
 8005224:	185b      	adds	r3, r3, r1
 8005226:	19da      	adds	r2, r3, r7
 8005228:	2301      	movs	r3, #1
 800522a:	7013      	strb	r3, [r2, #0]
        velocityAccelCanStatus = HAL_ERROR;
 800522c:	234e      	movs	r3, #78	@ 0x4e
 800522e:	185b      	adds	r3, r3, r1
 8005230:	19da      	adds	r2, r3, r7
 8005232:	2301      	movs	r3, #1
 8005234:	7013      	strb	r3, [r2, #0]
        booleanStatusCanStatus = HAL_ERROR;
 8005236:	234d      	movs	r3, #77	@ 0x4d
 8005238:	185b      	adds	r3, r3, r1
 800523a:	19da      	adds	r2, r3, r7
 800523c:	2301      	movs	r3, #1
 800523e:	7013      	strb	r3, [r2, #0]
 8005240:	e040      	b.n	80052c4 <main+0x714>
      }
    } else {
      static uint32_t lastInitAttempt = 0;

      // Only try initialization every 100ms to avoid overwhelming the SPI bus
      if ((currentTimeMillisec - lastInitAttempt) >= 100) {
 8005242:	4b8d      	ldr	r3, [pc, #564]	@ (8005478 <main+0x8c8>)
 8005244:	681a      	ldr	r2, [r3, #0]
 8005246:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8005248:	1a9b      	subs	r3, r3, r2
 800524a:	2b63      	cmp	r3, #99	@ 0x63
 800524c:	d92a      	bls.n	80052a4 <main+0x6f4>
        if (mt6835_update_counts(&hspi1) == HAL_OK) {
 800524e:	4b8b      	ldr	r3, [pc, #556]	@ (800547c <main+0x8cc>)
 8005250:	0018      	movs	r0, r3
 8005252:	f7fe f935 	bl	80034c0 <mt6835_update_counts>
 8005256:	1e03      	subs	r3, r0, #0
 8005258:	d121      	bne.n	800529e <main+0x6ee>
          // Need multiple consecutive successful reads
          int success_count = 0;
 800525a:	2300      	movs	r3, #0
 800525c:	66fb      	str	r3, [r7, #108]	@ 0x6c
          for (int i = 0; i < 5; i++) {
 800525e:	2300      	movs	r3, #0
 8005260:	66bb      	str	r3, [r7, #104]	@ 0x68
 8005262:	e00e      	b.n	8005282 <main+0x6d2>
            HAL_Delay(2); // Small delay between reads
 8005264:	2002      	movs	r0, #2
 8005266:	f001 fde5 	bl	8006e34 <HAL_Delay>
            if (mt6835_update_counts(&hspi1) == HAL_OK) {
 800526a:	4b84      	ldr	r3, [pc, #528]	@ (800547c <main+0x8cc>)
 800526c:	0018      	movs	r0, r3
 800526e:	f7fe f927 	bl	80034c0 <mt6835_update_counts>
 8005272:	1e03      	subs	r3, r0, #0
 8005274:	d109      	bne.n	800528a <main+0x6da>
              success_count++;
 8005276:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8005278:	3301      	adds	r3, #1
 800527a:	66fb      	str	r3, [r7, #108]	@ 0x6c
          for (int i = 0; i < 5; i++) {
 800527c:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 800527e:	3301      	adds	r3, #1
 8005280:	66bb      	str	r3, [r7, #104]	@ 0x68
 8005282:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8005284:	2b04      	cmp	r3, #4
 8005286:	dded      	ble.n	8005264 <main+0x6b4>
 8005288:	e000      	b.n	800528c <main+0x6dc>
            } else {
              break;
 800528a:	46c0      	nop			@ (mov r8, r8)
            }
          }

          if (success_count >= 5) {
 800528c:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800528e:	2b04      	cmp	r3, #4
 8005290:	dd05      	ble.n	800529e <main+0x6ee>
            encoder_ready = 1;
 8005292:	4a6d      	ldr	r2, [pc, #436]	@ (8005448 <main+0x898>)
 8005294:	2301      	movs	r3, #1
 8005296:	6013      	str	r3, [r2, #0]
            mt6835_error_count = 0;
 8005298:	4a6c      	ldr	r2, [pc, #432]	@ (800544c <main+0x89c>)
 800529a:	2300      	movs	r3, #0
 800529c:	6013      	str	r3, [r2, #0]

            // Reset velocity calculation state
          }
        }
        lastInitAttempt = currentTimeMillisec;
 800529e:	4a76      	ldr	r2, [pc, #472]	@ (8005478 <main+0x8c8>)
 80052a0:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 80052a2:	6013      	str	r3, [r2, #0]
      }

      // Set error status for CAN
      positionCanStatus = HAL_ERROR;
 80052a4:	234f      	movs	r3, #79	@ 0x4f
 80052a6:	2130      	movs	r1, #48	@ 0x30
 80052a8:	185b      	adds	r3, r3, r1
 80052aa:	19da      	adds	r2, r3, r7
 80052ac:	2301      	movs	r3, #1
 80052ae:	7013      	strb	r3, [r2, #0]
      velocityAccelCanStatus = HAL_ERROR;
 80052b0:	234e      	movs	r3, #78	@ 0x4e
 80052b2:	185b      	adds	r3, r3, r1
 80052b4:	19da      	adds	r2, r3, r7
 80052b6:	2301      	movs	r3, #1
 80052b8:	7013      	strb	r3, [r2, #0]
      booleanStatusCanStatus = HAL_ERROR;
 80052ba:	234d      	movs	r3, #77	@ 0x4d
 80052bc:	185b      	adds	r3, r3, r1
 80052be:	19da      	adds	r2, r3, r7
 80052c0:	2301      	movs	r3, #1
 80052c2:	7013      	strb	r3, [r2, #0]

    //------------------------------------------------------------------------------------------------------------------------
    //  Error handling and status updates
    //--------------------------------------------------------------------------------------------------------
    // Only check for clogging if we actually tried to send messages
    if (encoder_ready) {
 80052c4:	4b60      	ldr	r3, [pc, #384]	@ (8005448 <main+0x898>)
 80052c6:	681b      	ldr	r3, [r3, #0]
 80052c8:	2b00      	cmp	r3, #0
 80052ca:	d028      	beq.n	800531e <main+0x76e>
      if (positionCanStatus != HAL_OK || velocityAccelCanStatus != HAL_OK || booleanStatusCanStatus != HAL_OK) {
 80052cc:	234f      	movs	r3, #79	@ 0x4f
 80052ce:	2230      	movs	r2, #48	@ 0x30
 80052d0:	189b      	adds	r3, r3, r2
 80052d2:	19db      	adds	r3, r3, r7
 80052d4:	781b      	ldrb	r3, [r3, #0]
 80052d6:	2b00      	cmp	r3, #0
 80052d8:	d10b      	bne.n	80052f2 <main+0x742>
 80052da:	234e      	movs	r3, #78	@ 0x4e
 80052dc:	189b      	adds	r3, r3, r2
 80052de:	19db      	adds	r3, r3, r7
 80052e0:	781b      	ldrb	r3, [r3, #0]
 80052e2:	2b00      	cmp	r3, #0
 80052e4:	d105      	bne.n	80052f2 <main+0x742>
 80052e6:	234d      	movs	r3, #77	@ 0x4d
 80052e8:	189b      	adds	r3, r3, r2
 80052ea:	19db      	adds	r3, r3, r7
 80052ec:	781b      	ldrb	r3, [r3, #0]
 80052ee:	2b00      	cmp	r3, #0
 80052f0:	d00f      	beq.n	8005312 <main+0x762>
        if ((currentTimeMillisec - lastHeartbeatTime) > HEARTBEAT_TIMEOUT) {
 80052f2:	4b63      	ldr	r3, [pc, #396]	@ (8005480 <main+0x8d0>)
 80052f4:	681a      	ldr	r2, [r3, #0]
 80052f6:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 80052f8:	1a9a      	subs	r2, r3, r2
 80052fa:	23fa      	movs	r3, #250	@ 0xfa
 80052fc:	009b      	lsls	r3, r3, #2
 80052fe:	429a      	cmp	r2, r3
 8005300:	d903      	bls.n	800530a <main+0x75a>
          isCANInvalid = 1;
 8005302:	4a60      	ldr	r2, [pc, #384]	@ (8005484 <main+0x8d4>)
 8005304:	2301      	movs	r3, #1
 8005306:	6013      	str	r3, [r2, #0]
        if ((currentTimeMillisec - lastHeartbeatTime) > HEARTBEAT_TIMEOUT) {
 8005308:	e009      	b.n	800531e <main+0x76e>
        } else {
          isCANClogged = 1;
 800530a:	4a5f      	ldr	r2, [pc, #380]	@ (8005488 <main+0x8d8>)
 800530c:	2301      	movs	r3, #1
 800530e:	6013      	str	r3, [r2, #0]
        if ((currentTimeMillisec - lastHeartbeatTime) > HEARTBEAT_TIMEOUT) {
 8005310:	e005      	b.n	800531e <main+0x76e>
        }
      } else {
        isCANInvalid = 0;
 8005312:	4a5c      	ldr	r2, [pc, #368]	@ (8005484 <main+0x8d4>)
 8005314:	2300      	movs	r3, #0
 8005316:	6013      	str	r3, [r2, #0]
        isCANClogged = 0;
 8005318:	4a5b      	ldr	r2, [pc, #364]	@ (8005488 <main+0x8d8>)
 800531a:	2300      	movs	r3, #0
 800531c:	6013      	str	r3, [r2, #0]
      }
    }

    if(get_weak_magnetic_field_warning() == 1) {
 800531e:	f7fe f9b1 	bl	8003684 <get_weak_magnetic_field_warning>
 8005322:	0003      	movs	r3, r0
 8005324:	2b01      	cmp	r3, #1
 8005326:	d103      	bne.n	8005330 <main+0x780>
      isMagnetWeakSignal = 1;  // Magnet is not in ideal range
 8005328:	4a58      	ldr	r2, [pc, #352]	@ (800548c <main+0x8dc>)
 800532a:	2301      	movs	r3, #1
 800532c:	6013      	str	r3, [r2, #0]
 800532e:	e002      	b.n	8005336 <main+0x786>
    } else {
      isMagnetWeakSignal = 0;  // Magnet is in ideal range
 8005330:	4a56      	ldr	r2, [pc, #344]	@ (800548c <main+0x8dc>)
 8005332:	2300      	movs	r3, #0
 8005334:	6013      	str	r3, [r2, #0]
    }

    if(get_under_voltage_warning() == 1) {
 8005336:	f7fe f9af 	bl	8003698 <get_under_voltage_warning>
 800533a:	0003      	movs	r3, r0
 800533c:	2b01      	cmp	r3, #1
 800533e:	d103      	bne.n	8005348 <main+0x798>
      isUnderVolted = 1;  // System is under-volted
 8005340:	4a53      	ldr	r2, [pc, #332]	@ (8005490 <main+0x8e0>)
 8005342:	2301      	movs	r3, #1
 8005344:	6013      	str	r3, [r2, #0]
 8005346:	e002      	b.n	800534e <main+0x79e>
    } else {
      isUnderVolted = 0;  // System is not under-volted
 8005348:	4a51      	ldr	r2, [pc, #324]	@ (8005490 <main+0x8e0>)
 800534a:	2300      	movs	r3, #0
 800534c:	6013      	str	r3, [r2, #0]
    }

    if(get_rotation_overspeed_warning() == 1) {
 800534e:	f7fe f98f 	bl	8003670 <get_rotation_overspeed_warning>
 8005352:	0003      	movs	r3, r0
 8005354:	2b01      	cmp	r3, #1
 8005356:	d103      	bne.n	8005360 <main+0x7b0>
      isRotationOverspeed = 1;  // Rotation is overspeed
 8005358:	4a4e      	ldr	r2, [pc, #312]	@ (8005494 <main+0x8e4>)
 800535a:	2301      	movs	r3, #1
 800535c:	6013      	str	r3, [r2, #0]
 800535e:	e002      	b.n	8005366 <main+0x7b6>
    } else {
      isRotationOverspeed = 0;  // Rotation is not overspeed
 8005360:	4a4c      	ldr	r2, [pc, #304]	@ (8005494 <main+0x8e4>)
 8005362:	2300      	movs	r3, #0
 8005364:	6013      	str	r3, [r2, #0]
    }

    if (mt6835_update_counts(&hspi1) != HAL_OK) {
 8005366:	4b45      	ldr	r3, [pc, #276]	@ (800547c <main+0x8cc>)
 8005368:	0018      	movs	r0, r3
 800536a:	f7fe f8a9 	bl	80034c0 <mt6835_update_counts>
 800536e:	1e03      	subs	r3, r0, #0
 8005370:	d00c      	beq.n	800538c <main+0x7dc>
      mt6835_error_count++;
 8005372:	4b36      	ldr	r3, [pc, #216]	@ (800544c <main+0x89c>)
 8005374:	681b      	ldr	r3, [r3, #0]
 8005376:	1c5a      	adds	r2, r3, #1
 8005378:	4b34      	ldr	r3, [pc, #208]	@ (800544c <main+0x89c>)
 800537a:	601a      	str	r2, [r3, #0]
      if (mt6835_error_count > 5) { // threshold for hardware fault
 800537c:	4b33      	ldr	r3, [pc, #204]	@ (800544c <main+0x89c>)
 800537e:	681b      	ldr	r3, [r3, #0]
 8005380:	2b05      	cmp	r3, #5
 8005382:	dd09      	ble.n	8005398 <main+0x7e8>
        isHardwareFault = 1;
 8005384:	4a3b      	ldr	r2, [pc, #236]	@ (8005474 <main+0x8c4>)
 8005386:	2301      	movs	r3, #1
 8005388:	6013      	str	r3, [r2, #0]
 800538a:	e005      	b.n	8005398 <main+0x7e8>
      }
    } else {
      mt6835_error_count = 0;
 800538c:	4a2f      	ldr	r2, [pc, #188]	@ (800544c <main+0x89c>)
 800538e:	2300      	movs	r3, #0
 8005390:	6013      	str	r3, [r2, #0]
      isHardwareFault = 0;
 8005392:	4a38      	ldr	r2, [pc, #224]	@ (8005474 <main+0x8c4>)
 8005394:	2300      	movs	r3, #0
 8005396:	6013      	str	r3, [r2, #0]
    }

    // LED status logic for all boolean statuses
    if (isHardwareFault == 1) {
 8005398:	4b36      	ldr	r3, [pc, #216]	@ (8005474 <main+0x8c4>)
 800539a:	681b      	ldr	r3, [r3, #0]
 800539c:	2b01      	cmp	r3, #1
 800539e:	d106      	bne.n	80053ae <main+0x7fe>
      handle_error_blink("SOS", 0.0f); // Red - Hardware fault (emergency) - SOS
 80053a0:	2200      	movs	r2, #0
 80053a2:	4b3d      	ldr	r3, [pc, #244]	@ (8005498 <main+0x8e8>)
 80053a4:	1c11      	adds	r1, r2, #0
 80053a6:	0018      	movs	r0, r3
 80053a8:	f7fe f9c6 	bl	8003738 <handle_error_blink>
 80053ac:	e0a4      	b.n	80054f8 <main+0x948>
    } else if (isLoopOverrun == 1) {
 80053ae:	4b3b      	ldr	r3, [pc, #236]	@ (800549c <main+0x8ec>)
 80053b0:	681b      	ldr	r3, [r3, #0]
 80053b2:	2b01      	cmp	r3, #1
 80053b4:	d106      	bne.n	80053c4 <main+0x814>
      handle_error_blink("M", 0.16f); // Yellow - Overrun - M (dash-dash)
 80053b6:	4a3a      	ldr	r2, [pc, #232]	@ (80054a0 <main+0x8f0>)
 80053b8:	4b3a      	ldr	r3, [pc, #232]	@ (80054a4 <main+0x8f4>)
 80053ba:	1c11      	adds	r1, r2, #0
 80053bc:	0018      	movs	r0, r3
 80053be:	f7fe f9bb 	bl	8003738 <handle_error_blink>
 80053c2:	e099      	b.n	80054f8 <main+0x948>
    } else if (isUnderVolted == 1) {
 80053c4:	4b32      	ldr	r3, [pc, #200]	@ (8005490 <main+0x8e0>)
 80053c6:	681b      	ldr	r3, [r3, #0]
 80053c8:	2b01      	cmp	r3, #1
 80053ca:	d106      	bne.n	80053da <main+0x82a>
      handle_error_blink("I", 0.16f); // Yellow - Under voltage - I (dot-dot)
 80053cc:	4a34      	ldr	r2, [pc, #208]	@ (80054a0 <main+0x8f0>)
 80053ce:	4b36      	ldr	r3, [pc, #216]	@ (80054a8 <main+0x8f8>)
 80053d0:	1c11      	adds	r1, r2, #0
 80053d2:	0018      	movs	r0, r3
 80053d4:	f7fe f9b0 	bl	8003738 <handle_error_blink>
 80053d8:	e08e      	b.n	80054f8 <main+0x948>
    } else if (isRotationOverspeed == 1) {
 80053da:	4b2e      	ldr	r3, [pc, #184]	@ (8005494 <main+0x8e4>)
 80053dc:	681b      	ldr	r3, [r3, #0]
 80053de:	2b01      	cmp	r3, #1
 80053e0:	d106      	bne.n	80053f0 <main+0x840>
      handle_error_blink("S", 0.16f); // Yellow - Rotation Overspeed - S (dot-dot-dot)
 80053e2:	4a2f      	ldr	r2, [pc, #188]	@ (80054a0 <main+0x8f0>)
 80053e4:	4b31      	ldr	r3, [pc, #196]	@ (80054ac <main+0x8fc>)
 80053e6:	1c11      	adds	r1, r2, #0
 80053e8:	0018      	movs	r0, r3
 80053ea:	f7fe f9a5 	bl	8003738 <handle_error_blink>
 80053ee:	e083      	b.n	80054f8 <main+0x948>
    } else if (isCANInvalid == 1) {
 80053f0:	4b24      	ldr	r3, [pc, #144]	@ (8005484 <main+0x8d4>)
 80053f2:	681b      	ldr	r3, [r3, #0]
 80053f4:	2b01      	cmp	r3, #1
 80053f6:	d106      	bne.n	8005406 <main+0x856>
      handle_error_blink("H", 0.83f); // Purple - CAN Invalid - H (dot-dot-dot-dot)
 80053f8:	4a2d      	ldr	r2, [pc, #180]	@ (80054b0 <main+0x900>)
 80053fa:	4b2e      	ldr	r3, [pc, #184]	@ (80054b4 <main+0x904>)
 80053fc:	1c11      	adds	r1, r2, #0
 80053fe:	0018      	movs	r0, r3
 8005400:	f7fe f99a 	bl	8003738 <handle_error_blink>
 8005404:	e078      	b.n	80054f8 <main+0x948>
    } else if (isCANClogged == 1) {
 8005406:	4b20      	ldr	r3, [pc, #128]	@ (8005488 <main+0x8d8>)
 8005408:	681b      	ldr	r3, [r3, #0]
 800540a:	2b01      	cmp	r3, #1
 800540c:	d106      	bne.n	800541c <main+0x86c>
      handle_error_blink("5", 0.83f); // Purple - CAN Clogged - 5 (dot-dot-dot-dot-dot)
 800540e:	4a28      	ldr	r2, [pc, #160]	@ (80054b0 <main+0x900>)
 8005410:	4b29      	ldr	r3, [pc, #164]	@ (80054b8 <main+0x908>)
 8005412:	1c11      	adds	r1, r2, #0
 8005414:	0018      	movs	r0, r3
 8005416:	f7fe f98f 	bl	8003738 <handle_error_blink>
 800541a:	e06d      	b.n	80054f8 <main+0x948>
    } else if (isResetDuringEnable == 1) {
 800541c:	4b27      	ldr	r3, [pc, #156]	@ (80054bc <main+0x90c>)
 800541e:	681b      	ldr	r3, [r3, #0]
 8005420:	2b01      	cmp	r3, #1
 8005422:	d106      	bne.n	8005432 <main+0x882>
      handle_error_blink("O", 0.01f); // Orange - Reset during enable - O (dash-dash-dash)
 8005424:	4a26      	ldr	r2, [pc, #152]	@ (80054c0 <main+0x910>)
 8005426:	4b27      	ldr	r3, [pc, #156]	@ (80054c4 <main+0x914>)
 8005428:	1c11      	adds	r1, r2, #0
 800542a:	0018      	movs	r0, r3
 800542c:	f7fe f984 	bl	8003738 <handle_error_blink>
 8005430:	e062      	b.n	80054f8 <main+0x948>
    } else if (isMagnetWeakSignal == 1) {
 8005432:	4b16      	ldr	r3, [pc, #88]	@ (800548c <main+0x8dc>)
 8005434:	681b      	ldr	r3, [r3, #0]
 8005436:	2b01      	cmp	r3, #1
 8005438:	d148      	bne.n	80054cc <main+0x91c>
      handle_error_blink("0", 0.01f); // Orange - Magnet Weak Signal - 0 (dash-dash-dash-dash-dash)
 800543a:	4a21      	ldr	r2, [pc, #132]	@ (80054c0 <main+0x910>)
 800543c:	4b22      	ldr	r3, [pc, #136]	@ (80054c8 <main+0x918>)
 800543e:	1c11      	adds	r1, r2, #0
 8005440:	0018      	movs	r0, r3
 8005442:	f7fe f979 	bl	8003738 <handle_error_blink>
 8005446:	e057      	b.n	80054f8 <main+0x948>
 8005448:	2000d984 	.word	0x2000d984
 800544c:	2000d9ac 	.word	0x2000d9ac
 8005450:	2000da98 	.word	0x2000da98
 8005454:	0a110000 	.word	0x0a110000
 8005458:	2000d9b0 	.word	0x2000d9b0
 800545c:	2000d9d4 	.word	0x2000d9d4
 8005460:	2000d9f8 	.word	0x2000d9f8
 8005464:	2000da44 	.word	0x2000da44
 8005468:	2000d440 	.word	0x2000d440
 800546c:	2000da4c 	.word	0x2000da4c
 8005470:	2000da54 	.word	0x2000da54
 8005474:	2000d98c 	.word	0x2000d98c
 8005478:	2000da9c 	.word	0x2000da9c
 800547c:	2000d4f8 	.word	0x2000d4f8
 8005480:	2000d988 	.word	0x2000d988
 8005484:	2000d994 	.word	0x2000d994
 8005488:	2000d9a4 	.word	0x2000d9a4
 800548c:	2000d99c 	.word	0x2000d99c
 8005490:	2000d9a8 	.word	0x2000d9a8
 8005494:	2000d9a0 	.word	0x2000d9a0
 8005498:	0800c120 	.word	0x0800c120
 800549c:	2000d990 	.word	0x2000d990
 80054a0:	3e23d70a 	.word	0x3e23d70a
 80054a4:	0800c124 	.word	0x0800c124
 80054a8:	0800c128 	.word	0x0800c128
 80054ac:	0800c12c 	.word	0x0800c12c
 80054b0:	3f547ae1 	.word	0x3f547ae1
 80054b4:	0800c130 	.word	0x0800c130
 80054b8:	0800c134 	.word	0x0800c134
 80054bc:	2000d998 	.word	0x2000d998
 80054c0:	3c23d70a 	.word	0x3c23d70a
 80054c4:	0800c138 	.word	0x0800c138
 80054c8:	0800c13c 	.word	0x0800c13c
    } else {
      // Normal operation: position-based hue
      set_led_hue((float)singleTurnCounts / CPR, 1.0);
 80054cc:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
 80054ce:	f7fc f805 	bl	80014dc <__aeabi_ui2f>
 80054d2:	1c04      	adds	r4, r0, #0
 80054d4:	2380      	movs	r3, #128	@ 0x80
 80054d6:	039b      	lsls	r3, r3, #14
 80054d8:	0018      	movs	r0, r3
 80054da:	f7fb ffaf 	bl	800143c <__aeabi_i2f>
 80054de:	1c03      	adds	r3, r0, #0
 80054e0:	1c19      	adds	r1, r3, #0
 80054e2:	1c20      	adds	r0, r4, #0
 80054e4:	f7fb f9fe 	bl	80008e4 <__aeabi_fdiv>
 80054e8:	1c03      	adds	r3, r0, #0
 80054ea:	1c1a      	adds	r2, r3, #0
 80054ec:	23fe      	movs	r3, #254	@ 0xfe
 80054ee:	059b      	lsls	r3, r3, #22
 80054f0:	1c19      	adds	r1, r3, #0
 80054f2:	1c10      	adds	r0, r2, #0
 80054f4:	f000 ff68 	bl	80063c8 <set_led_hue>
    }

    // currentTime is time at START of the loop
    uint32_t loopTime = HAL_GetTick() - currentTimeMillisec;
 80054f8:	f001 fc92 	bl	8006e20 <HAL_GetTick>
 80054fc:	0002      	movs	r2, r0
 80054fe:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8005500:	1ad3      	subs	r3, r2, r3
 8005502:	637b      	str	r3, [r7, #52]	@ 0x34
    if (loopTime > TARGET_LOOP_TIME) {
 8005504:	230a      	movs	r3, #10
 8005506:	001a      	movs	r2, r3
 8005508:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800550a:	4293      	cmp	r3, r2
 800550c:	d903      	bls.n	8005516 <main+0x966>
      isLoopOverrun = 1;  // Set loop overrun status
 800550e:	4a04      	ldr	r2, [pc, #16]	@ (8005520 <main+0x970>)
 8005510:	2301      	movs	r3, #1
 8005512:	6013      	str	r3, [r2, #0]
 8005514:	e435      	b.n	8004d82 <main+0x1d2>
    } else {
      isLoopOverrun = 0;  // Clear loop overrun status
 8005516:	4a02      	ldr	r2, [pc, #8]	@ (8005520 <main+0x970>)
 8005518:	2300      	movs	r3, #0
 800551a:	6013      	str	r3, [r2, #0]
  while (1) {
 800551c:	e431      	b.n	8004d82 <main+0x1d2>
 800551e:	46c0      	nop			@ (mov r8, r8)
 8005520:	2000d990 	.word	0x2000d990

08005524 <SystemClock_Config>:

/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void) {
 8005524:	b590      	push	{r4, r7, lr}
 8005526:	b095      	sub	sp, #84	@ 0x54
 8005528:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800552a:	2414      	movs	r4, #20
 800552c:	193b      	adds	r3, r7, r4
 800552e:	0018      	movs	r0, r3
 8005530:	233c      	movs	r3, #60	@ 0x3c
 8005532:	001a      	movs	r2, r3
 8005534:	2100      	movs	r1, #0
 8005536:	f006 fd95 	bl	800c064 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800553a:	1d3b      	adds	r3, r7, #4
 800553c:	0018      	movs	r0, r3
 800553e:	2310      	movs	r3, #16
 8005540:	001a      	movs	r2, r3
 8005542:	2100      	movs	r1, #0
 8005544:	f006 fd8e 	bl	800c064 <memset>

  /** Configure the main internal regulator output voltage
  */
  HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1);
 8005548:	2380      	movs	r3, #128	@ 0x80
 800554a:	009b      	lsls	r3, r3, #2
 800554c:	0018      	movs	r0, r3
 800554e:	f003 ffad 	bl	80094ac <HAL_PWREx_ControlVoltageScaling>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE|RCC_OSCILLATORTYPE_HSI48;
 8005552:	193b      	adds	r3, r7, r4
 8005554:	2221      	movs	r2, #33	@ 0x21
 8005556:	601a      	str	r2, [r3, #0]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8005558:	193b      	adds	r3, r7, r4
 800555a:	2280      	movs	r2, #128	@ 0x80
 800555c:	0252      	lsls	r2, r2, #9
 800555e:	605a      	str	r2, [r3, #4]
  RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 8005560:	193b      	adds	r3, r7, r4
 8005562:	2280      	movs	r2, #128	@ 0x80
 8005564:	03d2      	lsls	r2, r2, #15
 8005566:	61da      	str	r2, [r3, #28]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8005568:	0021      	movs	r1, r4
 800556a:	187b      	adds	r3, r7, r1
 800556c:	2202      	movs	r2, #2
 800556e:	621a      	str	r2, [r3, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8005570:	187b      	adds	r3, r7, r1
 8005572:	2203      	movs	r2, #3
 8005574:	625a      	str	r2, [r3, #36]	@ 0x24
  RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
 8005576:	187b      	adds	r3, r7, r1
 8005578:	2200      	movs	r2, #0
 800557a:	629a      	str	r2, [r3, #40]	@ 0x28
  RCC_OscInitStruct.PLL.PLLN = 8;
 800557c:	187b      	adds	r3, r7, r1
 800557e:	2208      	movs	r2, #8
 8005580:	62da      	str	r2, [r3, #44]	@ 0x2c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8005582:	187b      	adds	r3, r7, r1
 8005584:	2280      	movs	r2, #128	@ 0x80
 8005586:	0292      	lsls	r2, r2, #10
 8005588:	631a      	str	r2, [r3, #48]	@ 0x30
  RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 800558a:	187b      	adds	r3, r7, r1
 800558c:	2280      	movs	r2, #128	@ 0x80
 800558e:	0492      	lsls	r2, r2, #18
 8005590:	635a      	str	r2, [r3, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 8005592:	187b      	adds	r3, r7, r1
 8005594:	2280      	movs	r2, #128	@ 0x80
 8005596:	0592      	lsls	r2, r2, #22
 8005598:	639a      	str	r2, [r3, #56]	@ 0x38
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 800559a:	187b      	adds	r3, r7, r1
 800559c:	0018      	movs	r0, r3
 800559e:	f003 ffc5 	bl	800952c <HAL_RCC_OscConfig>
 80055a2:	1e03      	subs	r3, r0, #0
 80055a4:	d001      	beq.n	80055aa <SystemClock_Config+0x86>
    Error_Handler();
 80055a6:	f000 fc2f 	bl	8005e08 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80055aa:	1d3b      	adds	r3, r7, #4
 80055ac:	2207      	movs	r2, #7
 80055ae:	601a      	str	r2, [r3, #0]
                              |RCC_CLOCKTYPE_PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80055b0:	1d3b      	adds	r3, r7, #4
 80055b2:	2202      	movs	r2, #2
 80055b4:	605a      	str	r2, [r3, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80055b6:	1d3b      	adds	r3, r7, #4
 80055b8:	2200      	movs	r2, #0
 80055ba:	609a      	str	r2, [r3, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80055bc:	1d3b      	adds	r3, r7, #4
 80055be:	2200      	movs	r2, #0
 80055c0:	60da      	str	r2, [r3, #12]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK) {
 80055c2:	1d3b      	adds	r3, r7, #4
 80055c4:	2102      	movs	r1, #2
 80055c6:	0018      	movs	r0, r3
 80055c8:	f004 fb10 	bl	8009bec <HAL_RCC_ClockConfig>
 80055cc:	1e03      	subs	r3, r0, #0
 80055ce:	d001      	beq.n	80055d4 <SystemClock_Config+0xb0>
    Error_Handler();
 80055d0:	f000 fc1a 	bl	8005e08 <Error_Handler>
  }
}
 80055d4:	46c0      	nop			@ (mov r8, r8)
 80055d6:	46bd      	mov	sp, r7
 80055d8:	b015      	add	sp, #84	@ 0x54
 80055da:	bd90      	pop	{r4, r7, pc}

080055dc <MX_ADC1_Init>:
/**
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void) {
 80055dc:	b580      	push	{r7, lr}
 80055de:	b084      	sub	sp, #16
 80055e0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 80055e2:	1d3b      	adds	r3, r7, #4
 80055e4:	0018      	movs	r0, r3
 80055e6:	230c      	movs	r3, #12
 80055e8:	001a      	movs	r2, r3
 80055ea:	2100      	movs	r1, #0
 80055ec:	f006 fd3a 	bl	800c064 <memset>

  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 80055f0:	4b2b      	ldr	r3, [pc, #172]	@ (80056a0 <MX_ADC1_Init+0xc4>)
 80055f2:	4a2c      	ldr	r2, [pc, #176]	@ (80056a4 <MX_ADC1_Init+0xc8>)
 80055f4:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 80055f6:	4b2a      	ldr	r3, [pc, #168]	@ (80056a0 <MX_ADC1_Init+0xc4>)
 80055f8:	2280      	movs	r2, #128	@ 0x80
 80055fa:	05d2      	lsls	r2, r2, #23
 80055fc:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 80055fe:	4b28      	ldr	r3, [pc, #160]	@ (80056a0 <MX_ADC1_Init+0xc4>)
 8005600:	2200      	movs	r2, #0
 8005602:	609a      	str	r2, [r3, #8]
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8005604:	4b26      	ldr	r3, [pc, #152]	@ (80056a0 <MX_ADC1_Init+0xc4>)
 8005606:	2200      	movs	r2, #0
 8005608:	60da      	str	r2, [r3, #12]
  hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 800560a:	4b25      	ldr	r3, [pc, #148]	@ (80056a0 <MX_ADC1_Init+0xc4>)
 800560c:	2200      	movs	r2, #0
 800560e:	611a      	str	r2, [r3, #16]
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8005610:	4b23      	ldr	r3, [pc, #140]	@ (80056a0 <MX_ADC1_Init+0xc4>)
 8005612:	2204      	movs	r2, #4
 8005614:	615a      	str	r2, [r3, #20]
  hadc1.Init.LowPowerAutoWait = DISABLE;
 8005616:	4b22      	ldr	r3, [pc, #136]	@ (80056a0 <MX_ADC1_Init+0xc4>)
 8005618:	2200      	movs	r2, #0
 800561a:	761a      	strb	r2, [r3, #24]
  hadc1.Init.LowPowerAutoPowerOff = DISABLE;
 800561c:	4b20      	ldr	r3, [pc, #128]	@ (80056a0 <MX_ADC1_Init+0xc4>)
 800561e:	2200      	movs	r2, #0
 8005620:	765a      	strb	r2, [r3, #25]
  hadc1.Init.ContinuousConvMode = ENABLE;
 8005622:	4b1f      	ldr	r3, [pc, #124]	@ (80056a0 <MX_ADC1_Init+0xc4>)
 8005624:	2201      	movs	r2, #1
 8005626:	769a      	strb	r2, [r3, #26]
  hadc1.Init.NbrOfConversion = 1;
 8005628:	4b1d      	ldr	r3, [pc, #116]	@ (80056a0 <MX_ADC1_Init+0xc4>)
 800562a:	2201      	movs	r2, #1
 800562c:	61da      	str	r2, [r3, #28]
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 800562e:	4b1c      	ldr	r3, [pc, #112]	@ (80056a0 <MX_ADC1_Init+0xc4>)
 8005630:	2200      	movs	r2, #0
 8005632:	625a      	str	r2, [r3, #36]	@ 0x24
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8005634:	4b1a      	ldr	r3, [pc, #104]	@ (80056a0 <MX_ADC1_Init+0xc4>)
 8005636:	2200      	movs	r2, #0
 8005638:	629a      	str	r2, [r3, #40]	@ 0x28
  hadc1.Init.DMAContinuousRequests = DISABLE;
 800563a:	4b19      	ldr	r3, [pc, #100]	@ (80056a0 <MX_ADC1_Init+0xc4>)
 800563c:	222c      	movs	r2, #44	@ 0x2c
 800563e:	2100      	movs	r1, #0
 8005640:	5499      	strb	r1, [r3, r2]
  hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 8005642:	4b17      	ldr	r3, [pc, #92]	@ (80056a0 <MX_ADC1_Init+0xc4>)
 8005644:	2200      	movs	r2, #0
 8005646:	631a      	str	r2, [r3, #48]	@ 0x30
  hadc1.Init.SamplingTimeCommon1 = ADC_SAMPLETIME_1CYCLE_5;
 8005648:	4b15      	ldr	r3, [pc, #84]	@ (80056a0 <MX_ADC1_Init+0xc4>)
 800564a:	2200      	movs	r2, #0
 800564c:	635a      	str	r2, [r3, #52]	@ 0x34
  hadc1.Init.SamplingTimeCommon2 = ADC_SAMPLETIME_1CYCLE_5;
 800564e:	4b14      	ldr	r3, [pc, #80]	@ (80056a0 <MX_ADC1_Init+0xc4>)
 8005650:	2200      	movs	r2, #0
 8005652:	639a      	str	r2, [r3, #56]	@ 0x38
  hadc1.Init.OversamplingMode = DISABLE;
 8005654:	4b12      	ldr	r3, [pc, #72]	@ (80056a0 <MX_ADC1_Init+0xc4>)
 8005656:	223c      	movs	r2, #60	@ 0x3c
 8005658:	2100      	movs	r1, #0
 800565a:	5499      	strb	r1, [r3, r2]
  hadc1.Init.TriggerFrequencyMode = ADC_TRIGGER_FREQ_HIGH;
 800565c:	4b10      	ldr	r3, [pc, #64]	@ (80056a0 <MX_ADC1_Init+0xc4>)
 800565e:	2200      	movs	r2, #0
 8005660:	64da      	str	r2, [r3, #76]	@ 0x4c
  if (HAL_ADC_Init(&hadc1) != HAL_OK) {
 8005662:	4b0f      	ldr	r3, [pc, #60]	@ (80056a0 <MX_ADC1_Init+0xc4>)
 8005664:	0018      	movs	r0, r3
 8005666:	f001 fd61 	bl	800712c <HAL_ADC_Init>
 800566a:	1e03      	subs	r3, r0, #0
 800566c:	d001      	beq.n	8005672 <MX_ADC1_Init+0x96>
    Error_Handler();
 800566e:	f000 fbcb 	bl	8005e08 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_0;
 8005672:	1d3b      	adds	r3, r7, #4
 8005674:	2201      	movs	r2, #1
 8005676:	601a      	str	r2, [r3, #0]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 8005678:	1d3b      	adds	r3, r7, #4
 800567a:	2200      	movs	r2, #0
 800567c:	605a      	str	r2, [r3, #4]
  sConfig.SamplingTime = ADC_SAMPLINGTIME_COMMON_1;
 800567e:	1d3b      	adds	r3, r7, #4
 8005680:	2200      	movs	r2, #0
 8005682:	609a      	str	r2, [r3, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK) {
 8005684:	1d3a      	adds	r2, r7, #4
 8005686:	4b06      	ldr	r3, [pc, #24]	@ (80056a0 <MX_ADC1_Init+0xc4>)
 8005688:	0011      	movs	r1, r2
 800568a:	0018      	movs	r0, r3
 800568c:	f001 ff44 	bl	8007518 <HAL_ADC_ConfigChannel>
 8005690:	1e03      	subs	r3, r0, #0
 8005692:	d001      	beq.n	8005698 <MX_ADC1_Init+0xbc>
    Error_Handler();
 8005694:	f000 fbb8 	bl	8005e08 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8005698:	46c0      	nop			@ (mov r8, r8)
 800569a:	46bd      	mov	sp, r7
 800569c:	b004      	add	sp, #16
 800569e:	bd80      	pop	{r7, pc}
 80056a0:	2000d3dc 	.word	0x2000d3dc
 80056a4:	40012400 	.word	0x40012400

080056a8 <MX_FDCAN1_Init>:
/**
  * @brief FDCAN1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_FDCAN1_Init(void) {
 80056a8:	b580      	push	{r7, lr}
 80056aa:	b08e      	sub	sp, #56	@ 0x38
 80056ac:	af02      	add	r7, sp, #8
  /* USER CODE BEGIN FDCAN1_Init 0 */
  /* USER CODE END FDCAN1_Init 0 */

  /* USER CODE BEGIN FDCAN1_Init 1 */
  /* USER CODE END FDCAN1_Init 1 */
  hfdcan1.Instance = FDCAN1;
 80056ae:	4b44      	ldr	r3, [pc, #272]	@ (80057c0 <MX_FDCAN1_Init+0x118>)
 80056b0:	4a44      	ldr	r2, [pc, #272]	@ (80057c4 <MX_FDCAN1_Init+0x11c>)
 80056b2:	601a      	str	r2, [r3, #0]
  hfdcan1.Init.ClockDivider = FDCAN_CLOCK_DIV1;
 80056b4:	4b42      	ldr	r3, [pc, #264]	@ (80057c0 <MX_FDCAN1_Init+0x118>)
 80056b6:	2200      	movs	r2, #0
 80056b8:	605a      	str	r2, [r3, #4]
  hfdcan1.Init.FrameFormat = FDCAN_FRAME_CLASSIC;
 80056ba:	4b41      	ldr	r3, [pc, #260]	@ (80057c0 <MX_FDCAN1_Init+0x118>)
 80056bc:	2200      	movs	r2, #0
 80056be:	609a      	str	r2, [r3, #8]
  hfdcan1.Init.Mode = FDCAN_MODE_NORMAL;
 80056c0:	4b3f      	ldr	r3, [pc, #252]	@ (80057c0 <MX_FDCAN1_Init+0x118>)
 80056c2:	2200      	movs	r2, #0
 80056c4:	60da      	str	r2, [r3, #12]
  hfdcan1.Init.AutoRetransmission = ENABLE;
 80056c6:	4b3e      	ldr	r3, [pc, #248]	@ (80057c0 <MX_FDCAN1_Init+0x118>)
 80056c8:	2201      	movs	r2, #1
 80056ca:	741a      	strb	r2, [r3, #16]
  hfdcan1.Init.TransmitPause = DISABLE;
 80056cc:	4b3c      	ldr	r3, [pc, #240]	@ (80057c0 <MX_FDCAN1_Init+0x118>)
 80056ce:	2200      	movs	r2, #0
 80056d0:	745a      	strb	r2, [r3, #17]
  hfdcan1.Init.ProtocolException = DISABLE;
 80056d2:	4b3b      	ldr	r3, [pc, #236]	@ (80057c0 <MX_FDCAN1_Init+0x118>)
 80056d4:	2200      	movs	r2, #0
 80056d6:	749a      	strb	r2, [r3, #18]
  hfdcan1.Init.NominalPrescaler = 1;
 80056d8:	4b39      	ldr	r3, [pc, #228]	@ (80057c0 <MX_FDCAN1_Init+0x118>)
 80056da:	2201      	movs	r2, #1
 80056dc:	615a      	str	r2, [r3, #20]
  hfdcan1.Init.NominalSyncJumpWidth = 31;
 80056de:	4b38      	ldr	r3, [pc, #224]	@ (80057c0 <MX_FDCAN1_Init+0x118>)
 80056e0:	221f      	movs	r2, #31
 80056e2:	619a      	str	r2, [r3, #24]
  hfdcan1.Init.NominalTimeSeg1 = 54;
 80056e4:	4b36      	ldr	r3, [pc, #216]	@ (80057c0 <MX_FDCAN1_Init+0x118>)
 80056e6:	2236      	movs	r2, #54	@ 0x36
 80056e8:	61da      	str	r2, [r3, #28]
  hfdcan1.Init.NominalTimeSeg2 = 9;
 80056ea:	4b35      	ldr	r3, [pc, #212]	@ (80057c0 <MX_FDCAN1_Init+0x118>)
 80056ec:	2209      	movs	r2, #9
 80056ee:	621a      	str	r2, [r3, #32]
  hfdcan1.Init.DataPrescaler = 1;
 80056f0:	4b33      	ldr	r3, [pc, #204]	@ (80057c0 <MX_FDCAN1_Init+0x118>)
 80056f2:	2201      	movs	r2, #1
 80056f4:	625a      	str	r2, [r3, #36]	@ 0x24
  hfdcan1.Init.DataSyncJumpWidth = 1;
 80056f6:	4b32      	ldr	r3, [pc, #200]	@ (80057c0 <MX_FDCAN1_Init+0x118>)
 80056f8:	2201      	movs	r2, #1
 80056fa:	629a      	str	r2, [r3, #40]	@ 0x28
  hfdcan1.Init.DataTimeSeg1 = 32;
 80056fc:	4b30      	ldr	r3, [pc, #192]	@ (80057c0 <MX_FDCAN1_Init+0x118>)
 80056fe:	2220      	movs	r2, #32
 8005700:	62da      	str	r2, [r3, #44]	@ 0x2c
  hfdcan1.Init.DataTimeSeg2 = 3;
 8005702:	4b2f      	ldr	r3, [pc, #188]	@ (80057c0 <MX_FDCAN1_Init+0x118>)
 8005704:	2203      	movs	r2, #3
 8005706:	631a      	str	r2, [r3, #48]	@ 0x30
  hfdcan1.Init.StdFiltersNbr = 0;
 8005708:	4b2d      	ldr	r3, [pc, #180]	@ (80057c0 <MX_FDCAN1_Init+0x118>)
 800570a:	2200      	movs	r2, #0
 800570c:	635a      	str	r2, [r3, #52]	@ 0x34
  hfdcan1.Init.ExtFiltersNbr = 2;
 800570e:	4b2c      	ldr	r3, [pc, #176]	@ (80057c0 <MX_FDCAN1_Init+0x118>)
 8005710:	2202      	movs	r2, #2
 8005712:	639a      	str	r2, [r3, #56]	@ 0x38
  hfdcan1.Init.TxFifoQueueMode = FDCAN_TX_FIFO_OPERATION;
 8005714:	4b2a      	ldr	r3, [pc, #168]	@ (80057c0 <MX_FDCAN1_Init+0x118>)
 8005716:	2200      	movs	r2, #0
 8005718:	63da      	str	r2, [r3, #60]	@ 0x3c
  if (HAL_FDCAN_Init(&hfdcan1) != HAL_OK) {
 800571a:	4b29      	ldr	r3, [pc, #164]	@ (80057c0 <MX_FDCAN1_Init+0x118>)
 800571c:	0018      	movs	r0, r3
 800571e:	f002 fa37 	bl	8007b90 <HAL_FDCAN_Init>
 8005722:	1e03      	subs	r3, r0, #0
 8005724:	d001      	beq.n	800572a <MX_FDCAN1_Init+0x82>
    Error_Handler();
 8005726:	f000 fb6f 	bl	8005e08 <Error_Handler>
  }
  /* USER CODE BEGIN FDCAN1_Init 2 */
	FDCAN_FilterTypeDef sFilterConfig;

	sFilterConfig.IdType = FDCAN_EXTENDED_ID;
 800572a:	2118      	movs	r1, #24
 800572c:	187b      	adds	r3, r7, r1
 800572e:	2280      	movs	r2, #128	@ 0x80
 8005730:	05d2      	lsls	r2, r2, #23
 8005732:	601a      	str	r2, [r3, #0]
	sFilterConfig.FilterIndex = 0;
 8005734:	187b      	adds	r3, r7, r1
 8005736:	2200      	movs	r2, #0
 8005738:	605a      	str	r2, [r3, #4]
	//sFilterConfig.FilterType = FDCAN_FILTER_DUAL;
	sFilterConfig.FilterType = FDCAN_FILTER_RANGE;
 800573a:	187b      	adds	r3, r7, r1
 800573c:	2200      	movs	r2, #0
 800573e:	609a      	str	r2, [r3, #8]

	sFilterConfig.FilterConfig = FDCAN_FILTER_TO_RXFIFO0;
 8005740:	187b      	adds	r3, r7, r1
 8005742:	2201      	movs	r2, #1
 8005744:	60da      	str	r2, [r3, #12]

	sFilterConfig.FilterID1 = 0xA110000;  // Base ID
 8005746:	187b      	adds	r3, r7, r1
 8005748:	4a1f      	ldr	r2, [pc, #124]	@ (80057c8 <MX_FDCAN1_Init+0x120>)
 800574a:	611a      	str	r2, [r3, #16]
	sFilterConfig.FilterID2 = 0xA11FFFF;  // Much wider range to catch all API IDs
 800574c:	187b      	adds	r3, r7, r1
 800574e:	4a1f      	ldr	r2, [pc, #124]	@ (80057cc <MX_FDCAN1_Init+0x124>)
 8005750:	615a      	str	r2, [r3, #20]

	//sFilterConfig.RxBufferIndex = 0;
	if (HAL_FDCAN_ConfigFilter(&hfdcan1, &sFilterConfig) != HAL_OK) {
 8005752:	187a      	adds	r2, r7, r1
 8005754:	4b1a      	ldr	r3, [pc, #104]	@ (80057c0 <MX_FDCAN1_Init+0x118>)
 8005756:	0011      	movs	r1, r2
 8005758:	0018      	movs	r0, r3
 800575a:	f002 fb7f 	bl	8007e5c <HAL_FDCAN_ConfigFilter>
 800575e:	1e03      	subs	r3, r0, #0
 8005760:	d001      	beq.n	8005766 <MX_FDCAN1_Init+0xbe>
		/* Filter configuration Error */
		Error_Handler();
 8005762:	f000 fb51 	bl	8005e08 <Error_Handler>
	}

	FDCAN_FilterTypeDef sFilterConfig2;

	sFilterConfig2.IdType = FDCAN_EXTENDED_ID;
 8005766:	003b      	movs	r3, r7
 8005768:	2280      	movs	r2, #128	@ 0x80
 800576a:	05d2      	lsls	r2, r2, #23
 800576c:	601a      	str	r2, [r3, #0]
	sFilterConfig2.FilterIndex = 1;
 800576e:	003b      	movs	r3, r7
 8005770:	2201      	movs	r2, #1
 8005772:	605a      	str	r2, [r3, #4]
	sFilterConfig2.FilterType = FDCAN_FILTER_DUAL;
 8005774:	003b      	movs	r3, r7
 8005776:	2201      	movs	r2, #1
 8005778:	609a      	str	r2, [r3, #8]

	sFilterConfig2.FilterConfig = FDCAN_FILTER_TO_RXFIFO0;
 800577a:	003b      	movs	r3, r7
 800577c:	2201      	movs	r2, #1
 800577e:	60da      	str	r2, [r3, #12]

	sFilterConfig2.FilterID1 = ROBORIO_CAN_ID;
 8005780:	003b      	movs	r3, r7
 8005782:	4a13      	ldr	r2, [pc, #76]	@ (80057d0 <MX_FDCAN1_Init+0x128>)
 8005784:	611a      	str	r2, [r3, #16]
	sFilterConfig2.FilterID2 = 0x0;
 8005786:	003b      	movs	r3, r7
 8005788:	2200      	movs	r2, #0
 800578a:	615a      	str	r2, [r3, #20]
	if (HAL_FDCAN_ConfigFilter(&hfdcan1, &sFilterConfig2) != HAL_OK) {
 800578c:	003a      	movs	r2, r7
 800578e:	4b0c      	ldr	r3, [pc, #48]	@ (80057c0 <MX_FDCAN1_Init+0x118>)
 8005790:	0011      	movs	r1, r2
 8005792:	0018      	movs	r0, r3
 8005794:	f002 fb62 	bl	8007e5c <HAL_FDCAN_ConfigFilter>
 8005798:	1e03      	subs	r3, r0, #0
 800579a:	d001      	beq.n	80057a0 <MX_FDCAN1_Init+0xf8>
		/* Filter configuration Error */
		Error_Handler();
 800579c:	f000 fb34 	bl	8005e08 <Error_Handler>
	// 														 FDCAN_REJECT_REMOTE) != HAL_OK)
	// {
	// 	Error_Handler();
	// }

	if (HAL_FDCAN_ConfigGlobalFilter(&hfdcan1, FDCAN_REJECT, FDCAN_REJECT,
 80057a0:	4807      	ldr	r0, [pc, #28]	@ (80057c0 <MX_FDCAN1_Init+0x118>)
 80057a2:	2301      	movs	r3, #1
 80057a4:	9300      	str	r3, [sp, #0]
 80057a6:	2301      	movs	r3, #1
 80057a8:	2202      	movs	r2, #2
 80057aa:	2102      	movs	r1, #2
 80057ac:	f002 fbb3 	bl	8007f16 <HAL_FDCAN_ConfigGlobalFilter>
 80057b0:	1e03      	subs	r3, r0, #0
 80057b2:	d001      	beq.n	80057b8 <MX_FDCAN1_Init+0x110>
									FDCAN_REJECT_REMOTE, FDCAN_REJECT_REMOTE) != HAL_OK) {
		Error_Handler();
 80057b4:	f000 fb28 	bl	8005e08 <Error_Handler>
	}

  /* USER CODE END FDCAN1_Init 2 */

}
 80057b8:	46c0      	nop			@ (mov r8, r8)
 80057ba:	46bd      	mov	sp, r7
 80057bc:	b00c      	add	sp, #48	@ 0x30
 80057be:	bd80      	pop	{r7, pc}
 80057c0:	2000d440 	.word	0x2000d440
 80057c4:	40006400 	.word	0x40006400
 80057c8:	0a110000 	.word	0x0a110000
 80057cc:	0a11ffff 	.word	0x0a11ffff
 80057d0:	01011840 	.word	0x01011840

080057d4 <MX_I2C1_Init>:
/**
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void){
 80057d4:	b580      	push	{r7, lr}
 80057d6:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 80057d8:	4b1b      	ldr	r3, [pc, #108]	@ (8005848 <MX_I2C1_Init+0x74>)
 80057da:	4a1c      	ldr	r2, [pc, #112]	@ (800584c <MX_I2C1_Init+0x78>)
 80057dc:	601a      	str	r2, [r3, #0]
  hi2c1.Init.Timing = 0x00C12166;
 80057de:	4b1a      	ldr	r3, [pc, #104]	@ (8005848 <MX_I2C1_Init+0x74>)
 80057e0:	4a1b      	ldr	r2, [pc, #108]	@ (8005850 <MX_I2C1_Init+0x7c>)
 80057e2:	605a      	str	r2, [r3, #4]
  hi2c1.Init.OwnAddress1 = 0;
 80057e4:	4b18      	ldr	r3, [pc, #96]	@ (8005848 <MX_I2C1_Init+0x74>)
 80057e6:	2200      	movs	r2, #0
 80057e8:	609a      	str	r2, [r3, #8]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80057ea:	4b17      	ldr	r3, [pc, #92]	@ (8005848 <MX_I2C1_Init+0x74>)
 80057ec:	2201      	movs	r2, #1
 80057ee:	60da      	str	r2, [r3, #12]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80057f0:	4b15      	ldr	r3, [pc, #84]	@ (8005848 <MX_I2C1_Init+0x74>)
 80057f2:	2200      	movs	r2, #0
 80057f4:	611a      	str	r2, [r3, #16]
  hi2c1.Init.OwnAddress2 = 0;
 80057f6:	4b14      	ldr	r3, [pc, #80]	@ (8005848 <MX_I2C1_Init+0x74>)
 80057f8:	2200      	movs	r2, #0
 80057fa:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 80057fc:	4b12      	ldr	r3, [pc, #72]	@ (8005848 <MX_I2C1_Init+0x74>)
 80057fe:	2200      	movs	r2, #0
 8005800:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8005802:	4b11      	ldr	r3, [pc, #68]	@ (8005848 <MX_I2C1_Init+0x74>)
 8005804:	2200      	movs	r2, #0
 8005806:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8005808:	4b0f      	ldr	r3, [pc, #60]	@ (8005848 <MX_I2C1_Init+0x74>)
 800580a:	2200      	movs	r2, #0
 800580c:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK) {
 800580e:	4b0e      	ldr	r3, [pc, #56]	@ (8005848 <MX_I2C1_Init+0x74>)
 8005810:	0018      	movs	r0, r3
 8005812:	f003 fbe3 	bl	8008fdc <HAL_I2C_Init>
 8005816:	1e03      	subs	r3, r0, #0
 8005818:	d001      	beq.n	800581e <MX_I2C1_Init+0x4a>
    Error_Handler();
 800581a:	f000 faf5 	bl	8005e08 <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK) {
 800581e:	4b0a      	ldr	r3, [pc, #40]	@ (8005848 <MX_I2C1_Init+0x74>)
 8005820:	2100      	movs	r1, #0
 8005822:	0018      	movs	r0, r3
 8005824:	f003 fc80 	bl	8009128 <HAL_I2CEx_ConfigAnalogFilter>
 8005828:	1e03      	subs	r3, r0, #0
 800582a:	d001      	beq.n	8005830 <MX_I2C1_Init+0x5c>
    Error_Handler();
 800582c:	f000 faec 	bl	8005e08 <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK) {
 8005830:	4b05      	ldr	r3, [pc, #20]	@ (8005848 <MX_I2C1_Init+0x74>)
 8005832:	2100      	movs	r1, #0
 8005834:	0018      	movs	r0, r3
 8005836:	f003 fcc3 	bl	80091c0 <HAL_I2CEx_ConfigDigitalFilter>
 800583a:	1e03      	subs	r3, r0, #0
 800583c:	d001      	beq.n	8005842 <MX_I2C1_Init+0x6e>
    Error_Handler();
 800583e:	f000 fae3 	bl	8005e08 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8005842:	46c0      	nop			@ (mov r8, r8)
 8005844:	46bd      	mov	sp, r7
 8005846:	bd80      	pop	{r7, pc}
 8005848:	2000d4a4 	.word	0x2000d4a4
 800584c:	40005400 	.word	0x40005400
 8005850:	00c12166 	.word	0x00c12166

08005854 <MX_SPI1_Init>:
/**
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void) {
 8005854:	b580      	push	{r7, lr}
 8005856:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 8005858:	4b1b      	ldr	r3, [pc, #108]	@ (80058c8 <MX_SPI1_Init+0x74>)
 800585a:	4a1c      	ldr	r2, [pc, #112]	@ (80058cc <MX_SPI1_Init+0x78>)
 800585c:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 800585e:	4b1a      	ldr	r3, [pc, #104]	@ (80058c8 <MX_SPI1_Init+0x74>)
 8005860:	2282      	movs	r2, #130	@ 0x82
 8005862:	0052      	lsls	r2, r2, #1
 8005864:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 8005866:	4b18      	ldr	r3, [pc, #96]	@ (80058c8 <MX_SPI1_Init+0x74>)
 8005868:	2200      	movs	r2, #0
 800586a:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 800586c:	4b16      	ldr	r3, [pc, #88]	@ (80058c8 <MX_SPI1_Init+0x74>)
 800586e:	22e0      	movs	r2, #224	@ 0xe0
 8005870:	00d2      	lsls	r2, r2, #3
 8005872:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_HIGH;
 8005874:	4b14      	ldr	r3, [pc, #80]	@ (80058c8 <MX_SPI1_Init+0x74>)
 8005876:	2202      	movs	r2, #2
 8005878:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_2EDGE;
 800587a:	4b13      	ldr	r3, [pc, #76]	@ (80058c8 <MX_SPI1_Init+0x74>)
 800587c:	2201      	movs	r2, #1
 800587e:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 8005880:	4b11      	ldr	r3, [pc, #68]	@ (80058c8 <MX_SPI1_Init+0x74>)
 8005882:	2280      	movs	r2, #128	@ 0x80
 8005884:	02d2      	lsls	r2, r2, #11
 8005886:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 8005888:	4b0f      	ldr	r3, [pc, #60]	@ (80058c8 <MX_SPI1_Init+0x74>)
 800588a:	2220      	movs	r2, #32
 800588c:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 800588e:	4b0e      	ldr	r3, [pc, #56]	@ (80058c8 <MX_SPI1_Init+0x74>)
 8005890:	2200      	movs	r2, #0
 8005892:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 8005894:	4b0c      	ldr	r3, [pc, #48]	@ (80058c8 <MX_SPI1_Init+0x74>)
 8005896:	2200      	movs	r2, #0
 8005898:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800589a:	4b0b      	ldr	r3, [pc, #44]	@ (80058c8 <MX_SPI1_Init+0x74>)
 800589c:	2200      	movs	r2, #0
 800589e:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi1.Init.CRCPolynomial = 7;
 80058a0:	4b09      	ldr	r3, [pc, #36]	@ (80058c8 <MX_SPI1_Init+0x74>)
 80058a2:	2207      	movs	r2, #7
 80058a4:	62da      	str	r2, [r3, #44]	@ 0x2c
  hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 80058a6:	4b08      	ldr	r3, [pc, #32]	@ (80058c8 <MX_SPI1_Init+0x74>)
 80058a8:	2200      	movs	r2, #0
 80058aa:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 80058ac:	4b06      	ldr	r3, [pc, #24]	@ (80058c8 <MX_SPI1_Init+0x74>)
 80058ae:	2200      	movs	r2, #0
 80058b0:	635a      	str	r2, [r3, #52]	@ 0x34
  if (HAL_SPI_Init(&hspi1) != HAL_OK) {
 80058b2:	4b05      	ldr	r3, [pc, #20]	@ (80058c8 <MX_SPI1_Init+0x74>)
 80058b4:	0018      	movs	r0, r3
 80058b6:	f004 fd5d 	bl	800a374 <HAL_SPI_Init>
 80058ba:	1e03      	subs	r3, r0, #0
 80058bc:	d001      	beq.n	80058c2 <MX_SPI1_Init+0x6e>
    Error_Handler();
 80058be:	f000 faa3 	bl	8005e08 <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 80058c2:	46c0      	nop			@ (mov r8, r8)
 80058c4:	46bd      	mov	sp, r7
 80058c6:	bd80      	pop	{r7, pc}
 80058c8:	2000d4f8 	.word	0x2000d4f8
 80058cc:	40013000 	.word	0x40013000

080058d0 <MX_SPI2_Init>:
/**
  * @brief SPI2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI2_Init(void) {
 80058d0:	b580      	push	{r7, lr}
 80058d2:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI2_Init 1 */

  /* USER CODE END SPI2_Init 1 */
  /* SPI2 parameter configuration*/
  hspi2.Instance = SPI2;
 80058d4:	4b1b      	ldr	r3, [pc, #108]	@ (8005944 <MX_SPI2_Init+0x74>)
 80058d6:	4a1c      	ldr	r2, [pc, #112]	@ (8005948 <MX_SPI2_Init+0x78>)
 80058d8:	601a      	str	r2, [r3, #0]
  hspi2.Init.Mode = SPI_MODE_MASTER;
 80058da:	4b1a      	ldr	r3, [pc, #104]	@ (8005944 <MX_SPI2_Init+0x74>)
 80058dc:	2282      	movs	r2, #130	@ 0x82
 80058de:	0052      	lsls	r2, r2, #1
 80058e0:	605a      	str	r2, [r3, #4]
  hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 80058e2:	4b18      	ldr	r3, [pc, #96]	@ (8005944 <MX_SPI2_Init+0x74>)
 80058e4:	2200      	movs	r2, #0
 80058e6:	609a      	str	r2, [r3, #8]
  hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 80058e8:	4b16      	ldr	r3, [pc, #88]	@ (8005944 <MX_SPI2_Init+0x74>)
 80058ea:	22e0      	movs	r2, #224	@ 0xe0
 80058ec:	00d2      	lsls	r2, r2, #3
 80058ee:	60da      	str	r2, [r3, #12]
  hspi2.Init.CLKPolarity = SPI_POLARITY_HIGH;
 80058f0:	4b14      	ldr	r3, [pc, #80]	@ (8005944 <MX_SPI2_Init+0x74>)
 80058f2:	2202      	movs	r2, #2
 80058f4:	611a      	str	r2, [r3, #16]
  hspi2.Init.CLKPhase = SPI_PHASE_2EDGE;
 80058f6:	4b13      	ldr	r3, [pc, #76]	@ (8005944 <MX_SPI2_Init+0x74>)
 80058f8:	2201      	movs	r2, #1
 80058fa:	615a      	str	r2, [r3, #20]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 80058fc:	4b11      	ldr	r3, [pc, #68]	@ (8005944 <MX_SPI2_Init+0x74>)
 80058fe:	2280      	movs	r2, #128	@ 0x80
 8005900:	0092      	lsls	r2, r2, #2
 8005902:	619a      	str	r2, [r3, #24]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_128;
 8005904:	4b0f      	ldr	r3, [pc, #60]	@ (8005944 <MX_SPI2_Init+0x74>)
 8005906:	2230      	movs	r2, #48	@ 0x30
 8005908:	61da      	str	r2, [r3, #28]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 800590a:	4b0e      	ldr	r3, [pc, #56]	@ (8005944 <MX_SPI2_Init+0x74>)
 800590c:	2200      	movs	r2, #0
 800590e:	621a      	str	r2, [r3, #32]
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 8005910:	4b0c      	ldr	r3, [pc, #48]	@ (8005944 <MX_SPI2_Init+0x74>)
 8005912:	2200      	movs	r2, #0
 8005914:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8005916:	4b0b      	ldr	r3, [pc, #44]	@ (8005944 <MX_SPI2_Init+0x74>)
 8005918:	2200      	movs	r2, #0
 800591a:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi2.Init.CRCPolynomial = 7;
 800591c:	4b09      	ldr	r3, [pc, #36]	@ (8005944 <MX_SPI2_Init+0x74>)
 800591e:	2207      	movs	r2, #7
 8005920:	62da      	str	r2, [r3, #44]	@ 0x2c
  hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 8005922:	4b08      	ldr	r3, [pc, #32]	@ (8005944 <MX_SPI2_Init+0x74>)
 8005924:	2200      	movs	r2, #0
 8005926:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi2.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 8005928:	4b06      	ldr	r3, [pc, #24]	@ (8005944 <MX_SPI2_Init+0x74>)
 800592a:	2200      	movs	r2, #0
 800592c:	635a      	str	r2, [r3, #52]	@ 0x34
  if (HAL_SPI_Init(&hspi2) != HAL_OK) {
 800592e:	4b05      	ldr	r3, [pc, #20]	@ (8005944 <MX_SPI2_Init+0x74>)
 8005930:	0018      	movs	r0, r3
 8005932:	f004 fd1f 	bl	800a374 <HAL_SPI_Init>
 8005936:	1e03      	subs	r3, r0, #0
 8005938:	d001      	beq.n	800593e <MX_SPI2_Init+0x6e>
    Error_Handler();
 800593a:	f000 fa65 	bl	8005e08 <Error_Handler>
  }
  /* USER CODE BEGIN SPI2_Init 2 */

  /* USER CODE END SPI2_Init 2 */

}
 800593e:	46c0      	nop			@ (mov r8, r8)
 8005940:	46bd      	mov	sp, r7
 8005942:	bd80      	pop	{r7, pc}
 8005944:	2000d55c 	.word	0x2000d55c
 8005948:	40003800 	.word	0x40003800

0800594c <MX_TIM2_Init>:
/**
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void) {
 800594c:	b580      	push	{r7, lr}
 800594e:	b08a      	sub	sp, #40	@ 0x28
 8005950:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8005952:	231c      	movs	r3, #28
 8005954:	18fb      	adds	r3, r7, r3
 8005956:	0018      	movs	r0, r3
 8005958:	230c      	movs	r3, #12
 800595a:	001a      	movs	r2, r3
 800595c:	2100      	movs	r1, #0
 800595e:	f006 fb81 	bl	800c064 <memset>
  TIM_OC_InitTypeDef sConfigOC = {0};
 8005962:	003b      	movs	r3, r7
 8005964:	0018      	movs	r0, r3
 8005966:	231c      	movs	r3, #28
 8005968:	001a      	movs	r2, r3
 800596a:	2100      	movs	r1, #0
 800596c:	f006 fb7a 	bl	800c064 <memset>

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8005970:	4b24      	ldr	r3, [pc, #144]	@ (8005a04 <MX_TIM2_Init+0xb8>)
 8005972:	2280      	movs	r2, #128	@ 0x80
 8005974:	05d2      	lsls	r2, r2, #23
 8005976:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 1600-1;
 8005978:	4b22      	ldr	r3, [pc, #136]	@ (8005a04 <MX_TIM2_Init+0xb8>)
 800597a:	4a23      	ldr	r2, [pc, #140]	@ (8005a08 <MX_TIM2_Init+0xbc>)
 800597c:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 800597e:	4b21      	ldr	r3, [pc, #132]	@ (8005a04 <MX_TIM2_Init+0xb8>)
 8005980:	2200      	movs	r2, #0
 8005982:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 255-1;
 8005984:	4b1f      	ldr	r3, [pc, #124]	@ (8005a04 <MX_TIM2_Init+0xb8>)
 8005986:	22fe      	movs	r2, #254	@ 0xfe
 8005988:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800598a:	4b1e      	ldr	r3, [pc, #120]	@ (8005a04 <MX_TIM2_Init+0xb8>)
 800598c:	2200      	movs	r2, #0
 800598e:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8005990:	4b1c      	ldr	r3, [pc, #112]	@ (8005a04 <MX_TIM2_Init+0xb8>)
 8005992:	2200      	movs	r2, #0
 8005994:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK) {
 8005996:	4b1b      	ldr	r3, [pc, #108]	@ (8005a04 <MX_TIM2_Init+0xb8>)
 8005998:	0018      	movs	r0, r3
 800599a:	f005 fc63 	bl	800b264 <HAL_TIM_PWM_Init>
 800599e:	1e03      	subs	r3, r0, #0
 80059a0:	d001      	beq.n	80059a6 <MX_TIM2_Init+0x5a>
    Error_Handler();
 80059a2:	f000 fa31 	bl	8005e08 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80059a6:	211c      	movs	r1, #28
 80059a8:	187b      	adds	r3, r7, r1
 80059aa:	2200      	movs	r2, #0
 80059ac:	601a      	str	r2, [r3, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80059ae:	187b      	adds	r3, r7, r1
 80059b0:	2200      	movs	r2, #0
 80059b2:	609a      	str	r2, [r3, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK) {
 80059b4:	187a      	adds	r2, r7, r1
 80059b6:	4b13      	ldr	r3, [pc, #76]	@ (8005a04 <MX_TIM2_Init+0xb8>)
 80059b8:	0011      	movs	r1, r2
 80059ba:	0018      	movs	r0, r3
 80059bc:	f006 fa78 	bl	800beb0 <HAL_TIMEx_MasterConfigSynchronization>
 80059c0:	1e03      	subs	r3, r0, #0
 80059c2:	d001      	beq.n	80059c8 <MX_TIM2_Init+0x7c>
    Error_Handler();
 80059c4:	f000 fa20 	bl	8005e08 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80059c8:	003b      	movs	r3, r7
 80059ca:	2260      	movs	r2, #96	@ 0x60
 80059cc:	601a      	str	r2, [r3, #0]
  sConfigOC.Pulse = 0;
 80059ce:	003b      	movs	r3, r7
 80059d0:	2200      	movs	r2, #0
 80059d2:	605a      	str	r2, [r3, #4]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80059d4:	003b      	movs	r3, r7
 80059d6:	2200      	movs	r2, #0
 80059d8:	609a      	str	r2, [r3, #8]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80059da:	003b      	movs	r3, r7
 80059dc:	2200      	movs	r2, #0
 80059de:	611a      	str	r2, [r3, #16]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_4) != HAL_OK) {
 80059e0:	0039      	movs	r1, r7
 80059e2:	4b08      	ldr	r3, [pc, #32]	@ (8005a04 <MX_TIM2_Init+0xb8>)
 80059e4:	220c      	movs	r2, #12
 80059e6:	0018      	movs	r0, r3
 80059e8:	f005 fc94 	bl	800b314 <HAL_TIM_PWM_ConfigChannel>
 80059ec:	1e03      	subs	r3, r0, #0
 80059ee:	d001      	beq.n	80059f4 <MX_TIM2_Init+0xa8>
    Error_Handler();
 80059f0:	f000 fa0a 	bl	8005e08 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 80059f4:	4b03      	ldr	r3, [pc, #12]	@ (8005a04 <MX_TIM2_Init+0xb8>)
 80059f6:	0018      	movs	r0, r3
 80059f8:	f000 ff3a 	bl	8006870 <HAL_TIM_MspPostInit>

}
 80059fc:	46c0      	nop			@ (mov r8, r8)
 80059fe:	46bd      	mov	sp, r7
 8005a00:	b00a      	add	sp, #40	@ 0x28
 8005a02:	bd80      	pop	{r7, pc}
 8005a04:	2000d5c0 	.word	0x2000d5c0
 8005a08:	0000063f 	.word	0x0000063f

08005a0c <MX_TIM3_Init>:
/**
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void) {
 8005a0c:	b580      	push	{r7, lr}
 8005a0e:	b08e      	sub	sp, #56	@ 0x38
 8005a10:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8005a12:	2328      	movs	r3, #40	@ 0x28
 8005a14:	18fb      	adds	r3, r7, r3
 8005a16:	0018      	movs	r0, r3
 8005a18:	2310      	movs	r3, #16
 8005a1a:	001a      	movs	r2, r3
 8005a1c:	2100      	movs	r1, #0
 8005a1e:	f006 fb21 	bl	800c064 <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8005a22:	231c      	movs	r3, #28
 8005a24:	18fb      	adds	r3, r7, r3
 8005a26:	0018      	movs	r0, r3
 8005a28:	230c      	movs	r3, #12
 8005a2a:	001a      	movs	r2, r3
 8005a2c:	2100      	movs	r1, #0
 8005a2e:	f006 fb19 	bl	800c064 <memset>
  TIM_OC_InitTypeDef sConfigOC = {0};
 8005a32:	003b      	movs	r3, r7
 8005a34:	0018      	movs	r0, r3
 8005a36:	231c      	movs	r3, #28
 8005a38:	001a      	movs	r2, r3
 8005a3a:	2100      	movs	r1, #0
 8005a3c:	f006 fb12 	bl	800c064 <memset>

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8005a40:	4b2f      	ldr	r3, [pc, #188]	@ (8005b00 <MX_TIM3_Init+0xf4>)
 8005a42:	4a30      	ldr	r2, [pc, #192]	@ (8005b04 <MX_TIM3_Init+0xf8>)
 8005a44:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 1600-1;
 8005a46:	4b2e      	ldr	r3, [pc, #184]	@ (8005b00 <MX_TIM3_Init+0xf4>)
 8005a48:	4a2f      	ldr	r2, [pc, #188]	@ (8005b08 <MX_TIM3_Init+0xfc>)
 8005a4a:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8005a4c:	4b2c      	ldr	r3, [pc, #176]	@ (8005b00 <MX_TIM3_Init+0xf4>)
 8005a4e:	2200      	movs	r2, #0
 8005a50:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 255-1;
 8005a52:	4b2b      	ldr	r3, [pc, #172]	@ (8005b00 <MX_TIM3_Init+0xf4>)
 8005a54:	22fe      	movs	r2, #254	@ 0xfe
 8005a56:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8005a58:	4b29      	ldr	r3, [pc, #164]	@ (8005b00 <MX_TIM3_Init+0xf4>)
 8005a5a:	2200      	movs	r2, #0
 8005a5c:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8005a5e:	4b28      	ldr	r3, [pc, #160]	@ (8005b00 <MX_TIM3_Init+0xf4>)
 8005a60:	2200      	movs	r2, #0
 8005a62:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK) {
 8005a64:	4b26      	ldr	r3, [pc, #152]	@ (8005b00 <MX_TIM3_Init+0xf4>)
 8005a66:	0018      	movs	r0, r3
 8005a68:	f005 fba4 	bl	800b1b4 <HAL_TIM_Base_Init>
 8005a6c:	1e03      	subs	r3, r0, #0
 8005a6e:	d001      	beq.n	8005a74 <MX_TIM3_Init+0x68>
    Error_Handler();
 8005a70:	f000 f9ca 	bl	8005e08 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8005a74:	2128      	movs	r1, #40	@ 0x28
 8005a76:	187b      	adds	r3, r7, r1
 8005a78:	2280      	movs	r2, #128	@ 0x80
 8005a7a:	0152      	lsls	r2, r2, #5
 8005a7c:	601a      	str	r2, [r3, #0]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK) {
 8005a7e:	187a      	adds	r2, r7, r1
 8005a80:	4b1f      	ldr	r3, [pc, #124]	@ (8005b00 <MX_TIM3_Init+0xf4>)
 8005a82:	0011      	movs	r1, r2
 8005a84:	0018      	movs	r0, r3
 8005a86:	f005 fd45 	bl	800b514 <HAL_TIM_ConfigClockSource>
 8005a8a:	1e03      	subs	r3, r0, #0
 8005a8c:	d001      	beq.n	8005a92 <MX_TIM3_Init+0x86>
    Error_Handler();
 8005a8e:	f000 f9bb 	bl	8005e08 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK) {
 8005a92:	4b1b      	ldr	r3, [pc, #108]	@ (8005b00 <MX_TIM3_Init+0xf4>)
 8005a94:	0018      	movs	r0, r3
 8005a96:	f005 fbe5 	bl	800b264 <HAL_TIM_PWM_Init>
 8005a9a:	1e03      	subs	r3, r0, #0
 8005a9c:	d001      	beq.n	8005aa2 <MX_TIM3_Init+0x96>
    Error_Handler();
 8005a9e:	f000 f9b3 	bl	8005e08 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8005aa2:	211c      	movs	r1, #28
 8005aa4:	187b      	adds	r3, r7, r1
 8005aa6:	2200      	movs	r2, #0
 8005aa8:	601a      	str	r2, [r3, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8005aaa:	187b      	adds	r3, r7, r1
 8005aac:	2200      	movs	r2, #0
 8005aae:	609a      	str	r2, [r3, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK) {
 8005ab0:	187a      	adds	r2, r7, r1
 8005ab2:	4b13      	ldr	r3, [pc, #76]	@ (8005b00 <MX_TIM3_Init+0xf4>)
 8005ab4:	0011      	movs	r1, r2
 8005ab6:	0018      	movs	r0, r3
 8005ab8:	f006 f9fa 	bl	800beb0 <HAL_TIMEx_MasterConfigSynchronization>
 8005abc:	1e03      	subs	r3, r0, #0
 8005abe:	d001      	beq.n	8005ac4 <MX_TIM3_Init+0xb8>
    Error_Handler();
 8005ac0:	f000 f9a2 	bl	8005e08 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8005ac4:	003b      	movs	r3, r7
 8005ac6:	2260      	movs	r2, #96	@ 0x60
 8005ac8:	601a      	str	r2, [r3, #0]
  sConfigOC.Pulse = 0;
 8005aca:	003b      	movs	r3, r7
 8005acc:	2200      	movs	r2, #0
 8005ace:	605a      	str	r2, [r3, #4]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8005ad0:	003b      	movs	r3, r7
 8005ad2:	2200      	movs	r2, #0
 8005ad4:	609a      	str	r2, [r3, #8]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8005ad6:	003b      	movs	r3, r7
 8005ad8:	2200      	movs	r2, #0
 8005ada:	611a      	str	r2, [r3, #16]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK) {
 8005adc:	0039      	movs	r1, r7
 8005ade:	4b08      	ldr	r3, [pc, #32]	@ (8005b00 <MX_TIM3_Init+0xf4>)
 8005ae0:	2208      	movs	r2, #8
 8005ae2:	0018      	movs	r0, r3
 8005ae4:	f005 fc16 	bl	800b314 <HAL_TIM_PWM_ConfigChannel>
 8005ae8:	1e03      	subs	r3, r0, #0
 8005aea:	d001      	beq.n	8005af0 <MX_TIM3_Init+0xe4>
    Error_Handler();
 8005aec:	f000 f98c 	bl	8005e08 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 8005af0:	4b03      	ldr	r3, [pc, #12]	@ (8005b00 <MX_TIM3_Init+0xf4>)
 8005af2:	0018      	movs	r0, r3
 8005af4:	f000 febc 	bl	8006870 <HAL_TIM_MspPostInit>

}
 8005af8:	46c0      	nop			@ (mov r8, r8)
 8005afa:	46bd      	mov	sp, r7
 8005afc:	b00e      	add	sp, #56	@ 0x38
 8005afe:	bd80      	pop	{r7, pc}
 8005b00:	2000d60c 	.word	0x2000d60c
 8005b04:	40000400 	.word	0x40000400
 8005b08:	0000063f 	.word	0x0000063f

08005b0c <MX_TIM4_Init>:
/**
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void) {
 8005b0c:	b580      	push	{r7, lr}
 8005b0e:	b08e      	sub	sp, #56	@ 0x38
 8005b10:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8005b12:	2328      	movs	r3, #40	@ 0x28
 8005b14:	18fb      	adds	r3, r7, r3
 8005b16:	0018      	movs	r0, r3
 8005b18:	2310      	movs	r3, #16
 8005b1a:	001a      	movs	r2, r3
 8005b1c:	2100      	movs	r1, #0
 8005b1e:	f006 faa1 	bl	800c064 <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8005b22:	231c      	movs	r3, #28
 8005b24:	18fb      	adds	r3, r7, r3
 8005b26:	0018      	movs	r0, r3
 8005b28:	230c      	movs	r3, #12
 8005b2a:	001a      	movs	r2, r3
 8005b2c:	2100      	movs	r1, #0
 8005b2e:	f006 fa99 	bl	800c064 <memset>
  TIM_OC_InitTypeDef sConfigOC = {0};
 8005b32:	003b      	movs	r3, r7
 8005b34:	0018      	movs	r0, r3
 8005b36:	231c      	movs	r3, #28
 8005b38:	001a      	movs	r2, r3
 8005b3a:	2100      	movs	r1, #0
 8005b3c:	f006 fa92 	bl	800c064 <memset>

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 8005b40:	4b2f      	ldr	r3, [pc, #188]	@ (8005c00 <MX_TIM4_Init+0xf4>)
 8005b42:	4a30      	ldr	r2, [pc, #192]	@ (8005c04 <MX_TIM4_Init+0xf8>)
 8005b44:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 1600-1;
 8005b46:	4b2e      	ldr	r3, [pc, #184]	@ (8005c00 <MX_TIM4_Init+0xf4>)
 8005b48:	4a2f      	ldr	r2, [pc, #188]	@ (8005c08 <MX_TIM4_Init+0xfc>)
 8005b4a:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 8005b4c:	4b2c      	ldr	r3, [pc, #176]	@ (8005c00 <MX_TIM4_Init+0xf4>)
 8005b4e:	2200      	movs	r2, #0
 8005b50:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 255-1;
 8005b52:	4b2b      	ldr	r3, [pc, #172]	@ (8005c00 <MX_TIM4_Init+0xf4>)
 8005b54:	22fe      	movs	r2, #254	@ 0xfe
 8005b56:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8005b58:	4b29      	ldr	r3, [pc, #164]	@ (8005c00 <MX_TIM4_Init+0xf4>)
 8005b5a:	2200      	movs	r2, #0
 8005b5c:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8005b5e:	4b28      	ldr	r3, [pc, #160]	@ (8005c00 <MX_TIM4_Init+0xf4>)
 8005b60:	2200      	movs	r2, #0
 8005b62:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK) {
 8005b64:	4b26      	ldr	r3, [pc, #152]	@ (8005c00 <MX_TIM4_Init+0xf4>)
 8005b66:	0018      	movs	r0, r3
 8005b68:	f005 fb24 	bl	800b1b4 <HAL_TIM_Base_Init>
 8005b6c:	1e03      	subs	r3, r0, #0
 8005b6e:	d001      	beq.n	8005b74 <MX_TIM4_Init+0x68>
    Error_Handler();
 8005b70:	f000 f94a 	bl	8005e08 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8005b74:	2128      	movs	r1, #40	@ 0x28
 8005b76:	187b      	adds	r3, r7, r1
 8005b78:	2280      	movs	r2, #128	@ 0x80
 8005b7a:	0152      	lsls	r2, r2, #5
 8005b7c:	601a      	str	r2, [r3, #0]
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK) {
 8005b7e:	187a      	adds	r2, r7, r1
 8005b80:	4b1f      	ldr	r3, [pc, #124]	@ (8005c00 <MX_TIM4_Init+0xf4>)
 8005b82:	0011      	movs	r1, r2
 8005b84:	0018      	movs	r0, r3
 8005b86:	f005 fcc5 	bl	800b514 <HAL_TIM_ConfigClockSource>
 8005b8a:	1e03      	subs	r3, r0, #0
 8005b8c:	d001      	beq.n	8005b92 <MX_TIM4_Init+0x86>
    Error_Handler();
 8005b8e:	f000 f93b 	bl	8005e08 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim4) != HAL_OK) {
 8005b92:	4b1b      	ldr	r3, [pc, #108]	@ (8005c00 <MX_TIM4_Init+0xf4>)
 8005b94:	0018      	movs	r0, r3
 8005b96:	f005 fb65 	bl	800b264 <HAL_TIM_PWM_Init>
 8005b9a:	1e03      	subs	r3, r0, #0
 8005b9c:	d001      	beq.n	8005ba2 <MX_TIM4_Init+0x96>
    Error_Handler();
 8005b9e:	f000 f933 	bl	8005e08 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8005ba2:	211c      	movs	r1, #28
 8005ba4:	187b      	adds	r3, r7, r1
 8005ba6:	2200      	movs	r2, #0
 8005ba8:	601a      	str	r2, [r3, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8005baa:	187b      	adds	r3, r7, r1
 8005bac:	2200      	movs	r2, #0
 8005bae:	609a      	str	r2, [r3, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK) {
 8005bb0:	187a      	adds	r2, r7, r1
 8005bb2:	4b13      	ldr	r3, [pc, #76]	@ (8005c00 <MX_TIM4_Init+0xf4>)
 8005bb4:	0011      	movs	r1, r2
 8005bb6:	0018      	movs	r0, r3
 8005bb8:	f006 f97a 	bl	800beb0 <HAL_TIMEx_MasterConfigSynchronization>
 8005bbc:	1e03      	subs	r3, r0, #0
 8005bbe:	d001      	beq.n	8005bc4 <MX_TIM4_Init+0xb8>
    Error_Handler();
 8005bc0:	f000 f922 	bl	8005e08 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8005bc4:	003b      	movs	r3, r7
 8005bc6:	2260      	movs	r2, #96	@ 0x60
 8005bc8:	601a      	str	r2, [r3, #0]
  sConfigOC.Pulse = 0;
 8005bca:	003b      	movs	r3, r7
 8005bcc:	2200      	movs	r2, #0
 8005bce:	605a      	str	r2, [r3, #4]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8005bd0:	003b      	movs	r3, r7
 8005bd2:	2200      	movs	r2, #0
 8005bd4:	609a      	str	r2, [r3, #8]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8005bd6:	003b      	movs	r3, r7
 8005bd8:	2200      	movs	r2, #0
 8005bda:	611a      	str	r2, [r3, #16]
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_4) != HAL_OK) {
 8005bdc:	0039      	movs	r1, r7
 8005bde:	4b08      	ldr	r3, [pc, #32]	@ (8005c00 <MX_TIM4_Init+0xf4>)
 8005be0:	220c      	movs	r2, #12
 8005be2:	0018      	movs	r0, r3
 8005be4:	f005 fb96 	bl	800b314 <HAL_TIM_PWM_ConfigChannel>
 8005be8:	1e03      	subs	r3, r0, #0
 8005bea:	d001      	beq.n	8005bf0 <MX_TIM4_Init+0xe4>
    Error_Handler();
 8005bec:	f000 f90c 	bl	8005e08 <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */
  HAL_TIM_MspPostInit(&htim4);
 8005bf0:	4b03      	ldr	r3, [pc, #12]	@ (8005c00 <MX_TIM4_Init+0xf4>)
 8005bf2:	0018      	movs	r0, r3
 8005bf4:	f000 fe3c 	bl	8006870 <HAL_TIM_MspPostInit>

}
 8005bf8:	46c0      	nop			@ (mov r8, r8)
 8005bfa:	46bd      	mov	sp, r7
 8005bfc:	b00e      	add	sp, #56	@ 0x38
 8005bfe:	bd80      	pop	{r7, pc}
 8005c00:	2000d658 	.word	0x2000d658
 8005c04:	40000800 	.word	0x40000800
 8005c08:	0000063f 	.word	0x0000063f

08005c0c <MX_USB_DRD_FS_PCD_Init>:
/**
  * @brief USB_DRD_FS Initialization Function
  * @param None
  * @retval None
  */
static void MX_USB_DRD_FS_PCD_Init(void) {
 8005c0c:	b580      	push	{r7, lr}
 8005c0e:	af00      	add	r7, sp, #0
  /* USER CODE END USB_DRD_FS_Init 0 */

  /* USER CODE BEGIN USB_DRD_FS_Init 1 */

  /* USER CODE END USB_DRD_FS_Init 1 */
  hpcd_USB_DRD_FS.Instance = USB_DRD_FS;
 8005c10:	4b17      	ldr	r3, [pc, #92]	@ (8005c70 <MX_USB_DRD_FS_PCD_Init+0x64>)
 8005c12:	4a18      	ldr	r2, [pc, #96]	@ (8005c74 <MX_USB_DRD_FS_PCD_Init+0x68>)
 8005c14:	601a      	str	r2, [r3, #0]
  hpcd_USB_DRD_FS.Init.dev_endpoints = 8;
 8005c16:	4b16      	ldr	r3, [pc, #88]	@ (8005c70 <MX_USB_DRD_FS_PCD_Init+0x64>)
 8005c18:	2208      	movs	r2, #8
 8005c1a:	711a      	strb	r2, [r3, #4]
  hpcd_USB_DRD_FS.Init.Host_channels = 8;
 8005c1c:	4b14      	ldr	r3, [pc, #80]	@ (8005c70 <MX_USB_DRD_FS_PCD_Init+0x64>)
 8005c1e:	2208      	movs	r2, #8
 8005c20:	715a      	strb	r2, [r3, #5]
  hpcd_USB_DRD_FS.Init.speed = PCD_SPEED_FULL;
 8005c22:	4b13      	ldr	r3, [pc, #76]	@ (8005c70 <MX_USB_DRD_FS_PCD_Init+0x64>)
 8005c24:	2202      	movs	r2, #2
 8005c26:	71da      	strb	r2, [r3, #7]
  hpcd_USB_DRD_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 8005c28:	4b11      	ldr	r3, [pc, #68]	@ (8005c70 <MX_USB_DRD_FS_PCD_Init+0x64>)
 8005c2a:	2202      	movs	r2, #2
 8005c2c:	725a      	strb	r2, [r3, #9]
  hpcd_USB_DRD_FS.Init.Sof_enable = DISABLE;
 8005c2e:	4b10      	ldr	r3, [pc, #64]	@ (8005c70 <MX_USB_DRD_FS_PCD_Init+0x64>)
 8005c30:	2200      	movs	r2, #0
 8005c32:	729a      	strb	r2, [r3, #10]
  hpcd_USB_DRD_FS.Init.low_power_enable = DISABLE;
 8005c34:	4b0e      	ldr	r3, [pc, #56]	@ (8005c70 <MX_USB_DRD_FS_PCD_Init+0x64>)
 8005c36:	2200      	movs	r2, #0
 8005c38:	72da      	strb	r2, [r3, #11]
  hpcd_USB_DRD_FS.Init.lpm_enable = DISABLE;
 8005c3a:	4b0d      	ldr	r3, [pc, #52]	@ (8005c70 <MX_USB_DRD_FS_PCD_Init+0x64>)
 8005c3c:	2200      	movs	r2, #0
 8005c3e:	731a      	strb	r2, [r3, #12]
  hpcd_USB_DRD_FS.Init.battery_charging_enable = DISABLE;
 8005c40:	4b0b      	ldr	r3, [pc, #44]	@ (8005c70 <MX_USB_DRD_FS_PCD_Init+0x64>)
 8005c42:	2200      	movs	r2, #0
 8005c44:	735a      	strb	r2, [r3, #13]
  hpcd_USB_DRD_FS.Init.vbus_sensing_enable = DISABLE;
 8005c46:	4b0a      	ldr	r3, [pc, #40]	@ (8005c70 <MX_USB_DRD_FS_PCD_Init+0x64>)
 8005c48:	2200      	movs	r2, #0
 8005c4a:	739a      	strb	r2, [r3, #14]
  hpcd_USB_DRD_FS.Init.bulk_doublebuffer_enable = DISABLE;
 8005c4c:	4b08      	ldr	r3, [pc, #32]	@ (8005c70 <MX_USB_DRD_FS_PCD_Init+0x64>)
 8005c4e:	2200      	movs	r2, #0
 8005c50:	73da      	strb	r2, [r3, #15]
  hpcd_USB_DRD_FS.Init.iso_singlebuffer_enable = DISABLE;
 8005c52:	4b07      	ldr	r3, [pc, #28]	@ (8005c70 <MX_USB_DRD_FS_PCD_Init+0x64>)
 8005c54:	2200      	movs	r2, #0
 8005c56:	741a      	strb	r2, [r3, #16]
  if (HAL_PCD_Init(&hpcd_USB_DRD_FS) != HAL_OK){
 8005c58:	4b05      	ldr	r3, [pc, #20]	@ (8005c70 <MX_USB_DRD_FS_PCD_Init+0x64>)
 8005c5a:	0018      	movs	r0, r3
 8005c5c:	f003 fafc 	bl	8009258 <HAL_PCD_Init>
 8005c60:	1e03      	subs	r3, r0, #0
 8005c62:	d001      	beq.n	8005c68 <MX_USB_DRD_FS_PCD_Init+0x5c>
    Error_Handler();
 8005c64:	f000 f8d0 	bl	8005e08 <Error_Handler>
  }
  /* USER CODE BEGIN USB_DRD_FS_Init 2 */

  /* USER CODE END USB_DRD_FS_Init 2 */

}
 8005c68:	46c0      	nop			@ (mov r8, r8)
 8005c6a:	46bd      	mov	sp, r7
 8005c6c:	bd80      	pop	{r7, pc}
 8005c6e:	46c0      	nop			@ (mov r8, r8)
 8005c70:	2000d6a4 	.word	0x2000d6a4
 8005c74:	40005c00 	.word	0x40005c00

08005c78 <MX_GPIO_Init>:
/**
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void) {
 8005c78:	b590      	push	{r4, r7, lr}
 8005c7a:	b08b      	sub	sp, #44	@ 0x2c
 8005c7c:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8005c7e:	2414      	movs	r4, #20
 8005c80:	193b      	adds	r3, r7, r4
 8005c82:	0018      	movs	r0, r3
 8005c84:	2314      	movs	r3, #20
 8005c86:	001a      	movs	r2, r3
 8005c88:	2100      	movs	r1, #0
 8005c8a:	f006 f9eb 	bl	800c064 <memset>
  /* USER CODE BEGIN MX_GPIO_Init_1 */
  /* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8005c8e:	4b2e      	ldr	r3, [pc, #184]	@ (8005d48 <MX_GPIO_Init+0xd0>)
 8005c90:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005c92:	4b2d      	ldr	r3, [pc, #180]	@ (8005d48 <MX_GPIO_Init+0xd0>)
 8005c94:	2120      	movs	r1, #32
 8005c96:	430a      	orrs	r2, r1
 8005c98:	635a      	str	r2, [r3, #52]	@ 0x34
 8005c9a:	4b2b      	ldr	r3, [pc, #172]	@ (8005d48 <MX_GPIO_Init+0xd0>)
 8005c9c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005c9e:	2220      	movs	r2, #32
 8005ca0:	4013      	ands	r3, r2
 8005ca2:	613b      	str	r3, [r7, #16]
 8005ca4:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8005ca6:	4b28      	ldr	r3, [pc, #160]	@ (8005d48 <MX_GPIO_Init+0xd0>)
 8005ca8:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005caa:	4b27      	ldr	r3, [pc, #156]	@ (8005d48 <MX_GPIO_Init+0xd0>)
 8005cac:	2101      	movs	r1, #1
 8005cae:	430a      	orrs	r2, r1
 8005cb0:	635a      	str	r2, [r3, #52]	@ 0x34
 8005cb2:	4b25      	ldr	r3, [pc, #148]	@ (8005d48 <MX_GPIO_Init+0xd0>)
 8005cb4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005cb6:	2201      	movs	r2, #1
 8005cb8:	4013      	ands	r3, r2
 8005cba:	60fb      	str	r3, [r7, #12]
 8005cbc:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8005cbe:	4b22      	ldr	r3, [pc, #136]	@ (8005d48 <MX_GPIO_Init+0xd0>)
 8005cc0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005cc2:	4b21      	ldr	r3, [pc, #132]	@ (8005d48 <MX_GPIO_Init+0xd0>)
 8005cc4:	2102      	movs	r1, #2
 8005cc6:	430a      	orrs	r2, r1
 8005cc8:	635a      	str	r2, [r3, #52]	@ 0x34
 8005cca:	4b1f      	ldr	r3, [pc, #124]	@ (8005d48 <MX_GPIO_Init+0xd0>)
 8005ccc:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005cce:	2202      	movs	r2, #2
 8005cd0:	4013      	ands	r3, r2
 8005cd2:	60bb      	str	r3, [r7, #8]
 8005cd4:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8005cd6:	4b1c      	ldr	r3, [pc, #112]	@ (8005d48 <MX_GPIO_Init+0xd0>)
 8005cd8:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005cda:	4b1b      	ldr	r3, [pc, #108]	@ (8005d48 <MX_GPIO_Init+0xd0>)
 8005cdc:	2108      	movs	r1, #8
 8005cde:	430a      	orrs	r2, r1
 8005ce0:	635a      	str	r2, [r3, #52]	@ 0x34
 8005ce2:	4b19      	ldr	r3, [pc, #100]	@ (8005d48 <MX_GPIO_Init+0xd0>)
 8005ce4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005ce6:	2208      	movs	r2, #8
 8005ce8:	4013      	ands	r3, r2
 8005cea:	607b      	str	r3, [r7, #4]
 8005cec:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, CAL_EN_Pin|GPIO_PIN_12|CAN_NSTANDBY_Pin|CAN_ENABLE_Pin, GPIO_PIN_RESET);
 8005cee:	4917      	ldr	r1, [pc, #92]	@ (8005d4c <MX_GPIO_Init+0xd4>)
 8005cf0:	4b17      	ldr	r3, [pc, #92]	@ (8005d50 <MX_GPIO_Init+0xd8>)
 8005cf2:	2200      	movs	r2, #0
 8005cf4:	0018      	movs	r0, r3
 8005cf6:	f003 f954 	bl	8008fa2 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : CAL_EN_Pin PB12 CAN_NSTANDBY_Pin CAN_ENABLE_Pin */
  GPIO_InitStruct.Pin = CAL_EN_Pin|GPIO_PIN_12|CAN_NSTANDBY_Pin|CAN_ENABLE_Pin;
 8005cfa:	193b      	adds	r3, r7, r4
 8005cfc:	4a13      	ldr	r2, [pc, #76]	@ (8005d4c <MX_GPIO_Init+0xd4>)
 8005cfe:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8005d00:	193b      	adds	r3, r7, r4
 8005d02:	2201      	movs	r2, #1
 8005d04:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8005d06:	193b      	adds	r3, r7, r4
 8005d08:	2200      	movs	r2, #0
 8005d0a:	609a      	str	r2, [r3, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8005d0c:	193b      	adds	r3, r7, r4
 8005d0e:	2200      	movs	r2, #0
 8005d10:	60da      	str	r2, [r3, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8005d12:	193b      	adds	r3, r7, r4
 8005d14:	4a0e      	ldr	r2, [pc, #56]	@ (8005d50 <MX_GPIO_Init+0xd8>)
 8005d16:	0019      	movs	r1, r3
 8005d18:	0010      	movs	r0, r2
 8005d1a:	f002 ffb9 	bl	8008c90 <HAL_GPIO_Init>

  /*Configure GPIO pin : CAN_NERROR_Pin */
  GPIO_InitStruct.Pin = CAN_NERROR_Pin;
 8005d1e:	0021      	movs	r1, r4
 8005d20:	187b      	adds	r3, r7, r1
 8005d22:	2280      	movs	r2, #128	@ 0x80
 8005d24:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8005d26:	187b      	adds	r3, r7, r1
 8005d28:	2200      	movs	r2, #0
 8005d2a:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8005d2c:	187b      	adds	r3, r7, r1
 8005d2e:	2200      	movs	r2, #0
 8005d30:	609a      	str	r2, [r3, #8]
  HAL_GPIO_Init(CAN_NERROR_GPIO_Port, &GPIO_InitStruct);
 8005d32:	187b      	adds	r3, r7, r1
 8005d34:	4a06      	ldr	r2, [pc, #24]	@ (8005d50 <MX_GPIO_Init+0xd8>)
 8005d36:	0019      	movs	r1, r3
 8005d38:	0010      	movs	r0, r2
 8005d3a:	f002 ffa9 	bl	8008c90 <HAL_GPIO_Init>

  /* USER CODE BEGIN MX_GPIO_Init_2 */
  /* USER CODE END MX_GPIO_Init_2 */
}
 8005d3e:	46c0      	nop			@ (mov r8, r8)
 8005d40:	46bd      	mov	sp, r7
 8005d42:	b00b      	add	sp, #44	@ 0x2c
 8005d44:	bd90      	pop	{r4, r7, pc}
 8005d46:	46c0      	nop			@ (mov r8, r8)
 8005d48:	40021000 	.word	0x40021000
 8005d4c:	0000102c 	.word	0x0000102c
 8005d50:	50000400 	.word	0x50000400

08005d54 <txHeaderConfigure>:


//-----------------------------------------------------------------------------------------------
// Header Configuration Functions
//-----------------------------------------------------------------------------------------------
void txHeaderConfigure(FDCAN_TxHeaderTypeDef* header) {
 8005d54:	b580      	push	{r7, lr}
 8005d56:	b082      	sub	sp, #8
 8005d58:	af00      	add	r7, sp, #0
 8005d5a:	6078      	str	r0, [r7, #4]
    header->IdType = FDCAN_EXTENDED_ID;
 8005d5c:	687b      	ldr	r3, [r7, #4]
 8005d5e:	2280      	movs	r2, #128	@ 0x80
 8005d60:	05d2      	lsls	r2, r2, #23
 8005d62:	605a      	str	r2, [r3, #4]
    header->TxFrameType = FDCAN_DATA_FRAME;
 8005d64:	687b      	ldr	r3, [r7, #4]
 8005d66:	2200      	movs	r2, #0
 8005d68:	609a      	str	r2, [r3, #8]
    header->DataLength = FDCAN_DLC_BYTES_8;
 8005d6a:	687b      	ldr	r3, [r7, #4]
 8005d6c:	2208      	movs	r2, #8
 8005d6e:	60da      	str	r2, [r3, #12]
    header->ErrorStateIndicator = FDCAN_ESI_ACTIVE;
 8005d70:	687b      	ldr	r3, [r7, #4]
 8005d72:	2200      	movs	r2, #0
 8005d74:	611a      	str	r2, [r3, #16]
    header->BitRateSwitch = FDCAN_BRS_OFF;
 8005d76:	687b      	ldr	r3, [r7, #4]
 8005d78:	2200      	movs	r2, #0
 8005d7a:	615a      	str	r2, [r3, #20]
    header->FDFormat = FDCAN_CLASSIC_CAN;
 8005d7c:	687b      	ldr	r3, [r7, #4]
 8005d7e:	2200      	movs	r2, #0
 8005d80:	619a      	str	r2, [r3, #24]
    header->TxEventFifoControl = FDCAN_NO_TX_EVENTS;
 8005d82:	687b      	ldr	r3, [r7, #4]
 8005d84:	2200      	movs	r2, #0
 8005d86:	61da      	str	r2, [r3, #28]
    header->MessageMarker = 0;
 8005d88:	687b      	ldr	r3, [r7, #4]
 8005d8a:	2200      	movs	r2, #0
 8005d8c:	621a      	str	r2, [r3, #32]
}
 8005d8e:	46c0      	nop			@ (mov r8, r8)
 8005d90:	46bd      	mov	sp, r7
 8005d92:	b002      	add	sp, #8
 8005d94:	bd80      	pop	{r7, pc}

08005d96 <rxHeaderConfigure>:
/**
 * @brief Configure RX header for receiving CAN messages
 * @param header Pointer to the RX header structure to configure
 * @note This function sets up the expected format for incoming messages
 */
void rxHeaderConfigure(FDCAN_RxHeaderTypeDef* header) {
 8005d96:	b580      	push	{r7, lr}
 8005d98:	b082      	sub	sp, #8
 8005d9a:	af00      	add	r7, sp, #0
 8005d9c:	6078      	str	r0, [r7, #4]
    header->IdType = FDCAN_EXTENDED_ID;
 8005d9e:	687b      	ldr	r3, [r7, #4]
 8005da0:	2280      	movs	r2, #128	@ 0x80
 8005da2:	05d2      	lsls	r2, r2, #23
 8005da4:	605a      	str	r2, [r3, #4]
    header->RxFrameType = FDCAN_DATA_FRAME;
 8005da6:	687b      	ldr	r3, [r7, #4]
 8005da8:	2200      	movs	r2, #0
 8005daa:	609a      	str	r2, [r3, #8]
    header->ErrorStateIndicator = FDCAN_ESI_ACTIVE;
 8005dac:	687b      	ldr	r3, [r7, #4]
 8005dae:	2200      	movs	r2, #0
 8005db0:	611a      	str	r2, [r3, #16]
    header->BitRateSwitch = FDCAN_BRS_OFF;
 8005db2:	687b      	ldr	r3, [r7, #4]
 8005db4:	2200      	movs	r2, #0
 8005db6:	615a      	str	r2, [r3, #20]
    header->FDFormat = FDCAN_CLASSIC_CAN;
 8005db8:	687b      	ldr	r3, [r7, #4]
 8005dba:	2200      	movs	r2, #0
 8005dbc:	619a      	str	r2, [r3, #24]
}
 8005dbe:	46c0      	nop			@ (mov r8, r8)
 8005dc0:	46bd      	mov	sp, r7
 8005dc2:	b002      	add	sp, #8
 8005dc4:	bd80      	pop	{r7, pc}

08005dc6 <txHeaderConfigureBooleanStatus>:

void txHeaderConfigureBooleanStatus(FDCAN_TxHeaderTypeDef* header) {
 8005dc6:	b580      	push	{r7, lr}
 8005dc8:	b082      	sub	sp, #8
 8005dca:	af00      	add	r7, sp, #0
 8005dcc:	6078      	str	r0, [r7, #4]
    header->IdType = FDCAN_EXTENDED_ID;
 8005dce:	687b      	ldr	r3, [r7, #4]
 8005dd0:	2280      	movs	r2, #128	@ 0x80
 8005dd2:	05d2      	lsls	r2, r2, #23
 8005dd4:	605a      	str	r2, [r3, #4]
    header->TxFrameType = FDCAN_DATA_FRAME;
 8005dd6:	687b      	ldr	r3, [r7, #4]
 8005dd8:	2200      	movs	r2, #0
 8005dda:	609a      	str	r2, [r3, #8]
    header->DataLength = FDCAN_DLC_BYTES_1;
 8005ddc:	687b      	ldr	r3, [r7, #4]
 8005dde:	2201      	movs	r2, #1
 8005de0:	60da      	str	r2, [r3, #12]
    header->ErrorStateIndicator = FDCAN_ESI_ACTIVE;
 8005de2:	687b      	ldr	r3, [r7, #4]
 8005de4:	2200      	movs	r2, #0
 8005de6:	611a      	str	r2, [r3, #16]
    header->BitRateSwitch = FDCAN_BRS_OFF;
 8005de8:	687b      	ldr	r3, [r7, #4]
 8005dea:	2200      	movs	r2, #0
 8005dec:	615a      	str	r2, [r3, #20]
    header->FDFormat = FDCAN_CLASSIC_CAN;
 8005dee:	687b      	ldr	r3, [r7, #4]
 8005df0:	2200      	movs	r2, #0
 8005df2:	619a      	str	r2, [r3, #24]
    header->TxEventFifoControl = FDCAN_NO_TX_EVENTS;
 8005df4:	687b      	ldr	r3, [r7, #4]
 8005df6:	2200      	movs	r2, #0
 8005df8:	61da      	str	r2, [r3, #28]
    header->MessageMarker = 0;
 8005dfa:	687b      	ldr	r3, [r7, #4]
 8005dfc:	2200      	movs	r2, #0
 8005dfe:	621a      	str	r2, [r3, #32]
}
 8005e00:	46c0      	nop			@ (mov r8, r8)
 8005e02:	46bd      	mov	sp, r7
 8005e04:	b002      	add	sp, #8
 8005e06:	bd80      	pop	{r7, pc}

08005e08 <Error_Handler>:

/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void) {
 8005e08:	b580      	push	{r7, lr}
 8005e0a:	b082      	sub	sp, #8
 8005e0c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler_Debug */
	uint32_t elapsed_time = 0;  // Track elapsed time in milliseconds
 8005e0e:	2300      	movs	r3, #0
 8005e10:	607b      	str	r3, [r7, #4]

	while (1) {
		// Blink the LED
		set_led_rgb(255, 0, 0);
 8005e12:	2200      	movs	r2, #0
 8005e14:	2100      	movs	r1, #0
 8005e16:	20ff      	movs	r0, #255	@ 0xff
 8005e18:	f000 fa80 	bl	800631c <set_led_rgb>
		HAL_Delay(500);
 8005e1c:	23fa      	movs	r3, #250	@ 0xfa
 8005e1e:	005b      	lsls	r3, r3, #1
 8005e20:	0018      	movs	r0, r3
 8005e22:	f001 f807 	bl	8006e34 <HAL_Delay>

		set_led_rgb(0, 0, 0);
 8005e26:	2200      	movs	r2, #0
 8005e28:	2100      	movs	r1, #0
 8005e2a:	2000      	movs	r0, #0
 8005e2c:	f000 fa76 	bl	800631c <set_led_rgb>
		HAL_Delay(500);
 8005e30:	23fa      	movs	r3, #250	@ 0xfa
 8005e32:	005b      	lsls	r3, r3, #1
 8005e34:	0018      	movs	r0, r3
 8005e36:	f000 fffd 	bl	8006e34 <HAL_Delay>

		// Increment elapsed time
		elapsed_time += 1000; // 500ms + 500ms per loop iteration
 8005e3a:	687b      	ldr	r3, [r7, #4]
 8005e3c:	22fa      	movs	r2, #250	@ 0xfa
 8005e3e:	0092      	lsls	r2, r2, #2
 8005e40:	4694      	mov	ip, r2
 8005e42:	4463      	add	r3, ip
 8005e44:	607b      	str	r3, [r7, #4]

		// Reset the chip after 10 seconds (10,000 milliseconds)
		if (elapsed_time >= 10000) {
 8005e46:	687b      	ldr	r3, [r7, #4]
 8005e48:	4a02      	ldr	r2, [pc, #8]	@ (8005e54 <Error_Handler+0x4c>)
 8005e4a:	4293      	cmp	r3, r2
 8005e4c:	d9e1      	bls.n	8005e12 <Error_Handler+0xa>
			// Trigger a system reset
			NVIC_SystemReset();
 8005e4e:	f7fe fbfb 	bl	8004648 <__NVIC_SystemReset>
 8005e52:	46c0      	nop			@ (mov r8, r8)
 8005e54:	0000270f 	.word	0x0000270f

08005e58 <is_delay_elapsed>:
 * @param duration    Desired delay in milliseconds.
 * @return true       If the desired delay has elapsed.
 * @return false      Otherwise.
 */
static bool is_delay_elapsed(uint32_t start_time, uint32_t duration)
{
 8005e58:	b580      	push	{r7, lr}
 8005e5a:	b084      	sub	sp, #16
 8005e5c:	af00      	add	r7, sp, #0
 8005e5e:	6078      	str	r0, [r7, #4]
 8005e60:	6039      	str	r1, [r7, #0]
    uint32_t now = HAL_GetTick();
 8005e62:	f000 ffdd 	bl	8006e20 <HAL_GetTick>
 8005e66:	0003      	movs	r3, r0
 8005e68:	60fb      	str	r3, [r7, #12]
    return ( (now - start_time) >= duration );
 8005e6a:	68fa      	ldr	r2, [r7, #12]
 8005e6c:	687b      	ldr	r3, [r7, #4]
 8005e6e:	1ad1      	subs	r1, r2, r3
 8005e70:	683a      	ldr	r2, [r7, #0]
 8005e72:	2300      	movs	r3, #0
 8005e74:	4291      	cmp	r1, r2
 8005e76:	415b      	adcs	r3, r3
 8005e78:	b2db      	uxtb	r3, r3
}
 8005e7a:	0018      	movs	r0, r3
 8005e7c:	46bd      	mov	sp, r7
 8005e7e:	b004      	add	sp, #16
 8005e80:	bd80      	pop	{r7, pc}
	...

08005e84 <blink_led_morse_init>:

void blink_led_morse_init(const char *message, float hue2)
{
 8005e84:	b580      	push	{r7, lr}
 8005e86:	b082      	sub	sp, #8
 8005e88:	af00      	add	r7, sp, #0
 8005e8a:	6078      	str	r0, [r7, #4]
 8005e8c:	6039      	str	r1, [r7, #0]
    // Initialize the context with the provided message and hue
    ctx.message   = message;
 8005e8e:	4b09      	ldr	r3, [pc, #36]	@ (8005eb4 <blink_led_morse_init+0x30>)
 8005e90:	687a      	ldr	r2, [r7, #4]
 8005e92:	601a      	str	r2, [r3, #0]
    ctx.morse_ptr = NULL;
 8005e94:	4b07      	ldr	r3, [pc, #28]	@ (8005eb4 <blink_led_morse_init+0x30>)
 8005e96:	2200      	movs	r2, #0
 8005e98:	605a      	str	r2, [r3, #4]
    ctx.timestamp = 0;
 8005e9a:	4b06      	ldr	r3, [pc, #24]	@ (8005eb4 <blink_led_morse_init+0x30>)
 8005e9c:	2200      	movs	r2, #0
 8005e9e:	609a      	str	r2, [r3, #8]
    ctx.state     = MORSE_STATE_IDLE;
 8005ea0:	4b04      	ldr	r3, [pc, #16]	@ (8005eb4 <blink_led_morse_init+0x30>)
 8005ea2:	2200      	movs	r2, #0
 8005ea4:	731a      	strb	r2, [r3, #12]

    ctx.hue       = hue2;
 8005ea6:	4b03      	ldr	r3, [pc, #12]	@ (8005eb4 <blink_led_morse_init+0x30>)
 8005ea8:	683a      	ldr	r2, [r7, #0]
 8005eaa:	611a      	str	r2, [r3, #16]
    //ctx.hue       = 0.33;
}
 8005eac:	46c0      	nop			@ (mov r8, r8)
 8005eae:	46bd      	mov	sp, r7
 8005eb0:	b002      	add	sp, #8
 8005eb2:	bd80      	pop	{r7, pc}
 8005eb4:	2000daa0 	.word	0x2000daa0

08005eb8 <blink_led_morse_process>:

bool blink_led_morse_process(void)
{
 8005eb8:	b580      	push	{r7, lr}
 8005eba:	b084      	sub	sp, #16
 8005ebc:	af00      	add	r7, sp, #0
    // If we are already done, just return true immediately
    if (ctx.state == MORSE_STATE_DONE) {
 8005ebe:	4b64      	ldr	r3, [pc, #400]	@ (8006050 <blink_led_morse_process+0x198>)
 8005ec0:	7b1b      	ldrb	r3, [r3, #12]
 8005ec2:	2b05      	cmp	r3, #5
 8005ec4:	d101      	bne.n	8005eca <blink_led_morse_process+0x12>
        return true;
 8005ec6:	2301      	movs	r3, #1
 8005ec8:	e0be      	b.n	8006048 <blink_led_morse_process+0x190>
    }

    switch (ctx.state)
 8005eca:	4b61      	ldr	r3, [pc, #388]	@ (8006050 <blink_led_morse_process+0x198>)
 8005ecc:	7b1b      	ldrb	r3, [r3, #12]
 8005ece:	2b04      	cmp	r3, #4
 8005ed0:	d900      	bls.n	8005ed4 <blink_led_morse_process+0x1c>
 8005ed2:	e0ac      	b.n	800602e <blink_led_morse_process+0x176>
 8005ed4:	009a      	lsls	r2, r3, #2
 8005ed6:	4b5f      	ldr	r3, [pc, #380]	@ (8006054 <blink_led_morse_process+0x19c>)
 8005ed8:	18d3      	adds	r3, r2, r3
 8005eda:	681b      	ldr	r3, [r3, #0]
 8005edc:	469f      	mov	pc, r3
        //   - If end of string, go to DONE
        //   - Otherwise, get the Morse code for that character
        //----------------------------------------------------------------------
        case MORSE_STATE_IDLE:
        {
            char c = *ctx.message++;
 8005ede:	4b5c      	ldr	r3, [pc, #368]	@ (8006050 <blink_led_morse_process+0x198>)
 8005ee0:	681b      	ldr	r3, [r3, #0]
 8005ee2:	1c59      	adds	r1, r3, #1
 8005ee4:	4a5a      	ldr	r2, [pc, #360]	@ (8006050 <blink_led_morse_process+0x198>)
 8005ee6:	6011      	str	r1, [r2, #0]
 8005ee8:	1dfa      	adds	r2, r7, #7
 8005eea:	781b      	ldrb	r3, [r3, #0]
 8005eec:	7013      	strb	r3, [r2, #0]
            if (c == '\0') {
 8005eee:	1dfb      	adds	r3, r7, #7
 8005ef0:	781b      	ldrb	r3, [r3, #0]
 8005ef2:	2b00      	cmp	r3, #0
 8005ef4:	d103      	bne.n	8005efe <blink_led_morse_process+0x46>
                // Reached the end of the message
                ctx.state = MORSE_STATE_DONE;
 8005ef6:	4b56      	ldr	r3, [pc, #344]	@ (8006050 <blink_led_morse_process+0x198>)
 8005ef8:	2205      	movs	r2, #5
 8005efa:	731a      	strb	r2, [r3, #12]
                break;
 8005efc:	e09e      	b.n	800603c <blink_led_morse_process+0x184>
            }

            if (c == ' ') {
 8005efe:	1dfb      	adds	r3, r7, #7
 8005f00:	781b      	ldrb	r3, [r3, #0]
 8005f02:	2b20      	cmp	r3, #32
 8005f04:	d108      	bne.n	8005f18 <blink_led_morse_process+0x60>
                // Space indicates new word (or separation)
                ctx.timestamp = HAL_GetTick();
 8005f06:	f000 ff8b 	bl	8006e20 <HAL_GetTick>
 8005f0a:	0002      	movs	r2, r0
 8005f0c:	4b50      	ldr	r3, [pc, #320]	@ (8006050 <blink_led_morse_process+0x198>)
 8005f0e:	609a      	str	r2, [r3, #8]
                ctx.state     = MORSE_STATE_LETTER_PAUSE;
 8005f10:	4b4f      	ldr	r3, [pc, #316]	@ (8006050 <blink_led_morse_process+0x198>)
 8005f12:	2204      	movs	r2, #4
 8005f14:	731a      	strb	r2, [r3, #12]
                ctx.morse_ptr = get_morse_code(c);

                // Move to handle the first Morse symbol (dot or dash)
                ctx.state = MORSE_STATE_NEXT_SYMBOL;
            }
            break;
 8005f16:	e091      	b.n	800603c <blink_led_morse_process+0x184>
                c = (char)toupper((int)c);
 8005f18:	1dfb      	adds	r3, r7, #7
 8005f1a:	781b      	ldrb	r3, [r3, #0]
 8005f1c:	603b      	str	r3, [r7, #0]
 8005f1e:	683b      	ldr	r3, [r7, #0]
 8005f20:	1c5a      	adds	r2, r3, #1
 8005f22:	4b4d      	ldr	r3, [pc, #308]	@ (8006058 <blink_led_morse_process+0x1a0>)
 8005f24:	18d3      	adds	r3, r2, r3
 8005f26:	781b      	ldrb	r3, [r3, #0]
 8005f28:	001a      	movs	r2, r3
 8005f2a:	2303      	movs	r3, #3
 8005f2c:	4013      	ands	r3, r2
 8005f2e:	2b02      	cmp	r3, #2
 8005f30:	d102      	bne.n	8005f38 <blink_led_morse_process+0x80>
 8005f32:	683b      	ldr	r3, [r7, #0]
 8005f34:	3b20      	subs	r3, #32
 8005f36:	e000      	b.n	8005f3a <blink_led_morse_process+0x82>
 8005f38:	683b      	ldr	r3, [r7, #0]
 8005f3a:	1dfa      	adds	r2, r7, #7
 8005f3c:	7013      	strb	r3, [r2, #0]
                ctx.morse_ptr = get_morse_code(c);
 8005f3e:	1dfb      	adds	r3, r7, #7
 8005f40:	781b      	ldrb	r3, [r3, #0]
 8005f42:	0018      	movs	r0, r3
 8005f44:	f000 f88a 	bl	800605c <get_morse_code>
 8005f48:	0002      	movs	r2, r0
 8005f4a:	4b41      	ldr	r3, [pc, #260]	@ (8006050 <blink_led_morse_process+0x198>)
 8005f4c:	605a      	str	r2, [r3, #4]
                ctx.state = MORSE_STATE_NEXT_SYMBOL;
 8005f4e:	4b40      	ldr	r3, [pc, #256]	@ (8006050 <blink_led_morse_process+0x198>)
 8005f50:	2201      	movs	r2, #1
 8005f52:	731a      	strb	r2, [r3, #12]
            break;
 8005f54:	e072      	b.n	800603c <blink_led_morse_process+0x184>
        // MORSE_STATE_NEXT_SYMBOL:
        //   - If we reached end of Morse string, letter pause
        //   - Otherwise, turn LED on for dot/dash
        //----------------------------------------------------------------------
        case MORSE_STATE_NEXT_SYMBOL:
            if (ctx.morse_ptr == NULL || *ctx.morse_ptr == '\0') {
 8005f56:	4b3e      	ldr	r3, [pc, #248]	@ (8006050 <blink_led_morse_process+0x198>)
 8005f58:	685b      	ldr	r3, [r3, #4]
 8005f5a:	2b00      	cmp	r3, #0
 8005f5c:	d004      	beq.n	8005f68 <blink_led_morse_process+0xb0>
 8005f5e:	4b3c      	ldr	r3, [pc, #240]	@ (8006050 <blink_led_morse_process+0x198>)
 8005f60:	685b      	ldr	r3, [r3, #4]
 8005f62:	781b      	ldrb	r3, [r3, #0]
 8005f64:	2b00      	cmp	r3, #0
 8005f66:	d108      	bne.n	8005f7a <blink_led_morse_process+0xc2>
                // No more symbols in this letter
                ctx.timestamp = HAL_GetTick();
 8005f68:	f000 ff5a 	bl	8006e20 <HAL_GetTick>
 8005f6c:	0002      	movs	r2, r0
 8005f6e:	4b38      	ldr	r3, [pc, #224]	@ (8006050 <blink_led_morse_process+0x198>)
 8005f70:	609a      	str	r2, [r3, #8]
                ctx.state     = MORSE_STATE_LETTER_PAUSE;
 8005f72:	4b37      	ldr	r3, [pc, #220]	@ (8006050 <blink_led_morse_process+0x198>)
 8005f74:	2204      	movs	r2, #4
 8005f76:	731a      	strb	r2, [r3, #12]

                // Record time, move to SYMBOL_ON
                ctx.timestamp = HAL_GetTick();
                ctx.state     = MORSE_STATE_SYMBOL_ON;
            }
            break;
 8005f78:	e060      	b.n	800603c <blink_led_morse_process+0x184>
                set_led_hue(ctx.hue, 1.0f);
 8005f7a:	4b35      	ldr	r3, [pc, #212]	@ (8006050 <blink_led_morse_process+0x198>)
 8005f7c:	691b      	ldr	r3, [r3, #16]
 8005f7e:	22fe      	movs	r2, #254	@ 0xfe
 8005f80:	0592      	lsls	r2, r2, #22
 8005f82:	1c11      	adds	r1, r2, #0
 8005f84:	1c18      	adds	r0, r3, #0
 8005f86:	f000 fa1f 	bl	80063c8 <set_led_hue>
                ctx.timestamp = HAL_GetTick();
 8005f8a:	f000 ff49 	bl	8006e20 <HAL_GetTick>
 8005f8e:	0002      	movs	r2, r0
 8005f90:	4b2f      	ldr	r3, [pc, #188]	@ (8006050 <blink_led_morse_process+0x198>)
 8005f92:	609a      	str	r2, [r3, #8]
                ctx.state     = MORSE_STATE_SYMBOL_ON;
 8005f94:	4b2e      	ldr	r3, [pc, #184]	@ (8006050 <blink_led_morse_process+0x198>)
 8005f96:	2202      	movs	r2, #2
 8005f98:	731a      	strb	r2, [r3, #12]
            break;
 8005f9a:	e04f      	b.n	800603c <blink_led_morse_process+0x184>
        //   - Wait until dot/dash ON time is finished
        //   - Then turn LED off and do inter-symbol pause
        //----------------------------------------------------------------------
        case MORSE_STATE_SYMBOL_ON:
        {
            bool is_dot  = (*ctx.morse_ptr == '.');
 8005f9c:	4b2c      	ldr	r3, [pc, #176]	@ (8006050 <blink_led_morse_process+0x198>)
 8005f9e:	685b      	ldr	r3, [r3, #4]
 8005fa0:	781a      	ldrb	r2, [r3, #0]
 8005fa2:	200f      	movs	r0, #15
 8005fa4:	183b      	adds	r3, r7, r0
 8005fa6:	3a2e      	subs	r2, #46	@ 0x2e
 8005fa8:	4251      	negs	r1, r2
 8005faa:	414a      	adcs	r2, r1
 8005fac:	701a      	strb	r2, [r3, #0]
            uint32_t needed = is_dot ? DOT_DURATION : DASH_DURATION;
 8005fae:	183b      	adds	r3, r7, r0
 8005fb0:	781b      	ldrb	r3, [r3, #0]
 8005fb2:	2b00      	cmp	r3, #0
 8005fb4:	d001      	beq.n	8005fba <blink_led_morse_process+0x102>
 8005fb6:	23c8      	movs	r3, #200	@ 0xc8
 8005fb8:	e001      	b.n	8005fbe <blink_led_morse_process+0x106>
 8005fba:	2396      	movs	r3, #150	@ 0x96
 8005fbc:	009b      	lsls	r3, r3, #2
 8005fbe:	60bb      	str	r3, [r7, #8]

            if (is_delay_elapsed(ctx.timestamp, needed)) {
 8005fc0:	4b23      	ldr	r3, [pc, #140]	@ (8006050 <blink_led_morse_process+0x198>)
 8005fc2:	689b      	ldr	r3, [r3, #8]
 8005fc4:	68ba      	ldr	r2, [r7, #8]
 8005fc6:	0011      	movs	r1, r2
 8005fc8:	0018      	movs	r0, r3
 8005fca:	f7ff ff45 	bl	8005e58 <is_delay_elapsed>
 8005fce:	1e03      	subs	r3, r0, #0
 8005fd0:	d02f      	beq.n	8006032 <blink_led_morse_process+0x17a>
                // Time's up for the current symbol. Turn off LED
                set_led_hue(0.0f, 0.0f);
 8005fd2:	2200      	movs	r2, #0
 8005fd4:	2300      	movs	r3, #0
 8005fd6:	1c11      	adds	r1, r2, #0
 8005fd8:	1c18      	adds	r0, r3, #0
 8005fda:	f000 f9f5 	bl	80063c8 <set_led_hue>

                // Move to SYMBOL_OFF
                ctx.timestamp = HAL_GetTick();
 8005fde:	f000 ff1f 	bl	8006e20 <HAL_GetTick>
 8005fe2:	0002      	movs	r2, r0
 8005fe4:	4b1a      	ldr	r3, [pc, #104]	@ (8006050 <blink_led_morse_process+0x198>)
 8005fe6:	609a      	str	r2, [r3, #8]
                ctx.state     = MORSE_STATE_SYMBOL_OFF;
 8005fe8:	4b19      	ldr	r3, [pc, #100]	@ (8006050 <blink_led_morse_process+0x198>)
 8005fea:	2203      	movs	r2, #3
 8005fec:	731a      	strb	r2, [r3, #12]
            }
            break;
 8005fee:	e020      	b.n	8006032 <blink_led_morse_process+0x17a>
        // MORSE_STATE_SYMBOL_OFF:
        //   - Inter-symbol pause
        //   - When done, move to next symbol (ctx.morse_ptr++)
        //----------------------------------------------------------------------
        case MORSE_STATE_SYMBOL_OFF:
            if (is_delay_elapsed(ctx.timestamp, SYMBOL_PAUSE)) {
 8005ff0:	4b17      	ldr	r3, [pc, #92]	@ (8006050 <blink_led_morse_process+0x198>)
 8005ff2:	689b      	ldr	r3, [r3, #8]
 8005ff4:	21c8      	movs	r1, #200	@ 0xc8
 8005ff6:	0018      	movs	r0, r3
 8005ff8:	f7ff ff2e 	bl	8005e58 <is_delay_elapsed>
 8005ffc:	1e03      	subs	r3, r0, #0
 8005ffe:	d01a      	beq.n	8006036 <blink_led_morse_process+0x17e>
                // Advance to next dot/dash in the same letter
                ctx.morse_ptr++;
 8006000:	4b13      	ldr	r3, [pc, #76]	@ (8006050 <blink_led_morse_process+0x198>)
 8006002:	685b      	ldr	r3, [r3, #4]
 8006004:	1c5a      	adds	r2, r3, #1
 8006006:	4b12      	ldr	r3, [pc, #72]	@ (8006050 <blink_led_morse_process+0x198>)
 8006008:	605a      	str	r2, [r3, #4]
                ctx.state = MORSE_STATE_NEXT_SYMBOL;
 800600a:	4b11      	ldr	r3, [pc, #68]	@ (8006050 <blink_led_morse_process+0x198>)
 800600c:	2201      	movs	r2, #1
 800600e:	731a      	strb	r2, [r3, #12]
            }
            break;
 8006010:	e011      	b.n	8006036 <blink_led_morse_process+0x17e>
        // MORSE_STATE_LETTER_PAUSE:
        //   - Wait the letter pause
        //   - Then go back to IDLE for next character
        //----------------------------------------------------------------------
        case MORSE_STATE_LETTER_PAUSE:
            if (is_delay_elapsed(ctx.timestamp, LETTER_PAUSE)) {
 8006012:	4b0f      	ldr	r3, [pc, #60]	@ (8006050 <blink_led_morse_process+0x198>)
 8006014:	689b      	ldr	r3, [r3, #8]
 8006016:	2296      	movs	r2, #150	@ 0x96
 8006018:	0092      	lsls	r2, r2, #2
 800601a:	0011      	movs	r1, r2
 800601c:	0018      	movs	r0, r3
 800601e:	f7ff ff1b 	bl	8005e58 <is_delay_elapsed>
 8006022:	1e03      	subs	r3, r0, #0
 8006024:	d009      	beq.n	800603a <blink_led_morse_process+0x182>
                ctx.state = MORSE_STATE_IDLE;
 8006026:	4b0a      	ldr	r3, [pc, #40]	@ (8006050 <blink_led_morse_process+0x198>)
 8006028:	2200      	movs	r2, #0
 800602a:	731a      	strb	r2, [r3, #12]
            }
            break;
 800602c:	e005      	b.n	800603a <blink_led_morse_process+0x182>
        //   - We’re finished. We'll never leave this state unless re-initialized
        //----------------------------------------------------------------------
        case MORSE_STATE_DONE:
        default:
            // Do nothing
            break;
 800602e:	46c0      	nop			@ (mov r8, r8)
 8006030:	e004      	b.n	800603c <blink_led_morse_process+0x184>
            break;
 8006032:	46c0      	nop			@ (mov r8, r8)
 8006034:	e002      	b.n	800603c <blink_led_morse_process+0x184>
            break;
 8006036:	46c0      	nop			@ (mov r8, r8)
 8006038:	e000      	b.n	800603c <blink_led_morse_process+0x184>
            break;
 800603a:	46c0      	nop			@ (mov r8, r8)
    }

    // Return true if we've finished blinking the entire message
    return (ctx.state == MORSE_STATE_DONE);
 800603c:	4b04      	ldr	r3, [pc, #16]	@ (8006050 <blink_led_morse_process+0x198>)
 800603e:	7b1b      	ldrb	r3, [r3, #12]
 8006040:	3b05      	subs	r3, #5
 8006042:	425a      	negs	r2, r3
 8006044:	4153      	adcs	r3, r2
 8006046:	b2db      	uxtb	r3, r3
}
 8006048:	0018      	movs	r0, r3
 800604a:	46bd      	mov	sp, r7
 800604c:	b004      	add	sp, #16
 800604e:	bd80      	pop	{r7, pc}
 8006050:	2000daa0 	.word	0x2000daa0
 8006054:	0800c37c 	.word	0x0800c37c
 8006058:	0800c44c 	.word	0x0800c44c

0800605c <get_morse_code>:

const char* get_morse_code(char c)
{
 800605c:	b580      	push	{r7, lr}
 800605e:	b082      	sub	sp, #8
 8006060:	af00      	add	r7, sp, #0
 8006062:	0002      	movs	r2, r0
 8006064:	1dfb      	adds	r3, r7, #7
 8006066:	701a      	strb	r2, [r3, #0]
        "---..", // 8
        "----."  // 9
    };

    // If it's A-Z
    if (c >= 'A' && c <= 'Z') {
 8006068:	1dfb      	adds	r3, r7, #7
 800606a:	781b      	ldrb	r3, [r3, #0]
 800606c:	2b40      	cmp	r3, #64	@ 0x40
 800606e:	d90b      	bls.n	8006088 <get_morse_code+0x2c>
 8006070:	1dfb      	adds	r3, r7, #7
 8006072:	781b      	ldrb	r3, [r3, #0]
 8006074:	2b5a      	cmp	r3, #90	@ 0x5a
 8006076:	d807      	bhi.n	8006088 <get_morse_code+0x2c>
        return morse_table[c - 'A'];
 8006078:	1dfb      	adds	r3, r7, #7
 800607a:	781b      	ldrb	r3, [r3, #0]
 800607c:	3b41      	subs	r3, #65	@ 0x41
 800607e:	001a      	movs	r2, r3
 8006080:	4b0c      	ldr	r3, [pc, #48]	@ (80060b4 <get_morse_code+0x58>)
 8006082:	0092      	lsls	r2, r2, #2
 8006084:	58d3      	ldr	r3, [r2, r3]
 8006086:	e010      	b.n	80060aa <get_morse_code+0x4e>
    }
    // If it's 0-9
    if (c >= '0' && c <= '9') {
 8006088:	1dfb      	adds	r3, r7, #7
 800608a:	781b      	ldrb	r3, [r3, #0]
 800608c:	2b2f      	cmp	r3, #47	@ 0x2f
 800608e:	d90b      	bls.n	80060a8 <get_morse_code+0x4c>
 8006090:	1dfb      	adds	r3, r7, #7
 8006092:	781b      	ldrb	r3, [r3, #0]
 8006094:	2b39      	cmp	r3, #57	@ 0x39
 8006096:	d807      	bhi.n	80060a8 <get_morse_code+0x4c>
        return morse_table[(c - '0') + 26];
 8006098:	1dfb      	adds	r3, r7, #7
 800609a:	781b      	ldrb	r3, [r3, #0]
 800609c:	3b16      	subs	r3, #22
 800609e:	001a      	movs	r2, r3
 80060a0:	4b04      	ldr	r3, [pc, #16]	@ (80060b4 <get_morse_code+0x58>)
 80060a2:	0092      	lsls	r2, r2, #2
 80060a4:	58d3      	ldr	r3, [r2, r3]
 80060a6:	e000      	b.n	80060aa <get_morse_code+0x4e>
    }

    // Unknown character or punctuation -> no Morse output
    return "";
 80060a8:	4b03      	ldr	r3, [pc, #12]	@ (80060b8 <get_morse_code+0x5c>)
}
 80060aa:	0018      	movs	r0, r3
 80060ac:	46bd      	mov	sp, r7
 80060ae:	b002      	add	sp, #8
 80060b0:	bd80      	pop	{r7, pc}
 80060b2:	46c0      	nop			@ (mov r8, r8)
 80060b4:	2000000c 	.word	0x2000000c
 80060b8:	0800c140 	.word	0x0800c140

080060bc <hue_to_rgb>:
#include "rgb_led.h"
// #include "main.h"

// Function to convert hue (0 to 1) to RGB values
void hue_to_rgb(float hue, int *r, int *g, int *b)
{
 80060bc:	b5b0      	push	{r4, r5, r7, lr}
 80060be:	b092      	sub	sp, #72	@ 0x48
 80060c0:	af00      	add	r7, sp, #0
 80060c2:	6178      	str	r0, [r7, #20]
 80060c4:	6139      	str	r1, [r7, #16]
 80060c6:	60fa      	str	r2, [r7, #12]
 80060c8:	60bb      	str	r3, [r7, #8]
    if (hue < 0.0 || hue > 1.0) {
 80060ca:	2100      	movs	r1, #0
 80060cc:	6978      	ldr	r0, [r7, #20]
 80060ce:	f7fa f9a3 	bl	8000418 <__aeabi_fcmplt>
 80060d2:	1e03      	subs	r3, r0, #0
 80060d4:	d106      	bne.n	80060e4 <hue_to_rgb+0x28>
 80060d6:	21fe      	movs	r1, #254	@ 0xfe
 80060d8:	0589      	lsls	r1, r1, #22
 80060da:	6978      	ldr	r0, [r7, #20]
 80060dc:	f7fa f9b0 	bl	8000440 <__aeabi_fcmpgt>
 80060e0:	1e03      	subs	r3, r0, #0
 80060e2:	d00a      	beq.n	80060fa <hue_to_rgb+0x3e>
        // Clamp hue between 0 and 1
        hue = (hue < 0.0) ? 0.0 : 1.0;
 80060e4:	2100      	movs	r1, #0
 80060e6:	6978      	ldr	r0, [r7, #20]
 80060e8:	f7fa f996 	bl	8000418 <__aeabi_fcmplt>
 80060ec:	1e03      	subs	r3, r0, #0
 80060ee:	d001      	beq.n	80060f4 <hue_to_rgb+0x38>
 80060f0:	2300      	movs	r3, #0
 80060f2:	e001      	b.n	80060f8 <hue_to_rgb+0x3c>
 80060f4:	23fe      	movs	r3, #254	@ 0xfe
 80060f6:	059b      	lsls	r3, r3, #22
 80060f8:	617b      	str	r3, [r7, #20]
    }

    float h = hue * 360.0; // Convert to 0-360 degrees
 80060fa:	4983      	ldr	r1, [pc, #524]	@ (8006308 <hue_to_rgb+0x24c>)
 80060fc:	6978      	ldr	r0, [r7, #20]
 80060fe:	f7fa fdbf 	bl	8000c80 <__aeabi_fmul>
 8006102:	1c03      	adds	r3, r0, #0
 8006104:	63bb      	str	r3, [r7, #56]	@ 0x38
    float s = 1.0; // Full saturation
 8006106:	23fe      	movs	r3, #254	@ 0xfe
 8006108:	059b      	lsls	r3, r3, #22
 800610a:	637b      	str	r3, [r7, #52]	@ 0x34
    float v = 1.0; // Full value
 800610c:	23fe      	movs	r3, #254	@ 0xfe
 800610e:	059b      	lsls	r3, r3, #22
 8006110:	633b      	str	r3, [r7, #48]	@ 0x30

    int i = (int)(h / 60.0) % 6;
 8006112:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 8006114:	f7fd f884 	bl	8003220 <__aeabi_f2d>
 8006118:	2200      	movs	r2, #0
 800611a:	4b7c      	ldr	r3, [pc, #496]	@ (800630c <hue_to_rgb+0x250>)
 800611c:	f7fb fdea 	bl	8001cf4 <__aeabi_ddiv>
 8006120:	0002      	movs	r2, r0
 8006122:	000b      	movs	r3, r1
 8006124:	0010      	movs	r0, r2
 8006126:	0019      	movs	r1, r3
 8006128:	f7fc ffec 	bl	8003104 <__aeabi_d2iz>
 800612c:	0003      	movs	r3, r0
 800612e:	2106      	movs	r1, #6
 8006130:	0018      	movs	r0, r3
 8006132:	f7fa f959 	bl	80003e8 <__aeabi_idivmod>
 8006136:	000b      	movs	r3, r1
 8006138:	62fb      	str	r3, [r7, #44]	@ 0x2c
    float f = (h / 60.0) - i;
 800613a:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 800613c:	f7fd f870 	bl	8003220 <__aeabi_f2d>
 8006140:	2200      	movs	r2, #0
 8006142:	4b72      	ldr	r3, [pc, #456]	@ (800630c <hue_to_rgb+0x250>)
 8006144:	f7fb fdd6 	bl	8001cf4 <__aeabi_ddiv>
 8006148:	0002      	movs	r2, r0
 800614a:	000b      	movs	r3, r1
 800614c:	0014      	movs	r4, r2
 800614e:	001d      	movs	r5, r3
 8006150:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
 8006152:	f7fd f813 	bl	800317c <__aeabi_i2d>
 8006156:	0002      	movs	r2, r0
 8006158:	000b      	movs	r3, r1
 800615a:	0020      	movs	r0, r4
 800615c:	0029      	movs	r1, r5
 800615e:	f7fc fbc7 	bl	80028f0 <__aeabi_dsub>
 8006162:	0002      	movs	r2, r0
 8006164:	000b      	movs	r3, r1
 8006166:	0010      	movs	r0, r2
 8006168:	0019      	movs	r1, r3
 800616a:	f7fd f8a1 	bl	80032b0 <__aeabi_d2f>
 800616e:	1c03      	adds	r3, r0, #0
 8006170:	62bb      	str	r3, [r7, #40]	@ 0x28
    float p = v * (1.0 - s);
 8006172:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 8006174:	f7fd f854 	bl	8003220 <__aeabi_f2d>
 8006178:	0004      	movs	r4, r0
 800617a:	000d      	movs	r5, r1
 800617c:	6b78      	ldr	r0, [r7, #52]	@ 0x34
 800617e:	f7fd f84f 	bl	8003220 <__aeabi_f2d>
 8006182:	0002      	movs	r2, r0
 8006184:	000b      	movs	r3, r1
 8006186:	2000      	movs	r0, #0
 8006188:	4961      	ldr	r1, [pc, #388]	@ (8006310 <hue_to_rgb+0x254>)
 800618a:	f7fc fbb1 	bl	80028f0 <__aeabi_dsub>
 800618e:	0002      	movs	r2, r0
 8006190:	000b      	movs	r3, r1
 8006192:	0020      	movs	r0, r4
 8006194:	0029      	movs	r1, r5
 8006196:	f7fc f8c5 	bl	8002324 <__aeabi_dmul>
 800619a:	0002      	movs	r2, r0
 800619c:	000b      	movs	r3, r1
 800619e:	0010      	movs	r0, r2
 80061a0:	0019      	movs	r1, r3
 80061a2:	f7fd f885 	bl	80032b0 <__aeabi_d2f>
 80061a6:	1c03      	adds	r3, r0, #0
 80061a8:	627b      	str	r3, [r7, #36]	@ 0x24
    float q = v * (1.0 - f * s);
 80061aa:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 80061ac:	f7fd f838 	bl	8003220 <__aeabi_f2d>
 80061b0:	0004      	movs	r4, r0
 80061b2:	000d      	movs	r5, r1
 80061b4:	6b79      	ldr	r1, [r7, #52]	@ 0x34
 80061b6:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 80061b8:	f7fa fd62 	bl	8000c80 <__aeabi_fmul>
 80061bc:	1c03      	adds	r3, r0, #0
 80061be:	1c18      	adds	r0, r3, #0
 80061c0:	f7fd f82e 	bl	8003220 <__aeabi_f2d>
 80061c4:	0002      	movs	r2, r0
 80061c6:	000b      	movs	r3, r1
 80061c8:	2000      	movs	r0, #0
 80061ca:	4951      	ldr	r1, [pc, #324]	@ (8006310 <hue_to_rgb+0x254>)
 80061cc:	f7fc fb90 	bl	80028f0 <__aeabi_dsub>
 80061d0:	0002      	movs	r2, r0
 80061d2:	000b      	movs	r3, r1
 80061d4:	0020      	movs	r0, r4
 80061d6:	0029      	movs	r1, r5
 80061d8:	f7fc f8a4 	bl	8002324 <__aeabi_dmul>
 80061dc:	0002      	movs	r2, r0
 80061de:	000b      	movs	r3, r1
 80061e0:	0010      	movs	r0, r2
 80061e2:	0019      	movs	r1, r3
 80061e4:	f7fd f864 	bl	80032b0 <__aeabi_d2f>
 80061e8:	1c03      	adds	r3, r0, #0
 80061ea:	623b      	str	r3, [r7, #32]
    float t = v * (1.0 - (1.0 - f) * s);
 80061ec:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 80061ee:	f7fd f817 	bl	8003220 <__aeabi_f2d>
 80061f2:	0004      	movs	r4, r0
 80061f4:	000d      	movs	r5, r1
 80061f6:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 80061f8:	f7fd f812 	bl	8003220 <__aeabi_f2d>
 80061fc:	0002      	movs	r2, r0
 80061fe:	000b      	movs	r3, r1
 8006200:	2000      	movs	r0, #0
 8006202:	4943      	ldr	r1, [pc, #268]	@ (8006310 <hue_to_rgb+0x254>)
 8006204:	f7fc fb74 	bl	80028f0 <__aeabi_dsub>
 8006208:	0002      	movs	r2, r0
 800620a:	000b      	movs	r3, r1
 800620c:	603a      	str	r2, [r7, #0]
 800620e:	607b      	str	r3, [r7, #4]
 8006210:	6b78      	ldr	r0, [r7, #52]	@ 0x34
 8006212:	f7fd f805 	bl	8003220 <__aeabi_f2d>
 8006216:	0002      	movs	r2, r0
 8006218:	000b      	movs	r3, r1
 800621a:	6838      	ldr	r0, [r7, #0]
 800621c:	6879      	ldr	r1, [r7, #4]
 800621e:	f7fc f881 	bl	8002324 <__aeabi_dmul>
 8006222:	0002      	movs	r2, r0
 8006224:	000b      	movs	r3, r1
 8006226:	2000      	movs	r0, #0
 8006228:	4939      	ldr	r1, [pc, #228]	@ (8006310 <hue_to_rgb+0x254>)
 800622a:	f7fc fb61 	bl	80028f0 <__aeabi_dsub>
 800622e:	0002      	movs	r2, r0
 8006230:	000b      	movs	r3, r1
 8006232:	0020      	movs	r0, r4
 8006234:	0029      	movs	r1, r5
 8006236:	f7fc f875 	bl	8002324 <__aeabi_dmul>
 800623a:	0002      	movs	r2, r0
 800623c:	000b      	movs	r3, r1
 800623e:	0010      	movs	r0, r2
 8006240:	0019      	movs	r1, r3
 8006242:	f7fd f835 	bl	80032b0 <__aeabi_d2f>
 8006246:	1c03      	adds	r3, r0, #0
 8006248:	61fb      	str	r3, [r7, #28]

    float r_f, g_f, b_f;
    switch (i) {
 800624a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800624c:	2b05      	cmp	r3, #5
 800624e:	d82f      	bhi.n	80062b0 <hue_to_rgb+0x1f4>
 8006250:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8006252:	009a      	lsls	r2, r3, #2
 8006254:	4b2f      	ldr	r3, [pc, #188]	@ (8006314 <hue_to_rgb+0x258>)
 8006256:	18d3      	adds	r3, r2, r3
 8006258:	681b      	ldr	r3, [r3, #0]
 800625a:	469f      	mov	pc, r3
        case 0:
            r_f = v;
 800625c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800625e:	647b      	str	r3, [r7, #68]	@ 0x44
            g_f = t;
 8006260:	69fb      	ldr	r3, [r7, #28]
 8006262:	643b      	str	r3, [r7, #64]	@ 0x40
            b_f = p;
 8006264:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006266:	63fb      	str	r3, [r7, #60]	@ 0x3c
            break;
 8006268:	e029      	b.n	80062be <hue_to_rgb+0x202>
        case 1:
            r_f = q;
 800626a:	6a3b      	ldr	r3, [r7, #32]
 800626c:	647b      	str	r3, [r7, #68]	@ 0x44
            g_f = v;
 800626e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006270:	643b      	str	r3, [r7, #64]	@ 0x40
            b_f = p;
 8006272:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006274:	63fb      	str	r3, [r7, #60]	@ 0x3c
            break;
 8006276:	e022      	b.n	80062be <hue_to_rgb+0x202>
        case 2:
            r_f = p;
 8006278:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800627a:	647b      	str	r3, [r7, #68]	@ 0x44
            g_f = v;
 800627c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800627e:	643b      	str	r3, [r7, #64]	@ 0x40
            b_f = t;
 8006280:	69fb      	ldr	r3, [r7, #28]
 8006282:	63fb      	str	r3, [r7, #60]	@ 0x3c
            break;
 8006284:	e01b      	b.n	80062be <hue_to_rgb+0x202>
        case 3:
            r_f = p;
 8006286:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006288:	647b      	str	r3, [r7, #68]	@ 0x44
            g_f = q;
 800628a:	6a3b      	ldr	r3, [r7, #32]
 800628c:	643b      	str	r3, [r7, #64]	@ 0x40
            b_f = v;
 800628e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006290:	63fb      	str	r3, [r7, #60]	@ 0x3c
            break;
 8006292:	e014      	b.n	80062be <hue_to_rgb+0x202>
        case 4:
            r_f = t;
 8006294:	69fb      	ldr	r3, [r7, #28]
 8006296:	647b      	str	r3, [r7, #68]	@ 0x44
            g_f = p;
 8006298:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800629a:	643b      	str	r3, [r7, #64]	@ 0x40
            b_f = v;
 800629c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800629e:	63fb      	str	r3, [r7, #60]	@ 0x3c
            break;
 80062a0:	e00d      	b.n	80062be <hue_to_rgb+0x202>
        case 5:
            r_f = v;
 80062a2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80062a4:	647b      	str	r3, [r7, #68]	@ 0x44
            g_f = p;
 80062a6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80062a8:	643b      	str	r3, [r7, #64]	@ 0x40
            b_f = q;
 80062aa:	6a3b      	ldr	r3, [r7, #32]
 80062ac:	63fb      	str	r3, [r7, #60]	@ 0x3c
            break;
 80062ae:	e006      	b.n	80062be <hue_to_rgb+0x202>
        default:
            r_f = g_f = b_f = 0; // Should never reach here
 80062b0:	2300      	movs	r3, #0
 80062b2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80062b4:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80062b6:	643b      	str	r3, [r7, #64]	@ 0x40
 80062b8:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80062ba:	647b      	str	r3, [r7, #68]	@ 0x44
            break;
 80062bc:	46c0      	nop			@ (mov r8, r8)
    }

    // Convert to 0-255 range and assign to output
    *r = (int)(r_f * 255);
 80062be:	4916      	ldr	r1, [pc, #88]	@ (8006318 <hue_to_rgb+0x25c>)
 80062c0:	6c78      	ldr	r0, [r7, #68]	@ 0x44
 80062c2:	f7fa fcdd 	bl	8000c80 <__aeabi_fmul>
 80062c6:	1c03      	adds	r3, r0, #0
 80062c8:	1c18      	adds	r0, r3, #0
 80062ca:	f7fb f897 	bl	80013fc <__aeabi_f2iz>
 80062ce:	0002      	movs	r2, r0
 80062d0:	693b      	ldr	r3, [r7, #16]
 80062d2:	601a      	str	r2, [r3, #0]
    *g = (int)(g_f * 255);
 80062d4:	4910      	ldr	r1, [pc, #64]	@ (8006318 <hue_to_rgb+0x25c>)
 80062d6:	6c38      	ldr	r0, [r7, #64]	@ 0x40
 80062d8:	f7fa fcd2 	bl	8000c80 <__aeabi_fmul>
 80062dc:	1c03      	adds	r3, r0, #0
 80062de:	1c18      	adds	r0, r3, #0
 80062e0:	f7fb f88c 	bl	80013fc <__aeabi_f2iz>
 80062e4:	0002      	movs	r2, r0
 80062e6:	68fb      	ldr	r3, [r7, #12]
 80062e8:	601a      	str	r2, [r3, #0]
    *b = (int)(b_f * 255);
 80062ea:	490b      	ldr	r1, [pc, #44]	@ (8006318 <hue_to_rgb+0x25c>)
 80062ec:	6bf8      	ldr	r0, [r7, #60]	@ 0x3c
 80062ee:	f7fa fcc7 	bl	8000c80 <__aeabi_fmul>
 80062f2:	1c03      	adds	r3, r0, #0
 80062f4:	1c18      	adds	r0, r3, #0
 80062f6:	f7fb f881 	bl	80013fc <__aeabi_f2iz>
 80062fa:	0002      	movs	r2, r0
 80062fc:	68bb      	ldr	r3, [r7, #8]
 80062fe:	601a      	str	r2, [r3, #0]

    return;
 8006300:	46c0      	nop			@ (mov r8, r8)
}
 8006302:	46bd      	mov	sp, r7
 8006304:	b012      	add	sp, #72	@ 0x48
 8006306:	bdb0      	pop	{r4, r5, r7, pc}
 8006308:	43b40000 	.word	0x43b40000
 800630c:	404e0000 	.word	0x404e0000
 8006310:	3ff00000 	.word	0x3ff00000
 8006314:	0800c390 	.word	0x0800c390
 8006318:	437f0000 	.word	0x437f0000

0800631c <set_led_rgb>:
        HAL_Delay(10); // Delay 10 ms to achieve 1-second total duration
    }
}

void set_led_rgb(uint8_t red, uint8_t green, uint8_t blue)
{
 800631c:	b590      	push	{r4, r7, lr}
 800631e:	b085      	sub	sp, #20
 8006320:	af00      	add	r7, sp, #0
 8006322:	0004      	movs	r4, r0
 8006324:	0008      	movs	r0, r1
 8006326:	0011      	movs	r1, r2
 8006328:	1dfb      	adds	r3, r7, #7
 800632a:	1c22      	adds	r2, r4, #0
 800632c:	701a      	strb	r2, [r3, #0]
 800632e:	1dbb      	adds	r3, r7, #6
 8006330:	1c02      	adds	r2, r0, #0
 8006332:	701a      	strb	r2, [r3, #0]
 8006334:	1d7b      	adds	r3, r7, #5
 8006336:	1c0a      	adds	r2, r1, #0
 8006338:	701a      	strb	r2, [r3, #0]
    // Scale factors for color brightness adjustment
    float green_scale = 1.2; // Green is brighter, so scale it down more
 800633a:	4b1e      	ldr	r3, [pc, #120]	@ (80063b4 <set_led_rgb+0x98>)
 800633c:	60fb      	str	r3, [r7, #12]
    float blue_scale = 1.1; // Blue is slightly brighter, scale it down slightly
 800633e:	4b1e      	ldr	r3, [pc, #120]	@ (80063b8 <set_led_rgb+0x9c>)
 8006340:	60bb      	str	r3, [r7, #8]
    // int test1 = TIM2->CCR4; // Scaled green PWM value
    // int test2 = TIM3->CCR3; // Scaled blue PWM value
    // int test3 = TIM4->CCR4; // Scaled red PWM value

    // Compute scaled PWM values
    TIM2->CCR4 = (uint8_t)(255 - (green / green_scale)); // Green channel
 8006342:	1dbb      	adds	r3, r7, #6
 8006344:	781b      	ldrb	r3, [r3, #0]
 8006346:	0018      	movs	r0, r3
 8006348:	f7fb f878 	bl	800143c <__aeabi_i2f>
 800634c:	1c03      	adds	r3, r0, #0
 800634e:	68f9      	ldr	r1, [r7, #12]
 8006350:	1c18      	adds	r0, r3, #0
 8006352:	f7fa fac7 	bl	80008e4 <__aeabi_fdiv>
 8006356:	1c03      	adds	r3, r0, #0
 8006358:	1c19      	adds	r1, r3, #0
 800635a:	4818      	ldr	r0, [pc, #96]	@ (80063bc <set_led_rgb+0xa0>)
 800635c:	f7fa fdea 	bl	8000f34 <__aeabi_fsub>
 8006360:	1c03      	adds	r3, r0, #0
 8006362:	1c18      	adds	r0, r3, #0
 8006364:	f7fa f880 	bl	8000468 <__aeabi_f2uiz>
 8006368:	0003      	movs	r3, r0
 800636a:	b2da      	uxtb	r2, r3
 800636c:	2380      	movs	r3, #128	@ 0x80
 800636e:	05db      	lsls	r3, r3, #23
 8006370:	641a      	str	r2, [r3, #64]	@ 0x40
    TIM3->CCR3 = (uint8_t)(255 - (blue / blue_scale)); // Blue channel
 8006372:	1d7b      	adds	r3, r7, #5
 8006374:	781b      	ldrb	r3, [r3, #0]
 8006376:	0018      	movs	r0, r3
 8006378:	f7fb f860 	bl	800143c <__aeabi_i2f>
 800637c:	1c03      	adds	r3, r0, #0
 800637e:	68b9      	ldr	r1, [r7, #8]
 8006380:	1c18      	adds	r0, r3, #0
 8006382:	f7fa faaf 	bl	80008e4 <__aeabi_fdiv>
 8006386:	1c03      	adds	r3, r0, #0
 8006388:	1c19      	adds	r1, r3, #0
 800638a:	480c      	ldr	r0, [pc, #48]	@ (80063bc <set_led_rgb+0xa0>)
 800638c:	f7fa fdd2 	bl	8000f34 <__aeabi_fsub>
 8006390:	1c03      	adds	r3, r0, #0
 8006392:	1c18      	adds	r0, r3, #0
 8006394:	f7fa f868 	bl	8000468 <__aeabi_f2uiz>
 8006398:	0003      	movs	r3, r0
 800639a:	b2da      	uxtb	r2, r3
 800639c:	4b08      	ldr	r3, [pc, #32]	@ (80063c0 <set_led_rgb+0xa4>)
 800639e:	63da      	str	r2, [r3, #60]	@ 0x3c
    TIM4->CCR4 = (uint8_t)(255 - red); // Red channel (no scaling)
 80063a0:	1dfb      	adds	r3, r7, #7
 80063a2:	781b      	ldrb	r3, [r3, #0]
 80063a4:	43db      	mvns	r3, r3
 80063a6:	b2da      	uxtb	r2, r3
 80063a8:	4b06      	ldr	r3, [pc, #24]	@ (80063c4 <set_led_rgb+0xa8>)
 80063aa:	641a      	str	r2, [r3, #64]	@ 0x40

    // test1 = TIM4->CCR4;
}
 80063ac:	46c0      	nop			@ (mov r8, r8)
 80063ae:	46bd      	mov	sp, r7
 80063b0:	b005      	add	sp, #20
 80063b2:	bd90      	pop	{r4, r7, pc}
 80063b4:	3f99999a 	.word	0x3f99999a
 80063b8:	3f8ccccd 	.word	0x3f8ccccd
 80063bc:	437f0000 	.word	0x437f0000
 80063c0:	40000400 	.word	0x40000400
 80063c4:	40000800 	.word	0x40000800

080063c8 <set_led_hue>:

// Function to set the LED color using hue and brightness (both between 0 and 1)
void set_led_hue(float hue, float brightness)
{
 80063c8:	b580      	push	{r7, lr}
 80063ca:	b086      	sub	sp, #24
 80063cc:	af00      	add	r7, sp, #0
 80063ce:	6078      	str	r0, [r7, #4]
 80063d0:	6039      	str	r1, [r7, #0]
    int r, g, b;

    // Convert hue to RGB values
    hue_to_rgb(hue, &r, &g, &b);
 80063d2:	230c      	movs	r3, #12
 80063d4:	18fb      	adds	r3, r7, r3
 80063d6:	2210      	movs	r2, #16
 80063d8:	18ba      	adds	r2, r7, r2
 80063da:	2114      	movs	r1, #20
 80063dc:	1879      	adds	r1, r7, r1
 80063de:	6878      	ldr	r0, [r7, #4]
 80063e0:	f7ff fe6c 	bl	80060bc <hue_to_rgb>

    // Apply brightness scaling
    r = (int)(r * brightness);
 80063e4:	697b      	ldr	r3, [r7, #20]
 80063e6:	0018      	movs	r0, r3
 80063e8:	f7fb f828 	bl	800143c <__aeabi_i2f>
 80063ec:	1c03      	adds	r3, r0, #0
 80063ee:	6839      	ldr	r1, [r7, #0]
 80063f0:	1c18      	adds	r0, r3, #0
 80063f2:	f7fa fc45 	bl	8000c80 <__aeabi_fmul>
 80063f6:	1c03      	adds	r3, r0, #0
 80063f8:	1c18      	adds	r0, r3, #0
 80063fa:	f7fa ffff 	bl	80013fc <__aeabi_f2iz>
 80063fe:	0003      	movs	r3, r0
 8006400:	617b      	str	r3, [r7, #20]
    g = (int)(g * brightness);
 8006402:	693b      	ldr	r3, [r7, #16]
 8006404:	0018      	movs	r0, r3
 8006406:	f7fb f819 	bl	800143c <__aeabi_i2f>
 800640a:	1c03      	adds	r3, r0, #0
 800640c:	6839      	ldr	r1, [r7, #0]
 800640e:	1c18      	adds	r0, r3, #0
 8006410:	f7fa fc36 	bl	8000c80 <__aeabi_fmul>
 8006414:	1c03      	adds	r3, r0, #0
 8006416:	1c18      	adds	r0, r3, #0
 8006418:	f7fa fff0 	bl	80013fc <__aeabi_f2iz>
 800641c:	0003      	movs	r3, r0
 800641e:	613b      	str	r3, [r7, #16]
    b = (int)(b * brightness);
 8006420:	68fb      	ldr	r3, [r7, #12]
 8006422:	0018      	movs	r0, r3
 8006424:	f7fb f80a 	bl	800143c <__aeabi_i2f>
 8006428:	1c03      	adds	r3, r0, #0
 800642a:	6839      	ldr	r1, [r7, #0]
 800642c:	1c18      	adds	r0, r3, #0
 800642e:	f7fa fc27 	bl	8000c80 <__aeabi_fmul>
 8006432:	1c03      	adds	r3, r0, #0
 8006434:	1c18      	adds	r0, r3, #0
 8006436:	f7fa ffe1 	bl	80013fc <__aeabi_f2iz>
 800643a:	0003      	movs	r3, r0
 800643c:	60fb      	str	r3, [r7, #12]

    // Set the RGB PWM outputs (active-low for sink configuration)
    set_led_rgb((uint8_t)r, (uint8_t)g, (uint8_t)b);
 800643e:	697b      	ldr	r3, [r7, #20]
 8006440:	b2db      	uxtb	r3, r3
 8006442:	693a      	ldr	r2, [r7, #16]
 8006444:	b2d1      	uxtb	r1, r2
 8006446:	68fa      	ldr	r2, [r7, #12]
 8006448:	b2d2      	uxtb	r2, r2
 800644a:	0018      	movs	r0, r3
 800644c:	f7ff ff66 	bl	800631c <set_led_rgb>
}
 8006450:	46c0      	nop			@ (mov r8, r8)
 8006452:	46bd      	mov	sp, r7
 8006454:	b006      	add	sp, #24
 8006456:	bd80      	pop	{r7, pc}

08006458 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                                            /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8006458:	b580      	push	{r7, lr}
 800645a:	b082      	sub	sp, #8
 800645c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800645e:	4b11      	ldr	r3, [pc, #68]	@ (80064a4 <HAL_MspInit+0x4c>)
 8006460:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8006462:	4b10      	ldr	r3, [pc, #64]	@ (80064a4 <HAL_MspInit+0x4c>)
 8006464:	2101      	movs	r1, #1
 8006466:	430a      	orrs	r2, r1
 8006468:	641a      	str	r2, [r3, #64]	@ 0x40
 800646a:	4b0e      	ldr	r3, [pc, #56]	@ (80064a4 <HAL_MspInit+0x4c>)
 800646c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800646e:	2201      	movs	r2, #1
 8006470:	4013      	ands	r3, r2
 8006472:	607b      	str	r3, [r7, #4]
 8006474:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8006476:	4b0b      	ldr	r3, [pc, #44]	@ (80064a4 <HAL_MspInit+0x4c>)
 8006478:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800647a:	4b0a      	ldr	r3, [pc, #40]	@ (80064a4 <HAL_MspInit+0x4c>)
 800647c:	2180      	movs	r1, #128	@ 0x80
 800647e:	0549      	lsls	r1, r1, #21
 8006480:	430a      	orrs	r2, r1
 8006482:	63da      	str	r2, [r3, #60]	@ 0x3c
 8006484:	4b07      	ldr	r3, [pc, #28]	@ (80064a4 <HAL_MspInit+0x4c>)
 8006486:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8006488:	2380      	movs	r3, #128	@ 0x80
 800648a:	055b      	lsls	r3, r3, #21
 800648c:	4013      	ands	r3, r2
 800648e:	603b      	str	r3, [r7, #0]
 8006490:	683b      	ldr	r3, [r7, #0]

  /* System interrupt init*/

  /** Disable the internal Pull-Up in Dead Battery pins of UCPD peripheral
  */
  HAL_SYSCFG_StrobeDBattpinsConfig(SYSCFG_CFGR1_UCPD1_STROBE | SYSCFG_CFGR1_UCPD2_STROBE);
 8006492:	23c0      	movs	r3, #192	@ 0xc0
 8006494:	00db      	lsls	r3, r3, #3
 8006496:	0018      	movs	r0, r3
 8006498:	f000 fd0e 	bl	8006eb8 <HAL_SYSCFG_StrobeDBattpinsConfig>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800649c:	46c0      	nop			@ (mov r8, r8)
 800649e:	46bd      	mov	sp, r7
 80064a0:	b002      	add	sp, #8
 80064a2:	bd80      	pop	{r7, pc}
 80064a4:	40021000 	.word	0x40021000

080064a8 <HAL_ADC_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hadc: ADC handle pointer
  * @retval None
  */
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 80064a8:	b590      	push	{r4, r7, lr}
 80064aa:	b08b      	sub	sp, #44	@ 0x2c
 80064ac:	af00      	add	r7, sp, #0
 80064ae:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80064b0:	2414      	movs	r4, #20
 80064b2:	193b      	adds	r3, r7, r4
 80064b4:	0018      	movs	r0, r3
 80064b6:	2314      	movs	r3, #20
 80064b8:	001a      	movs	r2, r3
 80064ba:	2100      	movs	r1, #0
 80064bc:	f005 fdd2 	bl	800c064 <memset>
  if(hadc->Instance==ADC1)
 80064c0:	687b      	ldr	r3, [r7, #4]
 80064c2:	681b      	ldr	r3, [r3, #0]
 80064c4:	4a18      	ldr	r2, [pc, #96]	@ (8006528 <HAL_ADC_MspInit+0x80>)
 80064c6:	4293      	cmp	r3, r2
 80064c8:	d129      	bne.n	800651e <HAL_ADC_MspInit+0x76>
  {
    /* USER CODE BEGIN ADC1_MspInit 0 */

    /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC_CLK_ENABLE();
 80064ca:	4b18      	ldr	r3, [pc, #96]	@ (800652c <HAL_ADC_MspInit+0x84>)
 80064cc:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80064ce:	4b17      	ldr	r3, [pc, #92]	@ (800652c <HAL_ADC_MspInit+0x84>)
 80064d0:	2180      	movs	r1, #128	@ 0x80
 80064d2:	0349      	lsls	r1, r1, #13
 80064d4:	430a      	orrs	r2, r1
 80064d6:	641a      	str	r2, [r3, #64]	@ 0x40
 80064d8:	4b14      	ldr	r3, [pc, #80]	@ (800652c <HAL_ADC_MspInit+0x84>)
 80064da:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80064dc:	2380      	movs	r3, #128	@ 0x80
 80064de:	035b      	lsls	r3, r3, #13
 80064e0:	4013      	ands	r3, r2
 80064e2:	613b      	str	r3, [r7, #16]
 80064e4:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80064e6:	4b11      	ldr	r3, [pc, #68]	@ (800652c <HAL_ADC_MspInit+0x84>)
 80064e8:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80064ea:	4b10      	ldr	r3, [pc, #64]	@ (800652c <HAL_ADC_MspInit+0x84>)
 80064ec:	2101      	movs	r1, #1
 80064ee:	430a      	orrs	r2, r1
 80064f0:	635a      	str	r2, [r3, #52]	@ 0x34
 80064f2:	4b0e      	ldr	r3, [pc, #56]	@ (800652c <HAL_ADC_MspInit+0x84>)
 80064f4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80064f6:	2201      	movs	r2, #1
 80064f8:	4013      	ands	r3, r2
 80064fa:	60fb      	str	r3, [r7, #12]
 80064fc:	68fb      	ldr	r3, [r7, #12]
    /**ADC1 GPIO Configuration
    PA0     ------> ADC1_IN0
    PA5     ------> ADC1_IN5
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_5;
 80064fe:	193b      	adds	r3, r7, r4
 8006500:	2221      	movs	r2, #33	@ 0x21
 8006502:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8006504:	193b      	adds	r3, r7, r4
 8006506:	2203      	movs	r2, #3
 8006508:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800650a:	193b      	adds	r3, r7, r4
 800650c:	2200      	movs	r2, #0
 800650e:	609a      	str	r2, [r3, #8]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8006510:	193a      	adds	r2, r7, r4
 8006512:	23a0      	movs	r3, #160	@ 0xa0
 8006514:	05db      	lsls	r3, r3, #23
 8006516:	0011      	movs	r1, r2
 8006518:	0018      	movs	r0, r3
 800651a:	f002 fbb9 	bl	8008c90 <HAL_GPIO_Init>

    /* USER CODE END ADC1_MspInit 1 */

  }

}
 800651e:	46c0      	nop			@ (mov r8, r8)
 8006520:	46bd      	mov	sp, r7
 8006522:	b00b      	add	sp, #44	@ 0x2c
 8006524:	bd90      	pop	{r4, r7, pc}
 8006526:	46c0      	nop			@ (mov r8, r8)
 8006528:	40012400 	.word	0x40012400
 800652c:	40021000 	.word	0x40021000

08006530 <HAL_FDCAN_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hfdcan: FDCAN handle pointer
  * @retval None
  */
void HAL_FDCAN_MspInit(FDCAN_HandleTypeDef* hfdcan)
{
 8006530:	b590      	push	{r4, r7, lr}
 8006532:	b09d      	sub	sp, #116	@ 0x74
 8006534:	af00      	add	r7, sp, #0
 8006536:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8006538:	235c      	movs	r3, #92	@ 0x5c
 800653a:	18fb      	adds	r3, r7, r3
 800653c:	0018      	movs	r0, r3
 800653e:	2314      	movs	r3, #20
 8006540:	001a      	movs	r2, r3
 8006542:	2100      	movs	r1, #0
 8006544:	f005 fd8e 	bl	800c064 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8006548:	2410      	movs	r4, #16
 800654a:	193b      	adds	r3, r7, r4
 800654c:	0018      	movs	r0, r3
 800654e:	234c      	movs	r3, #76	@ 0x4c
 8006550:	001a      	movs	r2, r3
 8006552:	2100      	movs	r1, #0
 8006554:	f005 fd86 	bl	800c064 <memset>
  if(hfdcan->Instance==FDCAN1)
 8006558:	687b      	ldr	r3, [r7, #4]
 800655a:	681b      	ldr	r3, [r3, #0]
 800655c:	4a26      	ldr	r2, [pc, #152]	@ (80065f8 <HAL_FDCAN_MspInit+0xc8>)
 800655e:	4293      	cmp	r3, r2
 8006560:	d146      	bne.n	80065f0 <HAL_FDCAN_MspInit+0xc0>

    /* USER CODE END FDCAN1_MspInit 0 */

  /** Initializes the peripherals clocks
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_FDCAN;
 8006562:	193b      	adds	r3, r7, r4
 8006564:	2280      	movs	r2, #128	@ 0x80
 8006566:	0492      	lsls	r2, r2, #18
 8006568:	601a      	str	r2, [r3, #0]
    PeriphClkInit.FdcanClockSelection = RCC_FDCANCLKSOURCE_PCLK1;
 800656a:	193b      	adds	r3, r7, r4
 800656c:	2200      	movs	r2, #0
 800656e:	649a      	str	r2, [r3, #72]	@ 0x48

    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8006570:	193b      	adds	r3, r7, r4
 8006572:	0018      	movs	r0, r3
 8006574:	f003 fcc2 	bl	8009efc <HAL_RCCEx_PeriphCLKConfig>
 8006578:	1e03      	subs	r3, r0, #0
 800657a:	d001      	beq.n	8006580 <HAL_FDCAN_MspInit+0x50>
    {
      Error_Handler();
 800657c:	f7ff fc44 	bl	8005e08 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_FDCAN_CLK_ENABLE();
 8006580:	4b1e      	ldr	r3, [pc, #120]	@ (80065fc <HAL_FDCAN_MspInit+0xcc>)
 8006582:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8006584:	4b1d      	ldr	r3, [pc, #116]	@ (80065fc <HAL_FDCAN_MspInit+0xcc>)
 8006586:	2180      	movs	r1, #128	@ 0x80
 8006588:	0149      	lsls	r1, r1, #5
 800658a:	430a      	orrs	r2, r1
 800658c:	63da      	str	r2, [r3, #60]	@ 0x3c
 800658e:	4b1b      	ldr	r3, [pc, #108]	@ (80065fc <HAL_FDCAN_MspInit+0xcc>)
 8006590:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8006592:	2380      	movs	r3, #128	@ 0x80
 8006594:	015b      	lsls	r3, r3, #5
 8006596:	4013      	ands	r3, r2
 8006598:	60fb      	str	r3, [r7, #12]
 800659a:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOD_CLK_ENABLE();
 800659c:	4b17      	ldr	r3, [pc, #92]	@ (80065fc <HAL_FDCAN_MspInit+0xcc>)
 800659e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80065a0:	4b16      	ldr	r3, [pc, #88]	@ (80065fc <HAL_FDCAN_MspInit+0xcc>)
 80065a2:	2108      	movs	r1, #8
 80065a4:	430a      	orrs	r2, r1
 80065a6:	635a      	str	r2, [r3, #52]	@ 0x34
 80065a8:	4b14      	ldr	r3, [pc, #80]	@ (80065fc <HAL_FDCAN_MspInit+0xcc>)
 80065aa:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80065ac:	2208      	movs	r2, #8
 80065ae:	4013      	ands	r3, r2
 80065b0:	60bb      	str	r3, [r7, #8]
 80065b2:	68bb      	ldr	r3, [r7, #8]
    /**FDCAN1 GPIO Configuration
    PD0     ------> FDCAN1_RX
    PD1     ------> FDCAN1_TX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 80065b4:	215c      	movs	r1, #92	@ 0x5c
 80065b6:	187b      	adds	r3, r7, r1
 80065b8:	2203      	movs	r2, #3
 80065ba:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80065bc:	187b      	adds	r3, r7, r1
 80065be:	2202      	movs	r2, #2
 80065c0:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80065c2:	187b      	adds	r3, r7, r1
 80065c4:	2200      	movs	r2, #0
 80065c6:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80065c8:	187b      	adds	r3, r7, r1
 80065ca:	2200      	movs	r2, #0
 80065cc:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF3_FDCAN1;
 80065ce:	187b      	adds	r3, r7, r1
 80065d0:	2203      	movs	r2, #3
 80065d2:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80065d4:	187b      	adds	r3, r7, r1
 80065d6:	4a0a      	ldr	r2, [pc, #40]	@ (8006600 <HAL_FDCAN_MspInit+0xd0>)
 80065d8:	0019      	movs	r1, r3
 80065da:	0010      	movs	r0, r2
 80065dc:	f002 fb58 	bl	8008c90 <HAL_GPIO_Init>

    /* FDCAN1 interrupt Init */
    HAL_NVIC_SetPriority(TIM16_FDCAN_IT0_IRQn, 0, 0);
 80065e0:	2200      	movs	r2, #0
 80065e2:	2100      	movs	r1, #0
 80065e4:	2015      	movs	r0, #21
 80065e6:	f001 faa1 	bl	8007b2c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM16_FDCAN_IT0_IRQn);
 80065ea:	2015      	movs	r0, #21
 80065ec:	f001 fab3 	bl	8007b56 <HAL_NVIC_EnableIRQ>

    /* USER CODE END FDCAN1_MspInit 1 */

  }

}
 80065f0:	46c0      	nop			@ (mov r8, r8)
 80065f2:	46bd      	mov	sp, r7
 80065f4:	b01d      	add	sp, #116	@ 0x74
 80065f6:	bd90      	pop	{r4, r7, pc}
 80065f8:	40006400 	.word	0x40006400
 80065fc:	40021000 	.word	0x40021000
 8006600:	50000c00 	.word	0x50000c00

08006604 <HAL_I2C_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hi2c: I2C handle pointer
  * @retval None
  */
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8006604:	b590      	push	{r4, r7, lr}
 8006606:	b09d      	sub	sp, #116	@ 0x74
 8006608:	af00      	add	r7, sp, #0
 800660a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800660c:	235c      	movs	r3, #92	@ 0x5c
 800660e:	18fb      	adds	r3, r7, r3
 8006610:	0018      	movs	r0, r3
 8006612:	2314      	movs	r3, #20
 8006614:	001a      	movs	r2, r3
 8006616:	2100      	movs	r1, #0
 8006618:	f005 fd24 	bl	800c064 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 800661c:	2410      	movs	r4, #16
 800661e:	193b      	adds	r3, r7, r4
 8006620:	0018      	movs	r0, r3
 8006622:	234c      	movs	r3, #76	@ 0x4c
 8006624:	001a      	movs	r2, r3
 8006626:	2100      	movs	r1, #0
 8006628:	f005 fd1c 	bl	800c064 <memset>
  if(hi2c->Instance==I2C1)
 800662c:	687b      	ldr	r3, [r7, #4]
 800662e:	681b      	ldr	r3, [r3, #0]
 8006630:	4a23      	ldr	r2, [pc, #140]	@ (80066c0 <HAL_I2C_MspInit+0xbc>)
 8006632:	4293      	cmp	r3, r2
 8006634:	d13f      	bne.n	80066b6 <HAL_I2C_MspInit+0xb2>

    /* USER CODE END I2C1_MspInit 0 */

  /** Initializes the peripherals clocks
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C1;
 8006636:	193b      	adds	r3, r7, r4
 8006638:	2220      	movs	r2, #32
 800663a:	601a      	str	r2, [r3, #0]
    PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 800663c:	193b      	adds	r3, r7, r4
 800663e:	2200      	movs	r2, #0
 8006640:	619a      	str	r2, [r3, #24]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8006642:	193b      	adds	r3, r7, r4
 8006644:	0018      	movs	r0, r3
 8006646:	f003 fc59 	bl	8009efc <HAL_RCCEx_PeriphCLKConfig>
 800664a:	1e03      	subs	r3, r0, #0
 800664c:	d001      	beq.n	8006652 <HAL_I2C_MspInit+0x4e>
    {
      Error_Handler();
 800664e:	f7ff fbdb 	bl	8005e08 <Error_Handler>
    }

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8006652:	4b1c      	ldr	r3, [pc, #112]	@ (80066c4 <HAL_I2C_MspInit+0xc0>)
 8006654:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8006656:	4b1b      	ldr	r3, [pc, #108]	@ (80066c4 <HAL_I2C_MspInit+0xc0>)
 8006658:	2101      	movs	r1, #1
 800665a:	430a      	orrs	r2, r1
 800665c:	635a      	str	r2, [r3, #52]	@ 0x34
 800665e:	4b19      	ldr	r3, [pc, #100]	@ (80066c4 <HAL_I2C_MspInit+0xc0>)
 8006660:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006662:	2201      	movs	r2, #1
 8006664:	4013      	ands	r3, r2
 8006666:	60fb      	str	r3, [r7, #12]
 8006668:	68fb      	ldr	r3, [r7, #12]
    /**I2C1 GPIO Configuration
    PA9     ------> I2C1_SCL
    PA10     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 800666a:	215c      	movs	r1, #92	@ 0x5c
 800666c:	187b      	adds	r3, r7, r1
 800666e:	22c0      	movs	r2, #192	@ 0xc0
 8006670:	00d2      	lsls	r2, r2, #3
 8006672:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8006674:	187b      	adds	r3, r7, r1
 8006676:	2212      	movs	r2, #18
 8006678:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800667a:	187b      	adds	r3, r7, r1
 800667c:	2200      	movs	r2, #0
 800667e:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8006680:	187b      	adds	r3, r7, r1
 8006682:	2200      	movs	r2, #0
 8006684:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF6_I2C1;
 8006686:	187b      	adds	r3, r7, r1
 8006688:	2206      	movs	r2, #6
 800668a:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800668c:	187a      	adds	r2, r7, r1
 800668e:	23a0      	movs	r3, #160	@ 0xa0
 8006690:	05db      	lsls	r3, r3, #23
 8006692:	0011      	movs	r1, r2
 8006694:	0018      	movs	r0, r3
 8006696:	f002 fafb 	bl	8008c90 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 800669a:	4b0a      	ldr	r3, [pc, #40]	@ (80066c4 <HAL_I2C_MspInit+0xc0>)
 800669c:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800669e:	4b09      	ldr	r3, [pc, #36]	@ (80066c4 <HAL_I2C_MspInit+0xc0>)
 80066a0:	2180      	movs	r1, #128	@ 0x80
 80066a2:	0389      	lsls	r1, r1, #14
 80066a4:	430a      	orrs	r2, r1
 80066a6:	63da      	str	r2, [r3, #60]	@ 0x3c
 80066a8:	4b06      	ldr	r3, [pc, #24]	@ (80066c4 <HAL_I2C_MspInit+0xc0>)
 80066aa:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80066ac:	2380      	movs	r3, #128	@ 0x80
 80066ae:	039b      	lsls	r3, r3, #14
 80066b0:	4013      	ands	r3, r2
 80066b2:	60bb      	str	r3, [r7, #8]
 80066b4:	68bb      	ldr	r3, [r7, #8]

    /* USER CODE END I2C1_MspInit 1 */

  }

}
 80066b6:	46c0      	nop			@ (mov r8, r8)
 80066b8:	46bd      	mov	sp, r7
 80066ba:	b01d      	add	sp, #116	@ 0x74
 80066bc:	bd90      	pop	{r4, r7, pc}
 80066be:	46c0      	nop			@ (mov r8, r8)
 80066c0:	40005400 	.word	0x40005400
 80066c4:	40021000 	.word	0x40021000

080066c8 <HAL_SPI_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hspi: SPI handle pointer
  * @retval None
  */
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 80066c8:	b590      	push	{r4, r7, lr}
 80066ca:	b08d      	sub	sp, #52	@ 0x34
 80066cc:	af00      	add	r7, sp, #0
 80066ce:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80066d0:	241c      	movs	r4, #28
 80066d2:	193b      	adds	r3, r7, r4
 80066d4:	0018      	movs	r0, r3
 80066d6:	2314      	movs	r3, #20
 80066d8:	001a      	movs	r2, r3
 80066da:	2100      	movs	r1, #0
 80066dc:	f005 fcc2 	bl	800c064 <memset>
  if(hspi->Instance==SPI1)
 80066e0:	687b      	ldr	r3, [r7, #4]
 80066e2:	681b      	ldr	r3, [r3, #0]
 80066e4:	4a37      	ldr	r2, [pc, #220]	@ (80067c4 <HAL_SPI_MspInit+0xfc>)
 80066e6:	4293      	cmp	r3, r2
 80066e8:	d131      	bne.n	800674e <HAL_SPI_MspInit+0x86>
  {
    /* USER CODE BEGIN SPI1_MspInit 0 */

    /* USER CODE END SPI1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 80066ea:	4b37      	ldr	r3, [pc, #220]	@ (80067c8 <HAL_SPI_MspInit+0x100>)
 80066ec:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80066ee:	4b36      	ldr	r3, [pc, #216]	@ (80067c8 <HAL_SPI_MspInit+0x100>)
 80066f0:	2180      	movs	r1, #128	@ 0x80
 80066f2:	0149      	lsls	r1, r1, #5
 80066f4:	430a      	orrs	r2, r1
 80066f6:	641a      	str	r2, [r3, #64]	@ 0x40
 80066f8:	4b33      	ldr	r3, [pc, #204]	@ (80067c8 <HAL_SPI_MspInit+0x100>)
 80066fa:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80066fc:	2380      	movs	r3, #128	@ 0x80
 80066fe:	015b      	lsls	r3, r3, #5
 8006700:	4013      	ands	r3, r2
 8006702:	61bb      	str	r3, [r7, #24]
 8006704:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8006706:	4b30      	ldr	r3, [pc, #192]	@ (80067c8 <HAL_SPI_MspInit+0x100>)
 8006708:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800670a:	4b2f      	ldr	r3, [pc, #188]	@ (80067c8 <HAL_SPI_MspInit+0x100>)
 800670c:	2101      	movs	r1, #1
 800670e:	430a      	orrs	r2, r1
 8006710:	635a      	str	r2, [r3, #52]	@ 0x34
 8006712:	4b2d      	ldr	r3, [pc, #180]	@ (80067c8 <HAL_SPI_MspInit+0x100>)
 8006714:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006716:	2201      	movs	r2, #1
 8006718:	4013      	ands	r3, r2
 800671a:	617b      	str	r3, [r7, #20]
 800671c:	697b      	ldr	r3, [r7, #20]
    PA1     ------> SPI1_SCK
    PA4     ------> SPI1_NSS
    PA6     ------> SPI1_MISO
    PA7     ------> SPI1_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_7;
 800671e:	0021      	movs	r1, r4
 8006720:	187b      	adds	r3, r7, r1
 8006722:	22d2      	movs	r2, #210	@ 0xd2
 8006724:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8006726:	187b      	adds	r3, r7, r1
 8006728:	2202      	movs	r2, #2
 800672a:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800672c:	187b      	adds	r3, r7, r1
 800672e:	2200      	movs	r2, #0
 8006730:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8006732:	187b      	adds	r3, r7, r1
 8006734:	2200      	movs	r2, #0
 8006736:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF0_SPI1;
 8006738:	187b      	adds	r3, r7, r1
 800673a:	2200      	movs	r2, #0
 800673c:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800673e:	187a      	adds	r2, r7, r1
 8006740:	23a0      	movs	r3, #160	@ 0xa0
 8006742:	05db      	lsls	r3, r3, #23
 8006744:	0011      	movs	r1, r2
 8006746:	0018      	movs	r0, r3
 8006748:	f002 faa2 	bl	8008c90 <HAL_GPIO_Init>
    /* USER CODE BEGIN SPI2_MspInit 1 */

    /* USER CODE END SPI2_MspInit 1 */
  }

}
 800674c:	e035      	b.n	80067ba <HAL_SPI_MspInit+0xf2>
  else if(hspi->Instance==SPI2)
 800674e:	687b      	ldr	r3, [r7, #4]
 8006750:	681b      	ldr	r3, [r3, #0]
 8006752:	4a1e      	ldr	r2, [pc, #120]	@ (80067cc <HAL_SPI_MspInit+0x104>)
 8006754:	4293      	cmp	r3, r2
 8006756:	d130      	bne.n	80067ba <HAL_SPI_MspInit+0xf2>
    __HAL_RCC_SPI2_CLK_ENABLE();
 8006758:	4b1b      	ldr	r3, [pc, #108]	@ (80067c8 <HAL_SPI_MspInit+0x100>)
 800675a:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800675c:	4b1a      	ldr	r3, [pc, #104]	@ (80067c8 <HAL_SPI_MspInit+0x100>)
 800675e:	2180      	movs	r1, #128	@ 0x80
 8006760:	01c9      	lsls	r1, r1, #7
 8006762:	430a      	orrs	r2, r1
 8006764:	63da      	str	r2, [r3, #60]	@ 0x3c
 8006766:	4b18      	ldr	r3, [pc, #96]	@ (80067c8 <HAL_SPI_MspInit+0x100>)
 8006768:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800676a:	2380      	movs	r3, #128	@ 0x80
 800676c:	01db      	lsls	r3, r3, #7
 800676e:	4013      	ands	r3, r2
 8006770:	613b      	str	r3, [r7, #16]
 8006772:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8006774:	4b14      	ldr	r3, [pc, #80]	@ (80067c8 <HAL_SPI_MspInit+0x100>)
 8006776:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8006778:	4b13      	ldr	r3, [pc, #76]	@ (80067c8 <HAL_SPI_MspInit+0x100>)
 800677a:	2102      	movs	r1, #2
 800677c:	430a      	orrs	r2, r1
 800677e:	635a      	str	r2, [r3, #52]	@ 0x34
 8006780:	4b11      	ldr	r3, [pc, #68]	@ (80067c8 <HAL_SPI_MspInit+0x100>)
 8006782:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006784:	2202      	movs	r2, #2
 8006786:	4013      	ands	r3, r2
 8006788:	60fb      	str	r3, [r7, #12]
 800678a:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
 800678c:	211c      	movs	r1, #28
 800678e:	187b      	adds	r3, r7, r1
 8006790:	22e0      	movs	r2, #224	@ 0xe0
 8006792:	0212      	lsls	r2, r2, #8
 8006794:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8006796:	187b      	adds	r3, r7, r1
 8006798:	2202      	movs	r2, #2
 800679a:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800679c:	187b      	adds	r3, r7, r1
 800679e:	2200      	movs	r2, #0
 80067a0:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80067a2:	187b      	adds	r3, r7, r1
 80067a4:	2200      	movs	r2, #0
 80067a6:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF0_SPI2;
 80067a8:	187b      	adds	r3, r7, r1
 80067aa:	2200      	movs	r2, #0
 80067ac:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80067ae:	187b      	adds	r3, r7, r1
 80067b0:	4a07      	ldr	r2, [pc, #28]	@ (80067d0 <HAL_SPI_MspInit+0x108>)
 80067b2:	0019      	movs	r1, r3
 80067b4:	0010      	movs	r0, r2
 80067b6:	f002 fa6b 	bl	8008c90 <HAL_GPIO_Init>
}
 80067ba:	46c0      	nop			@ (mov r8, r8)
 80067bc:	46bd      	mov	sp, r7
 80067be:	b00d      	add	sp, #52	@ 0x34
 80067c0:	bd90      	pop	{r4, r7, pc}
 80067c2:	46c0      	nop			@ (mov r8, r8)
 80067c4:	40013000 	.word	0x40013000
 80067c8:	40021000 	.word	0x40021000
 80067cc:	40003800 	.word	0x40003800
 80067d0:	50000400 	.word	0x50000400

080067d4 <HAL_TIM_PWM_MspInit>:
  * This function configures the hardware resources used in this example
  * @param htim_pwm: TIM_PWM handle pointer
  * @retval None
  */
void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
{
 80067d4:	b580      	push	{r7, lr}
 80067d6:	b084      	sub	sp, #16
 80067d8:	af00      	add	r7, sp, #0
 80067da:	6078      	str	r0, [r7, #4]
  if(htim_pwm->Instance==TIM2)
 80067dc:	687b      	ldr	r3, [r7, #4]
 80067de:	681a      	ldr	r2, [r3, #0]
 80067e0:	2380      	movs	r3, #128	@ 0x80
 80067e2:	05db      	lsls	r3, r3, #23
 80067e4:	429a      	cmp	r2, r3
 80067e6:	d10b      	bne.n	8006800 <HAL_TIM_PWM_MspInit+0x2c>
  {
    /* USER CODE BEGIN TIM2_MspInit 0 */

    /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 80067e8:	4b07      	ldr	r3, [pc, #28]	@ (8006808 <HAL_TIM_PWM_MspInit+0x34>)
 80067ea:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80067ec:	4b06      	ldr	r3, [pc, #24]	@ (8006808 <HAL_TIM_PWM_MspInit+0x34>)
 80067ee:	2101      	movs	r1, #1
 80067f0:	430a      	orrs	r2, r1
 80067f2:	63da      	str	r2, [r3, #60]	@ 0x3c
 80067f4:	4b04      	ldr	r3, [pc, #16]	@ (8006808 <HAL_TIM_PWM_MspInit+0x34>)
 80067f6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80067f8:	2201      	movs	r2, #1
 80067fa:	4013      	ands	r3, r2
 80067fc:	60fb      	str	r3, [r7, #12]
 80067fe:	68fb      	ldr	r3, [r7, #12]

    /* USER CODE END TIM2_MspInit 1 */

  }

}
 8006800:	46c0      	nop			@ (mov r8, r8)
 8006802:	46bd      	mov	sp, r7
 8006804:	b004      	add	sp, #16
 8006806:	bd80      	pop	{r7, pc}
 8006808:	40021000 	.word	0x40021000

0800680c <HAL_TIM_Base_MspInit>:
  * This function configures the hardware resources used in this example
  * @param htim_base: TIM_Base handle pointer
  * @retval None
  */
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 800680c:	b580      	push	{r7, lr}
 800680e:	b084      	sub	sp, #16
 8006810:	af00      	add	r7, sp, #0
 8006812:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM3)
 8006814:	687b      	ldr	r3, [r7, #4]
 8006816:	681b      	ldr	r3, [r3, #0]
 8006818:	4a12      	ldr	r2, [pc, #72]	@ (8006864 <HAL_TIM_Base_MspInit+0x58>)
 800681a:	4293      	cmp	r3, r2
 800681c:	d10c      	bne.n	8006838 <HAL_TIM_Base_MspInit+0x2c>
  {
    /* USER CODE BEGIN TIM3_MspInit 0 */

    /* USER CODE END TIM3_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM3_CLK_ENABLE();
 800681e:	4b12      	ldr	r3, [pc, #72]	@ (8006868 <HAL_TIM_Base_MspInit+0x5c>)
 8006820:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8006822:	4b11      	ldr	r3, [pc, #68]	@ (8006868 <HAL_TIM_Base_MspInit+0x5c>)
 8006824:	2102      	movs	r1, #2
 8006826:	430a      	orrs	r2, r1
 8006828:	63da      	str	r2, [r3, #60]	@ 0x3c
 800682a:	4b0f      	ldr	r3, [pc, #60]	@ (8006868 <HAL_TIM_Base_MspInit+0x5c>)
 800682c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800682e:	2202      	movs	r2, #2
 8006830:	4013      	ands	r3, r2
 8006832:	60fb      	str	r3, [r7, #12]
 8006834:	68fb      	ldr	r3, [r7, #12]
    /* USER CODE BEGIN TIM4_MspInit 1 */

    /* USER CODE END TIM4_MspInit 1 */
  }

}
 8006836:	e010      	b.n	800685a <HAL_TIM_Base_MspInit+0x4e>
  else if(htim_base->Instance==TIM4)
 8006838:	687b      	ldr	r3, [r7, #4]
 800683a:	681b      	ldr	r3, [r3, #0]
 800683c:	4a0b      	ldr	r2, [pc, #44]	@ (800686c <HAL_TIM_Base_MspInit+0x60>)
 800683e:	4293      	cmp	r3, r2
 8006840:	d10b      	bne.n	800685a <HAL_TIM_Base_MspInit+0x4e>
    __HAL_RCC_TIM4_CLK_ENABLE();
 8006842:	4b09      	ldr	r3, [pc, #36]	@ (8006868 <HAL_TIM_Base_MspInit+0x5c>)
 8006844:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8006846:	4b08      	ldr	r3, [pc, #32]	@ (8006868 <HAL_TIM_Base_MspInit+0x5c>)
 8006848:	2104      	movs	r1, #4
 800684a:	430a      	orrs	r2, r1
 800684c:	63da      	str	r2, [r3, #60]	@ 0x3c
 800684e:	4b06      	ldr	r3, [pc, #24]	@ (8006868 <HAL_TIM_Base_MspInit+0x5c>)
 8006850:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006852:	2204      	movs	r2, #4
 8006854:	4013      	ands	r3, r2
 8006856:	60bb      	str	r3, [r7, #8]
 8006858:	68bb      	ldr	r3, [r7, #8]
}
 800685a:	46c0      	nop			@ (mov r8, r8)
 800685c:	46bd      	mov	sp, r7
 800685e:	b004      	add	sp, #16
 8006860:	bd80      	pop	{r7, pc}
 8006862:	46c0      	nop			@ (mov r8, r8)
 8006864:	40000400 	.word	0x40000400
 8006868:	40021000 	.word	0x40021000
 800686c:	40000800 	.word	0x40000800

08006870 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8006870:	b590      	push	{r4, r7, lr}
 8006872:	b08b      	sub	sp, #44	@ 0x2c
 8006874:	af00      	add	r7, sp, #0
 8006876:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8006878:	2414      	movs	r4, #20
 800687a:	193b      	adds	r3, r7, r4
 800687c:	0018      	movs	r0, r3
 800687e:	2314      	movs	r3, #20
 8006880:	001a      	movs	r2, r3
 8006882:	2100      	movs	r1, #0
 8006884:	f005 fbee 	bl	800c064 <memset>
  if(htim->Instance==TIM2)
 8006888:	687b      	ldr	r3, [r7, #4]
 800688a:	681a      	ldr	r2, [r3, #0]
 800688c:	2380      	movs	r3, #128	@ 0x80
 800688e:	05db      	lsls	r3, r3, #23
 8006890:	429a      	cmp	r2, r3
 8006892:	d123      	bne.n	80068dc <HAL_TIM_MspPostInit+0x6c>
  {
    /* USER CODE BEGIN TIM2_MspPostInit 0 */

    /* USER CODE END TIM2_MspPostInit 0 */
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8006894:	4b3b      	ldr	r3, [pc, #236]	@ (8006984 <HAL_TIM_MspPostInit+0x114>)
 8006896:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8006898:	4b3a      	ldr	r3, [pc, #232]	@ (8006984 <HAL_TIM_MspPostInit+0x114>)
 800689a:	2102      	movs	r1, #2
 800689c:	430a      	orrs	r2, r1
 800689e:	635a      	str	r2, [r3, #52]	@ 0x34
 80068a0:	4b38      	ldr	r3, [pc, #224]	@ (8006984 <HAL_TIM_MspPostInit+0x114>)
 80068a2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80068a4:	2202      	movs	r2, #2
 80068a6:	4013      	ands	r3, r2
 80068a8:	613b      	str	r3, [r7, #16]
 80068aa:	693b      	ldr	r3, [r7, #16]
    /**TIM2 GPIO Configuration
    PB11     ------> TIM2_CH4
    */
    GPIO_InitStruct.Pin = GPIO_PIN_11;
 80068ac:	193b      	adds	r3, r7, r4
 80068ae:	2280      	movs	r2, #128	@ 0x80
 80068b0:	0112      	lsls	r2, r2, #4
 80068b2:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80068b4:	0021      	movs	r1, r4
 80068b6:	187b      	adds	r3, r7, r1
 80068b8:	2202      	movs	r2, #2
 80068ba:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80068bc:	187b      	adds	r3, r7, r1
 80068be:	2200      	movs	r2, #0
 80068c0:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80068c2:	187b      	adds	r3, r7, r1
 80068c4:	2200      	movs	r2, #0
 80068c6:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM2;
 80068c8:	187b      	adds	r3, r7, r1
 80068ca:	2202      	movs	r2, #2
 80068cc:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80068ce:	187b      	adds	r3, r7, r1
 80068d0:	4a2d      	ldr	r2, [pc, #180]	@ (8006988 <HAL_TIM_MspPostInit+0x118>)
 80068d2:	0019      	movs	r1, r3
 80068d4:	0010      	movs	r0, r2
 80068d6:	f002 f9db 	bl	8008c90 <HAL_GPIO_Init>
    /* USER CODE BEGIN TIM4_MspPostInit 1 */

    /* USER CODE END TIM4_MspPostInit 1 */
  }

}
 80068da:	e04f      	b.n	800697c <HAL_TIM_MspPostInit+0x10c>
  else if(htim->Instance==TIM3)
 80068dc:	687b      	ldr	r3, [r7, #4]
 80068de:	681b      	ldr	r3, [r3, #0]
 80068e0:	4a2a      	ldr	r2, [pc, #168]	@ (800698c <HAL_TIM_MspPostInit+0x11c>)
 80068e2:	4293      	cmp	r3, r2
 80068e4:	d122      	bne.n	800692c <HAL_TIM_MspPostInit+0xbc>
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80068e6:	4b27      	ldr	r3, [pc, #156]	@ (8006984 <HAL_TIM_MspPostInit+0x114>)
 80068e8:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80068ea:	4b26      	ldr	r3, [pc, #152]	@ (8006984 <HAL_TIM_MspPostInit+0x114>)
 80068ec:	2102      	movs	r1, #2
 80068ee:	430a      	orrs	r2, r1
 80068f0:	635a      	str	r2, [r3, #52]	@ 0x34
 80068f2:	4b24      	ldr	r3, [pc, #144]	@ (8006984 <HAL_TIM_MspPostInit+0x114>)
 80068f4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80068f6:	2202      	movs	r2, #2
 80068f8:	4013      	ands	r3, r2
 80068fa:	60fb      	str	r3, [r7, #12]
 80068fc:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 80068fe:	2114      	movs	r1, #20
 8006900:	187b      	adds	r3, r7, r1
 8006902:	2201      	movs	r2, #1
 8006904:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8006906:	187b      	adds	r3, r7, r1
 8006908:	2202      	movs	r2, #2
 800690a:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800690c:	187b      	adds	r3, r7, r1
 800690e:	2200      	movs	r2, #0
 8006910:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8006912:	187b      	adds	r3, r7, r1
 8006914:	2200      	movs	r2, #0
 8006916:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM3;
 8006918:	187b      	adds	r3, r7, r1
 800691a:	2201      	movs	r2, #1
 800691c:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800691e:	187b      	adds	r3, r7, r1
 8006920:	4a19      	ldr	r2, [pc, #100]	@ (8006988 <HAL_TIM_MspPostInit+0x118>)
 8006922:	0019      	movs	r1, r3
 8006924:	0010      	movs	r0, r2
 8006926:	f002 f9b3 	bl	8008c90 <HAL_GPIO_Init>
}
 800692a:	e027      	b.n	800697c <HAL_TIM_MspPostInit+0x10c>
  else if(htim->Instance==TIM4)
 800692c:	687b      	ldr	r3, [r7, #4]
 800692e:	681b      	ldr	r3, [r3, #0]
 8006930:	4a17      	ldr	r2, [pc, #92]	@ (8006990 <HAL_TIM_MspPostInit+0x120>)
 8006932:	4293      	cmp	r3, r2
 8006934:	d122      	bne.n	800697c <HAL_TIM_MspPostInit+0x10c>
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8006936:	4b13      	ldr	r3, [pc, #76]	@ (8006984 <HAL_TIM_MspPostInit+0x114>)
 8006938:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800693a:	4b12      	ldr	r3, [pc, #72]	@ (8006984 <HAL_TIM_MspPostInit+0x114>)
 800693c:	2102      	movs	r1, #2
 800693e:	430a      	orrs	r2, r1
 8006940:	635a      	str	r2, [r3, #52]	@ 0x34
 8006942:	4b10      	ldr	r3, [pc, #64]	@ (8006984 <HAL_TIM_MspPostInit+0x114>)
 8006944:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006946:	2202      	movs	r2, #2
 8006948:	4013      	ands	r3, r2
 800694a:	60bb      	str	r3, [r7, #8]
 800694c:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 800694e:	2114      	movs	r1, #20
 8006950:	187b      	adds	r3, r7, r1
 8006952:	2280      	movs	r2, #128	@ 0x80
 8006954:	0092      	lsls	r2, r2, #2
 8006956:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8006958:	187b      	adds	r3, r7, r1
 800695a:	2202      	movs	r2, #2
 800695c:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800695e:	187b      	adds	r3, r7, r1
 8006960:	2200      	movs	r2, #0
 8006962:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8006964:	187b      	adds	r3, r7, r1
 8006966:	2200      	movs	r2, #0
 8006968:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF9_TIM4;
 800696a:	187b      	adds	r3, r7, r1
 800696c:	2209      	movs	r2, #9
 800696e:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8006970:	187b      	adds	r3, r7, r1
 8006972:	4a05      	ldr	r2, [pc, #20]	@ (8006988 <HAL_TIM_MspPostInit+0x118>)
 8006974:	0019      	movs	r1, r3
 8006976:	0010      	movs	r0, r2
 8006978:	f002 f98a 	bl	8008c90 <HAL_GPIO_Init>
}
 800697c:	46c0      	nop			@ (mov r8, r8)
 800697e:	46bd      	mov	sp, r7
 8006980:	b00b      	add	sp, #44	@ 0x2c
 8006982:	bd90      	pop	{r4, r7, pc}
 8006984:	40021000 	.word	0x40021000
 8006988:	50000400 	.word	0x50000400
 800698c:	40000400 	.word	0x40000400
 8006990:	40000800 	.word	0x40000800

08006994 <HAL_PCD_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hpcd: PCD handle pointer
  * @retval None
  */
void HAL_PCD_MspInit(PCD_HandleTypeDef* hpcd)
{
 8006994:	b590      	push	{r4, r7, lr}
 8006996:	b099      	sub	sp, #100	@ 0x64
 8006998:	af00      	add	r7, sp, #0
 800699a:	6078      	str	r0, [r7, #4]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 800699c:	2414      	movs	r4, #20
 800699e:	193b      	adds	r3, r7, r4
 80069a0:	0018      	movs	r0, r3
 80069a2:	234c      	movs	r3, #76	@ 0x4c
 80069a4:	001a      	movs	r2, r3
 80069a6:	2100      	movs	r1, #0
 80069a8:	f005 fb5c 	bl	800c064 <memset>
  if(hpcd->Instance==USB_DRD_FS)
 80069ac:	687b      	ldr	r3, [r7, #4]
 80069ae:	681b      	ldr	r3, [r3, #0]
 80069b0:	4a21      	ldr	r2, [pc, #132]	@ (8006a38 <HAL_PCD_MspInit+0xa4>)
 80069b2:	4293      	cmp	r3, r2
 80069b4:	d13b      	bne.n	8006a2e <HAL_PCD_MspInit+0x9a>

    /* USER CODE END USB_DRD_FS_MspInit 0 */

  /** Initializes the peripherals clocks
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB;
 80069b6:	193b      	adds	r3, r7, r4
 80069b8:	2280      	movs	r2, #128	@ 0x80
 80069ba:	0452      	lsls	r2, r2, #17
 80069bc:	601a      	str	r2, [r3, #0]
    PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
 80069be:	193b      	adds	r3, r7, r4
 80069c0:	2200      	movs	r2, #0
 80069c2:	645a      	str	r2, [r3, #68]	@ 0x44
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80069c4:	193b      	adds	r3, r7, r4
 80069c6:	0018      	movs	r0, r3
 80069c8:	f003 fa98 	bl	8009efc <HAL_RCCEx_PeriphCLKConfig>
 80069cc:	1e03      	subs	r3, r0, #0
 80069ce:	d001      	beq.n	80069d4 <HAL_PCD_MspInit+0x40>
    {
      Error_Handler();
 80069d0:	f7ff fa1a 	bl	8005e08 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_USB_CLK_ENABLE();
 80069d4:	4b19      	ldr	r3, [pc, #100]	@ (8006a3c <HAL_PCD_MspInit+0xa8>)
 80069d6:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80069d8:	4b18      	ldr	r3, [pc, #96]	@ (8006a3c <HAL_PCD_MspInit+0xa8>)
 80069da:	2180      	movs	r1, #128	@ 0x80
 80069dc:	0189      	lsls	r1, r1, #6
 80069de:	430a      	orrs	r2, r1
 80069e0:	63da      	str	r2, [r3, #60]	@ 0x3c
 80069e2:	4b16      	ldr	r3, [pc, #88]	@ (8006a3c <HAL_PCD_MspInit+0xa8>)
 80069e4:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80069e6:	2380      	movs	r3, #128	@ 0x80
 80069e8:	019b      	lsls	r3, r3, #6
 80069ea:	4013      	ands	r3, r2
 80069ec:	613b      	str	r3, [r7, #16]
 80069ee:	693b      	ldr	r3, [r7, #16]

    /* Enable VDDUSB */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80069f0:	4b12      	ldr	r3, [pc, #72]	@ (8006a3c <HAL_PCD_MspInit+0xa8>)
 80069f2:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80069f4:	2380      	movs	r3, #128	@ 0x80
 80069f6:	055b      	lsls	r3, r3, #21
 80069f8:	4013      	ands	r3, r2
 80069fa:	d116      	bne.n	8006a2a <HAL_PCD_MspInit+0x96>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 80069fc:	4b0f      	ldr	r3, [pc, #60]	@ (8006a3c <HAL_PCD_MspInit+0xa8>)
 80069fe:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8006a00:	4b0e      	ldr	r3, [pc, #56]	@ (8006a3c <HAL_PCD_MspInit+0xa8>)
 8006a02:	2180      	movs	r1, #128	@ 0x80
 8006a04:	0549      	lsls	r1, r1, #21
 8006a06:	430a      	orrs	r2, r1
 8006a08:	63da      	str	r2, [r3, #60]	@ 0x3c
 8006a0a:	4b0c      	ldr	r3, [pc, #48]	@ (8006a3c <HAL_PCD_MspInit+0xa8>)
 8006a0c:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8006a0e:	2380      	movs	r3, #128	@ 0x80
 8006a10:	055b      	lsls	r3, r3, #21
 8006a12:	4013      	ands	r3, r2
 8006a14:	60fb      	str	r3, [r7, #12]
 8006a16:	68fb      	ldr	r3, [r7, #12]
      HAL_PWREx_EnableVddUSB();
 8006a18:	f002 fd3a 	bl	8009490 <HAL_PWREx_EnableVddUSB>
      __HAL_RCC_PWR_CLK_DISABLE();
 8006a1c:	4b07      	ldr	r3, [pc, #28]	@ (8006a3c <HAL_PCD_MspInit+0xa8>)
 8006a1e:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8006a20:	4b06      	ldr	r3, [pc, #24]	@ (8006a3c <HAL_PCD_MspInit+0xa8>)
 8006a22:	4907      	ldr	r1, [pc, #28]	@ (8006a40 <HAL_PCD_MspInit+0xac>)
 8006a24:	400a      	ands	r2, r1
 8006a26:	63da      	str	r2, [r3, #60]	@ 0x3c

    /* USER CODE END USB_DRD_FS_MspInit 1 */

  }

}
 8006a28:	e001      	b.n	8006a2e <HAL_PCD_MspInit+0x9a>
      HAL_PWREx_EnableVddUSB();
 8006a2a:	f002 fd31 	bl	8009490 <HAL_PWREx_EnableVddUSB>
}
 8006a2e:	46c0      	nop			@ (mov r8, r8)
 8006a30:	46bd      	mov	sp, r7
 8006a32:	b019      	add	sp, #100	@ 0x64
 8006a34:	bd90      	pop	{r4, r7, pc}
 8006a36:	46c0      	nop			@ (mov r8, r8)
 8006a38:	40005c00 	.word	0x40005c00
 8006a3c:	40021000 	.word	0x40021000
 8006a40:	efffffff 	.word	0xefffffff

08006a44 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8006a44:	b580      	push	{r7, lr}
 8006a46:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8006a48:	46c0      	nop			@ (mov r8, r8)
 8006a4a:	e7fd      	b.n	8006a48 <NMI_Handler+0x4>

08006a4c <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8006a4c:	b580      	push	{r7, lr}
 8006a4e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8006a50:	46c0      	nop			@ (mov r8, r8)
 8006a52:	e7fd      	b.n	8006a50 <HardFault_Handler+0x4>

08006a54 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8006a54:	b580      	push	{r7, lr}
 8006a56:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 8006a58:	46c0      	nop			@ (mov r8, r8)
 8006a5a:	46bd      	mov	sp, r7
 8006a5c:	bd80      	pop	{r7, pc}

08006a5e <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8006a5e:	b580      	push	{r7, lr}
 8006a60:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8006a62:	46c0      	nop			@ (mov r8, r8)
 8006a64:	46bd      	mov	sp, r7
 8006a66:	bd80      	pop	{r7, pc}

08006a68 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8006a68:	b580      	push	{r7, lr}
 8006a6a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8006a6c:	f000 f9c6 	bl	8006dfc <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8006a70:	46c0      	nop			@ (mov r8, r8)
 8006a72:	46bd      	mov	sp, r7
 8006a74:	bd80      	pop	{r7, pc}
	...

08006a78 <TIM16_FDCAN_IT0_IRQHandler>:

/**
  * @brief This function handles TIM16, FDCAN1_IT0 and FDCAN2_IT0 Interrupt.
  */
void TIM16_FDCAN_IT0_IRQHandler(void)
{
 8006a78:	b580      	push	{r7, lr}
 8006a7a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM16_FDCAN_IT0_IRQn 0 */

  /* USER CODE END TIM16_FDCAN_IT0_IRQn 0 */
  HAL_FDCAN_IRQHandler(&hfdcan1);
 8006a7c:	4b03      	ldr	r3, [pc, #12]	@ (8006a8c <TIM16_FDCAN_IT0_IRQHandler+0x14>)
 8006a7e:	0018      	movs	r0, r3
 8006a80:	f001 fcd0 	bl	8008424 <HAL_FDCAN_IRQHandler>
  /* USER CODE BEGIN TIM16_FDCAN_IT0_IRQn 1 */

  /* USER CODE END TIM16_FDCAN_IT0_IRQn 1 */
}
 8006a84:	46c0      	nop			@ (mov r8, r8)
 8006a86:	46bd      	mov	sp, r7
 8006a88:	bd80      	pop	{r7, pc}
 8006a8a:	46c0      	nop			@ (mov r8, r8)
 8006a8c:	2000d440 	.word	0x2000d440

08006a90 <SystemInit>:
  * @brief  Setup the microcontroller system.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8006a90:	b580      	push	{r7, lr}
 8006a92:	af00      	add	r7, sp, #0
  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8006a94:	46c0      	nop			@ (mov r8, r8)
 8006a96:	46bd      	mov	sp, r7
 8006a98:	bd80      	pop	{r7, pc}

08006a9a <vertos_calculations_init>:

/**
 * @brief Initialize the velocity/acceleration calculation system
 * @retval None
 */
void vertos_calculations_init(void) {
 8006a9a:	b580      	push	{r7, lr}
 8006a9c:	af00      	add	r7, sp, #0
    vertos_calculations_reset();
 8006a9e:	f000 f803 	bl	8006aa8 <vertos_calculations_reset>
}
 8006aa2:	46c0      	nop			@ (mov r8, r8)
 8006aa4:	46bd      	mov	sp, r7
 8006aa6:	bd80      	pop	{r7, pc}

08006aa8 <vertos_calculations_reset>:

/**
 * @brief Reset all calculation state variables
 * @retval None
 */
void vertos_calculations_reset(void) {
 8006aa8:	b580      	push	{r7, lr}
 8006aaa:	af00      	add	r7, sp, #0
    prevMultiTurnCounts = 0;
 8006aac:	490e      	ldr	r1, [pc, #56]	@ (8006ae8 <vertos_calculations_reset+0x40>)
 8006aae:	2200      	movs	r2, #0
 8006ab0:	2300      	movs	r3, #0
 8006ab2:	600a      	str	r2, [r1, #0]
 8006ab4:	604b      	str	r3, [r1, #4]
    prevTimeMillisec = 0;
 8006ab6:	4b0d      	ldr	r3, [pc, #52]	@ (8006aec <vertos_calculations_reset+0x44>)
 8006ab8:	2200      	movs	r2, #0
 8006aba:	601a      	str	r2, [r3, #0]
    filteredVelocityCPS = 0.0f;
 8006abc:	4b0c      	ldr	r3, [pc, #48]	@ (8006af0 <vertos_calculations_reset+0x48>)
 8006abe:	2200      	movs	r2, #0
 8006ac0:	601a      	str	r2, [r3, #0]
    filteredAccelCPS2 = 0.0f;
 8006ac2:	4b0c      	ldr	r3, [pc, #48]	@ (8006af4 <vertos_calculations_reset+0x4c>)
 8006ac4:	2200      	movs	r2, #0
 8006ac6:	601a      	str	r2, [r3, #0]
    lastVelocityCPS = 0.0f;
 8006ac8:	4b0b      	ldr	r3, [pc, #44]	@ (8006af8 <vertos_calculations_reset+0x50>)
 8006aca:	2200      	movs	r2, #0
 8006acc:	601a      	str	r2, [r3, #0]
    velocityCountsScaled = 0;
 8006ace:	4b0b      	ldr	r3, [pc, #44]	@ (8006afc <vertos_calculations_reset+0x54>)
 8006ad0:	2200      	movs	r2, #0
 8006ad2:	601a      	str	r2, [r3, #0]
    accelCountsScaled = 0;
 8006ad4:	4b0a      	ldr	r3, [pc, #40]	@ (8006b00 <vertos_calculations_reset+0x58>)
 8006ad6:	2200      	movs	r2, #0
 8006ad8:	601a      	str	r2, [r3, #0]
    calculationsReady = 0;
 8006ada:	4b0a      	ldr	r3, [pc, #40]	@ (8006b04 <vertos_calculations_reset+0x5c>)
 8006adc:	2200      	movs	r2, #0
 8006ade:	601a      	str	r2, [r3, #0]
}
 8006ae0:	46c0      	nop			@ (mov r8, r8)
 8006ae2:	46bd      	mov	sp, r7
 8006ae4:	bd80      	pop	{r7, pc}
 8006ae6:	46c0      	nop			@ (mov r8, r8)
 8006ae8:	2000dab8 	.word	0x2000dab8
 8006aec:	2000dac0 	.word	0x2000dac0
 8006af0:	2000dac4 	.word	0x2000dac4
 8006af4:	2000dac8 	.word	0x2000dac8
 8006af8:	2000dacc 	.word	0x2000dacc
 8006afc:	2000dad0 	.word	0x2000dad0
 8006b00:	2000dad4 	.word	0x2000dad4
 8006b04:	2000dad8 	.word	0x2000dad8

08006b08 <vertos_calculations_update>:
 * @brief Update velocity and acceleration calculations
 * @param multiTurnCounts Current multi-turn encoder counts
 * @param currentTimeMillisec Current system time in milliseconds
 * @retval 1 if calculation successful, 0 if not enough data yet
 */
int vertos_calculations_update(int64_t multiTurnCounts, uint32_t currentTimeMillisec) {
 8006b08:	b590      	push	{r4, r7, lr}
 8006b0a:	b08d      	sub	sp, #52	@ 0x34
 8006b0c:	af00      	add	r7, sp, #0
 8006b0e:	60b8      	str	r0, [r7, #8]
 8006b10:	60f9      	str	r1, [r7, #12]
 8006b12:	607a      	str	r2, [r7, #4]
    // Check if we have previous data for calculation
    if (prevTimeMillisec == 0) {
 8006b14:	4b5c      	ldr	r3, [pc, #368]	@ (8006c88 <vertos_calculations_update+0x180>)
 8006b16:	681b      	ldr	r3, [r3, #0]
 8006b18:	2b00      	cmp	r3, #0
 8006b1a:	d10c      	bne.n	8006b36 <vertos_calculations_update+0x2e>
        // First run - store current values and return not ready
        prevMultiTurnCounts = multiTurnCounts;
 8006b1c:	495b      	ldr	r1, [pc, #364]	@ (8006c8c <vertos_calculations_update+0x184>)
 8006b1e:	68ba      	ldr	r2, [r7, #8]
 8006b20:	68fb      	ldr	r3, [r7, #12]
 8006b22:	600a      	str	r2, [r1, #0]
 8006b24:	604b      	str	r3, [r1, #4]
        prevTimeMillisec = currentTimeMillisec;
 8006b26:	4b58      	ldr	r3, [pc, #352]	@ (8006c88 <vertos_calculations_update+0x180>)
 8006b28:	687a      	ldr	r2, [r7, #4]
 8006b2a:	601a      	str	r2, [r3, #0]
        calculationsReady = 0;
 8006b2c:	4b58      	ldr	r3, [pc, #352]	@ (8006c90 <vertos_calculations_update+0x188>)
 8006b2e:	2200      	movs	r2, #0
 8006b30:	601a      	str	r2, [r3, #0]
        return 0;
 8006b32:	2300      	movs	r3, #0
 8006b34:	e0a3      	b.n	8006c7e <vertos_calculations_update+0x176>
    }

    // Calculate time delta
    int64_t deltaCounts = multiTurnCounts - prevMultiTurnCounts;
 8006b36:	4b55      	ldr	r3, [pc, #340]	@ (8006c8c <vertos_calculations_update+0x184>)
 8006b38:	681a      	ldr	r2, [r3, #0]
 8006b3a:	685b      	ldr	r3, [r3, #4]
 8006b3c:	68b8      	ldr	r0, [r7, #8]
 8006b3e:	68f9      	ldr	r1, [r7, #12]
 8006b40:	1a80      	subs	r0, r0, r2
 8006b42:	4199      	sbcs	r1, r3
 8006b44:	0002      	movs	r2, r0
 8006b46:	000b      	movs	r3, r1
 8006b48:	62ba      	str	r2, [r7, #40]	@ 0x28
 8006b4a:	62fb      	str	r3, [r7, #44]	@ 0x2c
    uint32_t deltaTime = currentTimeMillisec - prevTimeMillisec;
 8006b4c:	4b4e      	ldr	r3, [pc, #312]	@ (8006c88 <vertos_calculations_update+0x180>)
 8006b4e:	681b      	ldr	r3, [r3, #0]
 8006b50:	687a      	ldr	r2, [r7, #4]
 8006b52:	1ad3      	subs	r3, r2, r3
 8006b54:	627b      	str	r3, [r7, #36]	@ 0x24

    // Avoid division by zero
    if (deltaTime == 0) {
 8006b56:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006b58:	2b00      	cmp	r3, #0
 8006b5a:	d102      	bne.n	8006b62 <vertos_calculations_update+0x5a>
        return calculationsReady;
 8006b5c:	4b4c      	ldr	r3, [pc, #304]	@ (8006c90 <vertos_calculations_update+0x188>)
 8006b5e:	681b      	ldr	r3, [r3, #0]
 8006b60:	e08d      	b.n	8006c7e <vertos_calculations_update+0x176>
    }

    // Calculate instantaneous velocity in counts per second
    float velocityCPS = (float)deltaCounts * 1000.0f / (float)deltaTime;
 8006b62:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8006b64:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8006b66:	f7f9 fc97 	bl	8000498 <__aeabi_l2f>
 8006b6a:	1c03      	adds	r3, r0, #0
 8006b6c:	4949      	ldr	r1, [pc, #292]	@ (8006c94 <vertos_calculations_update+0x18c>)
 8006b6e:	1c18      	adds	r0, r3, #0
 8006b70:	f7fa f886 	bl	8000c80 <__aeabi_fmul>
 8006b74:	1c03      	adds	r3, r0, #0
 8006b76:	1c1c      	adds	r4, r3, #0
 8006b78:	6a78      	ldr	r0, [r7, #36]	@ 0x24
 8006b7a:	f7fa fcaf 	bl	80014dc <__aeabi_ui2f>
 8006b7e:	1c03      	adds	r3, r0, #0
 8006b80:	1c19      	adds	r1, r3, #0
 8006b82:	1c20      	adds	r0, r4, #0
 8006b84:	f7f9 feae 	bl	80008e4 <__aeabi_fdiv>
 8006b88:	1c03      	adds	r3, r0, #0
 8006b8a:	623b      	str	r3, [r7, #32]

    // Get filter coefficients from flash
    float vel_alpha = flash_get_velocity_alpha();
 8006b8c:	f7fd fbb6 	bl	80042fc <flash_get_velocity_alpha>
 8006b90:	1c03      	adds	r3, r0, #0
 8006b92:	61fb      	str	r3, [r7, #28]
    float acc_alpha = flash_get_accel_alpha();
 8006b94:	f7fd fc14 	bl	80043c0 <flash_get_accel_alpha>
 8006b98:	1c03      	adds	r3, r0, #0
 8006b9a:	61bb      	str	r3, [r7, #24]

    // Apply low-pass filter to velocity
    filteredVelocityCPS = vel_alpha * velocityCPS + (1.0f - vel_alpha) * filteredVelocityCPS;
 8006b9c:	6a39      	ldr	r1, [r7, #32]
 8006b9e:	69f8      	ldr	r0, [r7, #28]
 8006ba0:	f7fa f86e 	bl	8000c80 <__aeabi_fmul>
 8006ba4:	1c03      	adds	r3, r0, #0
 8006ba6:	1c1c      	adds	r4, r3, #0
 8006ba8:	69f9      	ldr	r1, [r7, #28]
 8006baa:	20fe      	movs	r0, #254	@ 0xfe
 8006bac:	0580      	lsls	r0, r0, #22
 8006bae:	f7fa f9c1 	bl	8000f34 <__aeabi_fsub>
 8006bb2:	1c03      	adds	r3, r0, #0
 8006bb4:	1c1a      	adds	r2, r3, #0
 8006bb6:	4b38      	ldr	r3, [pc, #224]	@ (8006c98 <vertos_calculations_update+0x190>)
 8006bb8:	681b      	ldr	r3, [r3, #0]
 8006bba:	1c19      	adds	r1, r3, #0
 8006bbc:	1c10      	adds	r0, r2, #0
 8006bbe:	f7fa f85f 	bl	8000c80 <__aeabi_fmul>
 8006bc2:	1c03      	adds	r3, r0, #0
 8006bc4:	1c19      	adds	r1, r3, #0
 8006bc6:	1c20      	adds	r0, r4, #0
 8006bc8:	f7f9 fc9a 	bl	8000500 <__aeabi_fadd>
 8006bcc:	1c03      	adds	r3, r0, #0
 8006bce:	1c1a      	adds	r2, r3, #0
 8006bd0:	4b31      	ldr	r3, [pc, #196]	@ (8006c98 <vertos_calculations_update+0x190>)
 8006bd2:	601a      	str	r2, [r3, #0]

    // Calculate acceleration in counts per second squared
    float accelCPS2 = (filteredVelocityCPS - lastVelocityCPS) * 1000.0f / (float)deltaTime;
 8006bd4:	4b30      	ldr	r3, [pc, #192]	@ (8006c98 <vertos_calculations_update+0x190>)
 8006bd6:	681a      	ldr	r2, [r3, #0]
 8006bd8:	4b30      	ldr	r3, [pc, #192]	@ (8006c9c <vertos_calculations_update+0x194>)
 8006bda:	681b      	ldr	r3, [r3, #0]
 8006bdc:	1c19      	adds	r1, r3, #0
 8006bde:	1c10      	adds	r0, r2, #0
 8006be0:	f7fa f9a8 	bl	8000f34 <__aeabi_fsub>
 8006be4:	1c03      	adds	r3, r0, #0
 8006be6:	492b      	ldr	r1, [pc, #172]	@ (8006c94 <vertos_calculations_update+0x18c>)
 8006be8:	1c18      	adds	r0, r3, #0
 8006bea:	f7fa f849 	bl	8000c80 <__aeabi_fmul>
 8006bee:	1c03      	adds	r3, r0, #0
 8006bf0:	1c1c      	adds	r4, r3, #0
 8006bf2:	6a78      	ldr	r0, [r7, #36]	@ 0x24
 8006bf4:	f7fa fc72 	bl	80014dc <__aeabi_ui2f>
 8006bf8:	1c03      	adds	r3, r0, #0
 8006bfa:	1c19      	adds	r1, r3, #0
 8006bfc:	1c20      	adds	r0, r4, #0
 8006bfe:	f7f9 fe71 	bl	80008e4 <__aeabi_fdiv>
 8006c02:	1c03      	adds	r3, r0, #0
 8006c04:	617b      	str	r3, [r7, #20]

    // Apply low-pass filter to acceleration
    filteredAccelCPS2 = acc_alpha * accelCPS2 + (1.0f - acc_alpha) * filteredAccelCPS2;
 8006c06:	6979      	ldr	r1, [r7, #20]
 8006c08:	69b8      	ldr	r0, [r7, #24]
 8006c0a:	f7fa f839 	bl	8000c80 <__aeabi_fmul>
 8006c0e:	1c03      	adds	r3, r0, #0
 8006c10:	1c1c      	adds	r4, r3, #0
 8006c12:	69b9      	ldr	r1, [r7, #24]
 8006c14:	20fe      	movs	r0, #254	@ 0xfe
 8006c16:	0580      	lsls	r0, r0, #22
 8006c18:	f7fa f98c 	bl	8000f34 <__aeabi_fsub>
 8006c1c:	1c03      	adds	r3, r0, #0
 8006c1e:	1c1a      	adds	r2, r3, #0
 8006c20:	4b1f      	ldr	r3, [pc, #124]	@ (8006ca0 <vertos_calculations_update+0x198>)
 8006c22:	681b      	ldr	r3, [r3, #0]
 8006c24:	1c19      	adds	r1, r3, #0
 8006c26:	1c10      	adds	r0, r2, #0
 8006c28:	f7fa f82a 	bl	8000c80 <__aeabi_fmul>
 8006c2c:	1c03      	adds	r3, r0, #0
 8006c2e:	1c19      	adds	r1, r3, #0
 8006c30:	1c20      	adds	r0, r4, #0
 8006c32:	f7f9 fc65 	bl	8000500 <__aeabi_fadd>
 8006c36:	1c03      	adds	r3, r0, #0
 8006c38:	1c1a      	adds	r2, r3, #0
 8006c3a:	4b19      	ldr	r3, [pc, #100]	@ (8006ca0 <vertos_calculations_update+0x198>)
 8006c3c:	601a      	str	r2, [r3, #0]

    // Scale for transmission
    velocityCountsScaled = (int32_t)filteredVelocityCPS;
 8006c3e:	4b16      	ldr	r3, [pc, #88]	@ (8006c98 <vertos_calculations_update+0x190>)
 8006c40:	681b      	ldr	r3, [r3, #0]
 8006c42:	1c18      	adds	r0, r3, #0
 8006c44:	f7fa fbda 	bl	80013fc <__aeabi_f2iz>
 8006c48:	0002      	movs	r2, r0
 8006c4a:	4b16      	ldr	r3, [pc, #88]	@ (8006ca4 <vertos_calculations_update+0x19c>)
 8006c4c:	601a      	str	r2, [r3, #0]
    accelCountsScaled = (int32_t)filteredAccelCPS2;
 8006c4e:	4b14      	ldr	r3, [pc, #80]	@ (8006ca0 <vertos_calculations_update+0x198>)
 8006c50:	681b      	ldr	r3, [r3, #0]
 8006c52:	1c18      	adds	r0, r3, #0
 8006c54:	f7fa fbd2 	bl	80013fc <__aeabi_f2iz>
 8006c58:	0002      	movs	r2, r0
 8006c5a:	4b13      	ldr	r3, [pc, #76]	@ (8006ca8 <vertos_calculations_update+0x1a0>)
 8006c5c:	601a      	str	r2, [r3, #0]

    // Update state for next iteration
    lastVelocityCPS = filteredVelocityCPS;
 8006c5e:	4b0e      	ldr	r3, [pc, #56]	@ (8006c98 <vertos_calculations_update+0x190>)
 8006c60:	681a      	ldr	r2, [r3, #0]
 8006c62:	4b0e      	ldr	r3, [pc, #56]	@ (8006c9c <vertos_calculations_update+0x194>)
 8006c64:	601a      	str	r2, [r3, #0]
    prevMultiTurnCounts = multiTurnCounts;
 8006c66:	4909      	ldr	r1, [pc, #36]	@ (8006c8c <vertos_calculations_update+0x184>)
 8006c68:	68ba      	ldr	r2, [r7, #8]
 8006c6a:	68fb      	ldr	r3, [r7, #12]
 8006c6c:	600a      	str	r2, [r1, #0]
 8006c6e:	604b      	str	r3, [r1, #4]
    prevTimeMillisec = currentTimeMillisec;
 8006c70:	4b05      	ldr	r3, [pc, #20]	@ (8006c88 <vertos_calculations_update+0x180>)
 8006c72:	687a      	ldr	r2, [r7, #4]
 8006c74:	601a      	str	r2, [r3, #0]

    // Mark as ready after first successful calculation
    calculationsReady = 1;
 8006c76:	4b06      	ldr	r3, [pc, #24]	@ (8006c90 <vertos_calculations_update+0x188>)
 8006c78:	2201      	movs	r2, #1
 8006c7a:	601a      	str	r2, [r3, #0]

    return 1;
 8006c7c:	2301      	movs	r3, #1
}
 8006c7e:	0018      	movs	r0, r3
 8006c80:	46bd      	mov	sp, r7
 8006c82:	b00d      	add	sp, #52	@ 0x34
 8006c84:	bd90      	pop	{r4, r7, pc}
 8006c86:	46c0      	nop			@ (mov r8, r8)
 8006c88:	2000dac0 	.word	0x2000dac0
 8006c8c:	2000dab8 	.word	0x2000dab8
 8006c90:	2000dad8 	.word	0x2000dad8
 8006c94:	447a0000 	.word	0x447a0000
 8006c98:	2000dac4 	.word	0x2000dac4
 8006c9c:	2000dacc 	.word	0x2000dacc
 8006ca0:	2000dac8 	.word	0x2000dac8
 8006ca4:	2000dad0 	.word	0x2000dad0
 8006ca8:	2000dad4 	.word	0x2000dad4

08006cac <vertos_calculations_get_velocity_scaled>:

/**
 * @brief Get the current scaled velocity for CAN transmission
 * @retval Current scaled velocity
 */
int32_t vertos_calculations_get_velocity_scaled(void) {
 8006cac:	b580      	push	{r7, lr}
 8006cae:	af00      	add	r7, sp, #0
    return velocityCountsScaled;
 8006cb0:	4b02      	ldr	r3, [pc, #8]	@ (8006cbc <vertos_calculations_get_velocity_scaled+0x10>)
 8006cb2:	681b      	ldr	r3, [r3, #0]
}
 8006cb4:	0018      	movs	r0, r3
 8006cb6:	46bd      	mov	sp, r7
 8006cb8:	bd80      	pop	{r7, pc}
 8006cba:	46c0      	nop			@ (mov r8, r8)
 8006cbc:	2000dad0 	.word	0x2000dad0

08006cc0 <vertos_calculations_get_acceleration_scaled>:

/**
 * @brief Get the current scaled acceleration for CAN transmission
 * @retval Current scaled acceleration
 */
int32_t vertos_calculations_get_acceleration_scaled(void) {
 8006cc0:	b580      	push	{r7, lr}
 8006cc2:	af00      	add	r7, sp, #0
    return accelCountsScaled;
 8006cc4:	4b02      	ldr	r3, [pc, #8]	@ (8006cd0 <vertos_calculations_get_acceleration_scaled+0x10>)
 8006cc6:	681b      	ldr	r3, [r3, #0]
}
 8006cc8:	0018      	movs	r0, r3
 8006cca:	46bd      	mov	sp, r7
 8006ccc:	bd80      	pop	{r7, pc}
 8006cce:	46c0      	nop			@ (mov r8, r8)
 8006cd0:	2000dad4 	.word	0x2000dad4

08006cd4 <Reset_Handler>:
 8006cd4:	480d      	ldr	r0, [pc, #52]	@ (8006d0c <LoopForever+0x2>)
 8006cd6:	4685      	mov	sp, r0
 8006cd8:	f7ff feda 	bl	8006a90 <SystemInit>
 8006cdc:	480c      	ldr	r0, [pc, #48]	@ (8006d10 <LoopForever+0x6>)
 8006cde:	490d      	ldr	r1, [pc, #52]	@ (8006d14 <LoopForever+0xa>)
 8006ce0:	4a0d      	ldr	r2, [pc, #52]	@ (8006d18 <LoopForever+0xe>)
 8006ce2:	2300      	movs	r3, #0
 8006ce4:	e002      	b.n	8006cec <LoopCopyDataInit>

08006ce6 <CopyDataInit>:
 8006ce6:	58d4      	ldr	r4, [r2, r3]
 8006ce8:	50c4      	str	r4, [r0, r3]
 8006cea:	3304      	adds	r3, #4

08006cec <LoopCopyDataInit>:
 8006cec:	18c4      	adds	r4, r0, r3
 8006cee:	428c      	cmp	r4, r1
 8006cf0:	d3f9      	bcc.n	8006ce6 <CopyDataInit>
 8006cf2:	4a0a      	ldr	r2, [pc, #40]	@ (8006d1c <LoopForever+0x12>)
 8006cf4:	4c0a      	ldr	r4, [pc, #40]	@ (8006d20 <LoopForever+0x16>)
 8006cf6:	2300      	movs	r3, #0
 8006cf8:	e001      	b.n	8006cfe <LoopFillZerobss>

08006cfa <FillZerobss>:
 8006cfa:	6013      	str	r3, [r2, #0]
 8006cfc:	3204      	adds	r2, #4

08006cfe <LoopFillZerobss>:
 8006cfe:	42a2      	cmp	r2, r4
 8006d00:	d3fb      	bcc.n	8006cfa <FillZerobss>
 8006d02:	f005 f9b7 	bl	800c074 <__libc_init_array>
 8006d06:	f7fd ff53 	bl	8004bb0 <main>

08006d0a <LoopForever>:
 8006d0a:	e7fe      	b.n	8006d0a <LoopForever>
 8006d0c:	20024000 	.word	0x20024000
 8006d10:	20000000 	.word	0x20000000
 8006d14:	20000130 	.word	0x20000130
 8006d18:	0800c558 	.word	0x0800c558
 8006d1c:	20000130 	.word	0x20000130
 8006d20:	2000dafc 	.word	0x2000dafc

08006d24 <ADC1_COMP_IRQHandler>:
 8006d24:	e7fe      	b.n	8006d24 <ADC1_COMP_IRQHandler>
	...

08006d28 <HAL_Init>:
 8006d28:	b580      	push	{r7, lr}
 8006d2a:	b082      	sub	sp, #8
 8006d2c:	af00      	add	r7, sp, #0
 8006d2e:	1dfb      	adds	r3, r7, #7
 8006d30:	2200      	movs	r2, #0
 8006d32:	701a      	strb	r2, [r3, #0]
 8006d34:	4b0b      	ldr	r3, [pc, #44]	@ (8006d64 <HAL_Init+0x3c>)
 8006d36:	681a      	ldr	r2, [r3, #0]
 8006d38:	4b0a      	ldr	r3, [pc, #40]	@ (8006d64 <HAL_Init+0x3c>)
 8006d3a:	2180      	movs	r1, #128	@ 0x80
 8006d3c:	0049      	lsls	r1, r1, #1
 8006d3e:	430a      	orrs	r2, r1
 8006d40:	601a      	str	r2, [r3, #0]
 8006d42:	2003      	movs	r0, #3
 8006d44:	f000 f810 	bl	8006d68 <HAL_InitTick>
 8006d48:	1e03      	subs	r3, r0, #0
 8006d4a:	d003      	beq.n	8006d54 <HAL_Init+0x2c>
 8006d4c:	1dfb      	adds	r3, r7, #7
 8006d4e:	2201      	movs	r2, #1
 8006d50:	701a      	strb	r2, [r3, #0]
 8006d52:	e001      	b.n	8006d58 <HAL_Init+0x30>
 8006d54:	f7ff fb80 	bl	8006458 <HAL_MspInit>
 8006d58:	1dfb      	adds	r3, r7, #7
 8006d5a:	781b      	ldrb	r3, [r3, #0]
 8006d5c:	0018      	movs	r0, r3
 8006d5e:	46bd      	mov	sp, r7
 8006d60:	b002      	add	sp, #8
 8006d62:	bd80      	pop	{r7, pc}
 8006d64:	40022000 	.word	0x40022000

08006d68 <HAL_InitTick>:
 8006d68:	b590      	push	{r4, r7, lr}
 8006d6a:	b085      	sub	sp, #20
 8006d6c:	af00      	add	r7, sp, #0
 8006d6e:	6078      	str	r0, [r7, #4]
 8006d70:	230f      	movs	r3, #15
 8006d72:	18fb      	adds	r3, r7, r3
 8006d74:	2200      	movs	r2, #0
 8006d76:	701a      	strb	r2, [r3, #0]
 8006d78:	4b1d      	ldr	r3, [pc, #116]	@ (8006df0 <HAL_InitTick+0x88>)
 8006d7a:	781b      	ldrb	r3, [r3, #0]
 8006d7c:	2b00      	cmp	r3, #0
 8006d7e:	d02b      	beq.n	8006dd8 <HAL_InitTick+0x70>
 8006d80:	4b1c      	ldr	r3, [pc, #112]	@ (8006df4 <HAL_InitTick+0x8c>)
 8006d82:	681c      	ldr	r4, [r3, #0]
 8006d84:	4b1a      	ldr	r3, [pc, #104]	@ (8006df0 <HAL_InitTick+0x88>)
 8006d86:	781b      	ldrb	r3, [r3, #0]
 8006d88:	0019      	movs	r1, r3
 8006d8a:	23fa      	movs	r3, #250	@ 0xfa
 8006d8c:	0098      	lsls	r0, r3, #2
 8006d8e:	f7f9 f9bb 	bl	8000108 <__udivsi3>
 8006d92:	0003      	movs	r3, r0
 8006d94:	0019      	movs	r1, r3
 8006d96:	0020      	movs	r0, r4
 8006d98:	f7f9 f9b6 	bl	8000108 <__udivsi3>
 8006d9c:	0003      	movs	r3, r0
 8006d9e:	0018      	movs	r0, r3
 8006da0:	f000 fee9 	bl	8007b76 <HAL_SYSTICK_Config>
 8006da4:	1e03      	subs	r3, r0, #0
 8006da6:	d112      	bne.n	8006dce <HAL_InitTick+0x66>
 8006da8:	687b      	ldr	r3, [r7, #4]
 8006daa:	2b03      	cmp	r3, #3
 8006dac:	d80a      	bhi.n	8006dc4 <HAL_InitTick+0x5c>
 8006dae:	6879      	ldr	r1, [r7, #4]
 8006db0:	2301      	movs	r3, #1
 8006db2:	425b      	negs	r3, r3
 8006db4:	2200      	movs	r2, #0
 8006db6:	0018      	movs	r0, r3
 8006db8:	f000 feb8 	bl	8007b2c <HAL_NVIC_SetPriority>
 8006dbc:	4b0e      	ldr	r3, [pc, #56]	@ (8006df8 <HAL_InitTick+0x90>)
 8006dbe:	687a      	ldr	r2, [r7, #4]
 8006dc0:	601a      	str	r2, [r3, #0]
 8006dc2:	e00d      	b.n	8006de0 <HAL_InitTick+0x78>
 8006dc4:	230f      	movs	r3, #15
 8006dc6:	18fb      	adds	r3, r7, r3
 8006dc8:	2201      	movs	r2, #1
 8006dca:	701a      	strb	r2, [r3, #0]
 8006dcc:	e008      	b.n	8006de0 <HAL_InitTick+0x78>
 8006dce:	230f      	movs	r3, #15
 8006dd0:	18fb      	adds	r3, r7, r3
 8006dd2:	2201      	movs	r2, #1
 8006dd4:	701a      	strb	r2, [r3, #0]
 8006dd6:	e003      	b.n	8006de0 <HAL_InitTick+0x78>
 8006dd8:	230f      	movs	r3, #15
 8006dda:	18fb      	adds	r3, r7, r3
 8006ddc:	2201      	movs	r2, #1
 8006dde:	701a      	strb	r2, [r3, #0]
 8006de0:	230f      	movs	r3, #15
 8006de2:	18fb      	adds	r3, r7, r3
 8006de4:	781b      	ldrb	r3, [r3, #0]
 8006de6:	0018      	movs	r0, r3
 8006de8:	46bd      	mov	sp, r7
 8006dea:	b005      	add	sp, #20
 8006dec:	bd90      	pop	{r4, r7, pc}
 8006dee:	46c0      	nop			@ (mov r8, r8)
 8006df0:	200000a4 	.word	0x200000a4
 8006df4:	2000009c 	.word	0x2000009c
 8006df8:	200000a0 	.word	0x200000a0

08006dfc <HAL_IncTick>:
 8006dfc:	b580      	push	{r7, lr}
 8006dfe:	af00      	add	r7, sp, #0
 8006e00:	4b05      	ldr	r3, [pc, #20]	@ (8006e18 <HAL_IncTick+0x1c>)
 8006e02:	781b      	ldrb	r3, [r3, #0]
 8006e04:	001a      	movs	r2, r3
 8006e06:	4b05      	ldr	r3, [pc, #20]	@ (8006e1c <HAL_IncTick+0x20>)
 8006e08:	681b      	ldr	r3, [r3, #0]
 8006e0a:	18d2      	adds	r2, r2, r3
 8006e0c:	4b03      	ldr	r3, [pc, #12]	@ (8006e1c <HAL_IncTick+0x20>)
 8006e0e:	601a      	str	r2, [r3, #0]
 8006e10:	46c0      	nop			@ (mov r8, r8)
 8006e12:	46bd      	mov	sp, r7
 8006e14:	bd80      	pop	{r7, pc}
 8006e16:	46c0      	nop			@ (mov r8, r8)
 8006e18:	200000a4 	.word	0x200000a4
 8006e1c:	2000dadc 	.word	0x2000dadc

08006e20 <HAL_GetTick>:
 8006e20:	b580      	push	{r7, lr}
 8006e22:	af00      	add	r7, sp, #0
 8006e24:	4b02      	ldr	r3, [pc, #8]	@ (8006e30 <HAL_GetTick+0x10>)
 8006e26:	681b      	ldr	r3, [r3, #0]
 8006e28:	0018      	movs	r0, r3
 8006e2a:	46bd      	mov	sp, r7
 8006e2c:	bd80      	pop	{r7, pc}
 8006e2e:	46c0      	nop			@ (mov r8, r8)
 8006e30:	2000dadc 	.word	0x2000dadc

08006e34 <HAL_Delay>:
 8006e34:	b580      	push	{r7, lr}
 8006e36:	b084      	sub	sp, #16
 8006e38:	af00      	add	r7, sp, #0
 8006e3a:	6078      	str	r0, [r7, #4]
 8006e3c:	f7ff fff0 	bl	8006e20 <HAL_GetTick>
 8006e40:	0003      	movs	r3, r0
 8006e42:	60bb      	str	r3, [r7, #8]
 8006e44:	687b      	ldr	r3, [r7, #4]
 8006e46:	60fb      	str	r3, [r7, #12]
 8006e48:	68fb      	ldr	r3, [r7, #12]
 8006e4a:	3301      	adds	r3, #1
 8006e4c:	d005      	beq.n	8006e5a <HAL_Delay+0x26>
 8006e4e:	4b0a      	ldr	r3, [pc, #40]	@ (8006e78 <HAL_Delay+0x44>)
 8006e50:	781b      	ldrb	r3, [r3, #0]
 8006e52:	001a      	movs	r2, r3
 8006e54:	68fb      	ldr	r3, [r7, #12]
 8006e56:	189b      	adds	r3, r3, r2
 8006e58:	60fb      	str	r3, [r7, #12]
 8006e5a:	46c0      	nop			@ (mov r8, r8)
 8006e5c:	f7ff ffe0 	bl	8006e20 <HAL_GetTick>
 8006e60:	0002      	movs	r2, r0
 8006e62:	68bb      	ldr	r3, [r7, #8]
 8006e64:	1ad3      	subs	r3, r2, r3
 8006e66:	68fa      	ldr	r2, [r7, #12]
 8006e68:	429a      	cmp	r2, r3
 8006e6a:	d8f7      	bhi.n	8006e5c <HAL_Delay+0x28>
 8006e6c:	46c0      	nop			@ (mov r8, r8)
 8006e6e:	46c0      	nop			@ (mov r8, r8)
 8006e70:	46bd      	mov	sp, r7
 8006e72:	b004      	add	sp, #16
 8006e74:	bd80      	pop	{r7, pc}
 8006e76:	46c0      	nop			@ (mov r8, r8)
 8006e78:	200000a4 	.word	0x200000a4

08006e7c <HAL_GetUIDw0>:
 8006e7c:	b580      	push	{r7, lr}
 8006e7e:	af00      	add	r7, sp, #0
 8006e80:	4b02      	ldr	r3, [pc, #8]	@ (8006e8c <HAL_GetUIDw0+0x10>)
 8006e82:	681b      	ldr	r3, [r3, #0]
 8006e84:	0018      	movs	r0, r3
 8006e86:	46bd      	mov	sp, r7
 8006e88:	bd80      	pop	{r7, pc}
 8006e8a:	46c0      	nop			@ (mov r8, r8)
 8006e8c:	1fff7590 	.word	0x1fff7590

08006e90 <HAL_GetUIDw1>:
 8006e90:	b580      	push	{r7, lr}
 8006e92:	af00      	add	r7, sp, #0
 8006e94:	4b02      	ldr	r3, [pc, #8]	@ (8006ea0 <HAL_GetUIDw1+0x10>)
 8006e96:	681b      	ldr	r3, [r3, #0]
 8006e98:	0018      	movs	r0, r3
 8006e9a:	46bd      	mov	sp, r7
 8006e9c:	bd80      	pop	{r7, pc}
 8006e9e:	46c0      	nop			@ (mov r8, r8)
 8006ea0:	1fff7594 	.word	0x1fff7594

08006ea4 <HAL_GetUIDw2>:
 8006ea4:	b580      	push	{r7, lr}
 8006ea6:	af00      	add	r7, sp, #0
 8006ea8:	4b02      	ldr	r3, [pc, #8]	@ (8006eb4 <HAL_GetUIDw2+0x10>)
 8006eaa:	681b      	ldr	r3, [r3, #0]
 8006eac:	0018      	movs	r0, r3
 8006eae:	46bd      	mov	sp, r7
 8006eb0:	bd80      	pop	{r7, pc}
 8006eb2:	46c0      	nop			@ (mov r8, r8)
 8006eb4:	1fff7598 	.word	0x1fff7598

08006eb8 <HAL_SYSCFG_StrobeDBattpinsConfig>:
 8006eb8:	b580      	push	{r7, lr}
 8006eba:	b082      	sub	sp, #8
 8006ebc:	af00      	add	r7, sp, #0
 8006ebe:	6078      	str	r0, [r7, #4]
 8006ec0:	4b06      	ldr	r3, [pc, #24]	@ (8006edc <HAL_SYSCFG_StrobeDBattpinsConfig+0x24>)
 8006ec2:	681b      	ldr	r3, [r3, #0]
 8006ec4:	4a06      	ldr	r2, [pc, #24]	@ (8006ee0 <HAL_SYSCFG_StrobeDBattpinsConfig+0x28>)
 8006ec6:	4013      	ands	r3, r2
 8006ec8:	0019      	movs	r1, r3
 8006eca:	4b04      	ldr	r3, [pc, #16]	@ (8006edc <HAL_SYSCFG_StrobeDBattpinsConfig+0x24>)
 8006ecc:	687a      	ldr	r2, [r7, #4]
 8006ece:	430a      	orrs	r2, r1
 8006ed0:	601a      	str	r2, [r3, #0]
 8006ed2:	46c0      	nop			@ (mov r8, r8)
 8006ed4:	46bd      	mov	sp, r7
 8006ed6:	b002      	add	sp, #8
 8006ed8:	bd80      	pop	{r7, pc}
 8006eda:	46c0      	nop			@ (mov r8, r8)
 8006edc:	40010000 	.word	0x40010000
 8006ee0:	fffff9ff 	.word	0xfffff9ff

08006ee4 <LL_ADC_SetCommonPathInternalCh>:
 8006ee4:	b580      	push	{r7, lr}
 8006ee6:	b082      	sub	sp, #8
 8006ee8:	af00      	add	r7, sp, #0
 8006eea:	6078      	str	r0, [r7, #4]
 8006eec:	6039      	str	r1, [r7, #0]
 8006eee:	687b      	ldr	r3, [r7, #4]
 8006ef0:	681b      	ldr	r3, [r3, #0]
 8006ef2:	4a05      	ldr	r2, [pc, #20]	@ (8006f08 <LL_ADC_SetCommonPathInternalCh+0x24>)
 8006ef4:	401a      	ands	r2, r3
 8006ef6:	683b      	ldr	r3, [r7, #0]
 8006ef8:	431a      	orrs	r2, r3
 8006efa:	687b      	ldr	r3, [r7, #4]
 8006efc:	601a      	str	r2, [r3, #0]
 8006efe:	46c0      	nop			@ (mov r8, r8)
 8006f00:	46bd      	mov	sp, r7
 8006f02:	b002      	add	sp, #8
 8006f04:	bd80      	pop	{r7, pc}
 8006f06:	46c0      	nop			@ (mov r8, r8)
 8006f08:	fe3fffff 	.word	0xfe3fffff

08006f0c <LL_ADC_GetCommonPathInternalCh>:
 8006f0c:	b580      	push	{r7, lr}
 8006f0e:	b082      	sub	sp, #8
 8006f10:	af00      	add	r7, sp, #0
 8006f12:	6078      	str	r0, [r7, #4]
 8006f14:	687b      	ldr	r3, [r7, #4]
 8006f16:	681a      	ldr	r2, [r3, #0]
 8006f18:	23e0      	movs	r3, #224	@ 0xe0
 8006f1a:	045b      	lsls	r3, r3, #17
 8006f1c:	4013      	ands	r3, r2
 8006f1e:	0018      	movs	r0, r3
 8006f20:	46bd      	mov	sp, r7
 8006f22:	b002      	add	sp, #8
 8006f24:	bd80      	pop	{r7, pc}

08006f26 <LL_ADC_SetSamplingTimeCommonChannels>:
 8006f26:	b580      	push	{r7, lr}
 8006f28:	b084      	sub	sp, #16
 8006f2a:	af00      	add	r7, sp, #0
 8006f2c:	60f8      	str	r0, [r7, #12]
 8006f2e:	60b9      	str	r1, [r7, #8]
 8006f30:	607a      	str	r2, [r7, #4]
 8006f32:	68fb      	ldr	r3, [r7, #12]
 8006f34:	695b      	ldr	r3, [r3, #20]
 8006f36:	68ba      	ldr	r2, [r7, #8]
 8006f38:	2104      	movs	r1, #4
 8006f3a:	400a      	ands	r2, r1
 8006f3c:	2107      	movs	r1, #7
 8006f3e:	4091      	lsls	r1, r2
 8006f40:	000a      	movs	r2, r1
 8006f42:	43d2      	mvns	r2, r2
 8006f44:	401a      	ands	r2, r3
 8006f46:	68bb      	ldr	r3, [r7, #8]
 8006f48:	2104      	movs	r1, #4
 8006f4a:	400b      	ands	r3, r1
 8006f4c:	6879      	ldr	r1, [r7, #4]
 8006f4e:	4099      	lsls	r1, r3
 8006f50:	000b      	movs	r3, r1
 8006f52:	431a      	orrs	r2, r3
 8006f54:	68fb      	ldr	r3, [r7, #12]
 8006f56:	615a      	str	r2, [r3, #20]
 8006f58:	46c0      	nop			@ (mov r8, r8)
 8006f5a:	46bd      	mov	sp, r7
 8006f5c:	b004      	add	sp, #16
 8006f5e:	bd80      	pop	{r7, pc}

08006f60 <LL_ADC_GetSamplingTimeCommonChannels>:
 8006f60:	b580      	push	{r7, lr}
 8006f62:	b082      	sub	sp, #8
 8006f64:	af00      	add	r7, sp, #0
 8006f66:	6078      	str	r0, [r7, #4]
 8006f68:	6039      	str	r1, [r7, #0]
 8006f6a:	687b      	ldr	r3, [r7, #4]
 8006f6c:	695b      	ldr	r3, [r3, #20]
 8006f6e:	683a      	ldr	r2, [r7, #0]
 8006f70:	2104      	movs	r1, #4
 8006f72:	400a      	ands	r2, r1
 8006f74:	2107      	movs	r1, #7
 8006f76:	4091      	lsls	r1, r2
 8006f78:	000a      	movs	r2, r1
 8006f7a:	401a      	ands	r2, r3
 8006f7c:	683b      	ldr	r3, [r7, #0]
 8006f7e:	2104      	movs	r1, #4
 8006f80:	400b      	ands	r3, r1
 8006f82:	40da      	lsrs	r2, r3
 8006f84:	0013      	movs	r3, r2
 8006f86:	0018      	movs	r0, r3
 8006f88:	46bd      	mov	sp, r7
 8006f8a:	b002      	add	sp, #8
 8006f8c:	bd80      	pop	{r7, pc}

08006f8e <LL_ADC_REG_SetSequencerRanks>:
 8006f8e:	b580      	push	{r7, lr}
 8006f90:	b084      	sub	sp, #16
 8006f92:	af00      	add	r7, sp, #0
 8006f94:	60f8      	str	r0, [r7, #12]
 8006f96:	60b9      	str	r1, [r7, #8]
 8006f98:	607a      	str	r2, [r7, #4]
 8006f9a:	68fb      	ldr	r3, [r7, #12]
 8006f9c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006f9e:	68ba      	ldr	r2, [r7, #8]
 8006fa0:	211f      	movs	r1, #31
 8006fa2:	400a      	ands	r2, r1
 8006fa4:	210f      	movs	r1, #15
 8006fa6:	4091      	lsls	r1, r2
 8006fa8:	000a      	movs	r2, r1
 8006faa:	43d2      	mvns	r2, r2
 8006fac:	401a      	ands	r2, r3
 8006fae:	687b      	ldr	r3, [r7, #4]
 8006fb0:	0e9b      	lsrs	r3, r3, #26
 8006fb2:	210f      	movs	r1, #15
 8006fb4:	4019      	ands	r1, r3
 8006fb6:	68bb      	ldr	r3, [r7, #8]
 8006fb8:	201f      	movs	r0, #31
 8006fba:	4003      	ands	r3, r0
 8006fbc:	4099      	lsls	r1, r3
 8006fbe:	000b      	movs	r3, r1
 8006fc0:	431a      	orrs	r2, r3
 8006fc2:	68fb      	ldr	r3, [r7, #12]
 8006fc4:	629a      	str	r2, [r3, #40]	@ 0x28
 8006fc6:	46c0      	nop			@ (mov r8, r8)
 8006fc8:	46bd      	mov	sp, r7
 8006fca:	b004      	add	sp, #16
 8006fcc:	bd80      	pop	{r7, pc}

08006fce <LL_ADC_REG_SetSequencerChAdd>:
 8006fce:	b580      	push	{r7, lr}
 8006fd0:	b082      	sub	sp, #8
 8006fd2:	af00      	add	r7, sp, #0
 8006fd4:	6078      	str	r0, [r7, #4]
 8006fd6:	6039      	str	r1, [r7, #0]
 8006fd8:	687b      	ldr	r3, [r7, #4]
 8006fda:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8006fdc:	683b      	ldr	r3, [r7, #0]
 8006fde:	035b      	lsls	r3, r3, #13
 8006fe0:	0b5b      	lsrs	r3, r3, #13
 8006fe2:	431a      	orrs	r2, r3
 8006fe4:	687b      	ldr	r3, [r7, #4]
 8006fe6:	629a      	str	r2, [r3, #40]	@ 0x28
 8006fe8:	46c0      	nop			@ (mov r8, r8)
 8006fea:	46bd      	mov	sp, r7
 8006fec:	b002      	add	sp, #8
 8006fee:	bd80      	pop	{r7, pc}

08006ff0 <LL_ADC_REG_SetSequencerChRem>:
 8006ff0:	b580      	push	{r7, lr}
 8006ff2:	b082      	sub	sp, #8
 8006ff4:	af00      	add	r7, sp, #0
 8006ff6:	6078      	str	r0, [r7, #4]
 8006ff8:	6039      	str	r1, [r7, #0]
 8006ffa:	687b      	ldr	r3, [r7, #4]
 8006ffc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006ffe:	683a      	ldr	r2, [r7, #0]
 8007000:	0352      	lsls	r2, r2, #13
 8007002:	0b52      	lsrs	r2, r2, #13
 8007004:	43d2      	mvns	r2, r2
 8007006:	401a      	ands	r2, r3
 8007008:	687b      	ldr	r3, [r7, #4]
 800700a:	629a      	str	r2, [r3, #40]	@ 0x28
 800700c:	46c0      	nop			@ (mov r8, r8)
 800700e:	46bd      	mov	sp, r7
 8007010:	b002      	add	sp, #8
 8007012:	bd80      	pop	{r7, pc}

08007014 <LL_ADC_SetChannelSamplingTime>:
 8007014:	b580      	push	{r7, lr}
 8007016:	b084      	sub	sp, #16
 8007018:	af00      	add	r7, sp, #0
 800701a:	60f8      	str	r0, [r7, #12]
 800701c:	60b9      	str	r1, [r7, #8]
 800701e:	607a      	str	r2, [r7, #4]
 8007020:	68fb      	ldr	r3, [r7, #12]
 8007022:	695b      	ldr	r3, [r3, #20]
 8007024:	68ba      	ldr	r2, [r7, #8]
 8007026:	0212      	lsls	r2, r2, #8
 8007028:	43d2      	mvns	r2, r2
 800702a:	401a      	ands	r2, r3
 800702c:	68bb      	ldr	r3, [r7, #8]
 800702e:	021b      	lsls	r3, r3, #8
 8007030:	6879      	ldr	r1, [r7, #4]
 8007032:	400b      	ands	r3, r1
 8007034:	4904      	ldr	r1, [pc, #16]	@ (8007048 <LL_ADC_SetChannelSamplingTime+0x34>)
 8007036:	400b      	ands	r3, r1
 8007038:	431a      	orrs	r2, r3
 800703a:	68fb      	ldr	r3, [r7, #12]
 800703c:	615a      	str	r2, [r3, #20]
 800703e:	46c0      	nop			@ (mov r8, r8)
 8007040:	46bd      	mov	sp, r7
 8007042:	b004      	add	sp, #16
 8007044:	bd80      	pop	{r7, pc}
 8007046:	46c0      	nop			@ (mov r8, r8)
 8007048:	07ffff00 	.word	0x07ffff00

0800704c <LL_ADC_EnableInternalRegulator>:
 800704c:	b580      	push	{r7, lr}
 800704e:	b082      	sub	sp, #8
 8007050:	af00      	add	r7, sp, #0
 8007052:	6078      	str	r0, [r7, #4]
 8007054:	687b      	ldr	r3, [r7, #4]
 8007056:	689b      	ldr	r3, [r3, #8]
 8007058:	4a05      	ldr	r2, [pc, #20]	@ (8007070 <LL_ADC_EnableInternalRegulator+0x24>)
 800705a:	4013      	ands	r3, r2
 800705c:	2280      	movs	r2, #128	@ 0x80
 800705e:	0552      	lsls	r2, r2, #21
 8007060:	431a      	orrs	r2, r3
 8007062:	687b      	ldr	r3, [r7, #4]
 8007064:	609a      	str	r2, [r3, #8]
 8007066:	46c0      	nop			@ (mov r8, r8)
 8007068:	46bd      	mov	sp, r7
 800706a:	b002      	add	sp, #8
 800706c:	bd80      	pop	{r7, pc}
 800706e:	46c0      	nop			@ (mov r8, r8)
 8007070:	6fffffe8 	.word	0x6fffffe8

08007074 <LL_ADC_IsInternalRegulatorEnabled>:
 8007074:	b580      	push	{r7, lr}
 8007076:	b082      	sub	sp, #8
 8007078:	af00      	add	r7, sp, #0
 800707a:	6078      	str	r0, [r7, #4]
 800707c:	687b      	ldr	r3, [r7, #4]
 800707e:	689a      	ldr	r2, [r3, #8]
 8007080:	2380      	movs	r3, #128	@ 0x80
 8007082:	055b      	lsls	r3, r3, #21
 8007084:	401a      	ands	r2, r3
 8007086:	2380      	movs	r3, #128	@ 0x80
 8007088:	055b      	lsls	r3, r3, #21
 800708a:	429a      	cmp	r2, r3
 800708c:	d101      	bne.n	8007092 <LL_ADC_IsInternalRegulatorEnabled+0x1e>
 800708e:	2301      	movs	r3, #1
 8007090:	e000      	b.n	8007094 <LL_ADC_IsInternalRegulatorEnabled+0x20>
 8007092:	2300      	movs	r3, #0
 8007094:	0018      	movs	r0, r3
 8007096:	46bd      	mov	sp, r7
 8007098:	b002      	add	sp, #8
 800709a:	bd80      	pop	{r7, pc}

0800709c <LL_ADC_Enable>:
 800709c:	b580      	push	{r7, lr}
 800709e:	b082      	sub	sp, #8
 80070a0:	af00      	add	r7, sp, #0
 80070a2:	6078      	str	r0, [r7, #4]
 80070a4:	687b      	ldr	r3, [r7, #4]
 80070a6:	689b      	ldr	r3, [r3, #8]
 80070a8:	4a04      	ldr	r2, [pc, #16]	@ (80070bc <LL_ADC_Enable+0x20>)
 80070aa:	4013      	ands	r3, r2
 80070ac:	2201      	movs	r2, #1
 80070ae:	431a      	orrs	r2, r3
 80070b0:	687b      	ldr	r3, [r7, #4]
 80070b2:	609a      	str	r2, [r3, #8]
 80070b4:	46c0      	nop			@ (mov r8, r8)
 80070b6:	46bd      	mov	sp, r7
 80070b8:	b002      	add	sp, #8
 80070ba:	bd80      	pop	{r7, pc}
 80070bc:	7fffffe8 	.word	0x7fffffe8

080070c0 <LL_ADC_IsEnabled>:
 80070c0:	b580      	push	{r7, lr}
 80070c2:	b082      	sub	sp, #8
 80070c4:	af00      	add	r7, sp, #0
 80070c6:	6078      	str	r0, [r7, #4]
 80070c8:	687b      	ldr	r3, [r7, #4]
 80070ca:	689b      	ldr	r3, [r3, #8]
 80070cc:	2201      	movs	r2, #1
 80070ce:	4013      	ands	r3, r2
 80070d0:	2b01      	cmp	r3, #1
 80070d2:	d101      	bne.n	80070d8 <LL_ADC_IsEnabled+0x18>
 80070d4:	2301      	movs	r3, #1
 80070d6:	e000      	b.n	80070da <LL_ADC_IsEnabled+0x1a>
 80070d8:	2300      	movs	r3, #0
 80070da:	0018      	movs	r0, r3
 80070dc:	46bd      	mov	sp, r7
 80070de:	b002      	add	sp, #8
 80070e0:	bd80      	pop	{r7, pc}
	...

080070e4 <LL_ADC_REG_StartConversion>:
 80070e4:	b580      	push	{r7, lr}
 80070e6:	b082      	sub	sp, #8
 80070e8:	af00      	add	r7, sp, #0
 80070ea:	6078      	str	r0, [r7, #4]
 80070ec:	687b      	ldr	r3, [r7, #4]
 80070ee:	689b      	ldr	r3, [r3, #8]
 80070f0:	4a04      	ldr	r2, [pc, #16]	@ (8007104 <LL_ADC_REG_StartConversion+0x20>)
 80070f2:	4013      	ands	r3, r2
 80070f4:	2204      	movs	r2, #4
 80070f6:	431a      	orrs	r2, r3
 80070f8:	687b      	ldr	r3, [r7, #4]
 80070fa:	609a      	str	r2, [r3, #8]
 80070fc:	46c0      	nop			@ (mov r8, r8)
 80070fe:	46bd      	mov	sp, r7
 8007100:	b002      	add	sp, #8
 8007102:	bd80      	pop	{r7, pc}
 8007104:	7fffffe8 	.word	0x7fffffe8

08007108 <LL_ADC_REG_IsConversionOngoing>:
 8007108:	b580      	push	{r7, lr}
 800710a:	b082      	sub	sp, #8
 800710c:	af00      	add	r7, sp, #0
 800710e:	6078      	str	r0, [r7, #4]
 8007110:	687b      	ldr	r3, [r7, #4]
 8007112:	689b      	ldr	r3, [r3, #8]
 8007114:	2204      	movs	r2, #4
 8007116:	4013      	ands	r3, r2
 8007118:	2b04      	cmp	r3, #4
 800711a:	d101      	bne.n	8007120 <LL_ADC_REG_IsConversionOngoing+0x18>
 800711c:	2301      	movs	r3, #1
 800711e:	e000      	b.n	8007122 <LL_ADC_REG_IsConversionOngoing+0x1a>
 8007120:	2300      	movs	r3, #0
 8007122:	0018      	movs	r0, r3
 8007124:	46bd      	mov	sp, r7
 8007126:	b002      	add	sp, #8
 8007128:	bd80      	pop	{r7, pc}
	...

0800712c <HAL_ADC_Init>:
 800712c:	b580      	push	{r7, lr}
 800712e:	b088      	sub	sp, #32
 8007130:	af00      	add	r7, sp, #0
 8007132:	6078      	str	r0, [r7, #4]
 8007134:	231f      	movs	r3, #31
 8007136:	18fb      	adds	r3, r7, r3
 8007138:	2200      	movs	r2, #0
 800713a:	701a      	strb	r2, [r3, #0]
 800713c:	2300      	movs	r3, #0
 800713e:	61bb      	str	r3, [r7, #24]
 8007140:	2300      	movs	r3, #0
 8007142:	617b      	str	r3, [r7, #20]
 8007144:	2300      	movs	r3, #0
 8007146:	60fb      	str	r3, [r7, #12]
 8007148:	687b      	ldr	r3, [r7, #4]
 800714a:	2b00      	cmp	r3, #0
 800714c:	d101      	bne.n	8007152 <HAL_ADC_Init+0x26>
 800714e:	2301      	movs	r3, #1
 8007150:	e17f      	b.n	8007452 <HAL_ADC_Init+0x326>
 8007152:	687b      	ldr	r3, [r7, #4]
 8007154:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8007156:	2b00      	cmp	r3, #0
 8007158:	d10a      	bne.n	8007170 <HAL_ADC_Init+0x44>
 800715a:	687b      	ldr	r3, [r7, #4]
 800715c:	0018      	movs	r0, r3
 800715e:	f7ff f9a3 	bl	80064a8 <HAL_ADC_MspInit>
 8007162:	687b      	ldr	r3, [r7, #4]
 8007164:	2200      	movs	r2, #0
 8007166:	65da      	str	r2, [r3, #92]	@ 0x5c
 8007168:	687b      	ldr	r3, [r7, #4]
 800716a:	2254      	movs	r2, #84	@ 0x54
 800716c:	2100      	movs	r1, #0
 800716e:	5499      	strb	r1, [r3, r2]
 8007170:	687b      	ldr	r3, [r7, #4]
 8007172:	681b      	ldr	r3, [r3, #0]
 8007174:	0018      	movs	r0, r3
 8007176:	f7ff ff7d 	bl	8007074 <LL_ADC_IsInternalRegulatorEnabled>
 800717a:	1e03      	subs	r3, r0, #0
 800717c:	d115      	bne.n	80071aa <HAL_ADC_Init+0x7e>
 800717e:	687b      	ldr	r3, [r7, #4]
 8007180:	681b      	ldr	r3, [r3, #0]
 8007182:	0018      	movs	r0, r3
 8007184:	f7ff ff62 	bl	800704c <LL_ADC_EnableInternalRegulator>
 8007188:	4bb4      	ldr	r3, [pc, #720]	@ (800745c <HAL_ADC_Init+0x330>)
 800718a:	681b      	ldr	r3, [r3, #0]
 800718c:	49b4      	ldr	r1, [pc, #720]	@ (8007460 <HAL_ADC_Init+0x334>)
 800718e:	0018      	movs	r0, r3
 8007190:	f7f8 ffba 	bl	8000108 <__udivsi3>
 8007194:	0003      	movs	r3, r0
 8007196:	3301      	adds	r3, #1
 8007198:	005b      	lsls	r3, r3, #1
 800719a:	60fb      	str	r3, [r7, #12]
 800719c:	e002      	b.n	80071a4 <HAL_ADC_Init+0x78>
 800719e:	68fb      	ldr	r3, [r7, #12]
 80071a0:	3b01      	subs	r3, #1
 80071a2:	60fb      	str	r3, [r7, #12]
 80071a4:	68fb      	ldr	r3, [r7, #12]
 80071a6:	2b00      	cmp	r3, #0
 80071a8:	d1f9      	bne.n	800719e <HAL_ADC_Init+0x72>
 80071aa:	687b      	ldr	r3, [r7, #4]
 80071ac:	681b      	ldr	r3, [r3, #0]
 80071ae:	0018      	movs	r0, r3
 80071b0:	f7ff ff60 	bl	8007074 <LL_ADC_IsInternalRegulatorEnabled>
 80071b4:	1e03      	subs	r3, r0, #0
 80071b6:	d10f      	bne.n	80071d8 <HAL_ADC_Init+0xac>
 80071b8:	687b      	ldr	r3, [r7, #4]
 80071ba:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80071bc:	2210      	movs	r2, #16
 80071be:	431a      	orrs	r2, r3
 80071c0:	687b      	ldr	r3, [r7, #4]
 80071c2:	659a      	str	r2, [r3, #88]	@ 0x58
 80071c4:	687b      	ldr	r3, [r7, #4]
 80071c6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80071c8:	2201      	movs	r2, #1
 80071ca:	431a      	orrs	r2, r3
 80071cc:	687b      	ldr	r3, [r7, #4]
 80071ce:	65da      	str	r2, [r3, #92]	@ 0x5c
 80071d0:	231f      	movs	r3, #31
 80071d2:	18fb      	adds	r3, r7, r3
 80071d4:	2201      	movs	r2, #1
 80071d6:	701a      	strb	r2, [r3, #0]
 80071d8:	687b      	ldr	r3, [r7, #4]
 80071da:	681b      	ldr	r3, [r3, #0]
 80071dc:	0018      	movs	r0, r3
 80071de:	f7ff ff93 	bl	8007108 <LL_ADC_REG_IsConversionOngoing>
 80071e2:	0003      	movs	r3, r0
 80071e4:	613b      	str	r3, [r7, #16]
 80071e6:	687b      	ldr	r3, [r7, #4]
 80071e8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80071ea:	2210      	movs	r2, #16
 80071ec:	4013      	ands	r3, r2
 80071ee:	d000      	beq.n	80071f2 <HAL_ADC_Init+0xc6>
 80071f0:	e122      	b.n	8007438 <HAL_ADC_Init+0x30c>
 80071f2:	693b      	ldr	r3, [r7, #16]
 80071f4:	2b00      	cmp	r3, #0
 80071f6:	d000      	beq.n	80071fa <HAL_ADC_Init+0xce>
 80071f8:	e11e      	b.n	8007438 <HAL_ADC_Init+0x30c>
 80071fa:	687b      	ldr	r3, [r7, #4]
 80071fc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80071fe:	4a99      	ldr	r2, [pc, #612]	@ (8007464 <HAL_ADC_Init+0x338>)
 8007200:	4013      	ands	r3, r2
 8007202:	2202      	movs	r2, #2
 8007204:	431a      	orrs	r2, r3
 8007206:	687b      	ldr	r3, [r7, #4]
 8007208:	659a      	str	r2, [r3, #88]	@ 0x58
 800720a:	687b      	ldr	r3, [r7, #4]
 800720c:	681b      	ldr	r3, [r3, #0]
 800720e:	0018      	movs	r0, r3
 8007210:	f7ff ff56 	bl	80070c0 <LL_ADC_IsEnabled>
 8007214:	1e03      	subs	r3, r0, #0
 8007216:	d000      	beq.n	800721a <HAL_ADC_Init+0xee>
 8007218:	e0ad      	b.n	8007376 <HAL_ADC_Init+0x24a>
 800721a:	687b      	ldr	r3, [r7, #4]
 800721c:	689a      	ldr	r2, [r3, #8]
 800721e:	687b      	ldr	r3, [r7, #4]
 8007220:	7e1b      	ldrb	r3, [r3, #24]
 8007222:	039b      	lsls	r3, r3, #14
 8007224:	431a      	orrs	r2, r3
 8007226:	687b      	ldr	r3, [r7, #4]
 8007228:	7e5b      	ldrb	r3, [r3, #25]
 800722a:	03db      	lsls	r3, r3, #15
 800722c:	431a      	orrs	r2, r3
 800722e:	687b      	ldr	r3, [r7, #4]
 8007230:	7e9b      	ldrb	r3, [r3, #26]
 8007232:	035b      	lsls	r3, r3, #13
 8007234:	431a      	orrs	r2, r3
 8007236:	687b      	ldr	r3, [r7, #4]
 8007238:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800723a:	2b00      	cmp	r3, #0
 800723c:	d002      	beq.n	8007244 <HAL_ADC_Init+0x118>
 800723e:	2380      	movs	r3, #128	@ 0x80
 8007240:	015b      	lsls	r3, r3, #5
 8007242:	e000      	b.n	8007246 <HAL_ADC_Init+0x11a>
 8007244:	2300      	movs	r3, #0
 8007246:	431a      	orrs	r2, r3
 8007248:	687b      	ldr	r3, [r7, #4]
 800724a:	68db      	ldr	r3, [r3, #12]
 800724c:	431a      	orrs	r2, r3
 800724e:	687b      	ldr	r3, [r7, #4]
 8007250:	691b      	ldr	r3, [r3, #16]
 8007252:	2b00      	cmp	r3, #0
 8007254:	da04      	bge.n	8007260 <HAL_ADC_Init+0x134>
 8007256:	687b      	ldr	r3, [r7, #4]
 8007258:	691b      	ldr	r3, [r3, #16]
 800725a:	005b      	lsls	r3, r3, #1
 800725c:	085b      	lsrs	r3, r3, #1
 800725e:	e001      	b.n	8007264 <HAL_ADC_Init+0x138>
 8007260:	2380      	movs	r3, #128	@ 0x80
 8007262:	039b      	lsls	r3, r3, #14
 8007264:	431a      	orrs	r2, r3
 8007266:	687b      	ldr	r3, [r7, #4]
 8007268:	212c      	movs	r1, #44	@ 0x2c
 800726a:	5c5b      	ldrb	r3, [r3, r1]
 800726c:	005b      	lsls	r3, r3, #1
 800726e:	4313      	orrs	r3, r2
 8007270:	69ba      	ldr	r2, [r7, #24]
 8007272:	4313      	orrs	r3, r2
 8007274:	61bb      	str	r3, [r7, #24]
 8007276:	687b      	ldr	r3, [r7, #4]
 8007278:	2220      	movs	r2, #32
 800727a:	5c9b      	ldrb	r3, [r3, r2]
 800727c:	2b01      	cmp	r3, #1
 800727e:	d115      	bne.n	80072ac <HAL_ADC_Init+0x180>
 8007280:	687b      	ldr	r3, [r7, #4]
 8007282:	7e9b      	ldrb	r3, [r3, #26]
 8007284:	2b00      	cmp	r3, #0
 8007286:	d105      	bne.n	8007294 <HAL_ADC_Init+0x168>
 8007288:	69bb      	ldr	r3, [r7, #24]
 800728a:	2280      	movs	r2, #128	@ 0x80
 800728c:	0252      	lsls	r2, r2, #9
 800728e:	4313      	orrs	r3, r2
 8007290:	61bb      	str	r3, [r7, #24]
 8007292:	e00b      	b.n	80072ac <HAL_ADC_Init+0x180>
 8007294:	687b      	ldr	r3, [r7, #4]
 8007296:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8007298:	2220      	movs	r2, #32
 800729a:	431a      	orrs	r2, r3
 800729c:	687b      	ldr	r3, [r7, #4]
 800729e:	659a      	str	r2, [r3, #88]	@ 0x58
 80072a0:	687b      	ldr	r3, [r7, #4]
 80072a2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80072a4:	2201      	movs	r2, #1
 80072a6:	431a      	orrs	r2, r3
 80072a8:	687b      	ldr	r3, [r7, #4]
 80072aa:	65da      	str	r2, [r3, #92]	@ 0x5c
 80072ac:	687b      	ldr	r3, [r7, #4]
 80072ae:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80072b0:	2b00      	cmp	r3, #0
 80072b2:	d00a      	beq.n	80072ca <HAL_ADC_Init+0x19e>
 80072b4:	687b      	ldr	r3, [r7, #4]
 80072b6:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80072b8:	23e0      	movs	r3, #224	@ 0xe0
 80072ba:	005b      	lsls	r3, r3, #1
 80072bc:	401a      	ands	r2, r3
 80072be:	687b      	ldr	r3, [r7, #4]
 80072c0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80072c2:	4313      	orrs	r3, r2
 80072c4:	69ba      	ldr	r2, [r7, #24]
 80072c6:	4313      	orrs	r3, r2
 80072c8:	61bb      	str	r3, [r7, #24]
 80072ca:	687b      	ldr	r3, [r7, #4]
 80072cc:	681b      	ldr	r3, [r3, #0]
 80072ce:	68db      	ldr	r3, [r3, #12]
 80072d0:	4a65      	ldr	r2, [pc, #404]	@ (8007468 <HAL_ADC_Init+0x33c>)
 80072d2:	4013      	ands	r3, r2
 80072d4:	0019      	movs	r1, r3
 80072d6:	687b      	ldr	r3, [r7, #4]
 80072d8:	681b      	ldr	r3, [r3, #0]
 80072da:	69ba      	ldr	r2, [r7, #24]
 80072dc:	430a      	orrs	r2, r1
 80072de:	60da      	str	r2, [r3, #12]
 80072e0:	687b      	ldr	r3, [r7, #4]
 80072e2:	685b      	ldr	r3, [r3, #4]
 80072e4:	0f9b      	lsrs	r3, r3, #30
 80072e6:	079a      	lsls	r2, r3, #30
 80072e8:	687b      	ldr	r3, [r7, #4]
 80072ea:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80072ec:	4313      	orrs	r3, r2
 80072ee:	697a      	ldr	r2, [r7, #20]
 80072f0:	4313      	orrs	r3, r2
 80072f2:	617b      	str	r3, [r7, #20]
 80072f4:	687b      	ldr	r3, [r7, #4]
 80072f6:	223c      	movs	r2, #60	@ 0x3c
 80072f8:	5c9b      	ldrb	r3, [r3, r2]
 80072fa:	2b01      	cmp	r3, #1
 80072fc:	d111      	bne.n	8007322 <HAL_ADC_Init+0x1f6>
 80072fe:	687b      	ldr	r3, [r7, #4]
 8007300:	685b      	ldr	r3, [r3, #4]
 8007302:	0f9b      	lsrs	r3, r3, #30
 8007304:	079a      	lsls	r2, r3, #30
 8007306:	687b      	ldr	r3, [r7, #4]
 8007308:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800730a:	431a      	orrs	r2, r3
 800730c:	687b      	ldr	r3, [r7, #4]
 800730e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8007310:	431a      	orrs	r2, r3
 8007312:	687b      	ldr	r3, [r7, #4]
 8007314:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8007316:	431a      	orrs	r2, r3
 8007318:	697b      	ldr	r3, [r7, #20]
 800731a:	4313      	orrs	r3, r2
 800731c:	2201      	movs	r2, #1
 800731e:	4313      	orrs	r3, r2
 8007320:	617b      	str	r3, [r7, #20]
 8007322:	687b      	ldr	r3, [r7, #4]
 8007324:	681b      	ldr	r3, [r3, #0]
 8007326:	691b      	ldr	r3, [r3, #16]
 8007328:	4a50      	ldr	r2, [pc, #320]	@ (800746c <HAL_ADC_Init+0x340>)
 800732a:	4013      	ands	r3, r2
 800732c:	0019      	movs	r1, r3
 800732e:	687b      	ldr	r3, [r7, #4]
 8007330:	681b      	ldr	r3, [r3, #0]
 8007332:	697a      	ldr	r2, [r7, #20]
 8007334:	430a      	orrs	r2, r1
 8007336:	611a      	str	r2, [r3, #16]
 8007338:	687b      	ldr	r3, [r7, #4]
 800733a:	685a      	ldr	r2, [r3, #4]
 800733c:	23c0      	movs	r3, #192	@ 0xc0
 800733e:	061b      	lsls	r3, r3, #24
 8007340:	429a      	cmp	r2, r3
 8007342:	d018      	beq.n	8007376 <HAL_ADC_Init+0x24a>
 8007344:	687b      	ldr	r3, [r7, #4]
 8007346:	685a      	ldr	r2, [r3, #4]
 8007348:	2380      	movs	r3, #128	@ 0x80
 800734a:	05db      	lsls	r3, r3, #23
 800734c:	429a      	cmp	r2, r3
 800734e:	d012      	beq.n	8007376 <HAL_ADC_Init+0x24a>
 8007350:	687b      	ldr	r3, [r7, #4]
 8007352:	685a      	ldr	r2, [r3, #4]
 8007354:	2380      	movs	r3, #128	@ 0x80
 8007356:	061b      	lsls	r3, r3, #24
 8007358:	429a      	cmp	r2, r3
 800735a:	d00c      	beq.n	8007376 <HAL_ADC_Init+0x24a>
 800735c:	4b44      	ldr	r3, [pc, #272]	@ (8007470 <HAL_ADC_Init+0x344>)
 800735e:	681b      	ldr	r3, [r3, #0]
 8007360:	4a44      	ldr	r2, [pc, #272]	@ (8007474 <HAL_ADC_Init+0x348>)
 8007362:	4013      	ands	r3, r2
 8007364:	0019      	movs	r1, r3
 8007366:	687b      	ldr	r3, [r7, #4]
 8007368:	685a      	ldr	r2, [r3, #4]
 800736a:	23f0      	movs	r3, #240	@ 0xf0
 800736c:	039b      	lsls	r3, r3, #14
 800736e:	401a      	ands	r2, r3
 8007370:	4b3f      	ldr	r3, [pc, #252]	@ (8007470 <HAL_ADC_Init+0x344>)
 8007372:	430a      	orrs	r2, r1
 8007374:	601a      	str	r2, [r3, #0]
 8007376:	687b      	ldr	r3, [r7, #4]
 8007378:	6818      	ldr	r0, [r3, #0]
 800737a:	687b      	ldr	r3, [r7, #4]
 800737c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800737e:	001a      	movs	r2, r3
 8007380:	2100      	movs	r1, #0
 8007382:	f7ff fdd0 	bl	8006f26 <LL_ADC_SetSamplingTimeCommonChannels>
 8007386:	687b      	ldr	r3, [r7, #4]
 8007388:	6818      	ldr	r0, [r3, #0]
 800738a:	687b      	ldr	r3, [r7, #4]
 800738c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800738e:	493a      	ldr	r1, [pc, #232]	@ (8007478 <HAL_ADC_Init+0x34c>)
 8007390:	001a      	movs	r2, r3
 8007392:	f7ff fdc8 	bl	8006f26 <LL_ADC_SetSamplingTimeCommonChannels>
 8007396:	687b      	ldr	r3, [r7, #4]
 8007398:	691b      	ldr	r3, [r3, #16]
 800739a:	2b00      	cmp	r3, #0
 800739c:	d109      	bne.n	80073b2 <HAL_ADC_Init+0x286>
 800739e:	687b      	ldr	r3, [r7, #4]
 80073a0:	681b      	ldr	r3, [r3, #0]
 80073a2:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 80073a4:	687b      	ldr	r3, [r7, #4]
 80073a6:	681b      	ldr	r3, [r3, #0]
 80073a8:	2110      	movs	r1, #16
 80073aa:	4249      	negs	r1, r1
 80073ac:	430a      	orrs	r2, r1
 80073ae:	629a      	str	r2, [r3, #40]	@ 0x28
 80073b0:	e018      	b.n	80073e4 <HAL_ADC_Init+0x2b8>
 80073b2:	687b      	ldr	r3, [r7, #4]
 80073b4:	691a      	ldr	r2, [r3, #16]
 80073b6:	2380      	movs	r3, #128	@ 0x80
 80073b8:	039b      	lsls	r3, r3, #14
 80073ba:	429a      	cmp	r2, r3
 80073bc:	d112      	bne.n	80073e4 <HAL_ADC_Init+0x2b8>
 80073be:	687b      	ldr	r3, [r7, #4]
 80073c0:	681b      	ldr	r3, [r3, #0]
 80073c2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80073c4:	687b      	ldr	r3, [r7, #4]
 80073c6:	69db      	ldr	r3, [r3, #28]
 80073c8:	3b01      	subs	r3, #1
 80073ca:	009b      	lsls	r3, r3, #2
 80073cc:	221c      	movs	r2, #28
 80073ce:	4013      	ands	r3, r2
 80073d0:	2210      	movs	r2, #16
 80073d2:	4252      	negs	r2, r2
 80073d4:	409a      	lsls	r2, r3
 80073d6:	0011      	movs	r1, r2
 80073d8:	687b      	ldr	r3, [r7, #4]
 80073da:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 80073dc:	687b      	ldr	r3, [r7, #4]
 80073de:	681b      	ldr	r3, [r3, #0]
 80073e0:	430a      	orrs	r2, r1
 80073e2:	629a      	str	r2, [r3, #40]	@ 0x28
 80073e4:	687b      	ldr	r3, [r7, #4]
 80073e6:	681b      	ldr	r3, [r3, #0]
 80073e8:	2100      	movs	r1, #0
 80073ea:	0018      	movs	r0, r3
 80073ec:	f7ff fdb8 	bl	8006f60 <LL_ADC_GetSamplingTimeCommonChannels>
 80073f0:	0002      	movs	r2, r0
 80073f2:	687b      	ldr	r3, [r7, #4]
 80073f4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80073f6:	429a      	cmp	r2, r3
 80073f8:	d10b      	bne.n	8007412 <HAL_ADC_Init+0x2e6>
 80073fa:	687b      	ldr	r3, [r7, #4]
 80073fc:	2200      	movs	r2, #0
 80073fe:	65da      	str	r2, [r3, #92]	@ 0x5c
 8007400:	687b      	ldr	r3, [r7, #4]
 8007402:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8007404:	2203      	movs	r2, #3
 8007406:	4393      	bics	r3, r2
 8007408:	2201      	movs	r2, #1
 800740a:	431a      	orrs	r2, r3
 800740c:	687b      	ldr	r3, [r7, #4]
 800740e:	659a      	str	r2, [r3, #88]	@ 0x58
 8007410:	e01c      	b.n	800744c <HAL_ADC_Init+0x320>
 8007412:	687b      	ldr	r3, [r7, #4]
 8007414:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8007416:	2212      	movs	r2, #18
 8007418:	4393      	bics	r3, r2
 800741a:	2210      	movs	r2, #16
 800741c:	431a      	orrs	r2, r3
 800741e:	687b      	ldr	r3, [r7, #4]
 8007420:	659a      	str	r2, [r3, #88]	@ 0x58
 8007422:	687b      	ldr	r3, [r7, #4]
 8007424:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8007426:	2201      	movs	r2, #1
 8007428:	431a      	orrs	r2, r3
 800742a:	687b      	ldr	r3, [r7, #4]
 800742c:	65da      	str	r2, [r3, #92]	@ 0x5c
 800742e:	231f      	movs	r3, #31
 8007430:	18fb      	adds	r3, r7, r3
 8007432:	2201      	movs	r2, #1
 8007434:	701a      	strb	r2, [r3, #0]
 8007436:	e009      	b.n	800744c <HAL_ADC_Init+0x320>
 8007438:	687b      	ldr	r3, [r7, #4]
 800743a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800743c:	2210      	movs	r2, #16
 800743e:	431a      	orrs	r2, r3
 8007440:	687b      	ldr	r3, [r7, #4]
 8007442:	659a      	str	r2, [r3, #88]	@ 0x58
 8007444:	231f      	movs	r3, #31
 8007446:	18fb      	adds	r3, r7, r3
 8007448:	2201      	movs	r2, #1
 800744a:	701a      	strb	r2, [r3, #0]
 800744c:	231f      	movs	r3, #31
 800744e:	18fb      	adds	r3, r7, r3
 8007450:	781b      	ldrb	r3, [r3, #0]
 8007452:	0018      	movs	r0, r3
 8007454:	46bd      	mov	sp, r7
 8007456:	b008      	add	sp, #32
 8007458:	bd80      	pop	{r7, pc}
 800745a:	46c0      	nop			@ (mov r8, r8)
 800745c:	2000009c 	.word	0x2000009c
 8007460:	00030d40 	.word	0x00030d40
 8007464:	fffffefd 	.word	0xfffffefd
 8007468:	ffde0201 	.word	0xffde0201
 800746c:	1ffffc02 	.word	0x1ffffc02
 8007470:	40012708 	.word	0x40012708
 8007474:	ffc3ffff 	.word	0xffc3ffff
 8007478:	07ffff04 	.word	0x07ffff04

0800747c <HAL_ADC_Start>:
 800747c:	b5b0      	push	{r4, r5, r7, lr}
 800747e:	b084      	sub	sp, #16
 8007480:	af00      	add	r7, sp, #0
 8007482:	6078      	str	r0, [r7, #4]
 8007484:	687b      	ldr	r3, [r7, #4]
 8007486:	681b      	ldr	r3, [r3, #0]
 8007488:	0018      	movs	r0, r3
 800748a:	f7ff fe3d 	bl	8007108 <LL_ADC_REG_IsConversionOngoing>
 800748e:	1e03      	subs	r3, r0, #0
 8007490:	d135      	bne.n	80074fe <HAL_ADC_Start+0x82>
 8007492:	687b      	ldr	r3, [r7, #4]
 8007494:	2254      	movs	r2, #84	@ 0x54
 8007496:	5c9b      	ldrb	r3, [r3, r2]
 8007498:	2b01      	cmp	r3, #1
 800749a:	d101      	bne.n	80074a0 <HAL_ADC_Start+0x24>
 800749c:	2302      	movs	r3, #2
 800749e:	e035      	b.n	800750c <HAL_ADC_Start+0x90>
 80074a0:	687b      	ldr	r3, [r7, #4]
 80074a2:	2254      	movs	r2, #84	@ 0x54
 80074a4:	2101      	movs	r1, #1
 80074a6:	5499      	strb	r1, [r3, r2]
 80074a8:	250f      	movs	r5, #15
 80074aa:	197c      	adds	r4, r7, r5
 80074ac:	687b      	ldr	r3, [r7, #4]
 80074ae:	0018      	movs	r0, r3
 80074b0:	f000 fa0a 	bl	80078c8 <ADC_Enable>
 80074b4:	0003      	movs	r3, r0
 80074b6:	7023      	strb	r3, [r4, #0]
 80074b8:	197b      	adds	r3, r7, r5
 80074ba:	781b      	ldrb	r3, [r3, #0]
 80074bc:	2b00      	cmp	r3, #0
 80074be:	d119      	bne.n	80074f4 <HAL_ADC_Start+0x78>
 80074c0:	687b      	ldr	r3, [r7, #4]
 80074c2:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80074c4:	4a13      	ldr	r2, [pc, #76]	@ (8007514 <HAL_ADC_Start+0x98>)
 80074c6:	4013      	ands	r3, r2
 80074c8:	2280      	movs	r2, #128	@ 0x80
 80074ca:	0052      	lsls	r2, r2, #1
 80074cc:	431a      	orrs	r2, r3
 80074ce:	687b      	ldr	r3, [r7, #4]
 80074d0:	659a      	str	r2, [r3, #88]	@ 0x58
 80074d2:	687b      	ldr	r3, [r7, #4]
 80074d4:	2200      	movs	r2, #0
 80074d6:	65da      	str	r2, [r3, #92]	@ 0x5c
 80074d8:	687b      	ldr	r3, [r7, #4]
 80074da:	681b      	ldr	r3, [r3, #0]
 80074dc:	221c      	movs	r2, #28
 80074de:	601a      	str	r2, [r3, #0]
 80074e0:	687b      	ldr	r3, [r7, #4]
 80074e2:	2254      	movs	r2, #84	@ 0x54
 80074e4:	2100      	movs	r1, #0
 80074e6:	5499      	strb	r1, [r3, r2]
 80074e8:	687b      	ldr	r3, [r7, #4]
 80074ea:	681b      	ldr	r3, [r3, #0]
 80074ec:	0018      	movs	r0, r3
 80074ee:	f7ff fdf9 	bl	80070e4 <LL_ADC_REG_StartConversion>
 80074f2:	e008      	b.n	8007506 <HAL_ADC_Start+0x8a>
 80074f4:	687b      	ldr	r3, [r7, #4]
 80074f6:	2254      	movs	r2, #84	@ 0x54
 80074f8:	2100      	movs	r1, #0
 80074fa:	5499      	strb	r1, [r3, r2]
 80074fc:	e003      	b.n	8007506 <HAL_ADC_Start+0x8a>
 80074fe:	230f      	movs	r3, #15
 8007500:	18fb      	adds	r3, r7, r3
 8007502:	2202      	movs	r2, #2
 8007504:	701a      	strb	r2, [r3, #0]
 8007506:	230f      	movs	r3, #15
 8007508:	18fb      	adds	r3, r7, r3
 800750a:	781b      	ldrb	r3, [r3, #0]
 800750c:	0018      	movs	r0, r3
 800750e:	46bd      	mov	sp, r7
 8007510:	b004      	add	sp, #16
 8007512:	bdb0      	pop	{r4, r5, r7, pc}
 8007514:	fffff0fe 	.word	0xfffff0fe

08007518 <HAL_ADC_ConfigChannel>:
 8007518:	b580      	push	{r7, lr}
 800751a:	b086      	sub	sp, #24
 800751c:	af00      	add	r7, sp, #0
 800751e:	6078      	str	r0, [r7, #4]
 8007520:	6039      	str	r1, [r7, #0]
 8007522:	2317      	movs	r3, #23
 8007524:	18fb      	adds	r3, r7, r3
 8007526:	2200      	movs	r2, #0
 8007528:	701a      	strb	r2, [r3, #0]
 800752a:	2300      	movs	r3, #0
 800752c:	60fb      	str	r3, [r7, #12]
 800752e:	687b      	ldr	r3, [r7, #4]
 8007530:	2254      	movs	r2, #84	@ 0x54
 8007532:	5c9b      	ldrb	r3, [r3, r2]
 8007534:	2b01      	cmp	r3, #1
 8007536:	d101      	bne.n	800753c <HAL_ADC_ConfigChannel+0x24>
 8007538:	2302      	movs	r3, #2
 800753a:	e1c0      	b.n	80078be <HAL_ADC_ConfigChannel+0x3a6>
 800753c:	687b      	ldr	r3, [r7, #4]
 800753e:	2254      	movs	r2, #84	@ 0x54
 8007540:	2101      	movs	r1, #1
 8007542:	5499      	strb	r1, [r3, r2]
 8007544:	687b      	ldr	r3, [r7, #4]
 8007546:	681b      	ldr	r3, [r3, #0]
 8007548:	0018      	movs	r0, r3
 800754a:	f7ff fddd 	bl	8007108 <LL_ADC_REG_IsConversionOngoing>
 800754e:	1e03      	subs	r3, r0, #0
 8007550:	d000      	beq.n	8007554 <HAL_ADC_ConfigChannel+0x3c>
 8007552:	e1a3      	b.n	800789c <HAL_ADC_ConfigChannel+0x384>
 8007554:	683b      	ldr	r3, [r7, #0]
 8007556:	685b      	ldr	r3, [r3, #4]
 8007558:	2b02      	cmp	r3, #2
 800755a:	d100      	bne.n	800755e <HAL_ADC_ConfigChannel+0x46>
 800755c:	e143      	b.n	80077e6 <HAL_ADC_ConfigChannel+0x2ce>
 800755e:	687b      	ldr	r3, [r7, #4]
 8007560:	691a      	ldr	r2, [r3, #16]
 8007562:	2380      	movs	r3, #128	@ 0x80
 8007564:	061b      	lsls	r3, r3, #24
 8007566:	429a      	cmp	r2, r3
 8007568:	d004      	beq.n	8007574 <HAL_ADC_ConfigChannel+0x5c>
 800756a:	687b      	ldr	r3, [r7, #4]
 800756c:	691b      	ldr	r3, [r3, #16]
 800756e:	4ac1      	ldr	r2, [pc, #772]	@ (8007874 <HAL_ADC_ConfigChannel+0x35c>)
 8007570:	4293      	cmp	r3, r2
 8007572:	d108      	bne.n	8007586 <HAL_ADC_ConfigChannel+0x6e>
 8007574:	687b      	ldr	r3, [r7, #4]
 8007576:	681a      	ldr	r2, [r3, #0]
 8007578:	683b      	ldr	r3, [r7, #0]
 800757a:	681b      	ldr	r3, [r3, #0]
 800757c:	0019      	movs	r1, r3
 800757e:	0010      	movs	r0, r2
 8007580:	f7ff fd25 	bl	8006fce <LL_ADC_REG_SetSequencerChAdd>
 8007584:	e0c9      	b.n	800771a <HAL_ADC_ConfigChannel+0x202>
 8007586:	687b      	ldr	r3, [r7, #4]
 8007588:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 800758a:	683b      	ldr	r3, [r7, #0]
 800758c:	685b      	ldr	r3, [r3, #4]
 800758e:	211f      	movs	r1, #31
 8007590:	400b      	ands	r3, r1
 8007592:	210f      	movs	r1, #15
 8007594:	4099      	lsls	r1, r3
 8007596:	000b      	movs	r3, r1
 8007598:	43db      	mvns	r3, r3
 800759a:	4013      	ands	r3, r2
 800759c:	0019      	movs	r1, r3
 800759e:	683b      	ldr	r3, [r7, #0]
 80075a0:	681b      	ldr	r3, [r3, #0]
 80075a2:	035b      	lsls	r3, r3, #13
 80075a4:	0b5b      	lsrs	r3, r3, #13
 80075a6:	d105      	bne.n	80075b4 <HAL_ADC_ConfigChannel+0x9c>
 80075a8:	683b      	ldr	r3, [r7, #0]
 80075aa:	681b      	ldr	r3, [r3, #0]
 80075ac:	0e9b      	lsrs	r3, r3, #26
 80075ae:	221f      	movs	r2, #31
 80075b0:	4013      	ands	r3, r2
 80075b2:	e098      	b.n	80076e6 <HAL_ADC_ConfigChannel+0x1ce>
 80075b4:	683b      	ldr	r3, [r7, #0]
 80075b6:	681b      	ldr	r3, [r3, #0]
 80075b8:	2201      	movs	r2, #1
 80075ba:	4013      	ands	r3, r2
 80075bc:	d000      	beq.n	80075c0 <HAL_ADC_ConfigChannel+0xa8>
 80075be:	e091      	b.n	80076e4 <HAL_ADC_ConfigChannel+0x1cc>
 80075c0:	683b      	ldr	r3, [r7, #0]
 80075c2:	681b      	ldr	r3, [r3, #0]
 80075c4:	2202      	movs	r2, #2
 80075c6:	4013      	ands	r3, r2
 80075c8:	d000      	beq.n	80075cc <HAL_ADC_ConfigChannel+0xb4>
 80075ca:	e089      	b.n	80076e0 <HAL_ADC_ConfigChannel+0x1c8>
 80075cc:	683b      	ldr	r3, [r7, #0]
 80075ce:	681b      	ldr	r3, [r3, #0]
 80075d0:	2204      	movs	r2, #4
 80075d2:	4013      	ands	r3, r2
 80075d4:	d000      	beq.n	80075d8 <HAL_ADC_ConfigChannel+0xc0>
 80075d6:	e081      	b.n	80076dc <HAL_ADC_ConfigChannel+0x1c4>
 80075d8:	683b      	ldr	r3, [r7, #0]
 80075da:	681b      	ldr	r3, [r3, #0]
 80075dc:	2208      	movs	r2, #8
 80075de:	4013      	ands	r3, r2
 80075e0:	d000      	beq.n	80075e4 <HAL_ADC_ConfigChannel+0xcc>
 80075e2:	e079      	b.n	80076d8 <HAL_ADC_ConfigChannel+0x1c0>
 80075e4:	683b      	ldr	r3, [r7, #0]
 80075e6:	681b      	ldr	r3, [r3, #0]
 80075e8:	2210      	movs	r2, #16
 80075ea:	4013      	ands	r3, r2
 80075ec:	d000      	beq.n	80075f0 <HAL_ADC_ConfigChannel+0xd8>
 80075ee:	e071      	b.n	80076d4 <HAL_ADC_ConfigChannel+0x1bc>
 80075f0:	683b      	ldr	r3, [r7, #0]
 80075f2:	681b      	ldr	r3, [r3, #0]
 80075f4:	2220      	movs	r2, #32
 80075f6:	4013      	ands	r3, r2
 80075f8:	d000      	beq.n	80075fc <HAL_ADC_ConfigChannel+0xe4>
 80075fa:	e069      	b.n	80076d0 <HAL_ADC_ConfigChannel+0x1b8>
 80075fc:	683b      	ldr	r3, [r7, #0]
 80075fe:	681b      	ldr	r3, [r3, #0]
 8007600:	2240      	movs	r2, #64	@ 0x40
 8007602:	4013      	ands	r3, r2
 8007604:	d000      	beq.n	8007608 <HAL_ADC_ConfigChannel+0xf0>
 8007606:	e061      	b.n	80076cc <HAL_ADC_ConfigChannel+0x1b4>
 8007608:	683b      	ldr	r3, [r7, #0]
 800760a:	681b      	ldr	r3, [r3, #0]
 800760c:	2280      	movs	r2, #128	@ 0x80
 800760e:	4013      	ands	r3, r2
 8007610:	d000      	beq.n	8007614 <HAL_ADC_ConfigChannel+0xfc>
 8007612:	e059      	b.n	80076c8 <HAL_ADC_ConfigChannel+0x1b0>
 8007614:	683b      	ldr	r3, [r7, #0]
 8007616:	681a      	ldr	r2, [r3, #0]
 8007618:	2380      	movs	r3, #128	@ 0x80
 800761a:	005b      	lsls	r3, r3, #1
 800761c:	4013      	ands	r3, r2
 800761e:	d151      	bne.n	80076c4 <HAL_ADC_ConfigChannel+0x1ac>
 8007620:	683b      	ldr	r3, [r7, #0]
 8007622:	681a      	ldr	r2, [r3, #0]
 8007624:	2380      	movs	r3, #128	@ 0x80
 8007626:	009b      	lsls	r3, r3, #2
 8007628:	4013      	ands	r3, r2
 800762a:	d149      	bne.n	80076c0 <HAL_ADC_ConfigChannel+0x1a8>
 800762c:	683b      	ldr	r3, [r7, #0]
 800762e:	681a      	ldr	r2, [r3, #0]
 8007630:	2380      	movs	r3, #128	@ 0x80
 8007632:	00db      	lsls	r3, r3, #3
 8007634:	4013      	ands	r3, r2
 8007636:	d141      	bne.n	80076bc <HAL_ADC_ConfigChannel+0x1a4>
 8007638:	683b      	ldr	r3, [r7, #0]
 800763a:	681a      	ldr	r2, [r3, #0]
 800763c:	2380      	movs	r3, #128	@ 0x80
 800763e:	011b      	lsls	r3, r3, #4
 8007640:	4013      	ands	r3, r2
 8007642:	d139      	bne.n	80076b8 <HAL_ADC_ConfigChannel+0x1a0>
 8007644:	683b      	ldr	r3, [r7, #0]
 8007646:	681a      	ldr	r2, [r3, #0]
 8007648:	2380      	movs	r3, #128	@ 0x80
 800764a:	015b      	lsls	r3, r3, #5
 800764c:	4013      	ands	r3, r2
 800764e:	d131      	bne.n	80076b4 <HAL_ADC_ConfigChannel+0x19c>
 8007650:	683b      	ldr	r3, [r7, #0]
 8007652:	681a      	ldr	r2, [r3, #0]
 8007654:	2380      	movs	r3, #128	@ 0x80
 8007656:	019b      	lsls	r3, r3, #6
 8007658:	4013      	ands	r3, r2
 800765a:	d129      	bne.n	80076b0 <HAL_ADC_ConfigChannel+0x198>
 800765c:	683b      	ldr	r3, [r7, #0]
 800765e:	681a      	ldr	r2, [r3, #0]
 8007660:	2380      	movs	r3, #128	@ 0x80
 8007662:	01db      	lsls	r3, r3, #7
 8007664:	4013      	ands	r3, r2
 8007666:	d121      	bne.n	80076ac <HAL_ADC_ConfigChannel+0x194>
 8007668:	683b      	ldr	r3, [r7, #0]
 800766a:	681a      	ldr	r2, [r3, #0]
 800766c:	2380      	movs	r3, #128	@ 0x80
 800766e:	021b      	lsls	r3, r3, #8
 8007670:	4013      	ands	r3, r2
 8007672:	d119      	bne.n	80076a8 <HAL_ADC_ConfigChannel+0x190>
 8007674:	683b      	ldr	r3, [r7, #0]
 8007676:	681a      	ldr	r2, [r3, #0]
 8007678:	2380      	movs	r3, #128	@ 0x80
 800767a:	025b      	lsls	r3, r3, #9
 800767c:	4013      	ands	r3, r2
 800767e:	d111      	bne.n	80076a4 <HAL_ADC_ConfigChannel+0x18c>
 8007680:	683b      	ldr	r3, [r7, #0]
 8007682:	681a      	ldr	r2, [r3, #0]
 8007684:	2380      	movs	r3, #128	@ 0x80
 8007686:	029b      	lsls	r3, r3, #10
 8007688:	4013      	ands	r3, r2
 800768a:	d109      	bne.n	80076a0 <HAL_ADC_ConfigChannel+0x188>
 800768c:	683b      	ldr	r3, [r7, #0]
 800768e:	681a      	ldr	r2, [r3, #0]
 8007690:	2380      	movs	r3, #128	@ 0x80
 8007692:	02db      	lsls	r3, r3, #11
 8007694:	4013      	ands	r3, r2
 8007696:	d001      	beq.n	800769c <HAL_ADC_ConfigChannel+0x184>
 8007698:	2312      	movs	r3, #18
 800769a:	e024      	b.n	80076e6 <HAL_ADC_ConfigChannel+0x1ce>
 800769c:	2300      	movs	r3, #0
 800769e:	e022      	b.n	80076e6 <HAL_ADC_ConfigChannel+0x1ce>
 80076a0:	2311      	movs	r3, #17
 80076a2:	e020      	b.n	80076e6 <HAL_ADC_ConfigChannel+0x1ce>
 80076a4:	2310      	movs	r3, #16
 80076a6:	e01e      	b.n	80076e6 <HAL_ADC_ConfigChannel+0x1ce>
 80076a8:	230f      	movs	r3, #15
 80076aa:	e01c      	b.n	80076e6 <HAL_ADC_ConfigChannel+0x1ce>
 80076ac:	230e      	movs	r3, #14
 80076ae:	e01a      	b.n	80076e6 <HAL_ADC_ConfigChannel+0x1ce>
 80076b0:	230d      	movs	r3, #13
 80076b2:	e018      	b.n	80076e6 <HAL_ADC_ConfigChannel+0x1ce>
 80076b4:	230c      	movs	r3, #12
 80076b6:	e016      	b.n	80076e6 <HAL_ADC_ConfigChannel+0x1ce>
 80076b8:	230b      	movs	r3, #11
 80076ba:	e014      	b.n	80076e6 <HAL_ADC_ConfigChannel+0x1ce>
 80076bc:	230a      	movs	r3, #10
 80076be:	e012      	b.n	80076e6 <HAL_ADC_ConfigChannel+0x1ce>
 80076c0:	2309      	movs	r3, #9
 80076c2:	e010      	b.n	80076e6 <HAL_ADC_ConfigChannel+0x1ce>
 80076c4:	2308      	movs	r3, #8
 80076c6:	e00e      	b.n	80076e6 <HAL_ADC_ConfigChannel+0x1ce>
 80076c8:	2307      	movs	r3, #7
 80076ca:	e00c      	b.n	80076e6 <HAL_ADC_ConfigChannel+0x1ce>
 80076cc:	2306      	movs	r3, #6
 80076ce:	e00a      	b.n	80076e6 <HAL_ADC_ConfigChannel+0x1ce>
 80076d0:	2305      	movs	r3, #5
 80076d2:	e008      	b.n	80076e6 <HAL_ADC_ConfigChannel+0x1ce>
 80076d4:	2304      	movs	r3, #4
 80076d6:	e006      	b.n	80076e6 <HAL_ADC_ConfigChannel+0x1ce>
 80076d8:	2303      	movs	r3, #3
 80076da:	e004      	b.n	80076e6 <HAL_ADC_ConfigChannel+0x1ce>
 80076dc:	2302      	movs	r3, #2
 80076de:	e002      	b.n	80076e6 <HAL_ADC_ConfigChannel+0x1ce>
 80076e0:	2301      	movs	r3, #1
 80076e2:	e000      	b.n	80076e6 <HAL_ADC_ConfigChannel+0x1ce>
 80076e4:	2300      	movs	r3, #0
 80076e6:	683a      	ldr	r2, [r7, #0]
 80076e8:	6852      	ldr	r2, [r2, #4]
 80076ea:	201f      	movs	r0, #31
 80076ec:	4002      	ands	r2, r0
 80076ee:	4093      	lsls	r3, r2
 80076f0:	000a      	movs	r2, r1
 80076f2:	431a      	orrs	r2, r3
 80076f4:	687b      	ldr	r3, [r7, #4]
 80076f6:	661a      	str	r2, [r3, #96]	@ 0x60
 80076f8:	683b      	ldr	r3, [r7, #0]
 80076fa:	685b      	ldr	r3, [r3, #4]
 80076fc:	089b      	lsrs	r3, r3, #2
 80076fe:	1c5a      	adds	r2, r3, #1
 8007700:	687b      	ldr	r3, [r7, #4]
 8007702:	69db      	ldr	r3, [r3, #28]
 8007704:	429a      	cmp	r2, r3
 8007706:	d808      	bhi.n	800771a <HAL_ADC_ConfigChannel+0x202>
 8007708:	687b      	ldr	r3, [r7, #4]
 800770a:	6818      	ldr	r0, [r3, #0]
 800770c:	683b      	ldr	r3, [r7, #0]
 800770e:	6859      	ldr	r1, [r3, #4]
 8007710:	683b      	ldr	r3, [r7, #0]
 8007712:	681b      	ldr	r3, [r3, #0]
 8007714:	001a      	movs	r2, r3
 8007716:	f7ff fc3a 	bl	8006f8e <LL_ADC_REG_SetSequencerRanks>
 800771a:	687b      	ldr	r3, [r7, #4]
 800771c:	6818      	ldr	r0, [r3, #0]
 800771e:	683b      	ldr	r3, [r7, #0]
 8007720:	6819      	ldr	r1, [r3, #0]
 8007722:	683b      	ldr	r3, [r7, #0]
 8007724:	689b      	ldr	r3, [r3, #8]
 8007726:	001a      	movs	r2, r3
 8007728:	f7ff fc74 	bl	8007014 <LL_ADC_SetChannelSamplingTime>
 800772c:	683b      	ldr	r3, [r7, #0]
 800772e:	681b      	ldr	r3, [r3, #0]
 8007730:	2b00      	cmp	r3, #0
 8007732:	db00      	blt.n	8007736 <HAL_ADC_ConfigChannel+0x21e>
 8007734:	e0bc      	b.n	80078b0 <HAL_ADC_ConfigChannel+0x398>
 8007736:	4b50      	ldr	r3, [pc, #320]	@ (8007878 <HAL_ADC_ConfigChannel+0x360>)
 8007738:	0018      	movs	r0, r3
 800773a:	f7ff fbe7 	bl	8006f0c <LL_ADC_GetCommonPathInternalCh>
 800773e:	0003      	movs	r3, r0
 8007740:	613b      	str	r3, [r7, #16]
 8007742:	683b      	ldr	r3, [r7, #0]
 8007744:	681b      	ldr	r3, [r3, #0]
 8007746:	4a4d      	ldr	r2, [pc, #308]	@ (800787c <HAL_ADC_ConfigChannel+0x364>)
 8007748:	4293      	cmp	r3, r2
 800774a:	d122      	bne.n	8007792 <HAL_ADC_ConfigChannel+0x27a>
 800774c:	693a      	ldr	r2, [r7, #16]
 800774e:	2380      	movs	r3, #128	@ 0x80
 8007750:	041b      	lsls	r3, r3, #16
 8007752:	4013      	ands	r3, r2
 8007754:	d11d      	bne.n	8007792 <HAL_ADC_ConfigChannel+0x27a>
 8007756:	693b      	ldr	r3, [r7, #16]
 8007758:	2280      	movs	r2, #128	@ 0x80
 800775a:	0412      	lsls	r2, r2, #16
 800775c:	4313      	orrs	r3, r2
 800775e:	4a46      	ldr	r2, [pc, #280]	@ (8007878 <HAL_ADC_ConfigChannel+0x360>)
 8007760:	0019      	movs	r1, r3
 8007762:	0010      	movs	r0, r2
 8007764:	f7ff fbbe 	bl	8006ee4 <LL_ADC_SetCommonPathInternalCh>
 8007768:	4b45      	ldr	r3, [pc, #276]	@ (8007880 <HAL_ADC_ConfigChannel+0x368>)
 800776a:	681b      	ldr	r3, [r3, #0]
 800776c:	4945      	ldr	r1, [pc, #276]	@ (8007884 <HAL_ADC_ConfigChannel+0x36c>)
 800776e:	0018      	movs	r0, r3
 8007770:	f7f8 fcca 	bl	8000108 <__udivsi3>
 8007774:	0003      	movs	r3, r0
 8007776:	1c5a      	adds	r2, r3, #1
 8007778:	0013      	movs	r3, r2
 800777a:	005b      	lsls	r3, r3, #1
 800777c:	189b      	adds	r3, r3, r2
 800777e:	009b      	lsls	r3, r3, #2
 8007780:	60fb      	str	r3, [r7, #12]
 8007782:	e002      	b.n	800778a <HAL_ADC_ConfigChannel+0x272>
 8007784:	68fb      	ldr	r3, [r7, #12]
 8007786:	3b01      	subs	r3, #1
 8007788:	60fb      	str	r3, [r7, #12]
 800778a:	68fb      	ldr	r3, [r7, #12]
 800778c:	2b00      	cmp	r3, #0
 800778e:	d1f9      	bne.n	8007784 <HAL_ADC_ConfigChannel+0x26c>
 8007790:	e08e      	b.n	80078b0 <HAL_ADC_ConfigChannel+0x398>
 8007792:	683b      	ldr	r3, [r7, #0]
 8007794:	681b      	ldr	r3, [r3, #0]
 8007796:	4a3c      	ldr	r2, [pc, #240]	@ (8007888 <HAL_ADC_ConfigChannel+0x370>)
 8007798:	4293      	cmp	r3, r2
 800779a:	d10e      	bne.n	80077ba <HAL_ADC_ConfigChannel+0x2a2>
 800779c:	693a      	ldr	r2, [r7, #16]
 800779e:	2380      	movs	r3, #128	@ 0x80
 80077a0:	045b      	lsls	r3, r3, #17
 80077a2:	4013      	ands	r3, r2
 80077a4:	d109      	bne.n	80077ba <HAL_ADC_ConfigChannel+0x2a2>
 80077a6:	693b      	ldr	r3, [r7, #16]
 80077a8:	2280      	movs	r2, #128	@ 0x80
 80077aa:	0452      	lsls	r2, r2, #17
 80077ac:	4313      	orrs	r3, r2
 80077ae:	4a32      	ldr	r2, [pc, #200]	@ (8007878 <HAL_ADC_ConfigChannel+0x360>)
 80077b0:	0019      	movs	r1, r3
 80077b2:	0010      	movs	r0, r2
 80077b4:	f7ff fb96 	bl	8006ee4 <LL_ADC_SetCommonPathInternalCh>
 80077b8:	e07a      	b.n	80078b0 <HAL_ADC_ConfigChannel+0x398>
 80077ba:	683b      	ldr	r3, [r7, #0]
 80077bc:	681b      	ldr	r3, [r3, #0]
 80077be:	4a33      	ldr	r2, [pc, #204]	@ (800788c <HAL_ADC_ConfigChannel+0x374>)
 80077c0:	4293      	cmp	r3, r2
 80077c2:	d000      	beq.n	80077c6 <HAL_ADC_ConfigChannel+0x2ae>
 80077c4:	e074      	b.n	80078b0 <HAL_ADC_ConfigChannel+0x398>
 80077c6:	693a      	ldr	r2, [r7, #16]
 80077c8:	2380      	movs	r3, #128	@ 0x80
 80077ca:	03db      	lsls	r3, r3, #15
 80077cc:	4013      	ands	r3, r2
 80077ce:	d000      	beq.n	80077d2 <HAL_ADC_ConfigChannel+0x2ba>
 80077d0:	e06e      	b.n	80078b0 <HAL_ADC_ConfigChannel+0x398>
 80077d2:	693b      	ldr	r3, [r7, #16]
 80077d4:	2280      	movs	r2, #128	@ 0x80
 80077d6:	03d2      	lsls	r2, r2, #15
 80077d8:	4313      	orrs	r3, r2
 80077da:	4a27      	ldr	r2, [pc, #156]	@ (8007878 <HAL_ADC_ConfigChannel+0x360>)
 80077dc:	0019      	movs	r1, r3
 80077de:	0010      	movs	r0, r2
 80077e0:	f7ff fb80 	bl	8006ee4 <LL_ADC_SetCommonPathInternalCh>
 80077e4:	e064      	b.n	80078b0 <HAL_ADC_ConfigChannel+0x398>
 80077e6:	687b      	ldr	r3, [r7, #4]
 80077e8:	691a      	ldr	r2, [r3, #16]
 80077ea:	2380      	movs	r3, #128	@ 0x80
 80077ec:	061b      	lsls	r3, r3, #24
 80077ee:	429a      	cmp	r2, r3
 80077f0:	d004      	beq.n	80077fc <HAL_ADC_ConfigChannel+0x2e4>
 80077f2:	687b      	ldr	r3, [r7, #4]
 80077f4:	691b      	ldr	r3, [r3, #16]
 80077f6:	4a1f      	ldr	r2, [pc, #124]	@ (8007874 <HAL_ADC_ConfigChannel+0x35c>)
 80077f8:	4293      	cmp	r3, r2
 80077fa:	d107      	bne.n	800780c <HAL_ADC_ConfigChannel+0x2f4>
 80077fc:	687b      	ldr	r3, [r7, #4]
 80077fe:	681a      	ldr	r2, [r3, #0]
 8007800:	683b      	ldr	r3, [r7, #0]
 8007802:	681b      	ldr	r3, [r3, #0]
 8007804:	0019      	movs	r1, r3
 8007806:	0010      	movs	r0, r2
 8007808:	f7ff fbf2 	bl	8006ff0 <LL_ADC_REG_SetSequencerChRem>
 800780c:	683b      	ldr	r3, [r7, #0]
 800780e:	681b      	ldr	r3, [r3, #0]
 8007810:	2b00      	cmp	r3, #0
 8007812:	da4d      	bge.n	80078b0 <HAL_ADC_ConfigChannel+0x398>
 8007814:	4b18      	ldr	r3, [pc, #96]	@ (8007878 <HAL_ADC_ConfigChannel+0x360>)
 8007816:	0018      	movs	r0, r3
 8007818:	f7ff fb78 	bl	8006f0c <LL_ADC_GetCommonPathInternalCh>
 800781c:	0003      	movs	r3, r0
 800781e:	613b      	str	r3, [r7, #16]
 8007820:	683b      	ldr	r3, [r7, #0]
 8007822:	681b      	ldr	r3, [r3, #0]
 8007824:	4a15      	ldr	r2, [pc, #84]	@ (800787c <HAL_ADC_ConfigChannel+0x364>)
 8007826:	4293      	cmp	r3, r2
 8007828:	d108      	bne.n	800783c <HAL_ADC_ConfigChannel+0x324>
 800782a:	693b      	ldr	r3, [r7, #16]
 800782c:	4a18      	ldr	r2, [pc, #96]	@ (8007890 <HAL_ADC_ConfigChannel+0x378>)
 800782e:	4013      	ands	r3, r2
 8007830:	4a11      	ldr	r2, [pc, #68]	@ (8007878 <HAL_ADC_ConfigChannel+0x360>)
 8007832:	0019      	movs	r1, r3
 8007834:	0010      	movs	r0, r2
 8007836:	f7ff fb55 	bl	8006ee4 <LL_ADC_SetCommonPathInternalCh>
 800783a:	e039      	b.n	80078b0 <HAL_ADC_ConfigChannel+0x398>
 800783c:	683b      	ldr	r3, [r7, #0]
 800783e:	681b      	ldr	r3, [r3, #0]
 8007840:	4a11      	ldr	r2, [pc, #68]	@ (8007888 <HAL_ADC_ConfigChannel+0x370>)
 8007842:	4293      	cmp	r3, r2
 8007844:	d108      	bne.n	8007858 <HAL_ADC_ConfigChannel+0x340>
 8007846:	693b      	ldr	r3, [r7, #16]
 8007848:	4a12      	ldr	r2, [pc, #72]	@ (8007894 <HAL_ADC_ConfigChannel+0x37c>)
 800784a:	4013      	ands	r3, r2
 800784c:	4a0a      	ldr	r2, [pc, #40]	@ (8007878 <HAL_ADC_ConfigChannel+0x360>)
 800784e:	0019      	movs	r1, r3
 8007850:	0010      	movs	r0, r2
 8007852:	f7ff fb47 	bl	8006ee4 <LL_ADC_SetCommonPathInternalCh>
 8007856:	e02b      	b.n	80078b0 <HAL_ADC_ConfigChannel+0x398>
 8007858:	683b      	ldr	r3, [r7, #0]
 800785a:	681b      	ldr	r3, [r3, #0]
 800785c:	4a0b      	ldr	r2, [pc, #44]	@ (800788c <HAL_ADC_ConfigChannel+0x374>)
 800785e:	4293      	cmp	r3, r2
 8007860:	d126      	bne.n	80078b0 <HAL_ADC_ConfigChannel+0x398>
 8007862:	693b      	ldr	r3, [r7, #16]
 8007864:	4a0c      	ldr	r2, [pc, #48]	@ (8007898 <HAL_ADC_ConfigChannel+0x380>)
 8007866:	4013      	ands	r3, r2
 8007868:	4a03      	ldr	r2, [pc, #12]	@ (8007878 <HAL_ADC_ConfigChannel+0x360>)
 800786a:	0019      	movs	r1, r3
 800786c:	0010      	movs	r0, r2
 800786e:	f7ff fb39 	bl	8006ee4 <LL_ADC_SetCommonPathInternalCh>
 8007872:	e01d      	b.n	80078b0 <HAL_ADC_ConfigChannel+0x398>
 8007874:	80000004 	.word	0x80000004
 8007878:	40012708 	.word	0x40012708
 800787c:	b0001000 	.word	0xb0001000
 8007880:	2000009c 	.word	0x2000009c
 8007884:	00030d40 	.word	0x00030d40
 8007888:	b8004000 	.word	0xb8004000
 800788c:	b4002000 	.word	0xb4002000
 8007890:	ff7fffff 	.word	0xff7fffff
 8007894:	feffffff 	.word	0xfeffffff
 8007898:	ffbfffff 	.word	0xffbfffff
 800789c:	687b      	ldr	r3, [r7, #4]
 800789e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80078a0:	2220      	movs	r2, #32
 80078a2:	431a      	orrs	r2, r3
 80078a4:	687b      	ldr	r3, [r7, #4]
 80078a6:	659a      	str	r2, [r3, #88]	@ 0x58
 80078a8:	2317      	movs	r3, #23
 80078aa:	18fb      	adds	r3, r7, r3
 80078ac:	2201      	movs	r2, #1
 80078ae:	701a      	strb	r2, [r3, #0]
 80078b0:	687b      	ldr	r3, [r7, #4]
 80078b2:	2254      	movs	r2, #84	@ 0x54
 80078b4:	2100      	movs	r1, #0
 80078b6:	5499      	strb	r1, [r3, r2]
 80078b8:	2317      	movs	r3, #23
 80078ba:	18fb      	adds	r3, r7, r3
 80078bc:	781b      	ldrb	r3, [r3, #0]
 80078be:	0018      	movs	r0, r3
 80078c0:	46bd      	mov	sp, r7
 80078c2:	b006      	add	sp, #24
 80078c4:	bd80      	pop	{r7, pc}
 80078c6:	46c0      	nop			@ (mov r8, r8)

080078c8 <ADC_Enable>:
 80078c8:	b580      	push	{r7, lr}
 80078ca:	b084      	sub	sp, #16
 80078cc:	af00      	add	r7, sp, #0
 80078ce:	6078      	str	r0, [r7, #4]
 80078d0:	2300      	movs	r3, #0
 80078d2:	60bb      	str	r3, [r7, #8]
 80078d4:	687b      	ldr	r3, [r7, #4]
 80078d6:	681b      	ldr	r3, [r3, #0]
 80078d8:	0018      	movs	r0, r3
 80078da:	f7ff fbf1 	bl	80070c0 <LL_ADC_IsEnabled>
 80078de:	1e03      	subs	r3, r0, #0
 80078e0:	d000      	beq.n	80078e4 <ADC_Enable+0x1c>
 80078e2:	e069      	b.n	80079b8 <ADC_Enable+0xf0>
 80078e4:	687b      	ldr	r3, [r7, #4]
 80078e6:	681b      	ldr	r3, [r3, #0]
 80078e8:	689b      	ldr	r3, [r3, #8]
 80078ea:	4a36      	ldr	r2, [pc, #216]	@ (80079c4 <ADC_Enable+0xfc>)
 80078ec:	4013      	ands	r3, r2
 80078ee:	d00d      	beq.n	800790c <ADC_Enable+0x44>
 80078f0:	687b      	ldr	r3, [r7, #4]
 80078f2:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80078f4:	2210      	movs	r2, #16
 80078f6:	431a      	orrs	r2, r3
 80078f8:	687b      	ldr	r3, [r7, #4]
 80078fa:	659a      	str	r2, [r3, #88]	@ 0x58
 80078fc:	687b      	ldr	r3, [r7, #4]
 80078fe:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8007900:	2201      	movs	r2, #1
 8007902:	431a      	orrs	r2, r3
 8007904:	687b      	ldr	r3, [r7, #4]
 8007906:	65da      	str	r2, [r3, #92]	@ 0x5c
 8007908:	2301      	movs	r3, #1
 800790a:	e056      	b.n	80079ba <ADC_Enable+0xf2>
 800790c:	687b      	ldr	r3, [r7, #4]
 800790e:	681b      	ldr	r3, [r3, #0]
 8007910:	0018      	movs	r0, r3
 8007912:	f7ff fbc3 	bl	800709c <LL_ADC_Enable>
 8007916:	4b2c      	ldr	r3, [pc, #176]	@ (80079c8 <ADC_Enable+0x100>)
 8007918:	0018      	movs	r0, r3
 800791a:	f7ff faf7 	bl	8006f0c <LL_ADC_GetCommonPathInternalCh>
 800791e:	0002      	movs	r2, r0
 8007920:	2380      	movs	r3, #128	@ 0x80
 8007922:	041b      	lsls	r3, r3, #16
 8007924:	4013      	ands	r3, r2
 8007926:	d00f      	beq.n	8007948 <ADC_Enable+0x80>
 8007928:	4b28      	ldr	r3, [pc, #160]	@ (80079cc <ADC_Enable+0x104>)
 800792a:	681b      	ldr	r3, [r3, #0]
 800792c:	4928      	ldr	r1, [pc, #160]	@ (80079d0 <ADC_Enable+0x108>)
 800792e:	0018      	movs	r0, r3
 8007930:	f7f8 fbea 	bl	8000108 <__udivsi3>
 8007934:	0003      	movs	r3, r0
 8007936:	3301      	adds	r3, #1
 8007938:	60bb      	str	r3, [r7, #8]
 800793a:	e002      	b.n	8007942 <ADC_Enable+0x7a>
 800793c:	68bb      	ldr	r3, [r7, #8]
 800793e:	3b01      	subs	r3, #1
 8007940:	60bb      	str	r3, [r7, #8]
 8007942:	68bb      	ldr	r3, [r7, #8]
 8007944:	2b00      	cmp	r3, #0
 8007946:	d1f9      	bne.n	800793c <ADC_Enable+0x74>
 8007948:	687b      	ldr	r3, [r7, #4]
 800794a:	7e5b      	ldrb	r3, [r3, #25]
 800794c:	2b01      	cmp	r3, #1
 800794e:	d033      	beq.n	80079b8 <ADC_Enable+0xf0>
 8007950:	f7ff fa66 	bl	8006e20 <HAL_GetTick>
 8007954:	0003      	movs	r3, r0
 8007956:	60fb      	str	r3, [r7, #12]
 8007958:	e027      	b.n	80079aa <ADC_Enable+0xe2>
 800795a:	687b      	ldr	r3, [r7, #4]
 800795c:	681b      	ldr	r3, [r3, #0]
 800795e:	0018      	movs	r0, r3
 8007960:	f7ff fbae 	bl	80070c0 <LL_ADC_IsEnabled>
 8007964:	1e03      	subs	r3, r0, #0
 8007966:	d104      	bne.n	8007972 <ADC_Enable+0xaa>
 8007968:	687b      	ldr	r3, [r7, #4]
 800796a:	681b      	ldr	r3, [r3, #0]
 800796c:	0018      	movs	r0, r3
 800796e:	f7ff fb95 	bl	800709c <LL_ADC_Enable>
 8007972:	f7ff fa55 	bl	8006e20 <HAL_GetTick>
 8007976:	0002      	movs	r2, r0
 8007978:	68fb      	ldr	r3, [r7, #12]
 800797a:	1ad3      	subs	r3, r2, r3
 800797c:	2b02      	cmp	r3, #2
 800797e:	d914      	bls.n	80079aa <ADC_Enable+0xe2>
 8007980:	687b      	ldr	r3, [r7, #4]
 8007982:	681b      	ldr	r3, [r3, #0]
 8007984:	681b      	ldr	r3, [r3, #0]
 8007986:	2201      	movs	r2, #1
 8007988:	4013      	ands	r3, r2
 800798a:	2b01      	cmp	r3, #1
 800798c:	d00d      	beq.n	80079aa <ADC_Enable+0xe2>
 800798e:	687b      	ldr	r3, [r7, #4]
 8007990:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8007992:	2210      	movs	r2, #16
 8007994:	431a      	orrs	r2, r3
 8007996:	687b      	ldr	r3, [r7, #4]
 8007998:	659a      	str	r2, [r3, #88]	@ 0x58
 800799a:	687b      	ldr	r3, [r7, #4]
 800799c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800799e:	2201      	movs	r2, #1
 80079a0:	431a      	orrs	r2, r3
 80079a2:	687b      	ldr	r3, [r7, #4]
 80079a4:	65da      	str	r2, [r3, #92]	@ 0x5c
 80079a6:	2301      	movs	r3, #1
 80079a8:	e007      	b.n	80079ba <ADC_Enable+0xf2>
 80079aa:	687b      	ldr	r3, [r7, #4]
 80079ac:	681b      	ldr	r3, [r3, #0]
 80079ae:	681b      	ldr	r3, [r3, #0]
 80079b0:	2201      	movs	r2, #1
 80079b2:	4013      	ands	r3, r2
 80079b4:	2b01      	cmp	r3, #1
 80079b6:	d1d0      	bne.n	800795a <ADC_Enable+0x92>
 80079b8:	2300      	movs	r3, #0
 80079ba:	0018      	movs	r0, r3
 80079bc:	46bd      	mov	sp, r7
 80079be:	b004      	add	sp, #16
 80079c0:	bd80      	pop	{r7, pc}
 80079c2:	46c0      	nop			@ (mov r8, r8)
 80079c4:	80000017 	.word	0x80000017
 80079c8:	40012708 	.word	0x40012708
 80079cc:	2000009c 	.word	0x2000009c
 80079d0:	00030d40 	.word	0x00030d40

080079d4 <__NVIC_EnableIRQ>:
 80079d4:	b580      	push	{r7, lr}
 80079d6:	b082      	sub	sp, #8
 80079d8:	af00      	add	r7, sp, #0
 80079da:	0002      	movs	r2, r0
 80079dc:	1dfb      	adds	r3, r7, #7
 80079de:	701a      	strb	r2, [r3, #0]
 80079e0:	1dfb      	adds	r3, r7, #7
 80079e2:	781b      	ldrb	r3, [r3, #0]
 80079e4:	2b7f      	cmp	r3, #127	@ 0x7f
 80079e6:	d809      	bhi.n	80079fc <__NVIC_EnableIRQ+0x28>
 80079e8:	1dfb      	adds	r3, r7, #7
 80079ea:	781b      	ldrb	r3, [r3, #0]
 80079ec:	001a      	movs	r2, r3
 80079ee:	231f      	movs	r3, #31
 80079f0:	401a      	ands	r2, r3
 80079f2:	4b04      	ldr	r3, [pc, #16]	@ (8007a04 <__NVIC_EnableIRQ+0x30>)
 80079f4:	2101      	movs	r1, #1
 80079f6:	4091      	lsls	r1, r2
 80079f8:	000a      	movs	r2, r1
 80079fa:	601a      	str	r2, [r3, #0]
 80079fc:	46c0      	nop			@ (mov r8, r8)
 80079fe:	46bd      	mov	sp, r7
 8007a00:	b002      	add	sp, #8
 8007a02:	bd80      	pop	{r7, pc}
 8007a04:	e000e100 	.word	0xe000e100

08007a08 <__NVIC_SetPriority>:
 8007a08:	b590      	push	{r4, r7, lr}
 8007a0a:	b083      	sub	sp, #12
 8007a0c:	af00      	add	r7, sp, #0
 8007a0e:	0002      	movs	r2, r0
 8007a10:	6039      	str	r1, [r7, #0]
 8007a12:	1dfb      	adds	r3, r7, #7
 8007a14:	701a      	strb	r2, [r3, #0]
 8007a16:	1dfb      	adds	r3, r7, #7
 8007a18:	781b      	ldrb	r3, [r3, #0]
 8007a1a:	2b7f      	cmp	r3, #127	@ 0x7f
 8007a1c:	d828      	bhi.n	8007a70 <__NVIC_SetPriority+0x68>
 8007a1e:	4a2f      	ldr	r2, [pc, #188]	@ (8007adc <__NVIC_SetPriority+0xd4>)
 8007a20:	1dfb      	adds	r3, r7, #7
 8007a22:	781b      	ldrb	r3, [r3, #0]
 8007a24:	b25b      	sxtb	r3, r3
 8007a26:	089b      	lsrs	r3, r3, #2
 8007a28:	33c0      	adds	r3, #192	@ 0xc0
 8007a2a:	009b      	lsls	r3, r3, #2
 8007a2c:	589b      	ldr	r3, [r3, r2]
 8007a2e:	1dfa      	adds	r2, r7, #7
 8007a30:	7812      	ldrb	r2, [r2, #0]
 8007a32:	0011      	movs	r1, r2
 8007a34:	2203      	movs	r2, #3
 8007a36:	400a      	ands	r2, r1
 8007a38:	00d2      	lsls	r2, r2, #3
 8007a3a:	21ff      	movs	r1, #255	@ 0xff
 8007a3c:	4091      	lsls	r1, r2
 8007a3e:	000a      	movs	r2, r1
 8007a40:	43d2      	mvns	r2, r2
 8007a42:	401a      	ands	r2, r3
 8007a44:	0011      	movs	r1, r2
 8007a46:	683b      	ldr	r3, [r7, #0]
 8007a48:	019b      	lsls	r3, r3, #6
 8007a4a:	22ff      	movs	r2, #255	@ 0xff
 8007a4c:	401a      	ands	r2, r3
 8007a4e:	1dfb      	adds	r3, r7, #7
 8007a50:	781b      	ldrb	r3, [r3, #0]
 8007a52:	0018      	movs	r0, r3
 8007a54:	2303      	movs	r3, #3
 8007a56:	4003      	ands	r3, r0
 8007a58:	00db      	lsls	r3, r3, #3
 8007a5a:	409a      	lsls	r2, r3
 8007a5c:	481f      	ldr	r0, [pc, #124]	@ (8007adc <__NVIC_SetPriority+0xd4>)
 8007a5e:	1dfb      	adds	r3, r7, #7
 8007a60:	781b      	ldrb	r3, [r3, #0]
 8007a62:	b25b      	sxtb	r3, r3
 8007a64:	089b      	lsrs	r3, r3, #2
 8007a66:	430a      	orrs	r2, r1
 8007a68:	33c0      	adds	r3, #192	@ 0xc0
 8007a6a:	009b      	lsls	r3, r3, #2
 8007a6c:	501a      	str	r2, [r3, r0]
 8007a6e:	e031      	b.n	8007ad4 <__NVIC_SetPriority+0xcc>
 8007a70:	4a1b      	ldr	r2, [pc, #108]	@ (8007ae0 <__NVIC_SetPriority+0xd8>)
 8007a72:	1dfb      	adds	r3, r7, #7
 8007a74:	781b      	ldrb	r3, [r3, #0]
 8007a76:	0019      	movs	r1, r3
 8007a78:	230f      	movs	r3, #15
 8007a7a:	400b      	ands	r3, r1
 8007a7c:	3b08      	subs	r3, #8
 8007a7e:	089b      	lsrs	r3, r3, #2
 8007a80:	3306      	adds	r3, #6
 8007a82:	009b      	lsls	r3, r3, #2
 8007a84:	18d3      	adds	r3, r2, r3
 8007a86:	3304      	adds	r3, #4
 8007a88:	681b      	ldr	r3, [r3, #0]
 8007a8a:	1dfa      	adds	r2, r7, #7
 8007a8c:	7812      	ldrb	r2, [r2, #0]
 8007a8e:	0011      	movs	r1, r2
 8007a90:	2203      	movs	r2, #3
 8007a92:	400a      	ands	r2, r1
 8007a94:	00d2      	lsls	r2, r2, #3
 8007a96:	21ff      	movs	r1, #255	@ 0xff
 8007a98:	4091      	lsls	r1, r2
 8007a9a:	000a      	movs	r2, r1
 8007a9c:	43d2      	mvns	r2, r2
 8007a9e:	401a      	ands	r2, r3
 8007aa0:	0011      	movs	r1, r2
 8007aa2:	683b      	ldr	r3, [r7, #0]
 8007aa4:	019b      	lsls	r3, r3, #6
 8007aa6:	22ff      	movs	r2, #255	@ 0xff
 8007aa8:	401a      	ands	r2, r3
 8007aaa:	1dfb      	adds	r3, r7, #7
 8007aac:	781b      	ldrb	r3, [r3, #0]
 8007aae:	0018      	movs	r0, r3
 8007ab0:	2303      	movs	r3, #3
 8007ab2:	4003      	ands	r3, r0
 8007ab4:	00db      	lsls	r3, r3, #3
 8007ab6:	409a      	lsls	r2, r3
 8007ab8:	4809      	ldr	r0, [pc, #36]	@ (8007ae0 <__NVIC_SetPriority+0xd8>)
 8007aba:	1dfb      	adds	r3, r7, #7
 8007abc:	781b      	ldrb	r3, [r3, #0]
 8007abe:	001c      	movs	r4, r3
 8007ac0:	230f      	movs	r3, #15
 8007ac2:	4023      	ands	r3, r4
 8007ac4:	3b08      	subs	r3, #8
 8007ac6:	089b      	lsrs	r3, r3, #2
 8007ac8:	430a      	orrs	r2, r1
 8007aca:	3306      	adds	r3, #6
 8007acc:	009b      	lsls	r3, r3, #2
 8007ace:	18c3      	adds	r3, r0, r3
 8007ad0:	3304      	adds	r3, #4
 8007ad2:	601a      	str	r2, [r3, #0]
 8007ad4:	46c0      	nop			@ (mov r8, r8)
 8007ad6:	46bd      	mov	sp, r7
 8007ad8:	b003      	add	sp, #12
 8007ada:	bd90      	pop	{r4, r7, pc}
 8007adc:	e000e100 	.word	0xe000e100
 8007ae0:	e000ed00 	.word	0xe000ed00

08007ae4 <SysTick_Config>:
 8007ae4:	b580      	push	{r7, lr}
 8007ae6:	b082      	sub	sp, #8
 8007ae8:	af00      	add	r7, sp, #0
 8007aea:	6078      	str	r0, [r7, #4]
 8007aec:	687b      	ldr	r3, [r7, #4]
 8007aee:	1e5a      	subs	r2, r3, #1
 8007af0:	2380      	movs	r3, #128	@ 0x80
 8007af2:	045b      	lsls	r3, r3, #17
 8007af4:	429a      	cmp	r2, r3
 8007af6:	d301      	bcc.n	8007afc <SysTick_Config+0x18>
 8007af8:	2301      	movs	r3, #1
 8007afa:	e010      	b.n	8007b1e <SysTick_Config+0x3a>
 8007afc:	4b0a      	ldr	r3, [pc, #40]	@ (8007b28 <SysTick_Config+0x44>)
 8007afe:	687a      	ldr	r2, [r7, #4]
 8007b00:	3a01      	subs	r2, #1
 8007b02:	605a      	str	r2, [r3, #4]
 8007b04:	2301      	movs	r3, #1
 8007b06:	425b      	negs	r3, r3
 8007b08:	2103      	movs	r1, #3
 8007b0a:	0018      	movs	r0, r3
 8007b0c:	f7ff ff7c 	bl	8007a08 <__NVIC_SetPriority>
 8007b10:	4b05      	ldr	r3, [pc, #20]	@ (8007b28 <SysTick_Config+0x44>)
 8007b12:	2200      	movs	r2, #0
 8007b14:	609a      	str	r2, [r3, #8]
 8007b16:	4b04      	ldr	r3, [pc, #16]	@ (8007b28 <SysTick_Config+0x44>)
 8007b18:	2207      	movs	r2, #7
 8007b1a:	601a      	str	r2, [r3, #0]
 8007b1c:	2300      	movs	r3, #0
 8007b1e:	0018      	movs	r0, r3
 8007b20:	46bd      	mov	sp, r7
 8007b22:	b002      	add	sp, #8
 8007b24:	bd80      	pop	{r7, pc}
 8007b26:	46c0      	nop			@ (mov r8, r8)
 8007b28:	e000e010 	.word	0xe000e010

08007b2c <HAL_NVIC_SetPriority>:
 8007b2c:	b580      	push	{r7, lr}
 8007b2e:	b084      	sub	sp, #16
 8007b30:	af00      	add	r7, sp, #0
 8007b32:	60b9      	str	r1, [r7, #8]
 8007b34:	607a      	str	r2, [r7, #4]
 8007b36:	210f      	movs	r1, #15
 8007b38:	187b      	adds	r3, r7, r1
 8007b3a:	1c02      	adds	r2, r0, #0
 8007b3c:	701a      	strb	r2, [r3, #0]
 8007b3e:	68ba      	ldr	r2, [r7, #8]
 8007b40:	187b      	adds	r3, r7, r1
 8007b42:	781b      	ldrb	r3, [r3, #0]
 8007b44:	b25b      	sxtb	r3, r3
 8007b46:	0011      	movs	r1, r2
 8007b48:	0018      	movs	r0, r3
 8007b4a:	f7ff ff5d 	bl	8007a08 <__NVIC_SetPriority>
 8007b4e:	46c0      	nop			@ (mov r8, r8)
 8007b50:	46bd      	mov	sp, r7
 8007b52:	b004      	add	sp, #16
 8007b54:	bd80      	pop	{r7, pc}

08007b56 <HAL_NVIC_EnableIRQ>:
 8007b56:	b580      	push	{r7, lr}
 8007b58:	b082      	sub	sp, #8
 8007b5a:	af00      	add	r7, sp, #0
 8007b5c:	0002      	movs	r2, r0
 8007b5e:	1dfb      	adds	r3, r7, #7
 8007b60:	701a      	strb	r2, [r3, #0]
 8007b62:	1dfb      	adds	r3, r7, #7
 8007b64:	781b      	ldrb	r3, [r3, #0]
 8007b66:	b25b      	sxtb	r3, r3
 8007b68:	0018      	movs	r0, r3
 8007b6a:	f7ff ff33 	bl	80079d4 <__NVIC_EnableIRQ>
 8007b6e:	46c0      	nop			@ (mov r8, r8)
 8007b70:	46bd      	mov	sp, r7
 8007b72:	b002      	add	sp, #8
 8007b74:	bd80      	pop	{r7, pc}

08007b76 <HAL_SYSTICK_Config>:
 8007b76:	b580      	push	{r7, lr}
 8007b78:	b082      	sub	sp, #8
 8007b7a:	af00      	add	r7, sp, #0
 8007b7c:	6078      	str	r0, [r7, #4]
 8007b7e:	687b      	ldr	r3, [r7, #4]
 8007b80:	0018      	movs	r0, r3
 8007b82:	f7ff ffaf 	bl	8007ae4 <SysTick_Config>
 8007b86:	0003      	movs	r3, r0
 8007b88:	0018      	movs	r0, r3
 8007b8a:	46bd      	mov	sp, r7
 8007b8c:	b002      	add	sp, #8
 8007b8e:	bd80      	pop	{r7, pc}

08007b90 <HAL_FDCAN_Init>:
 8007b90:	b580      	push	{r7, lr}
 8007b92:	b084      	sub	sp, #16
 8007b94:	af00      	add	r7, sp, #0
 8007b96:	6078      	str	r0, [r7, #4]
 8007b98:	687b      	ldr	r3, [r7, #4]
 8007b9a:	2b00      	cmp	r3, #0
 8007b9c:	d101      	bne.n	8007ba2 <HAL_FDCAN_Init+0x12>
 8007b9e:	2301      	movs	r3, #1
 8007ba0:	e14e      	b.n	8007e40 <HAL_FDCAN_Init+0x2b0>
 8007ba2:	687b      	ldr	r3, [r7, #4]
 8007ba4:	225c      	movs	r2, #92	@ 0x5c
 8007ba6:	5c9b      	ldrb	r3, [r3, r2]
 8007ba8:	b2db      	uxtb	r3, r3
 8007baa:	2b00      	cmp	r3, #0
 8007bac:	d107      	bne.n	8007bbe <HAL_FDCAN_Init+0x2e>
 8007bae:	687b      	ldr	r3, [r7, #4]
 8007bb0:	225d      	movs	r2, #93	@ 0x5d
 8007bb2:	2100      	movs	r1, #0
 8007bb4:	5499      	strb	r1, [r3, r2]
 8007bb6:	687b      	ldr	r3, [r7, #4]
 8007bb8:	0018      	movs	r0, r3
 8007bba:	f7fe fcb9 	bl	8006530 <HAL_FDCAN_MspInit>
 8007bbe:	687b      	ldr	r3, [r7, #4]
 8007bc0:	681b      	ldr	r3, [r3, #0]
 8007bc2:	699a      	ldr	r2, [r3, #24]
 8007bc4:	687b      	ldr	r3, [r7, #4]
 8007bc6:	681b      	ldr	r3, [r3, #0]
 8007bc8:	2110      	movs	r1, #16
 8007bca:	438a      	bics	r2, r1
 8007bcc:	619a      	str	r2, [r3, #24]
 8007bce:	f7ff f927 	bl	8006e20 <HAL_GetTick>
 8007bd2:	0003      	movs	r3, r0
 8007bd4:	60fb      	str	r3, [r7, #12]
 8007bd6:	e012      	b.n	8007bfe <HAL_FDCAN_Init+0x6e>
 8007bd8:	f7ff f922 	bl	8006e20 <HAL_GetTick>
 8007bdc:	0002      	movs	r2, r0
 8007bde:	68fb      	ldr	r3, [r7, #12]
 8007be0:	1ad3      	subs	r3, r2, r3
 8007be2:	2b0a      	cmp	r3, #10
 8007be4:	d90b      	bls.n	8007bfe <HAL_FDCAN_Init+0x6e>
 8007be6:	687b      	ldr	r3, [r7, #4]
 8007be8:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8007bea:	2201      	movs	r2, #1
 8007bec:	431a      	orrs	r2, r3
 8007bee:	687b      	ldr	r3, [r7, #4]
 8007bf0:	661a      	str	r2, [r3, #96]	@ 0x60
 8007bf2:	687b      	ldr	r3, [r7, #4]
 8007bf4:	225c      	movs	r2, #92	@ 0x5c
 8007bf6:	2103      	movs	r1, #3
 8007bf8:	5499      	strb	r1, [r3, r2]
 8007bfa:	2301      	movs	r3, #1
 8007bfc:	e120      	b.n	8007e40 <HAL_FDCAN_Init+0x2b0>
 8007bfe:	687b      	ldr	r3, [r7, #4]
 8007c00:	681b      	ldr	r3, [r3, #0]
 8007c02:	699b      	ldr	r3, [r3, #24]
 8007c04:	2208      	movs	r2, #8
 8007c06:	4013      	ands	r3, r2
 8007c08:	2b08      	cmp	r3, #8
 8007c0a:	d0e5      	beq.n	8007bd8 <HAL_FDCAN_Init+0x48>
 8007c0c:	687b      	ldr	r3, [r7, #4]
 8007c0e:	681b      	ldr	r3, [r3, #0]
 8007c10:	699a      	ldr	r2, [r3, #24]
 8007c12:	687b      	ldr	r3, [r7, #4]
 8007c14:	681b      	ldr	r3, [r3, #0]
 8007c16:	2101      	movs	r1, #1
 8007c18:	430a      	orrs	r2, r1
 8007c1a:	619a      	str	r2, [r3, #24]
 8007c1c:	f7ff f900 	bl	8006e20 <HAL_GetTick>
 8007c20:	0003      	movs	r3, r0
 8007c22:	60fb      	str	r3, [r7, #12]
 8007c24:	e012      	b.n	8007c4c <HAL_FDCAN_Init+0xbc>
 8007c26:	f7ff f8fb 	bl	8006e20 <HAL_GetTick>
 8007c2a:	0002      	movs	r2, r0
 8007c2c:	68fb      	ldr	r3, [r7, #12]
 8007c2e:	1ad3      	subs	r3, r2, r3
 8007c30:	2b0a      	cmp	r3, #10
 8007c32:	d90b      	bls.n	8007c4c <HAL_FDCAN_Init+0xbc>
 8007c34:	687b      	ldr	r3, [r7, #4]
 8007c36:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8007c38:	2201      	movs	r2, #1
 8007c3a:	431a      	orrs	r2, r3
 8007c3c:	687b      	ldr	r3, [r7, #4]
 8007c3e:	661a      	str	r2, [r3, #96]	@ 0x60
 8007c40:	687b      	ldr	r3, [r7, #4]
 8007c42:	225c      	movs	r2, #92	@ 0x5c
 8007c44:	2103      	movs	r1, #3
 8007c46:	5499      	strb	r1, [r3, r2]
 8007c48:	2301      	movs	r3, #1
 8007c4a:	e0f9      	b.n	8007e40 <HAL_FDCAN_Init+0x2b0>
 8007c4c:	687b      	ldr	r3, [r7, #4]
 8007c4e:	681b      	ldr	r3, [r3, #0]
 8007c50:	699b      	ldr	r3, [r3, #24]
 8007c52:	2201      	movs	r2, #1
 8007c54:	4013      	ands	r3, r2
 8007c56:	d0e6      	beq.n	8007c26 <HAL_FDCAN_Init+0x96>
 8007c58:	687b      	ldr	r3, [r7, #4]
 8007c5a:	681b      	ldr	r3, [r3, #0]
 8007c5c:	699a      	ldr	r2, [r3, #24]
 8007c5e:	687b      	ldr	r3, [r7, #4]
 8007c60:	681b      	ldr	r3, [r3, #0]
 8007c62:	2102      	movs	r1, #2
 8007c64:	430a      	orrs	r2, r1
 8007c66:	619a      	str	r2, [r3, #24]
 8007c68:	687b      	ldr	r3, [r7, #4]
 8007c6a:	681b      	ldr	r3, [r3, #0]
 8007c6c:	4a76      	ldr	r2, [pc, #472]	@ (8007e48 <HAL_FDCAN_Init+0x2b8>)
 8007c6e:	4293      	cmp	r3, r2
 8007c70:	d103      	bne.n	8007c7a <HAL_FDCAN_Init+0xea>
 8007c72:	4a76      	ldr	r2, [pc, #472]	@ (8007e4c <HAL_FDCAN_Init+0x2bc>)
 8007c74:	687b      	ldr	r3, [r7, #4]
 8007c76:	685b      	ldr	r3, [r3, #4]
 8007c78:	6013      	str	r3, [r2, #0]
 8007c7a:	687b      	ldr	r3, [r7, #4]
 8007c7c:	7c1b      	ldrb	r3, [r3, #16]
 8007c7e:	2b01      	cmp	r3, #1
 8007c80:	d108      	bne.n	8007c94 <HAL_FDCAN_Init+0x104>
 8007c82:	687b      	ldr	r3, [r7, #4]
 8007c84:	681b      	ldr	r3, [r3, #0]
 8007c86:	699a      	ldr	r2, [r3, #24]
 8007c88:	687b      	ldr	r3, [r7, #4]
 8007c8a:	681b      	ldr	r3, [r3, #0]
 8007c8c:	2140      	movs	r1, #64	@ 0x40
 8007c8e:	438a      	bics	r2, r1
 8007c90:	619a      	str	r2, [r3, #24]
 8007c92:	e007      	b.n	8007ca4 <HAL_FDCAN_Init+0x114>
 8007c94:	687b      	ldr	r3, [r7, #4]
 8007c96:	681b      	ldr	r3, [r3, #0]
 8007c98:	699a      	ldr	r2, [r3, #24]
 8007c9a:	687b      	ldr	r3, [r7, #4]
 8007c9c:	681b      	ldr	r3, [r3, #0]
 8007c9e:	2140      	movs	r1, #64	@ 0x40
 8007ca0:	430a      	orrs	r2, r1
 8007ca2:	619a      	str	r2, [r3, #24]
 8007ca4:	687b      	ldr	r3, [r7, #4]
 8007ca6:	7c5b      	ldrb	r3, [r3, #17]
 8007ca8:	2b01      	cmp	r3, #1
 8007caa:	d109      	bne.n	8007cc0 <HAL_FDCAN_Init+0x130>
 8007cac:	687b      	ldr	r3, [r7, #4]
 8007cae:	681b      	ldr	r3, [r3, #0]
 8007cb0:	699a      	ldr	r2, [r3, #24]
 8007cb2:	687b      	ldr	r3, [r7, #4]
 8007cb4:	681b      	ldr	r3, [r3, #0]
 8007cb6:	2180      	movs	r1, #128	@ 0x80
 8007cb8:	01c9      	lsls	r1, r1, #7
 8007cba:	430a      	orrs	r2, r1
 8007cbc:	619a      	str	r2, [r3, #24]
 8007cbe:	e007      	b.n	8007cd0 <HAL_FDCAN_Init+0x140>
 8007cc0:	687b      	ldr	r3, [r7, #4]
 8007cc2:	681b      	ldr	r3, [r3, #0]
 8007cc4:	699a      	ldr	r2, [r3, #24]
 8007cc6:	687b      	ldr	r3, [r7, #4]
 8007cc8:	681b      	ldr	r3, [r3, #0]
 8007cca:	4961      	ldr	r1, [pc, #388]	@ (8007e50 <HAL_FDCAN_Init+0x2c0>)
 8007ccc:	400a      	ands	r2, r1
 8007cce:	619a      	str	r2, [r3, #24]
 8007cd0:	687b      	ldr	r3, [r7, #4]
 8007cd2:	7c9b      	ldrb	r3, [r3, #18]
 8007cd4:	2b01      	cmp	r3, #1
 8007cd6:	d108      	bne.n	8007cea <HAL_FDCAN_Init+0x15a>
 8007cd8:	687b      	ldr	r3, [r7, #4]
 8007cda:	681b      	ldr	r3, [r3, #0]
 8007cdc:	699a      	ldr	r2, [r3, #24]
 8007cde:	687b      	ldr	r3, [r7, #4]
 8007ce0:	681b      	ldr	r3, [r3, #0]
 8007ce2:	495c      	ldr	r1, [pc, #368]	@ (8007e54 <HAL_FDCAN_Init+0x2c4>)
 8007ce4:	400a      	ands	r2, r1
 8007ce6:	619a      	str	r2, [r3, #24]
 8007ce8:	e008      	b.n	8007cfc <HAL_FDCAN_Init+0x16c>
 8007cea:	687b      	ldr	r3, [r7, #4]
 8007cec:	681b      	ldr	r3, [r3, #0]
 8007cee:	699a      	ldr	r2, [r3, #24]
 8007cf0:	687b      	ldr	r3, [r7, #4]
 8007cf2:	681b      	ldr	r3, [r3, #0]
 8007cf4:	2180      	movs	r1, #128	@ 0x80
 8007cf6:	0149      	lsls	r1, r1, #5
 8007cf8:	430a      	orrs	r2, r1
 8007cfa:	619a      	str	r2, [r3, #24]
 8007cfc:	687b      	ldr	r3, [r7, #4]
 8007cfe:	681b      	ldr	r3, [r3, #0]
 8007d00:	699b      	ldr	r3, [r3, #24]
 8007d02:	4a55      	ldr	r2, [pc, #340]	@ (8007e58 <HAL_FDCAN_Init+0x2c8>)
 8007d04:	4013      	ands	r3, r2
 8007d06:	0019      	movs	r1, r3
 8007d08:	687b      	ldr	r3, [r7, #4]
 8007d0a:	689a      	ldr	r2, [r3, #8]
 8007d0c:	687b      	ldr	r3, [r7, #4]
 8007d0e:	681b      	ldr	r3, [r3, #0]
 8007d10:	430a      	orrs	r2, r1
 8007d12:	619a      	str	r2, [r3, #24]
 8007d14:	687b      	ldr	r3, [r7, #4]
 8007d16:	681b      	ldr	r3, [r3, #0]
 8007d18:	699a      	ldr	r2, [r3, #24]
 8007d1a:	687b      	ldr	r3, [r7, #4]
 8007d1c:	681b      	ldr	r3, [r3, #0]
 8007d1e:	21a4      	movs	r1, #164	@ 0xa4
 8007d20:	438a      	bics	r2, r1
 8007d22:	619a      	str	r2, [r3, #24]
 8007d24:	687b      	ldr	r3, [r7, #4]
 8007d26:	681b      	ldr	r3, [r3, #0]
 8007d28:	691a      	ldr	r2, [r3, #16]
 8007d2a:	687b      	ldr	r3, [r7, #4]
 8007d2c:	681b      	ldr	r3, [r3, #0]
 8007d2e:	2110      	movs	r1, #16
 8007d30:	438a      	bics	r2, r1
 8007d32:	611a      	str	r2, [r3, #16]
 8007d34:	687b      	ldr	r3, [r7, #4]
 8007d36:	68db      	ldr	r3, [r3, #12]
 8007d38:	2b01      	cmp	r3, #1
 8007d3a:	d108      	bne.n	8007d4e <HAL_FDCAN_Init+0x1be>
 8007d3c:	687b      	ldr	r3, [r7, #4]
 8007d3e:	681b      	ldr	r3, [r3, #0]
 8007d40:	699a      	ldr	r2, [r3, #24]
 8007d42:	687b      	ldr	r3, [r7, #4]
 8007d44:	681b      	ldr	r3, [r3, #0]
 8007d46:	2104      	movs	r1, #4
 8007d48:	430a      	orrs	r2, r1
 8007d4a:	619a      	str	r2, [r3, #24]
 8007d4c:	e02c      	b.n	8007da8 <HAL_FDCAN_Init+0x218>
 8007d4e:	687b      	ldr	r3, [r7, #4]
 8007d50:	68db      	ldr	r3, [r3, #12]
 8007d52:	2b00      	cmp	r3, #0
 8007d54:	d028      	beq.n	8007da8 <HAL_FDCAN_Init+0x218>
 8007d56:	687b      	ldr	r3, [r7, #4]
 8007d58:	68db      	ldr	r3, [r3, #12]
 8007d5a:	2b02      	cmp	r3, #2
 8007d5c:	d01c      	beq.n	8007d98 <HAL_FDCAN_Init+0x208>
 8007d5e:	687b      	ldr	r3, [r7, #4]
 8007d60:	681b      	ldr	r3, [r3, #0]
 8007d62:	699a      	ldr	r2, [r3, #24]
 8007d64:	687b      	ldr	r3, [r7, #4]
 8007d66:	681b      	ldr	r3, [r3, #0]
 8007d68:	2180      	movs	r1, #128	@ 0x80
 8007d6a:	430a      	orrs	r2, r1
 8007d6c:	619a      	str	r2, [r3, #24]
 8007d6e:	687b      	ldr	r3, [r7, #4]
 8007d70:	681b      	ldr	r3, [r3, #0]
 8007d72:	691a      	ldr	r2, [r3, #16]
 8007d74:	687b      	ldr	r3, [r7, #4]
 8007d76:	681b      	ldr	r3, [r3, #0]
 8007d78:	2110      	movs	r1, #16
 8007d7a:	430a      	orrs	r2, r1
 8007d7c:	611a      	str	r2, [r3, #16]
 8007d7e:	687b      	ldr	r3, [r7, #4]
 8007d80:	68db      	ldr	r3, [r3, #12]
 8007d82:	2b03      	cmp	r3, #3
 8007d84:	d110      	bne.n	8007da8 <HAL_FDCAN_Init+0x218>
 8007d86:	687b      	ldr	r3, [r7, #4]
 8007d88:	681b      	ldr	r3, [r3, #0]
 8007d8a:	699a      	ldr	r2, [r3, #24]
 8007d8c:	687b      	ldr	r3, [r7, #4]
 8007d8e:	681b      	ldr	r3, [r3, #0]
 8007d90:	2120      	movs	r1, #32
 8007d92:	430a      	orrs	r2, r1
 8007d94:	619a      	str	r2, [r3, #24]
 8007d96:	e007      	b.n	8007da8 <HAL_FDCAN_Init+0x218>
 8007d98:	687b      	ldr	r3, [r7, #4]
 8007d9a:	681b      	ldr	r3, [r3, #0]
 8007d9c:	699a      	ldr	r2, [r3, #24]
 8007d9e:	687b      	ldr	r3, [r7, #4]
 8007da0:	681b      	ldr	r3, [r3, #0]
 8007da2:	2120      	movs	r1, #32
 8007da4:	430a      	orrs	r2, r1
 8007da6:	619a      	str	r2, [r3, #24]
 8007da8:	687b      	ldr	r3, [r7, #4]
 8007daa:	699b      	ldr	r3, [r3, #24]
 8007dac:	3b01      	subs	r3, #1
 8007dae:	065a      	lsls	r2, r3, #25
 8007db0:	687b      	ldr	r3, [r7, #4]
 8007db2:	69db      	ldr	r3, [r3, #28]
 8007db4:	3b01      	subs	r3, #1
 8007db6:	021b      	lsls	r3, r3, #8
 8007db8:	431a      	orrs	r2, r3
 8007dba:	687b      	ldr	r3, [r7, #4]
 8007dbc:	6a1b      	ldr	r3, [r3, #32]
 8007dbe:	3b01      	subs	r3, #1
 8007dc0:	431a      	orrs	r2, r3
 8007dc2:	0011      	movs	r1, r2
 8007dc4:	687b      	ldr	r3, [r7, #4]
 8007dc6:	695b      	ldr	r3, [r3, #20]
 8007dc8:	3b01      	subs	r3, #1
 8007dca:	041a      	lsls	r2, r3, #16
 8007dcc:	687b      	ldr	r3, [r7, #4]
 8007dce:	681b      	ldr	r3, [r3, #0]
 8007dd0:	430a      	orrs	r2, r1
 8007dd2:	61da      	str	r2, [r3, #28]
 8007dd4:	687b      	ldr	r3, [r7, #4]
 8007dd6:	689a      	ldr	r2, [r3, #8]
 8007dd8:	23c0      	movs	r3, #192	@ 0xc0
 8007dda:	009b      	lsls	r3, r3, #2
 8007ddc:	429a      	cmp	r2, r3
 8007dde:	d115      	bne.n	8007e0c <HAL_FDCAN_Init+0x27c>
 8007de0:	687b      	ldr	r3, [r7, #4]
 8007de2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007de4:	1e5a      	subs	r2, r3, #1
 8007de6:	687b      	ldr	r3, [r7, #4]
 8007de8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007dea:	3b01      	subs	r3, #1
 8007dec:	021b      	lsls	r3, r3, #8
 8007dee:	431a      	orrs	r2, r3
 8007df0:	687b      	ldr	r3, [r7, #4]
 8007df2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007df4:	3b01      	subs	r3, #1
 8007df6:	011b      	lsls	r3, r3, #4
 8007df8:	431a      	orrs	r2, r3
 8007dfa:	0011      	movs	r1, r2
 8007dfc:	687b      	ldr	r3, [r7, #4]
 8007dfe:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007e00:	3b01      	subs	r3, #1
 8007e02:	041a      	lsls	r2, r3, #16
 8007e04:	687b      	ldr	r3, [r7, #4]
 8007e06:	681b      	ldr	r3, [r3, #0]
 8007e08:	430a      	orrs	r2, r1
 8007e0a:	60da      	str	r2, [r3, #12]
 8007e0c:	687b      	ldr	r3, [r7, #4]
 8007e0e:	681b      	ldr	r3, [r3, #0]
 8007e10:	22c0      	movs	r2, #192	@ 0xc0
 8007e12:	5899      	ldr	r1, [r3, r2]
 8007e14:	687b      	ldr	r3, [r7, #4]
 8007e16:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8007e18:	687b      	ldr	r3, [r7, #4]
 8007e1a:	681b      	ldr	r3, [r3, #0]
 8007e1c:	430a      	orrs	r2, r1
 8007e1e:	21c0      	movs	r1, #192	@ 0xc0
 8007e20:	505a      	str	r2, [r3, r1]
 8007e22:	687b      	ldr	r3, [r7, #4]
 8007e24:	0018      	movs	r0, r3
 8007e26:	f000 fc99 	bl	800875c <FDCAN_CalcultateRamBlockAddresses>
 8007e2a:	687b      	ldr	r3, [r7, #4]
 8007e2c:	2200      	movs	r2, #0
 8007e2e:	659a      	str	r2, [r3, #88]	@ 0x58
 8007e30:	687b      	ldr	r3, [r7, #4]
 8007e32:	2200      	movs	r2, #0
 8007e34:	661a      	str	r2, [r3, #96]	@ 0x60
 8007e36:	687b      	ldr	r3, [r7, #4]
 8007e38:	225c      	movs	r2, #92	@ 0x5c
 8007e3a:	2101      	movs	r1, #1
 8007e3c:	5499      	strb	r1, [r3, r2]
 8007e3e:	2300      	movs	r3, #0
 8007e40:	0018      	movs	r0, r3
 8007e42:	46bd      	mov	sp, r7
 8007e44:	b004      	add	sp, #16
 8007e46:	bd80      	pop	{r7, pc}
 8007e48:	40006400 	.word	0x40006400
 8007e4c:	40006500 	.word	0x40006500
 8007e50:	ffffbfff 	.word	0xffffbfff
 8007e54:	ffffefff 	.word	0xffffefff
 8007e58:	fffffcff 	.word	0xfffffcff

08007e5c <HAL_FDCAN_ConfigFilter>:
 8007e5c:	b580      	push	{r7, lr}
 8007e5e:	b086      	sub	sp, #24
 8007e60:	af00      	add	r7, sp, #0
 8007e62:	6078      	str	r0, [r7, #4]
 8007e64:	6039      	str	r1, [r7, #0]
 8007e66:	2017      	movs	r0, #23
 8007e68:	183b      	adds	r3, r7, r0
 8007e6a:	687a      	ldr	r2, [r7, #4]
 8007e6c:	215c      	movs	r1, #92	@ 0x5c
 8007e6e:	5c52      	ldrb	r2, [r2, r1]
 8007e70:	701a      	strb	r2, [r3, #0]
 8007e72:	0002      	movs	r2, r0
 8007e74:	18bb      	adds	r3, r7, r2
 8007e76:	781b      	ldrb	r3, [r3, #0]
 8007e78:	2b01      	cmp	r3, #1
 8007e7a:	d003      	beq.n	8007e84 <HAL_FDCAN_ConfigFilter+0x28>
 8007e7c:	18bb      	adds	r3, r7, r2
 8007e7e:	781b      	ldrb	r3, [r3, #0]
 8007e80:	2b02      	cmp	r3, #2
 8007e82:	d13d      	bne.n	8007f00 <HAL_FDCAN_ConfigFilter+0xa4>
 8007e84:	683b      	ldr	r3, [r7, #0]
 8007e86:	681b      	ldr	r3, [r3, #0]
 8007e88:	2b00      	cmp	r3, #0
 8007e8a:	d119      	bne.n	8007ec0 <HAL_FDCAN_ConfigFilter+0x64>
 8007e8c:	683b      	ldr	r3, [r7, #0]
 8007e8e:	689b      	ldr	r3, [r3, #8]
 8007e90:	079a      	lsls	r2, r3, #30
 8007e92:	683b      	ldr	r3, [r7, #0]
 8007e94:	68db      	ldr	r3, [r3, #12]
 8007e96:	06db      	lsls	r3, r3, #27
 8007e98:	431a      	orrs	r2, r3
 8007e9a:	683b      	ldr	r3, [r7, #0]
 8007e9c:	691b      	ldr	r3, [r3, #16]
 8007e9e:	041b      	lsls	r3, r3, #16
 8007ea0:	431a      	orrs	r2, r3
 8007ea2:	683b      	ldr	r3, [r7, #0]
 8007ea4:	695b      	ldr	r3, [r3, #20]
 8007ea6:	4313      	orrs	r3, r2
 8007ea8:	613b      	str	r3, [r7, #16]
 8007eaa:	687b      	ldr	r3, [r7, #4]
 8007eac:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8007eae:	683b      	ldr	r3, [r7, #0]
 8007eb0:	685b      	ldr	r3, [r3, #4]
 8007eb2:	009b      	lsls	r3, r3, #2
 8007eb4:	18d3      	adds	r3, r2, r3
 8007eb6:	60bb      	str	r3, [r7, #8]
 8007eb8:	68bb      	ldr	r3, [r7, #8]
 8007eba:	693a      	ldr	r2, [r7, #16]
 8007ebc:	601a      	str	r2, [r3, #0]
 8007ebe:	e01d      	b.n	8007efc <HAL_FDCAN_ConfigFilter+0xa0>
 8007ec0:	683b      	ldr	r3, [r7, #0]
 8007ec2:	68db      	ldr	r3, [r3, #12]
 8007ec4:	075a      	lsls	r2, r3, #29
 8007ec6:	683b      	ldr	r3, [r7, #0]
 8007ec8:	691b      	ldr	r3, [r3, #16]
 8007eca:	4313      	orrs	r3, r2
 8007ecc:	613b      	str	r3, [r7, #16]
 8007ece:	683b      	ldr	r3, [r7, #0]
 8007ed0:	689b      	ldr	r3, [r3, #8]
 8007ed2:	079a      	lsls	r2, r3, #30
 8007ed4:	683b      	ldr	r3, [r7, #0]
 8007ed6:	695b      	ldr	r3, [r3, #20]
 8007ed8:	4313      	orrs	r3, r2
 8007eda:	60fb      	str	r3, [r7, #12]
 8007edc:	687b      	ldr	r3, [r7, #4]
 8007ede:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8007ee0:	683b      	ldr	r3, [r7, #0]
 8007ee2:	685b      	ldr	r3, [r3, #4]
 8007ee4:	00db      	lsls	r3, r3, #3
 8007ee6:	18d3      	adds	r3, r2, r3
 8007ee8:	60bb      	str	r3, [r7, #8]
 8007eea:	68bb      	ldr	r3, [r7, #8]
 8007eec:	693a      	ldr	r2, [r7, #16]
 8007eee:	601a      	str	r2, [r3, #0]
 8007ef0:	68bb      	ldr	r3, [r7, #8]
 8007ef2:	3304      	adds	r3, #4
 8007ef4:	60bb      	str	r3, [r7, #8]
 8007ef6:	68bb      	ldr	r3, [r7, #8]
 8007ef8:	68fa      	ldr	r2, [r7, #12]
 8007efa:	601a      	str	r2, [r3, #0]
 8007efc:	2300      	movs	r3, #0
 8007efe:	e006      	b.n	8007f0e <HAL_FDCAN_ConfigFilter+0xb2>
 8007f00:	687b      	ldr	r3, [r7, #4]
 8007f02:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8007f04:	2202      	movs	r2, #2
 8007f06:	431a      	orrs	r2, r3
 8007f08:	687b      	ldr	r3, [r7, #4]
 8007f0a:	661a      	str	r2, [r3, #96]	@ 0x60
 8007f0c:	2301      	movs	r3, #1
 8007f0e:	0018      	movs	r0, r3
 8007f10:	46bd      	mov	sp, r7
 8007f12:	b006      	add	sp, #24
 8007f14:	bd80      	pop	{r7, pc}

08007f16 <HAL_FDCAN_ConfigGlobalFilter>:
 8007f16:	b580      	push	{r7, lr}
 8007f18:	b084      	sub	sp, #16
 8007f1a:	af00      	add	r7, sp, #0
 8007f1c:	60f8      	str	r0, [r7, #12]
 8007f1e:	60b9      	str	r1, [r7, #8]
 8007f20:	607a      	str	r2, [r7, #4]
 8007f22:	603b      	str	r3, [r7, #0]
 8007f24:	68fb      	ldr	r3, [r7, #12]
 8007f26:	225c      	movs	r2, #92	@ 0x5c
 8007f28:	5c9b      	ldrb	r3, [r3, r2]
 8007f2a:	b2db      	uxtb	r3, r3
 8007f2c:	2b01      	cmp	r3, #1
 8007f2e:	d117      	bne.n	8007f60 <HAL_FDCAN_ConfigGlobalFilter+0x4a>
 8007f30:	68fb      	ldr	r3, [r7, #12]
 8007f32:	681b      	ldr	r3, [r3, #0]
 8007f34:	2280      	movs	r2, #128	@ 0x80
 8007f36:	589b      	ldr	r3, [r3, r2]
 8007f38:	223f      	movs	r2, #63	@ 0x3f
 8007f3a:	4393      	bics	r3, r2
 8007f3c:	0019      	movs	r1, r3
 8007f3e:	68bb      	ldr	r3, [r7, #8]
 8007f40:	011a      	lsls	r2, r3, #4
 8007f42:	687b      	ldr	r3, [r7, #4]
 8007f44:	009b      	lsls	r3, r3, #2
 8007f46:	431a      	orrs	r2, r3
 8007f48:	683b      	ldr	r3, [r7, #0]
 8007f4a:	005b      	lsls	r3, r3, #1
 8007f4c:	431a      	orrs	r2, r3
 8007f4e:	69bb      	ldr	r3, [r7, #24]
 8007f50:	431a      	orrs	r2, r3
 8007f52:	68fb      	ldr	r3, [r7, #12]
 8007f54:	681b      	ldr	r3, [r3, #0]
 8007f56:	430a      	orrs	r2, r1
 8007f58:	2180      	movs	r1, #128	@ 0x80
 8007f5a:	505a      	str	r2, [r3, r1]
 8007f5c:	2300      	movs	r3, #0
 8007f5e:	e006      	b.n	8007f6e <HAL_FDCAN_ConfigGlobalFilter+0x58>
 8007f60:	68fb      	ldr	r3, [r7, #12]
 8007f62:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8007f64:	2204      	movs	r2, #4
 8007f66:	431a      	orrs	r2, r3
 8007f68:	68fb      	ldr	r3, [r7, #12]
 8007f6a:	661a      	str	r2, [r3, #96]	@ 0x60
 8007f6c:	2301      	movs	r3, #1
 8007f6e:	0018      	movs	r0, r3
 8007f70:	46bd      	mov	sp, r7
 8007f72:	b004      	add	sp, #16
 8007f74:	bd80      	pop	{r7, pc}

08007f76 <HAL_FDCAN_Start>:
 8007f76:	b580      	push	{r7, lr}
 8007f78:	b082      	sub	sp, #8
 8007f7a:	af00      	add	r7, sp, #0
 8007f7c:	6078      	str	r0, [r7, #4]
 8007f7e:	687b      	ldr	r3, [r7, #4]
 8007f80:	225c      	movs	r2, #92	@ 0x5c
 8007f82:	5c9b      	ldrb	r3, [r3, r2]
 8007f84:	b2db      	uxtb	r3, r3
 8007f86:	2b01      	cmp	r3, #1
 8007f88:	d110      	bne.n	8007fac <HAL_FDCAN_Start+0x36>
 8007f8a:	687b      	ldr	r3, [r7, #4]
 8007f8c:	225c      	movs	r2, #92	@ 0x5c
 8007f8e:	2102      	movs	r1, #2
 8007f90:	5499      	strb	r1, [r3, r2]
 8007f92:	687b      	ldr	r3, [r7, #4]
 8007f94:	681b      	ldr	r3, [r3, #0]
 8007f96:	699a      	ldr	r2, [r3, #24]
 8007f98:	687b      	ldr	r3, [r7, #4]
 8007f9a:	681b      	ldr	r3, [r3, #0]
 8007f9c:	2101      	movs	r1, #1
 8007f9e:	438a      	bics	r2, r1
 8007fa0:	619a      	str	r2, [r3, #24]
 8007fa2:	687b      	ldr	r3, [r7, #4]
 8007fa4:	2200      	movs	r2, #0
 8007fa6:	661a      	str	r2, [r3, #96]	@ 0x60
 8007fa8:	2300      	movs	r3, #0
 8007faa:	e006      	b.n	8007fba <HAL_FDCAN_Start+0x44>
 8007fac:	687b      	ldr	r3, [r7, #4]
 8007fae:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8007fb0:	2204      	movs	r2, #4
 8007fb2:	431a      	orrs	r2, r3
 8007fb4:	687b      	ldr	r3, [r7, #4]
 8007fb6:	661a      	str	r2, [r3, #96]	@ 0x60
 8007fb8:	2301      	movs	r3, #1
 8007fba:	0018      	movs	r0, r3
 8007fbc:	46bd      	mov	sp, r7
 8007fbe:	b002      	add	sp, #8
 8007fc0:	bd80      	pop	{r7, pc}

08007fc2 <HAL_FDCAN_AddMessageToTxFifoQ>:
 8007fc2:	b580      	push	{r7, lr}
 8007fc4:	b086      	sub	sp, #24
 8007fc6:	af00      	add	r7, sp, #0
 8007fc8:	60f8      	str	r0, [r7, #12]
 8007fca:	60b9      	str	r1, [r7, #8]
 8007fcc:	607a      	str	r2, [r7, #4]
 8007fce:	68fb      	ldr	r3, [r7, #12]
 8007fd0:	225c      	movs	r2, #92	@ 0x5c
 8007fd2:	5c9b      	ldrb	r3, [r3, r2]
 8007fd4:	b2db      	uxtb	r3, r3
 8007fd6:	2b02      	cmp	r3, #2
 8007fd8:	d12d      	bne.n	8008036 <HAL_FDCAN_AddMessageToTxFifoQ+0x74>
 8007fda:	68fb      	ldr	r3, [r7, #12]
 8007fdc:	681b      	ldr	r3, [r3, #0]
 8007fde:	22c4      	movs	r2, #196	@ 0xc4
 8007fe0:	589a      	ldr	r2, [r3, r2]
 8007fe2:	2380      	movs	r3, #128	@ 0x80
 8007fe4:	039b      	lsls	r3, r3, #14
 8007fe6:	4013      	ands	r3, r2
 8007fe8:	d008      	beq.n	8007ffc <HAL_FDCAN_AddMessageToTxFifoQ+0x3a>
 8007fea:	68fb      	ldr	r3, [r7, #12]
 8007fec:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8007fee:	2280      	movs	r2, #128	@ 0x80
 8007ff0:	0092      	lsls	r2, r2, #2
 8007ff2:	431a      	orrs	r2, r3
 8007ff4:	68fb      	ldr	r3, [r7, #12]
 8007ff6:	661a      	str	r2, [r3, #96]	@ 0x60
 8007ff8:	2301      	movs	r3, #1
 8007ffa:	e023      	b.n	8008044 <HAL_FDCAN_AddMessageToTxFifoQ+0x82>
 8007ffc:	68fb      	ldr	r3, [r7, #12]
 8007ffe:	681b      	ldr	r3, [r3, #0]
 8008000:	22c4      	movs	r2, #196	@ 0xc4
 8008002:	589b      	ldr	r3, [r3, r2]
 8008004:	0c1b      	lsrs	r3, r3, #16
 8008006:	2203      	movs	r2, #3
 8008008:	4013      	ands	r3, r2
 800800a:	617b      	str	r3, [r7, #20]
 800800c:	697b      	ldr	r3, [r7, #20]
 800800e:	687a      	ldr	r2, [r7, #4]
 8008010:	68b9      	ldr	r1, [r7, #8]
 8008012:	68f8      	ldr	r0, [r7, #12]
 8008014:	f000 fc0e 	bl	8008834 <FDCAN_CopyMessageToRAM>
 8008018:	68fb      	ldr	r3, [r7, #12]
 800801a:	681b      	ldr	r3, [r3, #0]
 800801c:	2101      	movs	r1, #1
 800801e:	697a      	ldr	r2, [r7, #20]
 8008020:	4091      	lsls	r1, r2
 8008022:	000a      	movs	r2, r1
 8008024:	21cc      	movs	r1, #204	@ 0xcc
 8008026:	505a      	str	r2, [r3, r1]
 8008028:	2201      	movs	r2, #1
 800802a:	697b      	ldr	r3, [r7, #20]
 800802c:	409a      	lsls	r2, r3
 800802e:	68fb      	ldr	r3, [r7, #12]
 8008030:	659a      	str	r2, [r3, #88]	@ 0x58
 8008032:	2300      	movs	r3, #0
 8008034:	e006      	b.n	8008044 <HAL_FDCAN_AddMessageToTxFifoQ+0x82>
 8008036:	68fb      	ldr	r3, [r7, #12]
 8008038:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800803a:	2208      	movs	r2, #8
 800803c:	431a      	orrs	r2, r3
 800803e:	68fb      	ldr	r3, [r7, #12]
 8008040:	661a      	str	r2, [r3, #96]	@ 0x60
 8008042:	2301      	movs	r3, #1
 8008044:	0018      	movs	r0, r3
 8008046:	46bd      	mov	sp, r7
 8008048:	b006      	add	sp, #24
 800804a:	bd80      	pop	{r7, pc}

0800804c <HAL_FDCAN_GetRxMessage>:
 800804c:	b580      	push	{r7, lr}
 800804e:	b08a      	sub	sp, #40	@ 0x28
 8008050:	af00      	add	r7, sp, #0
 8008052:	60f8      	str	r0, [r7, #12]
 8008054:	60b9      	str	r1, [r7, #8]
 8008056:	607a      	str	r2, [r7, #4]
 8008058:	603b      	str	r3, [r7, #0]
 800805a:	2300      	movs	r3, #0
 800805c:	61fb      	str	r3, [r7, #28]
 800805e:	201b      	movs	r0, #27
 8008060:	183b      	adds	r3, r7, r0
 8008062:	68fa      	ldr	r2, [r7, #12]
 8008064:	215c      	movs	r1, #92	@ 0x5c
 8008066:	5c52      	ldrb	r2, [r2, r1]
 8008068:	701a      	strb	r2, [r3, #0]
 800806a:	183b      	adds	r3, r7, r0
 800806c:	781b      	ldrb	r3, [r3, #0]
 800806e:	2b02      	cmp	r3, #2
 8008070:	d000      	beq.n	8008074 <HAL_FDCAN_GetRxMessage+0x28>
 8008072:	e0f4      	b.n	800825e <HAL_FDCAN_GetRxMessage+0x212>
 8008074:	68bb      	ldr	r3, [r7, #8]
 8008076:	2b40      	cmp	r3, #64	@ 0x40
 8008078:	d13b      	bne.n	80080f2 <HAL_FDCAN_GetRxMessage+0xa6>
 800807a:	68fb      	ldr	r3, [r7, #12]
 800807c:	681b      	ldr	r3, [r3, #0]
 800807e:	2290      	movs	r2, #144	@ 0x90
 8008080:	589b      	ldr	r3, [r3, r2]
 8008082:	220f      	movs	r2, #15
 8008084:	4013      	ands	r3, r2
 8008086:	d108      	bne.n	800809a <HAL_FDCAN_GetRxMessage+0x4e>
 8008088:	68fb      	ldr	r3, [r7, #12]
 800808a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800808c:	2280      	movs	r2, #128	@ 0x80
 800808e:	0052      	lsls	r2, r2, #1
 8008090:	431a      	orrs	r2, r3
 8008092:	68fb      	ldr	r3, [r7, #12]
 8008094:	661a      	str	r2, [r3, #96]	@ 0x60
 8008096:	2301      	movs	r3, #1
 8008098:	e0e8      	b.n	800826c <HAL_FDCAN_GetRxMessage+0x220>
 800809a:	68fb      	ldr	r3, [r7, #12]
 800809c:	681b      	ldr	r3, [r3, #0]
 800809e:	2290      	movs	r2, #144	@ 0x90
 80080a0:	589a      	ldr	r2, [r3, r2]
 80080a2:	2380      	movs	r3, #128	@ 0x80
 80080a4:	045b      	lsls	r3, r3, #17
 80080a6:	401a      	ands	r2, r3
 80080a8:	2380      	movs	r3, #128	@ 0x80
 80080aa:	045b      	lsls	r3, r3, #17
 80080ac:	429a      	cmp	r2, r3
 80080ae:	d10c      	bne.n	80080ca <HAL_FDCAN_GetRxMessage+0x7e>
 80080b0:	68fb      	ldr	r3, [r7, #12]
 80080b2:	681b      	ldr	r3, [r3, #0]
 80080b4:	2280      	movs	r2, #128	@ 0x80
 80080b6:	589a      	ldr	r2, [r3, r2]
 80080b8:	2380      	movs	r3, #128	@ 0x80
 80080ba:	009b      	lsls	r3, r3, #2
 80080bc:	401a      	ands	r2, r3
 80080be:	2380      	movs	r3, #128	@ 0x80
 80080c0:	009b      	lsls	r3, r3, #2
 80080c2:	429a      	cmp	r2, r3
 80080c4:	d101      	bne.n	80080ca <HAL_FDCAN_GetRxMessage+0x7e>
 80080c6:	2301      	movs	r3, #1
 80080c8:	61fb      	str	r3, [r7, #28]
 80080ca:	68fb      	ldr	r3, [r7, #12]
 80080cc:	681b      	ldr	r3, [r3, #0]
 80080ce:	2290      	movs	r2, #144	@ 0x90
 80080d0:	589b      	ldr	r3, [r3, r2]
 80080d2:	0a1b      	lsrs	r3, r3, #8
 80080d4:	2203      	movs	r2, #3
 80080d6:	4013      	ands	r3, r2
 80080d8:	69fa      	ldr	r2, [r7, #28]
 80080da:	18d3      	adds	r3, r2, r3
 80080dc:	61fb      	str	r3, [r7, #28]
 80080de:	68fb      	ldr	r3, [r7, #12]
 80080e0:	6c99      	ldr	r1, [r3, #72]	@ 0x48
 80080e2:	69fa      	ldr	r2, [r7, #28]
 80080e4:	0013      	movs	r3, r2
 80080e6:	00db      	lsls	r3, r3, #3
 80080e8:	189b      	adds	r3, r3, r2
 80080ea:	00db      	lsls	r3, r3, #3
 80080ec:	18cb      	adds	r3, r1, r3
 80080ee:	627b      	str	r3, [r7, #36]	@ 0x24
 80080f0:	e03a      	b.n	8008168 <HAL_FDCAN_GetRxMessage+0x11c>
 80080f2:	68fb      	ldr	r3, [r7, #12]
 80080f4:	681b      	ldr	r3, [r3, #0]
 80080f6:	2298      	movs	r2, #152	@ 0x98
 80080f8:	589b      	ldr	r3, [r3, r2]
 80080fa:	220f      	movs	r2, #15
 80080fc:	4013      	ands	r3, r2
 80080fe:	d108      	bne.n	8008112 <HAL_FDCAN_GetRxMessage+0xc6>
 8008100:	68fb      	ldr	r3, [r7, #12]
 8008102:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8008104:	2280      	movs	r2, #128	@ 0x80
 8008106:	0052      	lsls	r2, r2, #1
 8008108:	431a      	orrs	r2, r3
 800810a:	68fb      	ldr	r3, [r7, #12]
 800810c:	661a      	str	r2, [r3, #96]	@ 0x60
 800810e:	2301      	movs	r3, #1
 8008110:	e0ac      	b.n	800826c <HAL_FDCAN_GetRxMessage+0x220>
 8008112:	68fb      	ldr	r3, [r7, #12]
 8008114:	681b      	ldr	r3, [r3, #0]
 8008116:	2298      	movs	r2, #152	@ 0x98
 8008118:	589a      	ldr	r2, [r3, r2]
 800811a:	2380      	movs	r3, #128	@ 0x80
 800811c:	045b      	lsls	r3, r3, #17
 800811e:	401a      	ands	r2, r3
 8008120:	2380      	movs	r3, #128	@ 0x80
 8008122:	045b      	lsls	r3, r3, #17
 8008124:	429a      	cmp	r2, r3
 8008126:	d10c      	bne.n	8008142 <HAL_FDCAN_GetRxMessage+0xf6>
 8008128:	68fb      	ldr	r3, [r7, #12]
 800812a:	681b      	ldr	r3, [r3, #0]
 800812c:	2280      	movs	r2, #128	@ 0x80
 800812e:	589a      	ldr	r2, [r3, r2]
 8008130:	2380      	movs	r3, #128	@ 0x80
 8008132:	005b      	lsls	r3, r3, #1
 8008134:	401a      	ands	r2, r3
 8008136:	2380      	movs	r3, #128	@ 0x80
 8008138:	005b      	lsls	r3, r3, #1
 800813a:	429a      	cmp	r2, r3
 800813c:	d101      	bne.n	8008142 <HAL_FDCAN_GetRxMessage+0xf6>
 800813e:	2301      	movs	r3, #1
 8008140:	61fb      	str	r3, [r7, #28]
 8008142:	68fb      	ldr	r3, [r7, #12]
 8008144:	681b      	ldr	r3, [r3, #0]
 8008146:	2298      	movs	r2, #152	@ 0x98
 8008148:	589b      	ldr	r3, [r3, r2]
 800814a:	0a1b      	lsrs	r3, r3, #8
 800814c:	2203      	movs	r2, #3
 800814e:	4013      	ands	r3, r2
 8008150:	69fa      	ldr	r2, [r7, #28]
 8008152:	18d3      	adds	r3, r2, r3
 8008154:	61fb      	str	r3, [r7, #28]
 8008156:	68fb      	ldr	r3, [r7, #12]
 8008158:	6cd9      	ldr	r1, [r3, #76]	@ 0x4c
 800815a:	69fa      	ldr	r2, [r7, #28]
 800815c:	0013      	movs	r3, r2
 800815e:	00db      	lsls	r3, r3, #3
 8008160:	189b      	adds	r3, r3, r2
 8008162:	00db      	lsls	r3, r3, #3
 8008164:	18cb      	adds	r3, r1, r3
 8008166:	627b      	str	r3, [r7, #36]	@ 0x24
 8008168:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800816a:	681a      	ldr	r2, [r3, #0]
 800816c:	2380      	movs	r3, #128	@ 0x80
 800816e:	05db      	lsls	r3, r3, #23
 8008170:	401a      	ands	r2, r3
 8008172:	687b      	ldr	r3, [r7, #4]
 8008174:	605a      	str	r2, [r3, #4]
 8008176:	687b      	ldr	r3, [r7, #4]
 8008178:	685b      	ldr	r3, [r3, #4]
 800817a:	2b00      	cmp	r3, #0
 800817c:	d107      	bne.n	800818e <HAL_FDCAN_GetRxMessage+0x142>
 800817e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008180:	681b      	ldr	r3, [r3, #0]
 8008182:	0c9b      	lsrs	r3, r3, #18
 8008184:	055b      	lsls	r3, r3, #21
 8008186:	0d5a      	lsrs	r2, r3, #21
 8008188:	687b      	ldr	r3, [r7, #4]
 800818a:	601a      	str	r2, [r3, #0]
 800818c:	e005      	b.n	800819a <HAL_FDCAN_GetRxMessage+0x14e>
 800818e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008190:	681b      	ldr	r3, [r3, #0]
 8008192:	00db      	lsls	r3, r3, #3
 8008194:	08da      	lsrs	r2, r3, #3
 8008196:	687b      	ldr	r3, [r7, #4]
 8008198:	601a      	str	r2, [r3, #0]
 800819a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800819c:	681a      	ldr	r2, [r3, #0]
 800819e:	2380      	movs	r3, #128	@ 0x80
 80081a0:	059b      	lsls	r3, r3, #22
 80081a2:	401a      	ands	r2, r3
 80081a4:	687b      	ldr	r3, [r7, #4]
 80081a6:	609a      	str	r2, [r3, #8]
 80081a8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80081aa:	681b      	ldr	r3, [r3, #0]
 80081ac:	0fdb      	lsrs	r3, r3, #31
 80081ae:	07da      	lsls	r2, r3, #31
 80081b0:	687b      	ldr	r3, [r7, #4]
 80081b2:	611a      	str	r2, [r3, #16]
 80081b4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80081b6:	3304      	adds	r3, #4
 80081b8:	627b      	str	r3, [r7, #36]	@ 0x24
 80081ba:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80081bc:	681b      	ldr	r3, [r3, #0]
 80081be:	041b      	lsls	r3, r3, #16
 80081c0:	0c1a      	lsrs	r2, r3, #16
 80081c2:	687b      	ldr	r3, [r7, #4]
 80081c4:	61da      	str	r2, [r3, #28]
 80081c6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80081c8:	681b      	ldr	r3, [r3, #0]
 80081ca:	0c1b      	lsrs	r3, r3, #16
 80081cc:	220f      	movs	r2, #15
 80081ce:	401a      	ands	r2, r3
 80081d0:	687b      	ldr	r3, [r7, #4]
 80081d2:	60da      	str	r2, [r3, #12]
 80081d4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80081d6:	681a      	ldr	r2, [r3, #0]
 80081d8:	2380      	movs	r3, #128	@ 0x80
 80081da:	035b      	lsls	r3, r3, #13
 80081dc:	401a      	ands	r2, r3
 80081de:	687b      	ldr	r3, [r7, #4]
 80081e0:	615a      	str	r2, [r3, #20]
 80081e2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80081e4:	681a      	ldr	r2, [r3, #0]
 80081e6:	2380      	movs	r3, #128	@ 0x80
 80081e8:	039b      	lsls	r3, r3, #14
 80081ea:	401a      	ands	r2, r3
 80081ec:	687b      	ldr	r3, [r7, #4]
 80081ee:	619a      	str	r2, [r3, #24]
 80081f0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80081f2:	681b      	ldr	r3, [r3, #0]
 80081f4:	0e1b      	lsrs	r3, r3, #24
 80081f6:	227f      	movs	r2, #127	@ 0x7f
 80081f8:	401a      	ands	r2, r3
 80081fa:	687b      	ldr	r3, [r7, #4]
 80081fc:	621a      	str	r2, [r3, #32]
 80081fe:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008200:	681b      	ldr	r3, [r3, #0]
 8008202:	0fda      	lsrs	r2, r3, #31
 8008204:	687b      	ldr	r3, [r7, #4]
 8008206:	625a      	str	r2, [r3, #36]	@ 0x24
 8008208:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800820a:	3304      	adds	r3, #4
 800820c:	627b      	str	r3, [r7, #36]	@ 0x24
 800820e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008210:	617b      	str	r3, [r7, #20]
 8008212:	2300      	movs	r3, #0
 8008214:	623b      	str	r3, [r7, #32]
 8008216:	e00a      	b.n	800822e <HAL_FDCAN_GetRxMessage+0x1e2>
 8008218:	697a      	ldr	r2, [r7, #20]
 800821a:	6a3b      	ldr	r3, [r7, #32]
 800821c:	18d2      	adds	r2, r2, r3
 800821e:	6839      	ldr	r1, [r7, #0]
 8008220:	6a3b      	ldr	r3, [r7, #32]
 8008222:	18cb      	adds	r3, r1, r3
 8008224:	7812      	ldrb	r2, [r2, #0]
 8008226:	701a      	strb	r2, [r3, #0]
 8008228:	6a3b      	ldr	r3, [r7, #32]
 800822a:	3301      	adds	r3, #1
 800822c:	623b      	str	r3, [r7, #32]
 800822e:	687b      	ldr	r3, [r7, #4]
 8008230:	68db      	ldr	r3, [r3, #12]
 8008232:	4a10      	ldr	r2, [pc, #64]	@ (8008274 <HAL_FDCAN_GetRxMessage+0x228>)
 8008234:	5cd3      	ldrb	r3, [r2, r3]
 8008236:	001a      	movs	r2, r3
 8008238:	6a3b      	ldr	r3, [r7, #32]
 800823a:	4293      	cmp	r3, r2
 800823c:	d3ec      	bcc.n	8008218 <HAL_FDCAN_GetRxMessage+0x1cc>
 800823e:	68bb      	ldr	r3, [r7, #8]
 8008240:	2b40      	cmp	r3, #64	@ 0x40
 8008242:	d105      	bne.n	8008250 <HAL_FDCAN_GetRxMessage+0x204>
 8008244:	68fb      	ldr	r3, [r7, #12]
 8008246:	681b      	ldr	r3, [r3, #0]
 8008248:	2194      	movs	r1, #148	@ 0x94
 800824a:	69fa      	ldr	r2, [r7, #28]
 800824c:	505a      	str	r2, [r3, r1]
 800824e:	e004      	b.n	800825a <HAL_FDCAN_GetRxMessage+0x20e>
 8008250:	68fb      	ldr	r3, [r7, #12]
 8008252:	681b      	ldr	r3, [r3, #0]
 8008254:	219c      	movs	r1, #156	@ 0x9c
 8008256:	69fa      	ldr	r2, [r7, #28]
 8008258:	505a      	str	r2, [r3, r1]
 800825a:	2300      	movs	r3, #0
 800825c:	e006      	b.n	800826c <HAL_FDCAN_GetRxMessage+0x220>
 800825e:	68fb      	ldr	r3, [r7, #12]
 8008260:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8008262:	2208      	movs	r2, #8
 8008264:	431a      	orrs	r2, r3
 8008266:	68fb      	ldr	r3, [r7, #12]
 8008268:	661a      	str	r2, [r3, #96]	@ 0x60
 800826a:	2301      	movs	r3, #1
 800826c:	0018      	movs	r0, r3
 800826e:	46bd      	mov	sp, r7
 8008270:	b00a      	add	sp, #40	@ 0x28
 8008272:	bd80      	pop	{r7, pc}
 8008274:	0800c3e8 	.word	0x0800c3e8

08008278 <HAL_FDCAN_ActivateNotification>:
 8008278:	b580      	push	{r7, lr}
 800827a:	b086      	sub	sp, #24
 800827c:	af00      	add	r7, sp, #0
 800827e:	60f8      	str	r0, [r7, #12]
 8008280:	60b9      	str	r1, [r7, #8]
 8008282:	607a      	str	r2, [r7, #4]
 8008284:	2017      	movs	r0, #23
 8008286:	183b      	adds	r3, r7, r0
 8008288:	68fa      	ldr	r2, [r7, #12]
 800828a:	215c      	movs	r1, #92	@ 0x5c
 800828c:	5c52      	ldrb	r2, [r2, r1]
 800828e:	701a      	strb	r2, [r3, #0]
 8008290:	0002      	movs	r2, r0
 8008292:	18bb      	adds	r3, r7, r2
 8008294:	781b      	ldrb	r3, [r3, #0]
 8008296:	2b01      	cmp	r3, #1
 8008298:	d004      	beq.n	80082a4 <HAL_FDCAN_ActivateNotification+0x2c>
 800829a:	18bb      	adds	r3, r7, r2
 800829c:	781b      	ldrb	r3, [r3, #0]
 800829e:	2b02      	cmp	r3, #2
 80082a0:	d000      	beq.n	80082a4 <HAL_FDCAN_ActivateNotification+0x2c>
 80082a2:	e0b4      	b.n	800840e <HAL_FDCAN_ActivateNotification+0x196>
 80082a4:	68fb      	ldr	r3, [r7, #12]
 80082a6:	681b      	ldr	r3, [r3, #0]
 80082a8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80082aa:	613b      	str	r3, [r7, #16]
 80082ac:	68bb      	ldr	r3, [r7, #8]
 80082ae:	2207      	movs	r2, #7
 80082b0:	4013      	ands	r3, r2
 80082b2:	d003      	beq.n	80082bc <HAL_FDCAN_ActivateNotification+0x44>
 80082b4:	693b      	ldr	r3, [r7, #16]
 80082b6:	2201      	movs	r2, #1
 80082b8:	4013      	ands	r3, r2
 80082ba:	d034      	beq.n	8008326 <HAL_FDCAN_ActivateNotification+0xae>
 80082bc:	68bb      	ldr	r3, [r7, #8]
 80082be:	2238      	movs	r2, #56	@ 0x38
 80082c0:	4013      	ands	r3, r2
 80082c2:	d003      	beq.n	80082cc <HAL_FDCAN_ActivateNotification+0x54>
 80082c4:	693b      	ldr	r3, [r7, #16]
 80082c6:	2202      	movs	r2, #2
 80082c8:	4013      	ands	r3, r2
 80082ca:	d02c      	beq.n	8008326 <HAL_FDCAN_ActivateNotification+0xae>
 80082cc:	68ba      	ldr	r2, [r7, #8]
 80082ce:	23e0      	movs	r3, #224	@ 0xe0
 80082d0:	005b      	lsls	r3, r3, #1
 80082d2:	4013      	ands	r3, r2
 80082d4:	d003      	beq.n	80082de <HAL_FDCAN_ActivateNotification+0x66>
 80082d6:	693b      	ldr	r3, [r7, #16]
 80082d8:	2204      	movs	r2, #4
 80082da:	4013      	ands	r3, r2
 80082dc:	d023      	beq.n	8008326 <HAL_FDCAN_ActivateNotification+0xae>
 80082de:	68ba      	ldr	r2, [r7, #8]
 80082e0:	23f0      	movs	r3, #240	@ 0xf0
 80082e2:	015b      	lsls	r3, r3, #5
 80082e4:	4013      	ands	r3, r2
 80082e6:	d003      	beq.n	80082f0 <HAL_FDCAN_ActivateNotification+0x78>
 80082e8:	693b      	ldr	r3, [r7, #16]
 80082ea:	2208      	movs	r2, #8
 80082ec:	4013      	ands	r3, r2
 80082ee:	d01a      	beq.n	8008326 <HAL_FDCAN_ActivateNotification+0xae>
 80082f0:	68ba      	ldr	r2, [r7, #8]
 80082f2:	23e0      	movs	r3, #224	@ 0xe0
 80082f4:	021b      	lsls	r3, r3, #8
 80082f6:	4013      	ands	r3, r2
 80082f8:	d003      	beq.n	8008302 <HAL_FDCAN_ActivateNotification+0x8a>
 80082fa:	693b      	ldr	r3, [r7, #16]
 80082fc:	2210      	movs	r2, #16
 80082fe:	4013      	ands	r3, r2
 8008300:	d011      	beq.n	8008326 <HAL_FDCAN_ActivateNotification+0xae>
 8008302:	68ba      	ldr	r2, [r7, #8]
 8008304:	23c0      	movs	r3, #192	@ 0xc0
 8008306:	029b      	lsls	r3, r3, #10
 8008308:	4013      	ands	r3, r2
 800830a:	d003      	beq.n	8008314 <HAL_FDCAN_ActivateNotification+0x9c>
 800830c:	693b      	ldr	r3, [r7, #16]
 800830e:	2220      	movs	r2, #32
 8008310:	4013      	ands	r3, r2
 8008312:	d008      	beq.n	8008326 <HAL_FDCAN_ActivateNotification+0xae>
 8008314:	68ba      	ldr	r2, [r7, #8]
 8008316:	23fc      	movs	r3, #252	@ 0xfc
 8008318:	041b      	lsls	r3, r3, #16
 800831a:	4013      	ands	r3, r2
 800831c:	d00b      	beq.n	8008336 <HAL_FDCAN_ActivateNotification+0xbe>
 800831e:	693b      	ldr	r3, [r7, #16]
 8008320:	2240      	movs	r2, #64	@ 0x40
 8008322:	4013      	ands	r3, r2
 8008324:	d107      	bne.n	8008336 <HAL_FDCAN_ActivateNotification+0xbe>
 8008326:	68fb      	ldr	r3, [r7, #12]
 8008328:	681b      	ldr	r3, [r3, #0]
 800832a:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 800832c:	68fb      	ldr	r3, [r7, #12]
 800832e:	681b      	ldr	r3, [r3, #0]
 8008330:	2101      	movs	r1, #1
 8008332:	430a      	orrs	r2, r1
 8008334:	65da      	str	r2, [r3, #92]	@ 0x5c
 8008336:	68bb      	ldr	r3, [r7, #8]
 8008338:	2207      	movs	r2, #7
 800833a:	4013      	ands	r3, r2
 800833c:	d003      	beq.n	8008346 <HAL_FDCAN_ActivateNotification+0xce>
 800833e:	693b      	ldr	r3, [r7, #16]
 8008340:	2201      	movs	r2, #1
 8008342:	4013      	ands	r3, r2
 8008344:	d134      	bne.n	80083b0 <HAL_FDCAN_ActivateNotification+0x138>
 8008346:	68bb      	ldr	r3, [r7, #8]
 8008348:	2238      	movs	r2, #56	@ 0x38
 800834a:	4013      	ands	r3, r2
 800834c:	d003      	beq.n	8008356 <HAL_FDCAN_ActivateNotification+0xde>
 800834e:	693b      	ldr	r3, [r7, #16]
 8008350:	2202      	movs	r2, #2
 8008352:	4013      	ands	r3, r2
 8008354:	d12c      	bne.n	80083b0 <HAL_FDCAN_ActivateNotification+0x138>
 8008356:	68ba      	ldr	r2, [r7, #8]
 8008358:	23e0      	movs	r3, #224	@ 0xe0
 800835a:	005b      	lsls	r3, r3, #1
 800835c:	4013      	ands	r3, r2
 800835e:	d003      	beq.n	8008368 <HAL_FDCAN_ActivateNotification+0xf0>
 8008360:	693b      	ldr	r3, [r7, #16]
 8008362:	2204      	movs	r2, #4
 8008364:	4013      	ands	r3, r2
 8008366:	d123      	bne.n	80083b0 <HAL_FDCAN_ActivateNotification+0x138>
 8008368:	68ba      	ldr	r2, [r7, #8]
 800836a:	23f0      	movs	r3, #240	@ 0xf0
 800836c:	015b      	lsls	r3, r3, #5
 800836e:	4013      	ands	r3, r2
 8008370:	d003      	beq.n	800837a <HAL_FDCAN_ActivateNotification+0x102>
 8008372:	693b      	ldr	r3, [r7, #16]
 8008374:	2208      	movs	r2, #8
 8008376:	4013      	ands	r3, r2
 8008378:	d11a      	bne.n	80083b0 <HAL_FDCAN_ActivateNotification+0x138>
 800837a:	68ba      	ldr	r2, [r7, #8]
 800837c:	23e0      	movs	r3, #224	@ 0xe0
 800837e:	021b      	lsls	r3, r3, #8
 8008380:	4013      	ands	r3, r2
 8008382:	d003      	beq.n	800838c <HAL_FDCAN_ActivateNotification+0x114>
 8008384:	693b      	ldr	r3, [r7, #16]
 8008386:	2210      	movs	r2, #16
 8008388:	4013      	ands	r3, r2
 800838a:	d111      	bne.n	80083b0 <HAL_FDCAN_ActivateNotification+0x138>
 800838c:	68ba      	ldr	r2, [r7, #8]
 800838e:	23c0      	movs	r3, #192	@ 0xc0
 8008390:	029b      	lsls	r3, r3, #10
 8008392:	4013      	ands	r3, r2
 8008394:	d003      	beq.n	800839e <HAL_FDCAN_ActivateNotification+0x126>
 8008396:	693b      	ldr	r3, [r7, #16]
 8008398:	2220      	movs	r2, #32
 800839a:	4013      	ands	r3, r2
 800839c:	d108      	bne.n	80083b0 <HAL_FDCAN_ActivateNotification+0x138>
 800839e:	68ba      	ldr	r2, [r7, #8]
 80083a0:	23fc      	movs	r3, #252	@ 0xfc
 80083a2:	041b      	lsls	r3, r3, #16
 80083a4:	4013      	ands	r3, r2
 80083a6:	d00b      	beq.n	80083c0 <HAL_FDCAN_ActivateNotification+0x148>
 80083a8:	693b      	ldr	r3, [r7, #16]
 80083aa:	2240      	movs	r2, #64	@ 0x40
 80083ac:	4013      	ands	r3, r2
 80083ae:	d007      	beq.n	80083c0 <HAL_FDCAN_ActivateNotification+0x148>
 80083b0:	68fb      	ldr	r3, [r7, #12]
 80083b2:	681b      	ldr	r3, [r3, #0]
 80083b4:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 80083b6:	68fb      	ldr	r3, [r7, #12]
 80083b8:	681b      	ldr	r3, [r3, #0]
 80083ba:	2102      	movs	r1, #2
 80083bc:	430a      	orrs	r2, r1
 80083be:	65da      	str	r2, [r3, #92]	@ 0x5c
 80083c0:	68bb      	ldr	r3, [r7, #8]
 80083c2:	2280      	movs	r2, #128	@ 0x80
 80083c4:	4013      	ands	r3, r2
 80083c6:	d009      	beq.n	80083dc <HAL_FDCAN_ActivateNotification+0x164>
 80083c8:	68fb      	ldr	r3, [r7, #12]
 80083ca:	681b      	ldr	r3, [r3, #0]
 80083cc:	22dc      	movs	r2, #220	@ 0xdc
 80083ce:	5899      	ldr	r1, [r3, r2]
 80083d0:	68fb      	ldr	r3, [r7, #12]
 80083d2:	681b      	ldr	r3, [r3, #0]
 80083d4:	687a      	ldr	r2, [r7, #4]
 80083d6:	430a      	orrs	r2, r1
 80083d8:	21dc      	movs	r1, #220	@ 0xdc
 80083da:	505a      	str	r2, [r3, r1]
 80083dc:	68ba      	ldr	r2, [r7, #8]
 80083de:	2380      	movs	r3, #128	@ 0x80
 80083e0:	005b      	lsls	r3, r3, #1
 80083e2:	4013      	ands	r3, r2
 80083e4:	d009      	beq.n	80083fa <HAL_FDCAN_ActivateNotification+0x182>
 80083e6:	68fb      	ldr	r3, [r7, #12]
 80083e8:	681b      	ldr	r3, [r3, #0]
 80083ea:	22e0      	movs	r2, #224	@ 0xe0
 80083ec:	5899      	ldr	r1, [r3, r2]
 80083ee:	68fb      	ldr	r3, [r7, #12]
 80083f0:	681b      	ldr	r3, [r3, #0]
 80083f2:	687a      	ldr	r2, [r7, #4]
 80083f4:	430a      	orrs	r2, r1
 80083f6:	21e0      	movs	r1, #224	@ 0xe0
 80083f8:	505a      	str	r2, [r3, r1]
 80083fa:	68fb      	ldr	r3, [r7, #12]
 80083fc:	681b      	ldr	r3, [r3, #0]
 80083fe:	6d59      	ldr	r1, [r3, #84]	@ 0x54
 8008400:	68fb      	ldr	r3, [r7, #12]
 8008402:	681b      	ldr	r3, [r3, #0]
 8008404:	68ba      	ldr	r2, [r7, #8]
 8008406:	430a      	orrs	r2, r1
 8008408:	655a      	str	r2, [r3, #84]	@ 0x54
 800840a:	2300      	movs	r3, #0
 800840c:	e006      	b.n	800841c <HAL_FDCAN_ActivateNotification+0x1a4>
 800840e:	68fb      	ldr	r3, [r7, #12]
 8008410:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8008412:	2202      	movs	r2, #2
 8008414:	431a      	orrs	r2, r3
 8008416:	68fb      	ldr	r3, [r7, #12]
 8008418:	661a      	str	r2, [r3, #96]	@ 0x60
 800841a:	2301      	movs	r3, #1
 800841c:	0018      	movs	r0, r3
 800841e:	46bd      	mov	sp, r7
 8008420:	b006      	add	sp, #24
 8008422:	bd80      	pop	{r7, pc}

08008424 <HAL_FDCAN_IRQHandler>:
 8008424:	b580      	push	{r7, lr}
 8008426:	b08c      	sub	sp, #48	@ 0x30
 8008428:	af00      	add	r7, sp, #0
 800842a:	6078      	str	r0, [r7, #4]
 800842c:	687b      	ldr	r3, [r7, #4]
 800842e:	681b      	ldr	r3, [r3, #0]
 8008430:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 8008432:	23e0      	movs	r3, #224	@ 0xe0
 8008434:	015b      	lsls	r3, r3, #5
 8008436:	4013      	ands	r3, r2
 8008438:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800843a:	687b      	ldr	r3, [r7, #4]
 800843c:	681b      	ldr	r3, [r3, #0]
 800843e:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8008440:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008442:	4013      	ands	r3, r2
 8008444:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8008446:	687b      	ldr	r3, [r7, #4]
 8008448:	681b      	ldr	r3, [r3, #0]
 800844a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800844c:	2207      	movs	r2, #7
 800844e:	4013      	ands	r3, r2
 8008450:	62bb      	str	r3, [r7, #40]	@ 0x28
 8008452:	687b      	ldr	r3, [r7, #4]
 8008454:	681b      	ldr	r3, [r3, #0]
 8008456:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8008458:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800845a:	4013      	ands	r3, r2
 800845c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800845e:	687b      	ldr	r3, [r7, #4]
 8008460:	681b      	ldr	r3, [r3, #0]
 8008462:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8008464:	2238      	movs	r2, #56	@ 0x38
 8008466:	4013      	ands	r3, r2
 8008468:	627b      	str	r3, [r7, #36]	@ 0x24
 800846a:	687b      	ldr	r3, [r7, #4]
 800846c:	681b      	ldr	r3, [r3, #0]
 800846e:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8008470:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008472:	4013      	ands	r3, r2
 8008474:	627b      	str	r3, [r7, #36]	@ 0x24
 8008476:	687b      	ldr	r3, [r7, #4]
 8008478:	681b      	ldr	r3, [r3, #0]
 800847a:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 800847c:	23f1      	movs	r3, #241	@ 0xf1
 800847e:	041b      	lsls	r3, r3, #16
 8008480:	4013      	ands	r3, r2
 8008482:	623b      	str	r3, [r7, #32]
 8008484:	687b      	ldr	r3, [r7, #4]
 8008486:	681b      	ldr	r3, [r3, #0]
 8008488:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 800848a:	6a3b      	ldr	r3, [r7, #32]
 800848c:	4013      	ands	r3, r2
 800848e:	623b      	str	r3, [r7, #32]
 8008490:	687b      	ldr	r3, [r7, #4]
 8008492:	681b      	ldr	r3, [r3, #0]
 8008494:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 8008496:	23e0      	movs	r3, #224	@ 0xe0
 8008498:	031b      	lsls	r3, r3, #12
 800849a:	4013      	ands	r3, r2
 800849c:	61fb      	str	r3, [r7, #28]
 800849e:	687b      	ldr	r3, [r7, #4]
 80084a0:	681b      	ldr	r3, [r3, #0]
 80084a2:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 80084a4:	69fb      	ldr	r3, [r7, #28]
 80084a6:	4013      	ands	r3, r2
 80084a8:	61fb      	str	r3, [r7, #28]
 80084aa:	687b      	ldr	r3, [r7, #4]
 80084ac:	681b      	ldr	r3, [r3, #0]
 80084ae:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80084b0:	61bb      	str	r3, [r7, #24]
 80084b2:	687b      	ldr	r3, [r7, #4]
 80084b4:	681b      	ldr	r3, [r3, #0]
 80084b6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80084b8:	617b      	str	r3, [r7, #20]
 80084ba:	697b      	ldr	r3, [r7, #20]
 80084bc:	099b      	lsrs	r3, r3, #6
 80084be:	001a      	movs	r2, r3
 80084c0:	2301      	movs	r3, #1
 80084c2:	4013      	ands	r3, r2
 80084c4:	d00d      	beq.n	80084e2 <HAL_FDCAN_IRQHandler+0xbe>
 80084c6:	69bb      	ldr	r3, [r7, #24]
 80084c8:	099b      	lsrs	r3, r3, #6
 80084ca:	001a      	movs	r2, r3
 80084cc:	2301      	movs	r3, #1
 80084ce:	4013      	ands	r3, r2
 80084d0:	d007      	beq.n	80084e2 <HAL_FDCAN_IRQHandler+0xbe>
 80084d2:	687b      	ldr	r3, [r7, #4]
 80084d4:	681b      	ldr	r3, [r3, #0]
 80084d6:	2240      	movs	r2, #64	@ 0x40
 80084d8:	651a      	str	r2, [r3, #80]	@ 0x50
 80084da:	687b      	ldr	r3, [r7, #4]
 80084dc:	0018      	movs	r0, r3
 80084de:	f000 f924 	bl	800872a <HAL_FDCAN_HighPriorityMessageCallback>
 80084e2:	697b      	ldr	r3, [r7, #20]
 80084e4:	0a1b      	lsrs	r3, r3, #8
 80084e6:	001a      	movs	r2, r3
 80084e8:	2301      	movs	r3, #1
 80084ea:	4013      	ands	r3, r2
 80084ec:	d01c      	beq.n	8008528 <HAL_FDCAN_IRQHandler+0x104>
 80084ee:	69bb      	ldr	r3, [r7, #24]
 80084f0:	0a1b      	lsrs	r3, r3, #8
 80084f2:	001a      	movs	r2, r3
 80084f4:	2301      	movs	r3, #1
 80084f6:	4013      	ands	r3, r2
 80084f8:	d016      	beq.n	8008528 <HAL_FDCAN_IRQHandler+0x104>
 80084fa:	687b      	ldr	r3, [r7, #4]
 80084fc:	681b      	ldr	r3, [r3, #0]
 80084fe:	22d8      	movs	r2, #216	@ 0xd8
 8008500:	589b      	ldr	r3, [r3, r2]
 8008502:	613b      	str	r3, [r7, #16]
 8008504:	687b      	ldr	r3, [r7, #4]
 8008506:	681b      	ldr	r3, [r3, #0]
 8008508:	22e0      	movs	r2, #224	@ 0xe0
 800850a:	589a      	ldr	r2, [r3, r2]
 800850c:	693b      	ldr	r3, [r7, #16]
 800850e:	4013      	ands	r3, r2
 8008510:	613b      	str	r3, [r7, #16]
 8008512:	687b      	ldr	r3, [r7, #4]
 8008514:	681b      	ldr	r3, [r3, #0]
 8008516:	2280      	movs	r2, #128	@ 0x80
 8008518:	0052      	lsls	r2, r2, #1
 800851a:	651a      	str	r2, [r3, #80]	@ 0x50
 800851c:	693a      	ldr	r2, [r7, #16]
 800851e:	687b      	ldr	r3, [r7, #4]
 8008520:	0011      	movs	r1, r2
 8008522:	0018      	movs	r0, r3
 8008524:	f000 f8e8 	bl	80086f8 <HAL_FDCAN_TxBufferAbortCallback>
 8008528:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800852a:	2b00      	cmp	r3, #0
 800852c:	d009      	beq.n	8008542 <HAL_FDCAN_IRQHandler+0x11e>
 800852e:	687b      	ldr	r3, [r7, #4]
 8008530:	681b      	ldr	r3, [r3, #0]
 8008532:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8008534:	651a      	str	r2, [r3, #80]	@ 0x50
 8008536:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8008538:	687b      	ldr	r3, [r7, #4]
 800853a:	0011      	movs	r1, r2
 800853c:	0018      	movs	r0, r3
 800853e:	f000 f8b8 	bl	80086b2 <HAL_FDCAN_TxEventFifoCallback>
 8008542:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008544:	2b00      	cmp	r3, #0
 8008546:	d009      	beq.n	800855c <HAL_FDCAN_IRQHandler+0x138>
 8008548:	687b      	ldr	r3, [r7, #4]
 800854a:	681b      	ldr	r3, [r3, #0]
 800854c:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 800854e:	651a      	str	r2, [r3, #80]	@ 0x50
 8008550:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8008552:	687b      	ldr	r3, [r7, #4]
 8008554:	0011      	movs	r1, r2
 8008556:	0018      	movs	r0, r3
 8008558:	f7fc f888 	bl	800466c <HAL_FDCAN_RxFifo0Callback>
 800855c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800855e:	2b00      	cmp	r3, #0
 8008560:	d009      	beq.n	8008576 <HAL_FDCAN_IRQHandler+0x152>
 8008562:	687b      	ldr	r3, [r7, #4]
 8008564:	681b      	ldr	r3, [r3, #0]
 8008566:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8008568:	651a      	str	r2, [r3, #80]	@ 0x50
 800856a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800856c:	687b      	ldr	r3, [r7, #4]
 800856e:	0011      	movs	r1, r2
 8008570:	0018      	movs	r0, r3
 8008572:	f000 f8a7 	bl	80086c4 <HAL_FDCAN_RxFifo1Callback>
 8008576:	697b      	ldr	r3, [r7, #20]
 8008578:	0a5b      	lsrs	r3, r3, #9
 800857a:	001a      	movs	r2, r3
 800857c:	2301      	movs	r3, #1
 800857e:	4013      	ands	r3, r2
 8008580:	d00e      	beq.n	80085a0 <HAL_FDCAN_IRQHandler+0x17c>
 8008582:	69bb      	ldr	r3, [r7, #24]
 8008584:	0a5b      	lsrs	r3, r3, #9
 8008586:	001a      	movs	r2, r3
 8008588:	2301      	movs	r3, #1
 800858a:	4013      	ands	r3, r2
 800858c:	d008      	beq.n	80085a0 <HAL_FDCAN_IRQHandler+0x17c>
 800858e:	687b      	ldr	r3, [r7, #4]
 8008590:	681b      	ldr	r3, [r3, #0]
 8008592:	2280      	movs	r2, #128	@ 0x80
 8008594:	0092      	lsls	r2, r2, #2
 8008596:	651a      	str	r2, [r3, #80]	@ 0x50
 8008598:	687b      	ldr	r3, [r7, #4]
 800859a:	0018      	movs	r0, r3
 800859c:	f000 f89b 	bl	80086d6 <HAL_FDCAN_TxFifoEmptyCallback>
 80085a0:	697b      	ldr	r3, [r7, #20]
 80085a2:	09db      	lsrs	r3, r3, #7
 80085a4:	001a      	movs	r2, r3
 80085a6:	2301      	movs	r3, #1
 80085a8:	4013      	ands	r3, r2
 80085aa:	d01b      	beq.n	80085e4 <HAL_FDCAN_IRQHandler+0x1c0>
 80085ac:	69bb      	ldr	r3, [r7, #24]
 80085ae:	09db      	lsrs	r3, r3, #7
 80085b0:	001a      	movs	r2, r3
 80085b2:	2301      	movs	r3, #1
 80085b4:	4013      	ands	r3, r2
 80085b6:	d015      	beq.n	80085e4 <HAL_FDCAN_IRQHandler+0x1c0>
 80085b8:	687b      	ldr	r3, [r7, #4]
 80085ba:	681b      	ldr	r3, [r3, #0]
 80085bc:	22d4      	movs	r2, #212	@ 0xd4
 80085be:	589b      	ldr	r3, [r3, r2]
 80085c0:	60fb      	str	r3, [r7, #12]
 80085c2:	687b      	ldr	r3, [r7, #4]
 80085c4:	681b      	ldr	r3, [r3, #0]
 80085c6:	22dc      	movs	r2, #220	@ 0xdc
 80085c8:	589a      	ldr	r2, [r3, r2]
 80085ca:	68fb      	ldr	r3, [r7, #12]
 80085cc:	4013      	ands	r3, r2
 80085ce:	60fb      	str	r3, [r7, #12]
 80085d0:	687b      	ldr	r3, [r7, #4]
 80085d2:	681b      	ldr	r3, [r3, #0]
 80085d4:	2280      	movs	r2, #128	@ 0x80
 80085d6:	651a      	str	r2, [r3, #80]	@ 0x50
 80085d8:	68fa      	ldr	r2, [r7, #12]
 80085da:	687b      	ldr	r3, [r7, #4]
 80085dc:	0011      	movs	r1, r2
 80085de:	0018      	movs	r0, r3
 80085e0:	f000 f881 	bl	80086e6 <HAL_FDCAN_TxBufferCompleteCallback>
 80085e4:	697b      	ldr	r3, [r7, #20]
 80085e6:	0b5b      	lsrs	r3, r3, #13
 80085e8:	001a      	movs	r2, r3
 80085ea:	2301      	movs	r3, #1
 80085ec:	4013      	ands	r3, r2
 80085ee:	d00e      	beq.n	800860e <HAL_FDCAN_IRQHandler+0x1ea>
 80085f0:	69bb      	ldr	r3, [r7, #24]
 80085f2:	0b5b      	lsrs	r3, r3, #13
 80085f4:	001a      	movs	r2, r3
 80085f6:	2301      	movs	r3, #1
 80085f8:	4013      	ands	r3, r2
 80085fa:	d008      	beq.n	800860e <HAL_FDCAN_IRQHandler+0x1ea>
 80085fc:	687b      	ldr	r3, [r7, #4]
 80085fe:	681b      	ldr	r3, [r3, #0]
 8008600:	2280      	movs	r2, #128	@ 0x80
 8008602:	0192      	lsls	r2, r2, #6
 8008604:	651a      	str	r2, [r3, #80]	@ 0x50
 8008606:	687b      	ldr	r3, [r7, #4]
 8008608:	0018      	movs	r0, r3
 800860a:	f000 f87e 	bl	800870a <HAL_FDCAN_TimestampWraparoundCallback>
 800860e:	697b      	ldr	r3, [r7, #20]
 8008610:	0bdb      	lsrs	r3, r3, #15
 8008612:	001a      	movs	r2, r3
 8008614:	2301      	movs	r3, #1
 8008616:	4013      	ands	r3, r2
 8008618:	d00e      	beq.n	8008638 <HAL_FDCAN_IRQHandler+0x214>
 800861a:	69bb      	ldr	r3, [r7, #24]
 800861c:	0bdb      	lsrs	r3, r3, #15
 800861e:	001a      	movs	r2, r3
 8008620:	2301      	movs	r3, #1
 8008622:	4013      	ands	r3, r2
 8008624:	d008      	beq.n	8008638 <HAL_FDCAN_IRQHandler+0x214>
 8008626:	687b      	ldr	r3, [r7, #4]
 8008628:	681b      	ldr	r3, [r3, #0]
 800862a:	2280      	movs	r2, #128	@ 0x80
 800862c:	0212      	lsls	r2, r2, #8
 800862e:	651a      	str	r2, [r3, #80]	@ 0x50
 8008630:	687b      	ldr	r3, [r7, #4]
 8008632:	0018      	movs	r0, r3
 8008634:	f000 f871 	bl	800871a <HAL_FDCAN_TimeoutOccurredCallback>
 8008638:	697b      	ldr	r3, [r7, #20]
 800863a:	0b9b      	lsrs	r3, r3, #14
 800863c:	001a      	movs	r2, r3
 800863e:	2301      	movs	r3, #1
 8008640:	4013      	ands	r3, r2
 8008642:	d010      	beq.n	8008666 <HAL_FDCAN_IRQHandler+0x242>
 8008644:	69bb      	ldr	r3, [r7, #24]
 8008646:	0b9b      	lsrs	r3, r3, #14
 8008648:	001a      	movs	r2, r3
 800864a:	2301      	movs	r3, #1
 800864c:	4013      	ands	r3, r2
 800864e:	d00a      	beq.n	8008666 <HAL_FDCAN_IRQHandler+0x242>
 8008650:	687b      	ldr	r3, [r7, #4]
 8008652:	681b      	ldr	r3, [r3, #0]
 8008654:	2280      	movs	r2, #128	@ 0x80
 8008656:	01d2      	lsls	r2, r2, #7
 8008658:	651a      	str	r2, [r3, #80]	@ 0x50
 800865a:	687b      	ldr	r3, [r7, #4]
 800865c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800865e:	2280      	movs	r2, #128	@ 0x80
 8008660:	431a      	orrs	r2, r3
 8008662:	687b      	ldr	r3, [r7, #4]
 8008664:	661a      	str	r2, [r3, #96]	@ 0x60
 8008666:	69fb      	ldr	r3, [r7, #28]
 8008668:	2b00      	cmp	r3, #0
 800866a:	d009      	beq.n	8008680 <HAL_FDCAN_IRQHandler+0x25c>
 800866c:	687b      	ldr	r3, [r7, #4]
 800866e:	681b      	ldr	r3, [r3, #0]
 8008670:	69fa      	ldr	r2, [r7, #28]
 8008672:	651a      	str	r2, [r3, #80]	@ 0x50
 8008674:	69fa      	ldr	r2, [r7, #28]
 8008676:	687b      	ldr	r3, [r7, #4]
 8008678:	0011      	movs	r1, r2
 800867a:	0018      	movs	r0, r3
 800867c:	f000 f865 	bl	800874a <HAL_FDCAN_ErrorStatusCallback>
 8008680:	6a3b      	ldr	r3, [r7, #32]
 8008682:	2b00      	cmp	r3, #0
 8008684:	d009      	beq.n	800869a <HAL_FDCAN_IRQHandler+0x276>
 8008686:	687b      	ldr	r3, [r7, #4]
 8008688:	681b      	ldr	r3, [r3, #0]
 800868a:	6a3a      	ldr	r2, [r7, #32]
 800868c:	651a      	str	r2, [r3, #80]	@ 0x50
 800868e:	687b      	ldr	r3, [r7, #4]
 8008690:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 8008692:	6a3b      	ldr	r3, [r7, #32]
 8008694:	431a      	orrs	r2, r3
 8008696:	687b      	ldr	r3, [r7, #4]
 8008698:	661a      	str	r2, [r3, #96]	@ 0x60
 800869a:	687b      	ldr	r3, [r7, #4]
 800869c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800869e:	2b00      	cmp	r3, #0
 80086a0:	d003      	beq.n	80086aa <HAL_FDCAN_IRQHandler+0x286>
 80086a2:	687b      	ldr	r3, [r7, #4]
 80086a4:	0018      	movs	r0, r3
 80086a6:	f000 f848 	bl	800873a <HAL_FDCAN_ErrorCallback>
 80086aa:	46c0      	nop			@ (mov r8, r8)
 80086ac:	46bd      	mov	sp, r7
 80086ae:	b00c      	add	sp, #48	@ 0x30
 80086b0:	bd80      	pop	{r7, pc}

080086b2 <HAL_FDCAN_TxEventFifoCallback>:
 80086b2:	b580      	push	{r7, lr}
 80086b4:	b082      	sub	sp, #8
 80086b6:	af00      	add	r7, sp, #0
 80086b8:	6078      	str	r0, [r7, #4]
 80086ba:	6039      	str	r1, [r7, #0]
 80086bc:	46c0      	nop			@ (mov r8, r8)
 80086be:	46bd      	mov	sp, r7
 80086c0:	b002      	add	sp, #8
 80086c2:	bd80      	pop	{r7, pc}

080086c4 <HAL_FDCAN_RxFifo1Callback>:
 80086c4:	b580      	push	{r7, lr}
 80086c6:	b082      	sub	sp, #8
 80086c8:	af00      	add	r7, sp, #0
 80086ca:	6078      	str	r0, [r7, #4]
 80086cc:	6039      	str	r1, [r7, #0]
 80086ce:	46c0      	nop			@ (mov r8, r8)
 80086d0:	46bd      	mov	sp, r7
 80086d2:	b002      	add	sp, #8
 80086d4:	bd80      	pop	{r7, pc}

080086d6 <HAL_FDCAN_TxFifoEmptyCallback>:
 80086d6:	b580      	push	{r7, lr}
 80086d8:	b082      	sub	sp, #8
 80086da:	af00      	add	r7, sp, #0
 80086dc:	6078      	str	r0, [r7, #4]
 80086de:	46c0      	nop			@ (mov r8, r8)
 80086e0:	46bd      	mov	sp, r7
 80086e2:	b002      	add	sp, #8
 80086e4:	bd80      	pop	{r7, pc}

080086e6 <HAL_FDCAN_TxBufferCompleteCallback>:
 80086e6:	b580      	push	{r7, lr}
 80086e8:	b082      	sub	sp, #8
 80086ea:	af00      	add	r7, sp, #0
 80086ec:	6078      	str	r0, [r7, #4]
 80086ee:	6039      	str	r1, [r7, #0]
 80086f0:	46c0      	nop			@ (mov r8, r8)
 80086f2:	46bd      	mov	sp, r7
 80086f4:	b002      	add	sp, #8
 80086f6:	bd80      	pop	{r7, pc}

080086f8 <HAL_FDCAN_TxBufferAbortCallback>:
 80086f8:	b580      	push	{r7, lr}
 80086fa:	b082      	sub	sp, #8
 80086fc:	af00      	add	r7, sp, #0
 80086fe:	6078      	str	r0, [r7, #4]
 8008700:	6039      	str	r1, [r7, #0]
 8008702:	46c0      	nop			@ (mov r8, r8)
 8008704:	46bd      	mov	sp, r7
 8008706:	b002      	add	sp, #8
 8008708:	bd80      	pop	{r7, pc}

0800870a <HAL_FDCAN_TimestampWraparoundCallback>:
 800870a:	b580      	push	{r7, lr}
 800870c:	b082      	sub	sp, #8
 800870e:	af00      	add	r7, sp, #0
 8008710:	6078      	str	r0, [r7, #4]
 8008712:	46c0      	nop			@ (mov r8, r8)
 8008714:	46bd      	mov	sp, r7
 8008716:	b002      	add	sp, #8
 8008718:	bd80      	pop	{r7, pc}

0800871a <HAL_FDCAN_TimeoutOccurredCallback>:
 800871a:	b580      	push	{r7, lr}
 800871c:	b082      	sub	sp, #8
 800871e:	af00      	add	r7, sp, #0
 8008720:	6078      	str	r0, [r7, #4]
 8008722:	46c0      	nop			@ (mov r8, r8)
 8008724:	46bd      	mov	sp, r7
 8008726:	b002      	add	sp, #8
 8008728:	bd80      	pop	{r7, pc}

0800872a <HAL_FDCAN_HighPriorityMessageCallback>:
 800872a:	b580      	push	{r7, lr}
 800872c:	b082      	sub	sp, #8
 800872e:	af00      	add	r7, sp, #0
 8008730:	6078      	str	r0, [r7, #4]
 8008732:	46c0      	nop			@ (mov r8, r8)
 8008734:	46bd      	mov	sp, r7
 8008736:	b002      	add	sp, #8
 8008738:	bd80      	pop	{r7, pc}

0800873a <HAL_FDCAN_ErrorCallback>:
 800873a:	b580      	push	{r7, lr}
 800873c:	b082      	sub	sp, #8
 800873e:	af00      	add	r7, sp, #0
 8008740:	6078      	str	r0, [r7, #4]
 8008742:	46c0      	nop			@ (mov r8, r8)
 8008744:	46bd      	mov	sp, r7
 8008746:	b002      	add	sp, #8
 8008748:	bd80      	pop	{r7, pc}

0800874a <HAL_FDCAN_ErrorStatusCallback>:
 800874a:	b580      	push	{r7, lr}
 800874c:	b082      	sub	sp, #8
 800874e:	af00      	add	r7, sp, #0
 8008750:	6078      	str	r0, [r7, #4]
 8008752:	6039      	str	r1, [r7, #0]
 8008754:	46c0      	nop			@ (mov r8, r8)
 8008756:	46bd      	mov	sp, r7
 8008758:	b002      	add	sp, #8
 800875a:	bd80      	pop	{r7, pc}

0800875c <FDCAN_CalcultateRamBlockAddresses>:
 800875c:	b580      	push	{r7, lr}
 800875e:	b084      	sub	sp, #16
 8008760:	af00      	add	r7, sp, #0
 8008762:	6078      	str	r0, [r7, #4]
 8008764:	4b2f      	ldr	r3, [pc, #188]	@ (8008824 <FDCAN_CalcultateRamBlockAddresses+0xc8>)
 8008766:	60bb      	str	r3, [r7, #8]
 8008768:	687b      	ldr	r3, [r7, #4]
 800876a:	681b      	ldr	r3, [r3, #0]
 800876c:	4a2e      	ldr	r2, [pc, #184]	@ (8008828 <FDCAN_CalcultateRamBlockAddresses+0xcc>)
 800876e:	4293      	cmp	r3, r2
 8008770:	d105      	bne.n	800877e <FDCAN_CalcultateRamBlockAddresses+0x22>
 8008772:	68bb      	ldr	r3, [r7, #8]
 8008774:	22d4      	movs	r2, #212	@ 0xd4
 8008776:	0092      	lsls	r2, r2, #2
 8008778:	4694      	mov	ip, r2
 800877a:	4463      	add	r3, ip
 800877c:	60bb      	str	r3, [r7, #8]
 800877e:	687b      	ldr	r3, [r7, #4]
 8008780:	68ba      	ldr	r2, [r7, #8]
 8008782:	641a      	str	r2, [r3, #64]	@ 0x40
 8008784:	687b      	ldr	r3, [r7, #4]
 8008786:	681b      	ldr	r3, [r3, #0]
 8008788:	2280      	movs	r2, #128	@ 0x80
 800878a:	589b      	ldr	r3, [r3, r2]
 800878c:	4a27      	ldr	r2, [pc, #156]	@ (800882c <FDCAN_CalcultateRamBlockAddresses+0xd0>)
 800878e:	4013      	ands	r3, r2
 8008790:	0019      	movs	r1, r3
 8008792:	687b      	ldr	r3, [r7, #4]
 8008794:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8008796:	041a      	lsls	r2, r3, #16
 8008798:	687b      	ldr	r3, [r7, #4]
 800879a:	681b      	ldr	r3, [r3, #0]
 800879c:	430a      	orrs	r2, r1
 800879e:	2180      	movs	r1, #128	@ 0x80
 80087a0:	505a      	str	r2, [r3, r1]
 80087a2:	68bb      	ldr	r3, [r7, #8]
 80087a4:	3370      	adds	r3, #112	@ 0x70
 80087a6:	001a      	movs	r2, r3
 80087a8:	687b      	ldr	r3, [r7, #4]
 80087aa:	645a      	str	r2, [r3, #68]	@ 0x44
 80087ac:	687b      	ldr	r3, [r7, #4]
 80087ae:	681b      	ldr	r3, [r3, #0]
 80087b0:	2280      	movs	r2, #128	@ 0x80
 80087b2:	589b      	ldr	r3, [r3, r2]
 80087b4:	4a1e      	ldr	r2, [pc, #120]	@ (8008830 <FDCAN_CalcultateRamBlockAddresses+0xd4>)
 80087b6:	4013      	ands	r3, r2
 80087b8:	0019      	movs	r1, r3
 80087ba:	687b      	ldr	r3, [r7, #4]
 80087bc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80087be:	061a      	lsls	r2, r3, #24
 80087c0:	687b      	ldr	r3, [r7, #4]
 80087c2:	681b      	ldr	r3, [r3, #0]
 80087c4:	430a      	orrs	r2, r1
 80087c6:	2180      	movs	r1, #128	@ 0x80
 80087c8:	505a      	str	r2, [r3, r1]
 80087ca:	68bb      	ldr	r3, [r7, #8]
 80087cc:	33b0      	adds	r3, #176	@ 0xb0
 80087ce:	001a      	movs	r2, r3
 80087d0:	687b      	ldr	r3, [r7, #4]
 80087d2:	649a      	str	r2, [r3, #72]	@ 0x48
 80087d4:	68bb      	ldr	r3, [r7, #8]
 80087d6:	3389      	adds	r3, #137	@ 0x89
 80087d8:	33ff      	adds	r3, #255	@ 0xff
 80087da:	001a      	movs	r2, r3
 80087dc:	687b      	ldr	r3, [r7, #4]
 80087de:	64da      	str	r2, [r3, #76]	@ 0x4c
 80087e0:	68bb      	ldr	r3, [r7, #8]
 80087e2:	2298      	movs	r2, #152	@ 0x98
 80087e4:	0092      	lsls	r2, r2, #2
 80087e6:	189a      	adds	r2, r3, r2
 80087e8:	687b      	ldr	r3, [r7, #4]
 80087ea:	651a      	str	r2, [r3, #80]	@ 0x50
 80087ec:	68bb      	ldr	r3, [r7, #8]
 80087ee:	229e      	movs	r2, #158	@ 0x9e
 80087f0:	0092      	lsls	r2, r2, #2
 80087f2:	189a      	adds	r2, r3, r2
 80087f4:	687b      	ldr	r3, [r7, #4]
 80087f6:	655a      	str	r2, [r3, #84]	@ 0x54
 80087f8:	68bb      	ldr	r3, [r7, #8]
 80087fa:	60fb      	str	r3, [r7, #12]
 80087fc:	e005      	b.n	800880a <FDCAN_CalcultateRamBlockAddresses+0xae>
 80087fe:	68fb      	ldr	r3, [r7, #12]
 8008800:	2200      	movs	r2, #0
 8008802:	601a      	str	r2, [r3, #0]
 8008804:	68fb      	ldr	r3, [r7, #12]
 8008806:	3304      	adds	r3, #4
 8008808:	60fb      	str	r3, [r7, #12]
 800880a:	68bb      	ldr	r3, [r7, #8]
 800880c:	22d4      	movs	r2, #212	@ 0xd4
 800880e:	0092      	lsls	r2, r2, #2
 8008810:	4694      	mov	ip, r2
 8008812:	4463      	add	r3, ip
 8008814:	68fa      	ldr	r2, [r7, #12]
 8008816:	429a      	cmp	r2, r3
 8008818:	d3f1      	bcc.n	80087fe <FDCAN_CalcultateRamBlockAddresses+0xa2>
 800881a:	46c0      	nop			@ (mov r8, r8)
 800881c:	46c0      	nop			@ (mov r8, r8)
 800881e:	46bd      	mov	sp, r7
 8008820:	b004      	add	sp, #16
 8008822:	bd80      	pop	{r7, pc}
 8008824:	4000b400 	.word	0x4000b400
 8008828:	40006800 	.word	0x40006800
 800882c:	ffe0ffff 	.word	0xffe0ffff
 8008830:	f0ffffff 	.word	0xf0ffffff

08008834 <FDCAN_CopyMessageToRAM>:
 8008834:	b580      	push	{r7, lr}
 8008836:	b088      	sub	sp, #32
 8008838:	af00      	add	r7, sp, #0
 800883a:	60f8      	str	r0, [r7, #12]
 800883c:	60b9      	str	r1, [r7, #8]
 800883e:	607a      	str	r2, [r7, #4]
 8008840:	603b      	str	r3, [r7, #0]
 8008842:	68bb      	ldr	r3, [r7, #8]
 8008844:	685b      	ldr	r3, [r3, #4]
 8008846:	2b00      	cmp	r3, #0
 8008848:	d10a      	bne.n	8008860 <FDCAN_CopyMessageToRAM+0x2c>
 800884a:	68bb      	ldr	r3, [r7, #8]
 800884c:	691a      	ldr	r2, [r3, #16]
 800884e:	68bb      	ldr	r3, [r7, #8]
 8008850:	689b      	ldr	r3, [r3, #8]
 8008852:	431a      	orrs	r2, r3
 8008854:	68bb      	ldr	r3, [r7, #8]
 8008856:	681b      	ldr	r3, [r3, #0]
 8008858:	049b      	lsls	r3, r3, #18
 800885a:	4313      	orrs	r3, r2
 800885c:	61fb      	str	r3, [r7, #28]
 800885e:	e00b      	b.n	8008878 <FDCAN_CopyMessageToRAM+0x44>
 8008860:	68bb      	ldr	r3, [r7, #8]
 8008862:	691a      	ldr	r2, [r3, #16]
 8008864:	68bb      	ldr	r3, [r7, #8]
 8008866:	689b      	ldr	r3, [r3, #8]
 8008868:	431a      	orrs	r2, r3
 800886a:	68bb      	ldr	r3, [r7, #8]
 800886c:	681b      	ldr	r3, [r3, #0]
 800886e:	4313      	orrs	r3, r2
 8008870:	2280      	movs	r2, #128	@ 0x80
 8008872:	05d2      	lsls	r2, r2, #23
 8008874:	4313      	orrs	r3, r2
 8008876:	61fb      	str	r3, [r7, #28]
 8008878:	68bb      	ldr	r3, [r7, #8]
 800887a:	6a1b      	ldr	r3, [r3, #32]
 800887c:	061a      	lsls	r2, r3, #24
 800887e:	68bb      	ldr	r3, [r7, #8]
 8008880:	69db      	ldr	r3, [r3, #28]
 8008882:	431a      	orrs	r2, r3
 8008884:	68bb      	ldr	r3, [r7, #8]
 8008886:	699b      	ldr	r3, [r3, #24]
 8008888:	431a      	orrs	r2, r3
 800888a:	68bb      	ldr	r3, [r7, #8]
 800888c:	695b      	ldr	r3, [r3, #20]
 800888e:	431a      	orrs	r2, r3
 8008890:	68bb      	ldr	r3, [r7, #8]
 8008892:	68db      	ldr	r3, [r3, #12]
 8008894:	041b      	lsls	r3, r3, #16
 8008896:	4313      	orrs	r3, r2
 8008898:	613b      	str	r3, [r7, #16]
 800889a:	68fb      	ldr	r3, [r7, #12]
 800889c:	6d59      	ldr	r1, [r3, #84]	@ 0x54
 800889e:	683a      	ldr	r2, [r7, #0]
 80088a0:	0013      	movs	r3, r2
 80088a2:	00db      	lsls	r3, r3, #3
 80088a4:	189b      	adds	r3, r3, r2
 80088a6:	00db      	lsls	r3, r3, #3
 80088a8:	18cb      	adds	r3, r1, r3
 80088aa:	61bb      	str	r3, [r7, #24]
 80088ac:	69bb      	ldr	r3, [r7, #24]
 80088ae:	69fa      	ldr	r2, [r7, #28]
 80088b0:	601a      	str	r2, [r3, #0]
 80088b2:	69bb      	ldr	r3, [r7, #24]
 80088b4:	3304      	adds	r3, #4
 80088b6:	61bb      	str	r3, [r7, #24]
 80088b8:	69bb      	ldr	r3, [r7, #24]
 80088ba:	693a      	ldr	r2, [r7, #16]
 80088bc:	601a      	str	r2, [r3, #0]
 80088be:	69bb      	ldr	r3, [r7, #24]
 80088c0:	3304      	adds	r3, #4
 80088c2:	61bb      	str	r3, [r7, #24]
 80088c4:	2300      	movs	r3, #0
 80088c6:	617b      	str	r3, [r7, #20]
 80088c8:	e020      	b.n	800890c <FDCAN_CopyMessageToRAM+0xd8>
 80088ca:	697b      	ldr	r3, [r7, #20]
 80088cc:	3303      	adds	r3, #3
 80088ce:	687a      	ldr	r2, [r7, #4]
 80088d0:	18d3      	adds	r3, r2, r3
 80088d2:	781b      	ldrb	r3, [r3, #0]
 80088d4:	061a      	lsls	r2, r3, #24
 80088d6:	697b      	ldr	r3, [r7, #20]
 80088d8:	3302      	adds	r3, #2
 80088da:	6879      	ldr	r1, [r7, #4]
 80088dc:	18cb      	adds	r3, r1, r3
 80088de:	781b      	ldrb	r3, [r3, #0]
 80088e0:	041b      	lsls	r3, r3, #16
 80088e2:	431a      	orrs	r2, r3
 80088e4:	697b      	ldr	r3, [r7, #20]
 80088e6:	3301      	adds	r3, #1
 80088e8:	6879      	ldr	r1, [r7, #4]
 80088ea:	18cb      	adds	r3, r1, r3
 80088ec:	781b      	ldrb	r3, [r3, #0]
 80088ee:	021b      	lsls	r3, r3, #8
 80088f0:	4313      	orrs	r3, r2
 80088f2:	6879      	ldr	r1, [r7, #4]
 80088f4:	697a      	ldr	r2, [r7, #20]
 80088f6:	188a      	adds	r2, r1, r2
 80088f8:	7812      	ldrb	r2, [r2, #0]
 80088fa:	431a      	orrs	r2, r3
 80088fc:	69bb      	ldr	r3, [r7, #24]
 80088fe:	601a      	str	r2, [r3, #0]
 8008900:	69bb      	ldr	r3, [r7, #24]
 8008902:	3304      	adds	r3, #4
 8008904:	61bb      	str	r3, [r7, #24]
 8008906:	697b      	ldr	r3, [r7, #20]
 8008908:	3304      	adds	r3, #4
 800890a:	617b      	str	r3, [r7, #20]
 800890c:	68bb      	ldr	r3, [r7, #8]
 800890e:	68db      	ldr	r3, [r3, #12]
 8008910:	4a05      	ldr	r2, [pc, #20]	@ (8008928 <FDCAN_CopyMessageToRAM+0xf4>)
 8008912:	5cd3      	ldrb	r3, [r2, r3]
 8008914:	001a      	movs	r2, r3
 8008916:	697b      	ldr	r3, [r7, #20]
 8008918:	4293      	cmp	r3, r2
 800891a:	d3d6      	bcc.n	80088ca <FDCAN_CopyMessageToRAM+0x96>
 800891c:	46c0      	nop			@ (mov r8, r8)
 800891e:	46c0      	nop			@ (mov r8, r8)
 8008920:	46bd      	mov	sp, r7
 8008922:	b008      	add	sp, #32
 8008924:	bd80      	pop	{r7, pc}
 8008926:	46c0      	nop			@ (mov r8, r8)
 8008928:	0800c3e8 	.word	0x0800c3e8

0800892c <HAL_FLASH_Program>:
 800892c:	b5b0      	push	{r4, r5, r7, lr}
 800892e:	b086      	sub	sp, #24
 8008930:	af00      	add	r7, sp, #0
 8008932:	60f8      	str	r0, [r7, #12]
 8008934:	60b9      	str	r1, [r7, #8]
 8008936:	603a      	str	r2, [r7, #0]
 8008938:	607b      	str	r3, [r7, #4]
 800893a:	4b21      	ldr	r3, [pc, #132]	@ (80089c0 <HAL_FLASH_Program+0x94>)
 800893c:	781b      	ldrb	r3, [r3, #0]
 800893e:	2b01      	cmp	r3, #1
 8008940:	d101      	bne.n	8008946 <HAL_FLASH_Program+0x1a>
 8008942:	2302      	movs	r3, #2
 8008944:	e038      	b.n	80089b8 <HAL_FLASH_Program+0x8c>
 8008946:	4b1e      	ldr	r3, [pc, #120]	@ (80089c0 <HAL_FLASH_Program+0x94>)
 8008948:	2201      	movs	r2, #1
 800894a:	701a      	strb	r2, [r3, #0]
 800894c:	4b1c      	ldr	r3, [pc, #112]	@ (80089c0 <HAL_FLASH_Program+0x94>)
 800894e:	2200      	movs	r2, #0
 8008950:	605a      	str	r2, [r3, #4]
 8008952:	2517      	movs	r5, #23
 8008954:	197c      	adds	r4, r7, r5
 8008956:	23fa      	movs	r3, #250	@ 0xfa
 8008958:	009b      	lsls	r3, r3, #2
 800895a:	0018      	movs	r0, r3
 800895c:	f000 f87a 	bl	8008a54 <FLASH_WaitForLastOperation>
 8008960:	0003      	movs	r3, r0
 8008962:	7023      	strb	r3, [r4, #0]
 8008964:	197b      	adds	r3, r7, r5
 8008966:	781b      	ldrb	r3, [r3, #0]
 8008968:	2b00      	cmp	r3, #0
 800896a:	d11f      	bne.n	80089ac <HAL_FLASH_Program+0x80>
 800896c:	68fb      	ldr	r3, [r7, #12]
 800896e:	2b01      	cmp	r3, #1
 8008970:	d106      	bne.n	8008980 <HAL_FLASH_Program+0x54>
 8008972:	683a      	ldr	r2, [r7, #0]
 8008974:	687b      	ldr	r3, [r7, #4]
 8008976:	68b9      	ldr	r1, [r7, #8]
 8008978:	0008      	movs	r0, r1
 800897a:	f000 f8b9 	bl	8008af0 <FLASH_Program_DoubleWord>
 800897e:	e005      	b.n	800898c <HAL_FLASH_Program+0x60>
 8008980:	683a      	ldr	r2, [r7, #0]
 8008982:	68bb      	ldr	r3, [r7, #8]
 8008984:	0011      	movs	r1, r2
 8008986:	0018      	movs	r0, r3
 8008988:	f003 fbae 	bl	800c0e8 <__FLASH_Program_Fast_veneer>
 800898c:	2317      	movs	r3, #23
 800898e:	18fc      	adds	r4, r7, r3
 8008990:	23fa      	movs	r3, #250	@ 0xfa
 8008992:	009b      	lsls	r3, r3, #2
 8008994:	0018      	movs	r0, r3
 8008996:	f000 f85d 	bl	8008a54 <FLASH_WaitForLastOperation>
 800899a:	0003      	movs	r3, r0
 800899c:	7023      	strb	r3, [r4, #0]
 800899e:	4b09      	ldr	r3, [pc, #36]	@ (80089c4 <HAL_FLASH_Program+0x98>)
 80089a0:	695a      	ldr	r2, [r3, #20]
 80089a2:	68fb      	ldr	r3, [r7, #12]
 80089a4:	43d9      	mvns	r1, r3
 80089a6:	4b07      	ldr	r3, [pc, #28]	@ (80089c4 <HAL_FLASH_Program+0x98>)
 80089a8:	400a      	ands	r2, r1
 80089aa:	615a      	str	r2, [r3, #20]
 80089ac:	4b04      	ldr	r3, [pc, #16]	@ (80089c0 <HAL_FLASH_Program+0x94>)
 80089ae:	2200      	movs	r2, #0
 80089b0:	701a      	strb	r2, [r3, #0]
 80089b2:	2317      	movs	r3, #23
 80089b4:	18fb      	adds	r3, r7, r3
 80089b6:	781b      	ldrb	r3, [r3, #0]
 80089b8:	0018      	movs	r0, r3
 80089ba:	46bd      	mov	sp, r7
 80089bc:	b006      	add	sp, #24
 80089be:	bdb0      	pop	{r4, r5, r7, pc}
 80089c0:	2000dae0 	.word	0x2000dae0
 80089c4:	40022000 	.word	0x40022000

080089c8 <HAL_FLASH_Unlock>:
 80089c8:	b580      	push	{r7, lr}
 80089ca:	b082      	sub	sp, #8
 80089cc:	af00      	add	r7, sp, #0
 80089ce:	1dfb      	adds	r3, r7, #7
 80089d0:	2200      	movs	r2, #0
 80089d2:	701a      	strb	r2, [r3, #0]
 80089d4:	4b0b      	ldr	r3, [pc, #44]	@ (8008a04 <HAL_FLASH_Unlock+0x3c>)
 80089d6:	695b      	ldr	r3, [r3, #20]
 80089d8:	2b00      	cmp	r3, #0
 80089da:	da0c      	bge.n	80089f6 <HAL_FLASH_Unlock+0x2e>
 80089dc:	4b09      	ldr	r3, [pc, #36]	@ (8008a04 <HAL_FLASH_Unlock+0x3c>)
 80089de:	4a0a      	ldr	r2, [pc, #40]	@ (8008a08 <HAL_FLASH_Unlock+0x40>)
 80089e0:	609a      	str	r2, [r3, #8]
 80089e2:	4b08      	ldr	r3, [pc, #32]	@ (8008a04 <HAL_FLASH_Unlock+0x3c>)
 80089e4:	4a09      	ldr	r2, [pc, #36]	@ (8008a0c <HAL_FLASH_Unlock+0x44>)
 80089e6:	609a      	str	r2, [r3, #8]
 80089e8:	4b06      	ldr	r3, [pc, #24]	@ (8008a04 <HAL_FLASH_Unlock+0x3c>)
 80089ea:	695b      	ldr	r3, [r3, #20]
 80089ec:	2b00      	cmp	r3, #0
 80089ee:	da02      	bge.n	80089f6 <HAL_FLASH_Unlock+0x2e>
 80089f0:	1dfb      	adds	r3, r7, #7
 80089f2:	2201      	movs	r2, #1
 80089f4:	701a      	strb	r2, [r3, #0]
 80089f6:	1dfb      	adds	r3, r7, #7
 80089f8:	781b      	ldrb	r3, [r3, #0]
 80089fa:	0018      	movs	r0, r3
 80089fc:	46bd      	mov	sp, r7
 80089fe:	b002      	add	sp, #8
 8008a00:	bd80      	pop	{r7, pc}
 8008a02:	46c0      	nop			@ (mov r8, r8)
 8008a04:	40022000 	.word	0x40022000
 8008a08:	45670123 	.word	0x45670123
 8008a0c:	cdef89ab 	.word	0xcdef89ab

08008a10 <HAL_FLASH_Lock>:
 8008a10:	b580      	push	{r7, lr}
 8008a12:	b082      	sub	sp, #8
 8008a14:	af00      	add	r7, sp, #0
 8008a16:	1dfb      	adds	r3, r7, #7
 8008a18:	2201      	movs	r2, #1
 8008a1a:	701a      	strb	r2, [r3, #0]
 8008a1c:	23fa      	movs	r3, #250	@ 0xfa
 8008a1e:	009b      	lsls	r3, r3, #2
 8008a20:	0018      	movs	r0, r3
 8008a22:	f000 f817 	bl	8008a54 <FLASH_WaitForLastOperation>
 8008a26:	4b0a      	ldr	r3, [pc, #40]	@ (8008a50 <HAL_FLASH_Lock+0x40>)
 8008a28:	695a      	ldr	r2, [r3, #20]
 8008a2a:	4b09      	ldr	r3, [pc, #36]	@ (8008a50 <HAL_FLASH_Lock+0x40>)
 8008a2c:	2180      	movs	r1, #128	@ 0x80
 8008a2e:	0609      	lsls	r1, r1, #24
 8008a30:	430a      	orrs	r2, r1
 8008a32:	615a      	str	r2, [r3, #20]
 8008a34:	4b06      	ldr	r3, [pc, #24]	@ (8008a50 <HAL_FLASH_Lock+0x40>)
 8008a36:	695b      	ldr	r3, [r3, #20]
 8008a38:	2b00      	cmp	r3, #0
 8008a3a:	da02      	bge.n	8008a42 <HAL_FLASH_Lock+0x32>
 8008a3c:	1dfb      	adds	r3, r7, #7
 8008a3e:	2200      	movs	r2, #0
 8008a40:	701a      	strb	r2, [r3, #0]
 8008a42:	1dfb      	adds	r3, r7, #7
 8008a44:	781b      	ldrb	r3, [r3, #0]
 8008a46:	0018      	movs	r0, r3
 8008a48:	46bd      	mov	sp, r7
 8008a4a:	b002      	add	sp, #8
 8008a4c:	bd80      	pop	{r7, pc}
 8008a4e:	46c0      	nop			@ (mov r8, r8)
 8008a50:	40022000 	.word	0x40022000

08008a54 <FLASH_WaitForLastOperation>:
 8008a54:	b580      	push	{r7, lr}
 8008a56:	b084      	sub	sp, #16
 8008a58:	af00      	add	r7, sp, #0
 8008a5a:	6078      	str	r0, [r7, #4]
 8008a5c:	f7fe f9e0 	bl	8006e20 <HAL_GetTick>
 8008a60:	0003      	movs	r3, r0
 8008a62:	60fb      	str	r3, [r7, #12]
 8008a64:	23c0      	movs	r3, #192	@ 0xc0
 8008a66:	029b      	lsls	r3, r3, #10
 8008a68:	60bb      	str	r3, [r7, #8]
 8008a6a:	e00c      	b.n	8008a86 <FLASH_WaitForLastOperation+0x32>
 8008a6c:	687b      	ldr	r3, [r7, #4]
 8008a6e:	3301      	adds	r3, #1
 8008a70:	d009      	beq.n	8008a86 <FLASH_WaitForLastOperation+0x32>
 8008a72:	f7fe f9d5 	bl	8006e20 <HAL_GetTick>
 8008a76:	0002      	movs	r2, r0
 8008a78:	68fb      	ldr	r3, [r7, #12]
 8008a7a:	1ad3      	subs	r3, r2, r3
 8008a7c:	687a      	ldr	r2, [r7, #4]
 8008a7e:	429a      	cmp	r2, r3
 8008a80:	d801      	bhi.n	8008a86 <FLASH_WaitForLastOperation+0x32>
 8008a82:	2303      	movs	r3, #3
 8008a84:	e028      	b.n	8008ad8 <FLASH_WaitForLastOperation+0x84>
 8008a86:	4b16      	ldr	r3, [pc, #88]	@ (8008ae0 <FLASH_WaitForLastOperation+0x8c>)
 8008a88:	691b      	ldr	r3, [r3, #16]
 8008a8a:	68ba      	ldr	r2, [r7, #8]
 8008a8c:	4013      	ands	r3, r2
 8008a8e:	d1ed      	bne.n	8008a6c <FLASH_WaitForLastOperation+0x18>
 8008a90:	4b13      	ldr	r3, [pc, #76]	@ (8008ae0 <FLASH_WaitForLastOperation+0x8c>)
 8008a92:	691b      	ldr	r3, [r3, #16]
 8008a94:	4a13      	ldr	r2, [pc, #76]	@ (8008ae4 <FLASH_WaitForLastOperation+0x90>)
 8008a96:	4013      	ands	r3, r2
 8008a98:	60bb      	str	r3, [r7, #8]
 8008a9a:	4b11      	ldr	r3, [pc, #68]	@ (8008ae0 <FLASH_WaitForLastOperation+0x8c>)
 8008a9c:	4a12      	ldr	r2, [pc, #72]	@ (8008ae8 <FLASH_WaitForLastOperation+0x94>)
 8008a9e:	611a      	str	r2, [r3, #16]
 8008aa0:	68bb      	ldr	r3, [r7, #8]
 8008aa2:	2b00      	cmp	r3, #0
 8008aa4:	d011      	beq.n	8008aca <FLASH_WaitForLastOperation+0x76>
 8008aa6:	4b11      	ldr	r3, [pc, #68]	@ (8008aec <FLASH_WaitForLastOperation+0x98>)
 8008aa8:	68ba      	ldr	r2, [r7, #8]
 8008aaa:	605a      	str	r2, [r3, #4]
 8008aac:	2301      	movs	r3, #1
 8008aae:	e013      	b.n	8008ad8 <FLASH_WaitForLastOperation+0x84>
 8008ab0:	687b      	ldr	r3, [r7, #4]
 8008ab2:	3301      	adds	r3, #1
 8008ab4:	d009      	beq.n	8008aca <FLASH_WaitForLastOperation+0x76>
 8008ab6:	f7fe f9b3 	bl	8006e20 <HAL_GetTick>
 8008aba:	0002      	movs	r2, r0
 8008abc:	68fb      	ldr	r3, [r7, #12]
 8008abe:	1ad3      	subs	r3, r2, r3
 8008ac0:	687a      	ldr	r2, [r7, #4]
 8008ac2:	429a      	cmp	r2, r3
 8008ac4:	d801      	bhi.n	8008aca <FLASH_WaitForLastOperation+0x76>
 8008ac6:	2303      	movs	r3, #3
 8008ac8:	e006      	b.n	8008ad8 <FLASH_WaitForLastOperation+0x84>
 8008aca:	4b05      	ldr	r3, [pc, #20]	@ (8008ae0 <FLASH_WaitForLastOperation+0x8c>)
 8008acc:	691a      	ldr	r2, [r3, #16]
 8008ace:	2380      	movs	r3, #128	@ 0x80
 8008ad0:	02db      	lsls	r3, r3, #11
 8008ad2:	4013      	ands	r3, r2
 8008ad4:	d1ec      	bne.n	8008ab0 <FLASH_WaitForLastOperation+0x5c>
 8008ad6:	2300      	movs	r3, #0
 8008ad8:	0018      	movs	r0, r3
 8008ada:	46bd      	mov	sp, r7
 8008adc:	b004      	add	sp, #16
 8008ade:	bd80      	pop	{r7, pc}
 8008ae0:	40022000 	.word	0x40022000
 8008ae4:	0000c3fa 	.word	0x0000c3fa
 8008ae8:	0008c3fb 	.word	0x0008c3fb
 8008aec:	2000dae0 	.word	0x2000dae0

08008af0 <FLASH_Program_DoubleWord>:
 8008af0:	b5b0      	push	{r4, r5, r7, lr}
 8008af2:	b084      	sub	sp, #16
 8008af4:	af00      	add	r7, sp, #0
 8008af6:	60f8      	str	r0, [r7, #12]
 8008af8:	603a      	str	r2, [r7, #0]
 8008afa:	607b      	str	r3, [r7, #4]
 8008afc:	4b0b      	ldr	r3, [pc, #44]	@ (8008b2c <FLASH_Program_DoubleWord+0x3c>)
 8008afe:	695a      	ldr	r2, [r3, #20]
 8008b00:	4b0a      	ldr	r3, [pc, #40]	@ (8008b2c <FLASH_Program_DoubleWord+0x3c>)
 8008b02:	2101      	movs	r1, #1
 8008b04:	430a      	orrs	r2, r1
 8008b06:	615a      	str	r2, [r3, #20]
 8008b08:	68fb      	ldr	r3, [r7, #12]
 8008b0a:	683a      	ldr	r2, [r7, #0]
 8008b0c:	601a      	str	r2, [r3, #0]
 8008b0e:	f3bf 8f6f 	isb	sy
 8008b12:	46c0      	nop			@ (mov r8, r8)
 8008b14:	687b      	ldr	r3, [r7, #4]
 8008b16:	001c      	movs	r4, r3
 8008b18:	2300      	movs	r3, #0
 8008b1a:	001d      	movs	r5, r3
 8008b1c:	68fb      	ldr	r3, [r7, #12]
 8008b1e:	3304      	adds	r3, #4
 8008b20:	0022      	movs	r2, r4
 8008b22:	601a      	str	r2, [r3, #0]
 8008b24:	46c0      	nop			@ (mov r8, r8)
 8008b26:	46bd      	mov	sp, r7
 8008b28:	b004      	add	sp, #16
 8008b2a:	bdb0      	pop	{r4, r5, r7, pc}
 8008b2c:	40022000 	.word	0x40022000

08008b30 <HAL_FLASHEx_Erase>:
 8008b30:	b5b0      	push	{r4, r5, r7, lr}
 8008b32:	b084      	sub	sp, #16
 8008b34:	af00      	add	r7, sp, #0
 8008b36:	6078      	str	r0, [r7, #4]
 8008b38:	6039      	str	r1, [r7, #0]
 8008b3a:	4b33      	ldr	r3, [pc, #204]	@ (8008c08 <HAL_FLASHEx_Erase+0xd8>)
 8008b3c:	781b      	ldrb	r3, [r3, #0]
 8008b3e:	2b01      	cmp	r3, #1
 8008b40:	d101      	bne.n	8008b46 <HAL_FLASHEx_Erase+0x16>
 8008b42:	2302      	movs	r3, #2
 8008b44:	e05c      	b.n	8008c00 <HAL_FLASHEx_Erase+0xd0>
 8008b46:	4b30      	ldr	r3, [pc, #192]	@ (8008c08 <HAL_FLASHEx_Erase+0xd8>)
 8008b48:	2201      	movs	r2, #1
 8008b4a:	701a      	strb	r2, [r3, #0]
 8008b4c:	4b2e      	ldr	r3, [pc, #184]	@ (8008c08 <HAL_FLASHEx_Erase+0xd8>)
 8008b4e:	2200      	movs	r2, #0
 8008b50:	605a      	str	r2, [r3, #4]
 8008b52:	250f      	movs	r5, #15
 8008b54:	197c      	adds	r4, r7, r5
 8008b56:	23fa      	movs	r3, #250	@ 0xfa
 8008b58:	009b      	lsls	r3, r3, #2
 8008b5a:	0018      	movs	r0, r3
 8008b5c:	f7ff ff7a 	bl	8008a54 <FLASH_WaitForLastOperation>
 8008b60:	0003      	movs	r3, r0
 8008b62:	7023      	strb	r3, [r4, #0]
 8008b64:	002c      	movs	r4, r5
 8008b66:	193b      	adds	r3, r7, r4
 8008b68:	781b      	ldrb	r3, [r3, #0]
 8008b6a:	2b00      	cmp	r3, #0
 8008b6c:	d142      	bne.n	8008bf4 <HAL_FLASHEx_Erase+0xc4>
 8008b6e:	687b      	ldr	r3, [r7, #4]
 8008b70:	681b      	ldr	r3, [r3, #0]
 8008b72:	2b04      	cmp	r3, #4
 8008b74:	d10d      	bne.n	8008b92 <HAL_FLASHEx_Erase+0x62>
 8008b76:	687b      	ldr	r3, [r7, #4]
 8008b78:	685b      	ldr	r3, [r3, #4]
 8008b7a:	0018      	movs	r0, r3
 8008b7c:	f000 f848 	bl	8008c10 <FLASH_MassErase>
 8008b80:	193c      	adds	r4, r7, r4
 8008b82:	23fa      	movs	r3, #250	@ 0xfa
 8008b84:	009b      	lsls	r3, r3, #2
 8008b86:	0018      	movs	r0, r3
 8008b88:	f7ff ff64 	bl	8008a54 <FLASH_WaitForLastOperation>
 8008b8c:	0003      	movs	r3, r0
 8008b8e:	7023      	strb	r3, [r4, #0]
 8008b90:	e030      	b.n	8008bf4 <HAL_FLASHEx_Erase+0xc4>
 8008b92:	683b      	ldr	r3, [r7, #0]
 8008b94:	2201      	movs	r2, #1
 8008b96:	4252      	negs	r2, r2
 8008b98:	601a      	str	r2, [r3, #0]
 8008b9a:	687b      	ldr	r3, [r7, #4]
 8008b9c:	689b      	ldr	r3, [r3, #8]
 8008b9e:	60bb      	str	r3, [r7, #8]
 8008ba0:	e01a      	b.n	8008bd8 <HAL_FLASHEx_Erase+0xa8>
 8008ba2:	687b      	ldr	r3, [r7, #4]
 8008ba4:	685b      	ldr	r3, [r3, #4]
 8008ba6:	68ba      	ldr	r2, [r7, #8]
 8008ba8:	0011      	movs	r1, r2
 8008baa:	0018      	movs	r0, r3
 8008bac:	f000 f844 	bl	8008c38 <FLASH_PageErase>
 8008bb0:	250f      	movs	r5, #15
 8008bb2:	197c      	adds	r4, r7, r5
 8008bb4:	23fa      	movs	r3, #250	@ 0xfa
 8008bb6:	009b      	lsls	r3, r3, #2
 8008bb8:	0018      	movs	r0, r3
 8008bba:	f7ff ff4b 	bl	8008a54 <FLASH_WaitForLastOperation>
 8008bbe:	0003      	movs	r3, r0
 8008bc0:	7023      	strb	r3, [r4, #0]
 8008bc2:	197b      	adds	r3, r7, r5
 8008bc4:	781b      	ldrb	r3, [r3, #0]
 8008bc6:	2b00      	cmp	r3, #0
 8008bc8:	d003      	beq.n	8008bd2 <HAL_FLASHEx_Erase+0xa2>
 8008bca:	683b      	ldr	r3, [r7, #0]
 8008bcc:	68ba      	ldr	r2, [r7, #8]
 8008bce:	601a      	str	r2, [r3, #0]
 8008bd0:	e00a      	b.n	8008be8 <HAL_FLASHEx_Erase+0xb8>
 8008bd2:	68bb      	ldr	r3, [r7, #8]
 8008bd4:	3301      	adds	r3, #1
 8008bd6:	60bb      	str	r3, [r7, #8]
 8008bd8:	687b      	ldr	r3, [r7, #4]
 8008bda:	689a      	ldr	r2, [r3, #8]
 8008bdc:	687b      	ldr	r3, [r7, #4]
 8008bde:	68db      	ldr	r3, [r3, #12]
 8008be0:	18d3      	adds	r3, r2, r3
 8008be2:	68ba      	ldr	r2, [r7, #8]
 8008be4:	429a      	cmp	r2, r3
 8008be6:	d3dc      	bcc.n	8008ba2 <HAL_FLASHEx_Erase+0x72>
 8008be8:	4b08      	ldr	r3, [pc, #32]	@ (8008c0c <HAL_FLASHEx_Erase+0xdc>)
 8008bea:	695a      	ldr	r2, [r3, #20]
 8008bec:	4b07      	ldr	r3, [pc, #28]	@ (8008c0c <HAL_FLASHEx_Erase+0xdc>)
 8008bee:	2102      	movs	r1, #2
 8008bf0:	438a      	bics	r2, r1
 8008bf2:	615a      	str	r2, [r3, #20]
 8008bf4:	4b04      	ldr	r3, [pc, #16]	@ (8008c08 <HAL_FLASHEx_Erase+0xd8>)
 8008bf6:	2200      	movs	r2, #0
 8008bf8:	701a      	strb	r2, [r3, #0]
 8008bfa:	230f      	movs	r3, #15
 8008bfc:	18fb      	adds	r3, r7, r3
 8008bfe:	781b      	ldrb	r3, [r3, #0]
 8008c00:	0018      	movs	r0, r3
 8008c02:	46bd      	mov	sp, r7
 8008c04:	b004      	add	sp, #16
 8008c06:	bdb0      	pop	{r4, r5, r7, pc}
 8008c08:	2000dae0 	.word	0x2000dae0
 8008c0c:	40022000 	.word	0x40022000

08008c10 <FLASH_MassErase>:
 8008c10:	b580      	push	{r7, lr}
 8008c12:	b082      	sub	sp, #8
 8008c14:	af00      	add	r7, sp, #0
 8008c16:	6078      	str	r0, [r7, #4]
 8008c18:	4b06      	ldr	r3, [pc, #24]	@ (8008c34 <FLASH_MassErase+0x24>)
 8008c1a:	695a      	ldr	r2, [r3, #20]
 8008c1c:	687b      	ldr	r3, [r7, #4]
 8008c1e:	431a      	orrs	r2, r3
 8008c20:	4b04      	ldr	r3, [pc, #16]	@ (8008c34 <FLASH_MassErase+0x24>)
 8008c22:	2180      	movs	r1, #128	@ 0x80
 8008c24:	0249      	lsls	r1, r1, #9
 8008c26:	430a      	orrs	r2, r1
 8008c28:	615a      	str	r2, [r3, #20]
 8008c2a:	46c0      	nop			@ (mov r8, r8)
 8008c2c:	46bd      	mov	sp, r7
 8008c2e:	b002      	add	sp, #8
 8008c30:	bd80      	pop	{r7, pc}
 8008c32:	46c0      	nop			@ (mov r8, r8)
 8008c34:	40022000 	.word	0x40022000

08008c38 <FLASH_PageErase>:
 8008c38:	b580      	push	{r7, lr}
 8008c3a:	b084      	sub	sp, #16
 8008c3c:	af00      	add	r7, sp, #0
 8008c3e:	6078      	str	r0, [r7, #4]
 8008c40:	6039      	str	r1, [r7, #0]
 8008c42:	4b0f      	ldr	r3, [pc, #60]	@ (8008c80 <FLASH_PageErase+0x48>)
 8008c44:	695b      	ldr	r3, [r3, #20]
 8008c46:	4a0f      	ldr	r2, [pc, #60]	@ (8008c84 <FLASH_PageErase+0x4c>)
 8008c48:	4013      	ands	r3, r2
 8008c4a:	60fb      	str	r3, [r7, #12]
 8008c4c:	687b      	ldr	r3, [r7, #4]
 8008c4e:	2b04      	cmp	r3, #4
 8008c50:	d005      	beq.n	8008c5e <FLASH_PageErase+0x26>
 8008c52:	68fb      	ldr	r3, [r7, #12]
 8008c54:	2280      	movs	r2, #128	@ 0x80
 8008c56:	0192      	lsls	r2, r2, #6
 8008c58:	4313      	orrs	r3, r2
 8008c5a:	60fb      	str	r3, [r7, #12]
 8008c5c:	e003      	b.n	8008c66 <FLASH_PageErase+0x2e>
 8008c5e:	68fb      	ldr	r3, [r7, #12]
 8008c60:	4a09      	ldr	r2, [pc, #36]	@ (8008c88 <FLASH_PageErase+0x50>)
 8008c62:	4013      	ands	r3, r2
 8008c64:	60fb      	str	r3, [r7, #12]
 8008c66:	683b      	ldr	r3, [r7, #0]
 8008c68:	00da      	lsls	r2, r3, #3
 8008c6a:	68fb      	ldr	r3, [r7, #12]
 8008c6c:	431a      	orrs	r2, r3
 8008c6e:	4b04      	ldr	r3, [pc, #16]	@ (8008c80 <FLASH_PageErase+0x48>)
 8008c70:	4906      	ldr	r1, [pc, #24]	@ (8008c8c <FLASH_PageErase+0x54>)
 8008c72:	430a      	orrs	r2, r1
 8008c74:	615a      	str	r2, [r3, #20]
 8008c76:	46c0      	nop			@ (mov r8, r8)
 8008c78:	46bd      	mov	sp, r7
 8008c7a:	b004      	add	sp, #16
 8008c7c:	bd80      	pop	{r7, pc}
 8008c7e:	46c0      	nop			@ (mov r8, r8)
 8008c80:	40022000 	.word	0x40022000
 8008c84:	ffffe007 	.word	0xffffe007
 8008c88:	ffffdfff 	.word	0xffffdfff
 8008c8c:	00010002 	.word	0x00010002

08008c90 <HAL_GPIO_Init>:
 8008c90:	b580      	push	{r7, lr}
 8008c92:	b086      	sub	sp, #24
 8008c94:	af00      	add	r7, sp, #0
 8008c96:	6078      	str	r0, [r7, #4]
 8008c98:	6039      	str	r1, [r7, #0]
 8008c9a:	2300      	movs	r3, #0
 8008c9c:	617b      	str	r3, [r7, #20]
 8008c9e:	e14d      	b.n	8008f3c <HAL_GPIO_Init+0x2ac>
 8008ca0:	683b      	ldr	r3, [r7, #0]
 8008ca2:	681b      	ldr	r3, [r3, #0]
 8008ca4:	2101      	movs	r1, #1
 8008ca6:	697a      	ldr	r2, [r7, #20]
 8008ca8:	4091      	lsls	r1, r2
 8008caa:	000a      	movs	r2, r1
 8008cac:	4013      	ands	r3, r2
 8008cae:	60fb      	str	r3, [r7, #12]
 8008cb0:	68fb      	ldr	r3, [r7, #12]
 8008cb2:	2b00      	cmp	r3, #0
 8008cb4:	d100      	bne.n	8008cb8 <HAL_GPIO_Init+0x28>
 8008cb6:	e13e      	b.n	8008f36 <HAL_GPIO_Init+0x2a6>
 8008cb8:	683b      	ldr	r3, [r7, #0]
 8008cba:	685b      	ldr	r3, [r3, #4]
 8008cbc:	2203      	movs	r2, #3
 8008cbe:	4013      	ands	r3, r2
 8008cc0:	2b01      	cmp	r3, #1
 8008cc2:	d005      	beq.n	8008cd0 <HAL_GPIO_Init+0x40>
 8008cc4:	683b      	ldr	r3, [r7, #0]
 8008cc6:	685b      	ldr	r3, [r3, #4]
 8008cc8:	2203      	movs	r2, #3
 8008cca:	4013      	ands	r3, r2
 8008ccc:	2b02      	cmp	r3, #2
 8008cce:	d130      	bne.n	8008d32 <HAL_GPIO_Init+0xa2>
 8008cd0:	687b      	ldr	r3, [r7, #4]
 8008cd2:	689b      	ldr	r3, [r3, #8]
 8008cd4:	613b      	str	r3, [r7, #16]
 8008cd6:	697b      	ldr	r3, [r7, #20]
 8008cd8:	005b      	lsls	r3, r3, #1
 8008cda:	2203      	movs	r2, #3
 8008cdc:	409a      	lsls	r2, r3
 8008cde:	0013      	movs	r3, r2
 8008ce0:	43da      	mvns	r2, r3
 8008ce2:	693b      	ldr	r3, [r7, #16]
 8008ce4:	4013      	ands	r3, r2
 8008ce6:	613b      	str	r3, [r7, #16]
 8008ce8:	683b      	ldr	r3, [r7, #0]
 8008cea:	68da      	ldr	r2, [r3, #12]
 8008cec:	697b      	ldr	r3, [r7, #20]
 8008cee:	005b      	lsls	r3, r3, #1
 8008cf0:	409a      	lsls	r2, r3
 8008cf2:	0013      	movs	r3, r2
 8008cf4:	693a      	ldr	r2, [r7, #16]
 8008cf6:	4313      	orrs	r3, r2
 8008cf8:	613b      	str	r3, [r7, #16]
 8008cfa:	687b      	ldr	r3, [r7, #4]
 8008cfc:	693a      	ldr	r2, [r7, #16]
 8008cfe:	609a      	str	r2, [r3, #8]
 8008d00:	687b      	ldr	r3, [r7, #4]
 8008d02:	685b      	ldr	r3, [r3, #4]
 8008d04:	613b      	str	r3, [r7, #16]
 8008d06:	2201      	movs	r2, #1
 8008d08:	697b      	ldr	r3, [r7, #20]
 8008d0a:	409a      	lsls	r2, r3
 8008d0c:	0013      	movs	r3, r2
 8008d0e:	43da      	mvns	r2, r3
 8008d10:	693b      	ldr	r3, [r7, #16]
 8008d12:	4013      	ands	r3, r2
 8008d14:	613b      	str	r3, [r7, #16]
 8008d16:	683b      	ldr	r3, [r7, #0]
 8008d18:	685b      	ldr	r3, [r3, #4]
 8008d1a:	091b      	lsrs	r3, r3, #4
 8008d1c:	2201      	movs	r2, #1
 8008d1e:	401a      	ands	r2, r3
 8008d20:	697b      	ldr	r3, [r7, #20]
 8008d22:	409a      	lsls	r2, r3
 8008d24:	0013      	movs	r3, r2
 8008d26:	693a      	ldr	r2, [r7, #16]
 8008d28:	4313      	orrs	r3, r2
 8008d2a:	613b      	str	r3, [r7, #16]
 8008d2c:	687b      	ldr	r3, [r7, #4]
 8008d2e:	693a      	ldr	r2, [r7, #16]
 8008d30:	605a      	str	r2, [r3, #4]
 8008d32:	683b      	ldr	r3, [r7, #0]
 8008d34:	685b      	ldr	r3, [r3, #4]
 8008d36:	2203      	movs	r2, #3
 8008d38:	4013      	ands	r3, r2
 8008d3a:	2b03      	cmp	r3, #3
 8008d3c:	d017      	beq.n	8008d6e <HAL_GPIO_Init+0xde>
 8008d3e:	687b      	ldr	r3, [r7, #4]
 8008d40:	68db      	ldr	r3, [r3, #12]
 8008d42:	613b      	str	r3, [r7, #16]
 8008d44:	697b      	ldr	r3, [r7, #20]
 8008d46:	005b      	lsls	r3, r3, #1
 8008d48:	2203      	movs	r2, #3
 8008d4a:	409a      	lsls	r2, r3
 8008d4c:	0013      	movs	r3, r2
 8008d4e:	43da      	mvns	r2, r3
 8008d50:	693b      	ldr	r3, [r7, #16]
 8008d52:	4013      	ands	r3, r2
 8008d54:	613b      	str	r3, [r7, #16]
 8008d56:	683b      	ldr	r3, [r7, #0]
 8008d58:	689a      	ldr	r2, [r3, #8]
 8008d5a:	697b      	ldr	r3, [r7, #20]
 8008d5c:	005b      	lsls	r3, r3, #1
 8008d5e:	409a      	lsls	r2, r3
 8008d60:	0013      	movs	r3, r2
 8008d62:	693a      	ldr	r2, [r7, #16]
 8008d64:	4313      	orrs	r3, r2
 8008d66:	613b      	str	r3, [r7, #16]
 8008d68:	687b      	ldr	r3, [r7, #4]
 8008d6a:	693a      	ldr	r2, [r7, #16]
 8008d6c:	60da      	str	r2, [r3, #12]
 8008d6e:	683b      	ldr	r3, [r7, #0]
 8008d70:	685b      	ldr	r3, [r3, #4]
 8008d72:	2203      	movs	r2, #3
 8008d74:	4013      	ands	r3, r2
 8008d76:	2b02      	cmp	r3, #2
 8008d78:	d123      	bne.n	8008dc2 <HAL_GPIO_Init+0x132>
 8008d7a:	697b      	ldr	r3, [r7, #20]
 8008d7c:	08da      	lsrs	r2, r3, #3
 8008d7e:	687b      	ldr	r3, [r7, #4]
 8008d80:	3208      	adds	r2, #8
 8008d82:	0092      	lsls	r2, r2, #2
 8008d84:	58d3      	ldr	r3, [r2, r3]
 8008d86:	613b      	str	r3, [r7, #16]
 8008d88:	697b      	ldr	r3, [r7, #20]
 8008d8a:	2207      	movs	r2, #7
 8008d8c:	4013      	ands	r3, r2
 8008d8e:	009b      	lsls	r3, r3, #2
 8008d90:	220f      	movs	r2, #15
 8008d92:	409a      	lsls	r2, r3
 8008d94:	0013      	movs	r3, r2
 8008d96:	43da      	mvns	r2, r3
 8008d98:	693b      	ldr	r3, [r7, #16]
 8008d9a:	4013      	ands	r3, r2
 8008d9c:	613b      	str	r3, [r7, #16]
 8008d9e:	683b      	ldr	r3, [r7, #0]
 8008da0:	691a      	ldr	r2, [r3, #16]
 8008da2:	697b      	ldr	r3, [r7, #20]
 8008da4:	2107      	movs	r1, #7
 8008da6:	400b      	ands	r3, r1
 8008da8:	009b      	lsls	r3, r3, #2
 8008daa:	409a      	lsls	r2, r3
 8008dac:	0013      	movs	r3, r2
 8008dae:	693a      	ldr	r2, [r7, #16]
 8008db0:	4313      	orrs	r3, r2
 8008db2:	613b      	str	r3, [r7, #16]
 8008db4:	697b      	ldr	r3, [r7, #20]
 8008db6:	08da      	lsrs	r2, r3, #3
 8008db8:	687b      	ldr	r3, [r7, #4]
 8008dba:	3208      	adds	r2, #8
 8008dbc:	0092      	lsls	r2, r2, #2
 8008dbe:	6939      	ldr	r1, [r7, #16]
 8008dc0:	50d1      	str	r1, [r2, r3]
 8008dc2:	687b      	ldr	r3, [r7, #4]
 8008dc4:	681b      	ldr	r3, [r3, #0]
 8008dc6:	613b      	str	r3, [r7, #16]
 8008dc8:	697b      	ldr	r3, [r7, #20]
 8008dca:	005b      	lsls	r3, r3, #1
 8008dcc:	2203      	movs	r2, #3
 8008dce:	409a      	lsls	r2, r3
 8008dd0:	0013      	movs	r3, r2
 8008dd2:	43da      	mvns	r2, r3
 8008dd4:	693b      	ldr	r3, [r7, #16]
 8008dd6:	4013      	ands	r3, r2
 8008dd8:	613b      	str	r3, [r7, #16]
 8008dda:	683b      	ldr	r3, [r7, #0]
 8008ddc:	685b      	ldr	r3, [r3, #4]
 8008dde:	2203      	movs	r2, #3
 8008de0:	401a      	ands	r2, r3
 8008de2:	697b      	ldr	r3, [r7, #20]
 8008de4:	005b      	lsls	r3, r3, #1
 8008de6:	409a      	lsls	r2, r3
 8008de8:	0013      	movs	r3, r2
 8008dea:	693a      	ldr	r2, [r7, #16]
 8008dec:	4313      	orrs	r3, r2
 8008dee:	613b      	str	r3, [r7, #16]
 8008df0:	687b      	ldr	r3, [r7, #4]
 8008df2:	693a      	ldr	r2, [r7, #16]
 8008df4:	601a      	str	r2, [r3, #0]
 8008df6:	683b      	ldr	r3, [r7, #0]
 8008df8:	685a      	ldr	r2, [r3, #4]
 8008dfa:	23c0      	movs	r3, #192	@ 0xc0
 8008dfc:	029b      	lsls	r3, r3, #10
 8008dfe:	4013      	ands	r3, r2
 8008e00:	d100      	bne.n	8008e04 <HAL_GPIO_Init+0x174>
 8008e02:	e098      	b.n	8008f36 <HAL_GPIO_Init+0x2a6>
 8008e04:	4a53      	ldr	r2, [pc, #332]	@ (8008f54 <HAL_GPIO_Init+0x2c4>)
 8008e06:	697b      	ldr	r3, [r7, #20]
 8008e08:	089b      	lsrs	r3, r3, #2
 8008e0a:	3318      	adds	r3, #24
 8008e0c:	009b      	lsls	r3, r3, #2
 8008e0e:	589b      	ldr	r3, [r3, r2]
 8008e10:	613b      	str	r3, [r7, #16]
 8008e12:	697b      	ldr	r3, [r7, #20]
 8008e14:	2203      	movs	r2, #3
 8008e16:	4013      	ands	r3, r2
 8008e18:	00db      	lsls	r3, r3, #3
 8008e1a:	220f      	movs	r2, #15
 8008e1c:	409a      	lsls	r2, r3
 8008e1e:	0013      	movs	r3, r2
 8008e20:	43da      	mvns	r2, r3
 8008e22:	693b      	ldr	r3, [r7, #16]
 8008e24:	4013      	ands	r3, r2
 8008e26:	613b      	str	r3, [r7, #16]
 8008e28:	687a      	ldr	r2, [r7, #4]
 8008e2a:	23a0      	movs	r3, #160	@ 0xa0
 8008e2c:	05db      	lsls	r3, r3, #23
 8008e2e:	429a      	cmp	r2, r3
 8008e30:	d019      	beq.n	8008e66 <HAL_GPIO_Init+0x1d6>
 8008e32:	687b      	ldr	r3, [r7, #4]
 8008e34:	4a48      	ldr	r2, [pc, #288]	@ (8008f58 <HAL_GPIO_Init+0x2c8>)
 8008e36:	4293      	cmp	r3, r2
 8008e38:	d013      	beq.n	8008e62 <HAL_GPIO_Init+0x1d2>
 8008e3a:	687b      	ldr	r3, [r7, #4]
 8008e3c:	4a47      	ldr	r2, [pc, #284]	@ (8008f5c <HAL_GPIO_Init+0x2cc>)
 8008e3e:	4293      	cmp	r3, r2
 8008e40:	d00d      	beq.n	8008e5e <HAL_GPIO_Init+0x1ce>
 8008e42:	687b      	ldr	r3, [r7, #4]
 8008e44:	4a46      	ldr	r2, [pc, #280]	@ (8008f60 <HAL_GPIO_Init+0x2d0>)
 8008e46:	4293      	cmp	r3, r2
 8008e48:	d007      	beq.n	8008e5a <HAL_GPIO_Init+0x1ca>
 8008e4a:	687b      	ldr	r3, [r7, #4]
 8008e4c:	4a45      	ldr	r2, [pc, #276]	@ (8008f64 <HAL_GPIO_Init+0x2d4>)
 8008e4e:	4293      	cmp	r3, r2
 8008e50:	d101      	bne.n	8008e56 <HAL_GPIO_Init+0x1c6>
 8008e52:	2304      	movs	r3, #4
 8008e54:	e008      	b.n	8008e68 <HAL_GPIO_Init+0x1d8>
 8008e56:	2305      	movs	r3, #5
 8008e58:	e006      	b.n	8008e68 <HAL_GPIO_Init+0x1d8>
 8008e5a:	2303      	movs	r3, #3
 8008e5c:	e004      	b.n	8008e68 <HAL_GPIO_Init+0x1d8>
 8008e5e:	2302      	movs	r3, #2
 8008e60:	e002      	b.n	8008e68 <HAL_GPIO_Init+0x1d8>
 8008e62:	2301      	movs	r3, #1
 8008e64:	e000      	b.n	8008e68 <HAL_GPIO_Init+0x1d8>
 8008e66:	2300      	movs	r3, #0
 8008e68:	697a      	ldr	r2, [r7, #20]
 8008e6a:	2103      	movs	r1, #3
 8008e6c:	400a      	ands	r2, r1
 8008e6e:	00d2      	lsls	r2, r2, #3
 8008e70:	4093      	lsls	r3, r2
 8008e72:	693a      	ldr	r2, [r7, #16]
 8008e74:	4313      	orrs	r3, r2
 8008e76:	613b      	str	r3, [r7, #16]
 8008e78:	4936      	ldr	r1, [pc, #216]	@ (8008f54 <HAL_GPIO_Init+0x2c4>)
 8008e7a:	697b      	ldr	r3, [r7, #20]
 8008e7c:	089b      	lsrs	r3, r3, #2
 8008e7e:	3318      	adds	r3, #24
 8008e80:	009b      	lsls	r3, r3, #2
 8008e82:	693a      	ldr	r2, [r7, #16]
 8008e84:	505a      	str	r2, [r3, r1]
 8008e86:	4b33      	ldr	r3, [pc, #204]	@ (8008f54 <HAL_GPIO_Init+0x2c4>)
 8008e88:	681b      	ldr	r3, [r3, #0]
 8008e8a:	613b      	str	r3, [r7, #16]
 8008e8c:	68fb      	ldr	r3, [r7, #12]
 8008e8e:	43da      	mvns	r2, r3
 8008e90:	693b      	ldr	r3, [r7, #16]
 8008e92:	4013      	ands	r3, r2
 8008e94:	613b      	str	r3, [r7, #16]
 8008e96:	683b      	ldr	r3, [r7, #0]
 8008e98:	685a      	ldr	r2, [r3, #4]
 8008e9a:	2380      	movs	r3, #128	@ 0x80
 8008e9c:	035b      	lsls	r3, r3, #13
 8008e9e:	4013      	ands	r3, r2
 8008ea0:	d003      	beq.n	8008eaa <HAL_GPIO_Init+0x21a>
 8008ea2:	693a      	ldr	r2, [r7, #16]
 8008ea4:	68fb      	ldr	r3, [r7, #12]
 8008ea6:	4313      	orrs	r3, r2
 8008ea8:	613b      	str	r3, [r7, #16]
 8008eaa:	4b2a      	ldr	r3, [pc, #168]	@ (8008f54 <HAL_GPIO_Init+0x2c4>)
 8008eac:	693a      	ldr	r2, [r7, #16]
 8008eae:	601a      	str	r2, [r3, #0]
 8008eb0:	4b28      	ldr	r3, [pc, #160]	@ (8008f54 <HAL_GPIO_Init+0x2c4>)
 8008eb2:	685b      	ldr	r3, [r3, #4]
 8008eb4:	613b      	str	r3, [r7, #16]
 8008eb6:	68fb      	ldr	r3, [r7, #12]
 8008eb8:	43da      	mvns	r2, r3
 8008eba:	693b      	ldr	r3, [r7, #16]
 8008ebc:	4013      	ands	r3, r2
 8008ebe:	613b      	str	r3, [r7, #16]
 8008ec0:	683b      	ldr	r3, [r7, #0]
 8008ec2:	685a      	ldr	r2, [r3, #4]
 8008ec4:	2380      	movs	r3, #128	@ 0x80
 8008ec6:	039b      	lsls	r3, r3, #14
 8008ec8:	4013      	ands	r3, r2
 8008eca:	d003      	beq.n	8008ed4 <HAL_GPIO_Init+0x244>
 8008ecc:	693a      	ldr	r2, [r7, #16]
 8008ece:	68fb      	ldr	r3, [r7, #12]
 8008ed0:	4313      	orrs	r3, r2
 8008ed2:	613b      	str	r3, [r7, #16]
 8008ed4:	4b1f      	ldr	r3, [pc, #124]	@ (8008f54 <HAL_GPIO_Init+0x2c4>)
 8008ed6:	693a      	ldr	r2, [r7, #16]
 8008ed8:	605a      	str	r2, [r3, #4]
 8008eda:	4a1e      	ldr	r2, [pc, #120]	@ (8008f54 <HAL_GPIO_Init+0x2c4>)
 8008edc:	2384      	movs	r3, #132	@ 0x84
 8008ede:	58d3      	ldr	r3, [r2, r3]
 8008ee0:	613b      	str	r3, [r7, #16]
 8008ee2:	68fb      	ldr	r3, [r7, #12]
 8008ee4:	43da      	mvns	r2, r3
 8008ee6:	693b      	ldr	r3, [r7, #16]
 8008ee8:	4013      	ands	r3, r2
 8008eea:	613b      	str	r3, [r7, #16]
 8008eec:	683b      	ldr	r3, [r7, #0]
 8008eee:	685a      	ldr	r2, [r3, #4]
 8008ef0:	2380      	movs	r3, #128	@ 0x80
 8008ef2:	029b      	lsls	r3, r3, #10
 8008ef4:	4013      	ands	r3, r2
 8008ef6:	d003      	beq.n	8008f00 <HAL_GPIO_Init+0x270>
 8008ef8:	693a      	ldr	r2, [r7, #16]
 8008efa:	68fb      	ldr	r3, [r7, #12]
 8008efc:	4313      	orrs	r3, r2
 8008efe:	613b      	str	r3, [r7, #16]
 8008f00:	4914      	ldr	r1, [pc, #80]	@ (8008f54 <HAL_GPIO_Init+0x2c4>)
 8008f02:	2284      	movs	r2, #132	@ 0x84
 8008f04:	693b      	ldr	r3, [r7, #16]
 8008f06:	508b      	str	r3, [r1, r2]
 8008f08:	4a12      	ldr	r2, [pc, #72]	@ (8008f54 <HAL_GPIO_Init+0x2c4>)
 8008f0a:	2380      	movs	r3, #128	@ 0x80
 8008f0c:	58d3      	ldr	r3, [r2, r3]
 8008f0e:	613b      	str	r3, [r7, #16]
 8008f10:	68fb      	ldr	r3, [r7, #12]
 8008f12:	43da      	mvns	r2, r3
 8008f14:	693b      	ldr	r3, [r7, #16]
 8008f16:	4013      	ands	r3, r2
 8008f18:	613b      	str	r3, [r7, #16]
 8008f1a:	683b      	ldr	r3, [r7, #0]
 8008f1c:	685a      	ldr	r2, [r3, #4]
 8008f1e:	2380      	movs	r3, #128	@ 0x80
 8008f20:	025b      	lsls	r3, r3, #9
 8008f22:	4013      	ands	r3, r2
 8008f24:	d003      	beq.n	8008f2e <HAL_GPIO_Init+0x29e>
 8008f26:	693a      	ldr	r2, [r7, #16]
 8008f28:	68fb      	ldr	r3, [r7, #12]
 8008f2a:	4313      	orrs	r3, r2
 8008f2c:	613b      	str	r3, [r7, #16]
 8008f2e:	4909      	ldr	r1, [pc, #36]	@ (8008f54 <HAL_GPIO_Init+0x2c4>)
 8008f30:	2280      	movs	r2, #128	@ 0x80
 8008f32:	693b      	ldr	r3, [r7, #16]
 8008f34:	508b      	str	r3, [r1, r2]
 8008f36:	697b      	ldr	r3, [r7, #20]
 8008f38:	3301      	adds	r3, #1
 8008f3a:	617b      	str	r3, [r7, #20]
 8008f3c:	683b      	ldr	r3, [r7, #0]
 8008f3e:	681a      	ldr	r2, [r3, #0]
 8008f40:	697b      	ldr	r3, [r7, #20]
 8008f42:	40da      	lsrs	r2, r3
 8008f44:	1e13      	subs	r3, r2, #0
 8008f46:	d000      	beq.n	8008f4a <HAL_GPIO_Init+0x2ba>
 8008f48:	e6aa      	b.n	8008ca0 <HAL_GPIO_Init+0x10>
 8008f4a:	46c0      	nop			@ (mov r8, r8)
 8008f4c:	46c0      	nop			@ (mov r8, r8)
 8008f4e:	46bd      	mov	sp, r7
 8008f50:	b006      	add	sp, #24
 8008f52:	bd80      	pop	{r7, pc}
 8008f54:	40021800 	.word	0x40021800
 8008f58:	50000400 	.word	0x50000400
 8008f5c:	50000800 	.word	0x50000800
 8008f60:	50000c00 	.word	0x50000c00
 8008f64:	50001000 	.word	0x50001000

08008f68 <HAL_GPIO_ReadPin>:
 8008f68:	b580      	push	{r7, lr}
 8008f6a:	b084      	sub	sp, #16
 8008f6c:	af00      	add	r7, sp, #0
 8008f6e:	6078      	str	r0, [r7, #4]
 8008f70:	000a      	movs	r2, r1
 8008f72:	1cbb      	adds	r3, r7, #2
 8008f74:	801a      	strh	r2, [r3, #0]
 8008f76:	687b      	ldr	r3, [r7, #4]
 8008f78:	691b      	ldr	r3, [r3, #16]
 8008f7a:	1cba      	adds	r2, r7, #2
 8008f7c:	8812      	ldrh	r2, [r2, #0]
 8008f7e:	4013      	ands	r3, r2
 8008f80:	d004      	beq.n	8008f8c <HAL_GPIO_ReadPin+0x24>
 8008f82:	230f      	movs	r3, #15
 8008f84:	18fb      	adds	r3, r7, r3
 8008f86:	2201      	movs	r2, #1
 8008f88:	701a      	strb	r2, [r3, #0]
 8008f8a:	e003      	b.n	8008f94 <HAL_GPIO_ReadPin+0x2c>
 8008f8c:	230f      	movs	r3, #15
 8008f8e:	18fb      	adds	r3, r7, r3
 8008f90:	2200      	movs	r2, #0
 8008f92:	701a      	strb	r2, [r3, #0]
 8008f94:	230f      	movs	r3, #15
 8008f96:	18fb      	adds	r3, r7, r3
 8008f98:	781b      	ldrb	r3, [r3, #0]
 8008f9a:	0018      	movs	r0, r3
 8008f9c:	46bd      	mov	sp, r7
 8008f9e:	b004      	add	sp, #16
 8008fa0:	bd80      	pop	{r7, pc}

08008fa2 <HAL_GPIO_WritePin>:
 8008fa2:	b580      	push	{r7, lr}
 8008fa4:	b082      	sub	sp, #8
 8008fa6:	af00      	add	r7, sp, #0
 8008fa8:	6078      	str	r0, [r7, #4]
 8008faa:	0008      	movs	r0, r1
 8008fac:	0011      	movs	r1, r2
 8008fae:	1cbb      	adds	r3, r7, #2
 8008fb0:	1c02      	adds	r2, r0, #0
 8008fb2:	801a      	strh	r2, [r3, #0]
 8008fb4:	1c7b      	adds	r3, r7, #1
 8008fb6:	1c0a      	adds	r2, r1, #0
 8008fb8:	701a      	strb	r2, [r3, #0]
 8008fba:	1c7b      	adds	r3, r7, #1
 8008fbc:	781b      	ldrb	r3, [r3, #0]
 8008fbe:	2b00      	cmp	r3, #0
 8008fc0:	d004      	beq.n	8008fcc <HAL_GPIO_WritePin+0x2a>
 8008fc2:	1cbb      	adds	r3, r7, #2
 8008fc4:	881a      	ldrh	r2, [r3, #0]
 8008fc6:	687b      	ldr	r3, [r7, #4]
 8008fc8:	619a      	str	r2, [r3, #24]
 8008fca:	e003      	b.n	8008fd4 <HAL_GPIO_WritePin+0x32>
 8008fcc:	1cbb      	adds	r3, r7, #2
 8008fce:	881a      	ldrh	r2, [r3, #0]
 8008fd0:	687b      	ldr	r3, [r7, #4]
 8008fd2:	629a      	str	r2, [r3, #40]	@ 0x28
 8008fd4:	46c0      	nop			@ (mov r8, r8)
 8008fd6:	46bd      	mov	sp, r7
 8008fd8:	b002      	add	sp, #8
 8008fda:	bd80      	pop	{r7, pc}

08008fdc <HAL_I2C_Init>:
 8008fdc:	b580      	push	{r7, lr}
 8008fde:	b082      	sub	sp, #8
 8008fe0:	af00      	add	r7, sp, #0
 8008fe2:	6078      	str	r0, [r7, #4]
 8008fe4:	687b      	ldr	r3, [r7, #4]
 8008fe6:	2b00      	cmp	r3, #0
 8008fe8:	d101      	bne.n	8008fee <HAL_I2C_Init+0x12>
 8008fea:	2301      	movs	r3, #1
 8008fec:	e08f      	b.n	800910e <HAL_I2C_Init+0x132>
 8008fee:	687b      	ldr	r3, [r7, #4]
 8008ff0:	2241      	movs	r2, #65	@ 0x41
 8008ff2:	5c9b      	ldrb	r3, [r3, r2]
 8008ff4:	b2db      	uxtb	r3, r3
 8008ff6:	2b00      	cmp	r3, #0
 8008ff8:	d107      	bne.n	800900a <HAL_I2C_Init+0x2e>
 8008ffa:	687b      	ldr	r3, [r7, #4]
 8008ffc:	2240      	movs	r2, #64	@ 0x40
 8008ffe:	2100      	movs	r1, #0
 8009000:	5499      	strb	r1, [r3, r2]
 8009002:	687b      	ldr	r3, [r7, #4]
 8009004:	0018      	movs	r0, r3
 8009006:	f7fd fafd 	bl	8006604 <HAL_I2C_MspInit>
 800900a:	687b      	ldr	r3, [r7, #4]
 800900c:	2241      	movs	r2, #65	@ 0x41
 800900e:	2124      	movs	r1, #36	@ 0x24
 8009010:	5499      	strb	r1, [r3, r2]
 8009012:	687b      	ldr	r3, [r7, #4]
 8009014:	681b      	ldr	r3, [r3, #0]
 8009016:	681a      	ldr	r2, [r3, #0]
 8009018:	687b      	ldr	r3, [r7, #4]
 800901a:	681b      	ldr	r3, [r3, #0]
 800901c:	2101      	movs	r1, #1
 800901e:	438a      	bics	r2, r1
 8009020:	601a      	str	r2, [r3, #0]
 8009022:	687b      	ldr	r3, [r7, #4]
 8009024:	685a      	ldr	r2, [r3, #4]
 8009026:	687b      	ldr	r3, [r7, #4]
 8009028:	681b      	ldr	r3, [r3, #0]
 800902a:	493b      	ldr	r1, [pc, #236]	@ (8009118 <HAL_I2C_Init+0x13c>)
 800902c:	400a      	ands	r2, r1
 800902e:	611a      	str	r2, [r3, #16]
 8009030:	687b      	ldr	r3, [r7, #4]
 8009032:	681b      	ldr	r3, [r3, #0]
 8009034:	689a      	ldr	r2, [r3, #8]
 8009036:	687b      	ldr	r3, [r7, #4]
 8009038:	681b      	ldr	r3, [r3, #0]
 800903a:	4938      	ldr	r1, [pc, #224]	@ (800911c <HAL_I2C_Init+0x140>)
 800903c:	400a      	ands	r2, r1
 800903e:	609a      	str	r2, [r3, #8]
 8009040:	687b      	ldr	r3, [r7, #4]
 8009042:	68db      	ldr	r3, [r3, #12]
 8009044:	2b01      	cmp	r3, #1
 8009046:	d108      	bne.n	800905a <HAL_I2C_Init+0x7e>
 8009048:	687b      	ldr	r3, [r7, #4]
 800904a:	689a      	ldr	r2, [r3, #8]
 800904c:	687b      	ldr	r3, [r7, #4]
 800904e:	681b      	ldr	r3, [r3, #0]
 8009050:	2180      	movs	r1, #128	@ 0x80
 8009052:	0209      	lsls	r1, r1, #8
 8009054:	430a      	orrs	r2, r1
 8009056:	609a      	str	r2, [r3, #8]
 8009058:	e007      	b.n	800906a <HAL_I2C_Init+0x8e>
 800905a:	687b      	ldr	r3, [r7, #4]
 800905c:	689a      	ldr	r2, [r3, #8]
 800905e:	687b      	ldr	r3, [r7, #4]
 8009060:	681b      	ldr	r3, [r3, #0]
 8009062:	2184      	movs	r1, #132	@ 0x84
 8009064:	0209      	lsls	r1, r1, #8
 8009066:	430a      	orrs	r2, r1
 8009068:	609a      	str	r2, [r3, #8]
 800906a:	687b      	ldr	r3, [r7, #4]
 800906c:	68db      	ldr	r3, [r3, #12]
 800906e:	2b02      	cmp	r3, #2
 8009070:	d109      	bne.n	8009086 <HAL_I2C_Init+0xaa>
 8009072:	687b      	ldr	r3, [r7, #4]
 8009074:	681b      	ldr	r3, [r3, #0]
 8009076:	685a      	ldr	r2, [r3, #4]
 8009078:	687b      	ldr	r3, [r7, #4]
 800907a:	681b      	ldr	r3, [r3, #0]
 800907c:	2180      	movs	r1, #128	@ 0x80
 800907e:	0109      	lsls	r1, r1, #4
 8009080:	430a      	orrs	r2, r1
 8009082:	605a      	str	r2, [r3, #4]
 8009084:	e007      	b.n	8009096 <HAL_I2C_Init+0xba>
 8009086:	687b      	ldr	r3, [r7, #4]
 8009088:	681b      	ldr	r3, [r3, #0]
 800908a:	685a      	ldr	r2, [r3, #4]
 800908c:	687b      	ldr	r3, [r7, #4]
 800908e:	681b      	ldr	r3, [r3, #0]
 8009090:	4923      	ldr	r1, [pc, #140]	@ (8009120 <HAL_I2C_Init+0x144>)
 8009092:	400a      	ands	r2, r1
 8009094:	605a      	str	r2, [r3, #4]
 8009096:	687b      	ldr	r3, [r7, #4]
 8009098:	681b      	ldr	r3, [r3, #0]
 800909a:	685a      	ldr	r2, [r3, #4]
 800909c:	687b      	ldr	r3, [r7, #4]
 800909e:	681b      	ldr	r3, [r3, #0]
 80090a0:	4920      	ldr	r1, [pc, #128]	@ (8009124 <HAL_I2C_Init+0x148>)
 80090a2:	430a      	orrs	r2, r1
 80090a4:	605a      	str	r2, [r3, #4]
 80090a6:	687b      	ldr	r3, [r7, #4]
 80090a8:	681b      	ldr	r3, [r3, #0]
 80090aa:	68da      	ldr	r2, [r3, #12]
 80090ac:	687b      	ldr	r3, [r7, #4]
 80090ae:	681b      	ldr	r3, [r3, #0]
 80090b0:	491a      	ldr	r1, [pc, #104]	@ (800911c <HAL_I2C_Init+0x140>)
 80090b2:	400a      	ands	r2, r1
 80090b4:	60da      	str	r2, [r3, #12]
 80090b6:	687b      	ldr	r3, [r7, #4]
 80090b8:	691a      	ldr	r2, [r3, #16]
 80090ba:	687b      	ldr	r3, [r7, #4]
 80090bc:	695b      	ldr	r3, [r3, #20]
 80090be:	431a      	orrs	r2, r3
 80090c0:	0011      	movs	r1, r2
 80090c2:	687b      	ldr	r3, [r7, #4]
 80090c4:	699b      	ldr	r3, [r3, #24]
 80090c6:	021a      	lsls	r2, r3, #8
 80090c8:	687b      	ldr	r3, [r7, #4]
 80090ca:	681b      	ldr	r3, [r3, #0]
 80090cc:	430a      	orrs	r2, r1
 80090ce:	60da      	str	r2, [r3, #12]
 80090d0:	687b      	ldr	r3, [r7, #4]
 80090d2:	69d9      	ldr	r1, [r3, #28]
 80090d4:	687b      	ldr	r3, [r7, #4]
 80090d6:	6a1a      	ldr	r2, [r3, #32]
 80090d8:	687b      	ldr	r3, [r7, #4]
 80090da:	681b      	ldr	r3, [r3, #0]
 80090dc:	430a      	orrs	r2, r1
 80090de:	601a      	str	r2, [r3, #0]
 80090e0:	687b      	ldr	r3, [r7, #4]
 80090e2:	681b      	ldr	r3, [r3, #0]
 80090e4:	681a      	ldr	r2, [r3, #0]
 80090e6:	687b      	ldr	r3, [r7, #4]
 80090e8:	681b      	ldr	r3, [r3, #0]
 80090ea:	2101      	movs	r1, #1
 80090ec:	430a      	orrs	r2, r1
 80090ee:	601a      	str	r2, [r3, #0]
 80090f0:	687b      	ldr	r3, [r7, #4]
 80090f2:	2200      	movs	r2, #0
 80090f4:	645a      	str	r2, [r3, #68]	@ 0x44
 80090f6:	687b      	ldr	r3, [r7, #4]
 80090f8:	2241      	movs	r2, #65	@ 0x41
 80090fa:	2120      	movs	r1, #32
 80090fc:	5499      	strb	r1, [r3, r2]
 80090fe:	687b      	ldr	r3, [r7, #4]
 8009100:	2200      	movs	r2, #0
 8009102:	631a      	str	r2, [r3, #48]	@ 0x30
 8009104:	687b      	ldr	r3, [r7, #4]
 8009106:	2242      	movs	r2, #66	@ 0x42
 8009108:	2100      	movs	r1, #0
 800910a:	5499      	strb	r1, [r3, r2]
 800910c:	2300      	movs	r3, #0
 800910e:	0018      	movs	r0, r3
 8009110:	46bd      	mov	sp, r7
 8009112:	b002      	add	sp, #8
 8009114:	bd80      	pop	{r7, pc}
 8009116:	46c0      	nop			@ (mov r8, r8)
 8009118:	f0ffffff 	.word	0xf0ffffff
 800911c:	ffff7fff 	.word	0xffff7fff
 8009120:	fffff7ff 	.word	0xfffff7ff
 8009124:	02008000 	.word	0x02008000

08009128 <HAL_I2CEx_ConfigAnalogFilter>:
 8009128:	b580      	push	{r7, lr}
 800912a:	b082      	sub	sp, #8
 800912c:	af00      	add	r7, sp, #0
 800912e:	6078      	str	r0, [r7, #4]
 8009130:	6039      	str	r1, [r7, #0]
 8009132:	687b      	ldr	r3, [r7, #4]
 8009134:	2241      	movs	r2, #65	@ 0x41
 8009136:	5c9b      	ldrb	r3, [r3, r2]
 8009138:	b2db      	uxtb	r3, r3
 800913a:	2b20      	cmp	r3, #32
 800913c:	d138      	bne.n	80091b0 <HAL_I2CEx_ConfigAnalogFilter+0x88>
 800913e:	687b      	ldr	r3, [r7, #4]
 8009140:	2240      	movs	r2, #64	@ 0x40
 8009142:	5c9b      	ldrb	r3, [r3, r2]
 8009144:	2b01      	cmp	r3, #1
 8009146:	d101      	bne.n	800914c <HAL_I2CEx_ConfigAnalogFilter+0x24>
 8009148:	2302      	movs	r3, #2
 800914a:	e032      	b.n	80091b2 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 800914c:	687b      	ldr	r3, [r7, #4]
 800914e:	2240      	movs	r2, #64	@ 0x40
 8009150:	2101      	movs	r1, #1
 8009152:	5499      	strb	r1, [r3, r2]
 8009154:	687b      	ldr	r3, [r7, #4]
 8009156:	2241      	movs	r2, #65	@ 0x41
 8009158:	2124      	movs	r1, #36	@ 0x24
 800915a:	5499      	strb	r1, [r3, r2]
 800915c:	687b      	ldr	r3, [r7, #4]
 800915e:	681b      	ldr	r3, [r3, #0]
 8009160:	681a      	ldr	r2, [r3, #0]
 8009162:	687b      	ldr	r3, [r7, #4]
 8009164:	681b      	ldr	r3, [r3, #0]
 8009166:	2101      	movs	r1, #1
 8009168:	438a      	bics	r2, r1
 800916a:	601a      	str	r2, [r3, #0]
 800916c:	687b      	ldr	r3, [r7, #4]
 800916e:	681b      	ldr	r3, [r3, #0]
 8009170:	681a      	ldr	r2, [r3, #0]
 8009172:	687b      	ldr	r3, [r7, #4]
 8009174:	681b      	ldr	r3, [r3, #0]
 8009176:	4911      	ldr	r1, [pc, #68]	@ (80091bc <HAL_I2CEx_ConfigAnalogFilter+0x94>)
 8009178:	400a      	ands	r2, r1
 800917a:	601a      	str	r2, [r3, #0]
 800917c:	687b      	ldr	r3, [r7, #4]
 800917e:	681b      	ldr	r3, [r3, #0]
 8009180:	6819      	ldr	r1, [r3, #0]
 8009182:	687b      	ldr	r3, [r7, #4]
 8009184:	681b      	ldr	r3, [r3, #0]
 8009186:	683a      	ldr	r2, [r7, #0]
 8009188:	430a      	orrs	r2, r1
 800918a:	601a      	str	r2, [r3, #0]
 800918c:	687b      	ldr	r3, [r7, #4]
 800918e:	681b      	ldr	r3, [r3, #0]
 8009190:	681a      	ldr	r2, [r3, #0]
 8009192:	687b      	ldr	r3, [r7, #4]
 8009194:	681b      	ldr	r3, [r3, #0]
 8009196:	2101      	movs	r1, #1
 8009198:	430a      	orrs	r2, r1
 800919a:	601a      	str	r2, [r3, #0]
 800919c:	687b      	ldr	r3, [r7, #4]
 800919e:	2241      	movs	r2, #65	@ 0x41
 80091a0:	2120      	movs	r1, #32
 80091a2:	5499      	strb	r1, [r3, r2]
 80091a4:	687b      	ldr	r3, [r7, #4]
 80091a6:	2240      	movs	r2, #64	@ 0x40
 80091a8:	2100      	movs	r1, #0
 80091aa:	5499      	strb	r1, [r3, r2]
 80091ac:	2300      	movs	r3, #0
 80091ae:	e000      	b.n	80091b2 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 80091b0:	2302      	movs	r3, #2
 80091b2:	0018      	movs	r0, r3
 80091b4:	46bd      	mov	sp, r7
 80091b6:	b002      	add	sp, #8
 80091b8:	bd80      	pop	{r7, pc}
 80091ba:	46c0      	nop			@ (mov r8, r8)
 80091bc:	ffffefff 	.word	0xffffefff

080091c0 <HAL_I2CEx_ConfigDigitalFilter>:
 80091c0:	b580      	push	{r7, lr}
 80091c2:	b084      	sub	sp, #16
 80091c4:	af00      	add	r7, sp, #0
 80091c6:	6078      	str	r0, [r7, #4]
 80091c8:	6039      	str	r1, [r7, #0]
 80091ca:	687b      	ldr	r3, [r7, #4]
 80091cc:	2241      	movs	r2, #65	@ 0x41
 80091ce:	5c9b      	ldrb	r3, [r3, r2]
 80091d0:	b2db      	uxtb	r3, r3
 80091d2:	2b20      	cmp	r3, #32
 80091d4:	d139      	bne.n	800924a <HAL_I2CEx_ConfigDigitalFilter+0x8a>
 80091d6:	687b      	ldr	r3, [r7, #4]
 80091d8:	2240      	movs	r2, #64	@ 0x40
 80091da:	5c9b      	ldrb	r3, [r3, r2]
 80091dc:	2b01      	cmp	r3, #1
 80091de:	d101      	bne.n	80091e4 <HAL_I2CEx_ConfigDigitalFilter+0x24>
 80091e0:	2302      	movs	r3, #2
 80091e2:	e033      	b.n	800924c <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 80091e4:	687b      	ldr	r3, [r7, #4]
 80091e6:	2240      	movs	r2, #64	@ 0x40
 80091e8:	2101      	movs	r1, #1
 80091ea:	5499      	strb	r1, [r3, r2]
 80091ec:	687b      	ldr	r3, [r7, #4]
 80091ee:	2241      	movs	r2, #65	@ 0x41
 80091f0:	2124      	movs	r1, #36	@ 0x24
 80091f2:	5499      	strb	r1, [r3, r2]
 80091f4:	687b      	ldr	r3, [r7, #4]
 80091f6:	681b      	ldr	r3, [r3, #0]
 80091f8:	681a      	ldr	r2, [r3, #0]
 80091fa:	687b      	ldr	r3, [r7, #4]
 80091fc:	681b      	ldr	r3, [r3, #0]
 80091fe:	2101      	movs	r1, #1
 8009200:	438a      	bics	r2, r1
 8009202:	601a      	str	r2, [r3, #0]
 8009204:	687b      	ldr	r3, [r7, #4]
 8009206:	681b      	ldr	r3, [r3, #0]
 8009208:	681b      	ldr	r3, [r3, #0]
 800920a:	60fb      	str	r3, [r7, #12]
 800920c:	68fb      	ldr	r3, [r7, #12]
 800920e:	4a11      	ldr	r2, [pc, #68]	@ (8009254 <HAL_I2CEx_ConfigDigitalFilter+0x94>)
 8009210:	4013      	ands	r3, r2
 8009212:	60fb      	str	r3, [r7, #12]
 8009214:	683b      	ldr	r3, [r7, #0]
 8009216:	021b      	lsls	r3, r3, #8
 8009218:	68fa      	ldr	r2, [r7, #12]
 800921a:	4313      	orrs	r3, r2
 800921c:	60fb      	str	r3, [r7, #12]
 800921e:	687b      	ldr	r3, [r7, #4]
 8009220:	681b      	ldr	r3, [r3, #0]
 8009222:	68fa      	ldr	r2, [r7, #12]
 8009224:	601a      	str	r2, [r3, #0]
 8009226:	687b      	ldr	r3, [r7, #4]
 8009228:	681b      	ldr	r3, [r3, #0]
 800922a:	681a      	ldr	r2, [r3, #0]
 800922c:	687b      	ldr	r3, [r7, #4]
 800922e:	681b      	ldr	r3, [r3, #0]
 8009230:	2101      	movs	r1, #1
 8009232:	430a      	orrs	r2, r1
 8009234:	601a      	str	r2, [r3, #0]
 8009236:	687b      	ldr	r3, [r7, #4]
 8009238:	2241      	movs	r2, #65	@ 0x41
 800923a:	2120      	movs	r1, #32
 800923c:	5499      	strb	r1, [r3, r2]
 800923e:	687b      	ldr	r3, [r7, #4]
 8009240:	2240      	movs	r2, #64	@ 0x40
 8009242:	2100      	movs	r1, #0
 8009244:	5499      	strb	r1, [r3, r2]
 8009246:	2300      	movs	r3, #0
 8009248:	e000      	b.n	800924c <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 800924a:	2302      	movs	r3, #2
 800924c:	0018      	movs	r0, r3
 800924e:	46bd      	mov	sp, r7
 8009250:	b004      	add	sp, #16
 8009252:	bd80      	pop	{r7, pc}
 8009254:	fffff0ff 	.word	0xfffff0ff

08009258 <HAL_PCD_Init>:
 8009258:	b590      	push	{r4, r7, lr}
 800925a:	b087      	sub	sp, #28
 800925c:	af02      	add	r7, sp, #8
 800925e:	6078      	str	r0, [r7, #4]
 8009260:	687b      	ldr	r3, [r7, #4]
 8009262:	2b00      	cmp	r3, #0
 8009264:	d101      	bne.n	800926a <HAL_PCD_Init+0x12>
 8009266:	2301      	movs	r3, #1
 8009268:	e0ea      	b.n	8009440 <HAL_PCD_Init+0x1e8>
 800926a:	687b      	ldr	r3, [r7, #4]
 800926c:	4a76      	ldr	r2, [pc, #472]	@ (8009448 <HAL_PCD_Init+0x1f0>)
 800926e:	5c9b      	ldrb	r3, [r3, r2]
 8009270:	b2db      	uxtb	r3, r3
 8009272:	2b00      	cmp	r3, #0
 8009274:	d108      	bne.n	8009288 <HAL_PCD_Init+0x30>
 8009276:	687a      	ldr	r2, [r7, #4]
 8009278:	23a5      	movs	r3, #165	@ 0xa5
 800927a:	009b      	lsls	r3, r3, #2
 800927c:	2100      	movs	r1, #0
 800927e:	54d1      	strb	r1, [r2, r3]
 8009280:	687b      	ldr	r3, [r7, #4]
 8009282:	0018      	movs	r0, r3
 8009284:	f7fd fb86 	bl	8006994 <HAL_PCD_MspInit>
 8009288:	687b      	ldr	r3, [r7, #4]
 800928a:	4a6f      	ldr	r2, [pc, #444]	@ (8009448 <HAL_PCD_Init+0x1f0>)
 800928c:	2103      	movs	r1, #3
 800928e:	5499      	strb	r1, [r3, r2]
 8009290:	687b      	ldr	r3, [r7, #4]
 8009292:	681b      	ldr	r3, [r3, #0]
 8009294:	0018      	movs	r0, r3
 8009296:	f002 fe81 	bl	800bf9c <USB_DisableGlobalInt>
 800929a:	230f      	movs	r3, #15
 800929c:	18fb      	adds	r3, r7, r3
 800929e:	2200      	movs	r2, #0
 80092a0:	701a      	strb	r2, [r3, #0]
 80092a2:	e049      	b.n	8009338 <HAL_PCD_Init+0xe0>
 80092a4:	200f      	movs	r0, #15
 80092a6:	183b      	adds	r3, r7, r0
 80092a8:	781a      	ldrb	r2, [r3, #0]
 80092aa:	6879      	ldr	r1, [r7, #4]
 80092ac:	0013      	movs	r3, r2
 80092ae:	009b      	lsls	r3, r3, #2
 80092b0:	189b      	adds	r3, r3, r2
 80092b2:	00db      	lsls	r3, r3, #3
 80092b4:	18cb      	adds	r3, r1, r3
 80092b6:	3315      	adds	r3, #21
 80092b8:	2201      	movs	r2, #1
 80092ba:	701a      	strb	r2, [r3, #0]
 80092bc:	183b      	adds	r3, r7, r0
 80092be:	781a      	ldrb	r2, [r3, #0]
 80092c0:	6879      	ldr	r1, [r7, #4]
 80092c2:	0013      	movs	r3, r2
 80092c4:	009b      	lsls	r3, r3, #2
 80092c6:	189b      	adds	r3, r3, r2
 80092c8:	00db      	lsls	r3, r3, #3
 80092ca:	18cb      	adds	r3, r1, r3
 80092cc:	3314      	adds	r3, #20
 80092ce:	183a      	adds	r2, r7, r0
 80092d0:	7812      	ldrb	r2, [r2, #0]
 80092d2:	701a      	strb	r2, [r3, #0]
 80092d4:	183b      	adds	r3, r7, r0
 80092d6:	781a      	ldrb	r2, [r3, #0]
 80092d8:	6879      	ldr	r1, [r7, #4]
 80092da:	0013      	movs	r3, r2
 80092dc:	009b      	lsls	r3, r3, #2
 80092de:	189b      	adds	r3, r3, r2
 80092e0:	00db      	lsls	r3, r3, #3
 80092e2:	18cb      	adds	r3, r1, r3
 80092e4:	3317      	adds	r3, #23
 80092e6:	2200      	movs	r2, #0
 80092e8:	701a      	strb	r2, [r3, #0]
 80092ea:	183b      	adds	r3, r7, r0
 80092ec:	781a      	ldrb	r2, [r3, #0]
 80092ee:	6879      	ldr	r1, [r7, #4]
 80092f0:	0013      	movs	r3, r2
 80092f2:	009b      	lsls	r3, r3, #2
 80092f4:	189b      	adds	r3, r3, r2
 80092f6:	00db      	lsls	r3, r3, #3
 80092f8:	18cb      	adds	r3, r1, r3
 80092fa:	3324      	adds	r3, #36	@ 0x24
 80092fc:	2200      	movs	r2, #0
 80092fe:	601a      	str	r2, [r3, #0]
 8009300:	183b      	adds	r3, r7, r0
 8009302:	781a      	ldrb	r2, [r3, #0]
 8009304:	6879      	ldr	r1, [r7, #4]
 8009306:	0013      	movs	r3, r2
 8009308:	009b      	lsls	r3, r3, #2
 800930a:	189b      	adds	r3, r3, r2
 800930c:	00db      	lsls	r3, r3, #3
 800930e:	18cb      	adds	r3, r1, r3
 8009310:	3328      	adds	r3, #40	@ 0x28
 8009312:	2200      	movs	r2, #0
 8009314:	601a      	str	r2, [r3, #0]
 8009316:	183b      	adds	r3, r7, r0
 8009318:	781b      	ldrb	r3, [r3, #0]
 800931a:	6879      	ldr	r1, [r7, #4]
 800931c:	1c5a      	adds	r2, r3, #1
 800931e:	0013      	movs	r3, r2
 8009320:	009b      	lsls	r3, r3, #2
 8009322:	189b      	adds	r3, r3, r2
 8009324:	00db      	lsls	r3, r3, #3
 8009326:	18cb      	adds	r3, r1, r3
 8009328:	3304      	adds	r3, #4
 800932a:	2200      	movs	r2, #0
 800932c:	601a      	str	r2, [r3, #0]
 800932e:	183b      	adds	r3, r7, r0
 8009330:	781a      	ldrb	r2, [r3, #0]
 8009332:	183b      	adds	r3, r7, r0
 8009334:	3201      	adds	r2, #1
 8009336:	701a      	strb	r2, [r3, #0]
 8009338:	687b      	ldr	r3, [r7, #4]
 800933a:	791b      	ldrb	r3, [r3, #4]
 800933c:	210f      	movs	r1, #15
 800933e:	187a      	adds	r2, r7, r1
 8009340:	7812      	ldrb	r2, [r2, #0]
 8009342:	429a      	cmp	r2, r3
 8009344:	d3ae      	bcc.n	80092a4 <HAL_PCD_Init+0x4c>
 8009346:	187b      	adds	r3, r7, r1
 8009348:	2200      	movs	r2, #0
 800934a:	701a      	strb	r2, [r3, #0]
 800934c:	e056      	b.n	80093fc <HAL_PCD_Init+0x1a4>
 800934e:	240f      	movs	r4, #15
 8009350:	193b      	adds	r3, r7, r4
 8009352:	781a      	ldrb	r2, [r3, #0]
 8009354:	6878      	ldr	r0, [r7, #4]
 8009356:	2356      	movs	r3, #86	@ 0x56
 8009358:	33ff      	adds	r3, #255	@ 0xff
 800935a:	0019      	movs	r1, r3
 800935c:	0013      	movs	r3, r2
 800935e:	009b      	lsls	r3, r3, #2
 8009360:	189b      	adds	r3, r3, r2
 8009362:	00db      	lsls	r3, r3, #3
 8009364:	18c3      	adds	r3, r0, r3
 8009366:	185b      	adds	r3, r3, r1
 8009368:	2200      	movs	r2, #0
 800936a:	701a      	strb	r2, [r3, #0]
 800936c:	193b      	adds	r3, r7, r4
 800936e:	781a      	ldrb	r2, [r3, #0]
 8009370:	6878      	ldr	r0, [r7, #4]
 8009372:	23aa      	movs	r3, #170	@ 0xaa
 8009374:	0059      	lsls	r1, r3, #1
 8009376:	0013      	movs	r3, r2
 8009378:	009b      	lsls	r3, r3, #2
 800937a:	189b      	adds	r3, r3, r2
 800937c:	00db      	lsls	r3, r3, #3
 800937e:	18c3      	adds	r3, r0, r3
 8009380:	185b      	adds	r3, r3, r1
 8009382:	193a      	adds	r2, r7, r4
 8009384:	7812      	ldrb	r2, [r2, #0]
 8009386:	701a      	strb	r2, [r3, #0]
 8009388:	193b      	adds	r3, r7, r4
 800938a:	781a      	ldrb	r2, [r3, #0]
 800938c:	6878      	ldr	r0, [r7, #4]
 800938e:	2358      	movs	r3, #88	@ 0x58
 8009390:	33ff      	adds	r3, #255	@ 0xff
 8009392:	0019      	movs	r1, r3
 8009394:	0013      	movs	r3, r2
 8009396:	009b      	lsls	r3, r3, #2
 8009398:	189b      	adds	r3, r3, r2
 800939a:	00db      	lsls	r3, r3, #3
 800939c:	18c3      	adds	r3, r0, r3
 800939e:	185b      	adds	r3, r3, r1
 80093a0:	2200      	movs	r2, #0
 80093a2:	701a      	strb	r2, [r3, #0]
 80093a4:	193b      	adds	r3, r7, r4
 80093a6:	781a      	ldrb	r2, [r3, #0]
 80093a8:	6878      	ldr	r0, [r7, #4]
 80093aa:	23b2      	movs	r3, #178	@ 0xb2
 80093ac:	0059      	lsls	r1, r3, #1
 80093ae:	0013      	movs	r3, r2
 80093b0:	009b      	lsls	r3, r3, #2
 80093b2:	189b      	adds	r3, r3, r2
 80093b4:	00db      	lsls	r3, r3, #3
 80093b6:	18c3      	adds	r3, r0, r3
 80093b8:	185b      	adds	r3, r3, r1
 80093ba:	2200      	movs	r2, #0
 80093bc:	601a      	str	r2, [r3, #0]
 80093be:	193b      	adds	r3, r7, r4
 80093c0:	781a      	ldrb	r2, [r3, #0]
 80093c2:	6878      	ldr	r0, [r7, #4]
 80093c4:	23b4      	movs	r3, #180	@ 0xb4
 80093c6:	0059      	lsls	r1, r3, #1
 80093c8:	0013      	movs	r3, r2
 80093ca:	009b      	lsls	r3, r3, #2
 80093cc:	189b      	adds	r3, r3, r2
 80093ce:	00db      	lsls	r3, r3, #3
 80093d0:	18c3      	adds	r3, r0, r3
 80093d2:	185b      	adds	r3, r3, r1
 80093d4:	2200      	movs	r2, #0
 80093d6:	601a      	str	r2, [r3, #0]
 80093d8:	193b      	adds	r3, r7, r4
 80093da:	781a      	ldrb	r2, [r3, #0]
 80093dc:	6878      	ldr	r0, [r7, #4]
 80093de:	23b6      	movs	r3, #182	@ 0xb6
 80093e0:	0059      	lsls	r1, r3, #1
 80093e2:	0013      	movs	r3, r2
 80093e4:	009b      	lsls	r3, r3, #2
 80093e6:	189b      	adds	r3, r3, r2
 80093e8:	00db      	lsls	r3, r3, #3
 80093ea:	18c3      	adds	r3, r0, r3
 80093ec:	185b      	adds	r3, r3, r1
 80093ee:	2200      	movs	r2, #0
 80093f0:	601a      	str	r2, [r3, #0]
 80093f2:	193b      	adds	r3, r7, r4
 80093f4:	781a      	ldrb	r2, [r3, #0]
 80093f6:	193b      	adds	r3, r7, r4
 80093f8:	3201      	adds	r2, #1
 80093fa:	701a      	strb	r2, [r3, #0]
 80093fc:	687b      	ldr	r3, [r7, #4]
 80093fe:	791b      	ldrb	r3, [r3, #4]
 8009400:	220f      	movs	r2, #15
 8009402:	18ba      	adds	r2, r7, r2
 8009404:	7812      	ldrb	r2, [r2, #0]
 8009406:	429a      	cmp	r2, r3
 8009408:	d3a1      	bcc.n	800934e <HAL_PCD_Init+0xf6>
 800940a:	687b      	ldr	r3, [r7, #4]
 800940c:	6818      	ldr	r0, [r3, #0]
 800940e:	687b      	ldr	r3, [r7, #4]
 8009410:	466a      	mov	r2, sp
 8009412:	7c19      	ldrb	r1, [r3, #16]
 8009414:	7011      	strb	r1, [r2, #0]
 8009416:	6859      	ldr	r1, [r3, #4]
 8009418:	689a      	ldr	r2, [r3, #8]
 800941a:	68db      	ldr	r3, [r3, #12]
 800941c:	f002 fdf7 	bl	800c00e <USB_DevInit>
 8009420:	687b      	ldr	r3, [r7, #4]
 8009422:	2200      	movs	r2, #0
 8009424:	745a      	strb	r2, [r3, #17]
 8009426:	687b      	ldr	r3, [r7, #4]
 8009428:	4a07      	ldr	r2, [pc, #28]	@ (8009448 <HAL_PCD_Init+0x1f0>)
 800942a:	2101      	movs	r1, #1
 800942c:	5499      	strb	r1, [r3, r2]
 800942e:	687b      	ldr	r3, [r7, #4]
 8009430:	7b1b      	ldrb	r3, [r3, #12]
 8009432:	2b01      	cmp	r3, #1
 8009434:	d103      	bne.n	800943e <HAL_PCD_Init+0x1e6>
 8009436:	687b      	ldr	r3, [r7, #4]
 8009438:	0018      	movs	r0, r3
 800943a:	f000 f807 	bl	800944c <HAL_PCDEx_ActivateLPM>
 800943e:	2300      	movs	r3, #0
 8009440:	0018      	movs	r0, r3
 8009442:	46bd      	mov	sp, r7
 8009444:	b005      	add	sp, #20
 8009446:	bd90      	pop	{r4, r7, pc}
 8009448:	00000295 	.word	0x00000295

0800944c <HAL_PCDEx_ActivateLPM>:
 800944c:	b580      	push	{r7, lr}
 800944e:	b084      	sub	sp, #16
 8009450:	af00      	add	r7, sp, #0
 8009452:	6078      	str	r0, [r7, #4]
 8009454:	687b      	ldr	r3, [r7, #4]
 8009456:	681b      	ldr	r3, [r3, #0]
 8009458:	60fb      	str	r3, [r7, #12]
 800945a:	687a      	ldr	r2, [r7, #4]
 800945c:	23b5      	movs	r3, #181	@ 0xb5
 800945e:	009b      	lsls	r3, r3, #2
 8009460:	2101      	movs	r1, #1
 8009462:	50d1      	str	r1, [r2, r3]
 8009464:	687a      	ldr	r2, [r7, #4]
 8009466:	23b3      	movs	r3, #179	@ 0xb3
 8009468:	009b      	lsls	r3, r3, #2
 800946a:	2100      	movs	r1, #0
 800946c:	54d1      	strb	r1, [r2, r3]
 800946e:	68fb      	ldr	r3, [r7, #12]
 8009470:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8009472:	2201      	movs	r2, #1
 8009474:	431a      	orrs	r2, r3
 8009476:	68fb      	ldr	r3, [r7, #12]
 8009478:	655a      	str	r2, [r3, #84]	@ 0x54
 800947a:	68fb      	ldr	r3, [r7, #12]
 800947c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800947e:	2202      	movs	r2, #2
 8009480:	431a      	orrs	r2, r3
 8009482:	68fb      	ldr	r3, [r7, #12]
 8009484:	655a      	str	r2, [r3, #84]	@ 0x54
 8009486:	2300      	movs	r3, #0
 8009488:	0018      	movs	r0, r3
 800948a:	46bd      	mov	sp, r7
 800948c:	b004      	add	sp, #16
 800948e:	bd80      	pop	{r7, pc}

08009490 <HAL_PWREx_EnableVddUSB>:
 8009490:	b580      	push	{r7, lr}
 8009492:	af00      	add	r7, sp, #0
 8009494:	4b04      	ldr	r3, [pc, #16]	@ (80094a8 <HAL_PWREx_EnableVddUSB+0x18>)
 8009496:	685a      	ldr	r2, [r3, #4]
 8009498:	4b03      	ldr	r3, [pc, #12]	@ (80094a8 <HAL_PWREx_EnableVddUSB+0x18>)
 800949a:	2180      	movs	r1, #128	@ 0x80
 800949c:	00c9      	lsls	r1, r1, #3
 800949e:	430a      	orrs	r2, r1
 80094a0:	605a      	str	r2, [r3, #4]
 80094a2:	46c0      	nop			@ (mov r8, r8)
 80094a4:	46bd      	mov	sp, r7
 80094a6:	bd80      	pop	{r7, pc}
 80094a8:	40007000 	.word	0x40007000

080094ac <HAL_PWREx_ControlVoltageScaling>:
 80094ac:	b580      	push	{r7, lr}
 80094ae:	b084      	sub	sp, #16
 80094b0:	af00      	add	r7, sp, #0
 80094b2:	6078      	str	r0, [r7, #4]
 80094b4:	4b19      	ldr	r3, [pc, #100]	@ (800951c <HAL_PWREx_ControlVoltageScaling+0x70>)
 80094b6:	681b      	ldr	r3, [r3, #0]
 80094b8:	4a19      	ldr	r2, [pc, #100]	@ (8009520 <HAL_PWREx_ControlVoltageScaling+0x74>)
 80094ba:	4013      	ands	r3, r2
 80094bc:	0019      	movs	r1, r3
 80094be:	4b17      	ldr	r3, [pc, #92]	@ (800951c <HAL_PWREx_ControlVoltageScaling+0x70>)
 80094c0:	687a      	ldr	r2, [r7, #4]
 80094c2:	430a      	orrs	r2, r1
 80094c4:	601a      	str	r2, [r3, #0]
 80094c6:	687a      	ldr	r2, [r7, #4]
 80094c8:	2380      	movs	r3, #128	@ 0x80
 80094ca:	009b      	lsls	r3, r3, #2
 80094cc:	429a      	cmp	r2, r3
 80094ce:	d11f      	bne.n	8009510 <HAL_PWREx_ControlVoltageScaling+0x64>
 80094d0:	4b14      	ldr	r3, [pc, #80]	@ (8009524 <HAL_PWREx_ControlVoltageScaling+0x78>)
 80094d2:	681a      	ldr	r2, [r3, #0]
 80094d4:	0013      	movs	r3, r2
 80094d6:	005b      	lsls	r3, r3, #1
 80094d8:	189b      	adds	r3, r3, r2
 80094da:	005b      	lsls	r3, r3, #1
 80094dc:	4912      	ldr	r1, [pc, #72]	@ (8009528 <HAL_PWREx_ControlVoltageScaling+0x7c>)
 80094de:	0018      	movs	r0, r3
 80094e0:	f7f6 fe12 	bl	8000108 <__udivsi3>
 80094e4:	0003      	movs	r3, r0
 80094e6:	3301      	adds	r3, #1
 80094e8:	60fb      	str	r3, [r7, #12]
 80094ea:	e008      	b.n	80094fe <HAL_PWREx_ControlVoltageScaling+0x52>
 80094ec:	68fb      	ldr	r3, [r7, #12]
 80094ee:	2b00      	cmp	r3, #0
 80094f0:	d003      	beq.n	80094fa <HAL_PWREx_ControlVoltageScaling+0x4e>
 80094f2:	68fb      	ldr	r3, [r7, #12]
 80094f4:	3b01      	subs	r3, #1
 80094f6:	60fb      	str	r3, [r7, #12]
 80094f8:	e001      	b.n	80094fe <HAL_PWREx_ControlVoltageScaling+0x52>
 80094fa:	2303      	movs	r3, #3
 80094fc:	e009      	b.n	8009512 <HAL_PWREx_ControlVoltageScaling+0x66>
 80094fe:	4b07      	ldr	r3, [pc, #28]	@ (800951c <HAL_PWREx_ControlVoltageScaling+0x70>)
 8009500:	695a      	ldr	r2, [r3, #20]
 8009502:	2380      	movs	r3, #128	@ 0x80
 8009504:	00db      	lsls	r3, r3, #3
 8009506:	401a      	ands	r2, r3
 8009508:	2380      	movs	r3, #128	@ 0x80
 800950a:	00db      	lsls	r3, r3, #3
 800950c:	429a      	cmp	r2, r3
 800950e:	d0ed      	beq.n	80094ec <HAL_PWREx_ControlVoltageScaling+0x40>
 8009510:	2300      	movs	r3, #0
 8009512:	0018      	movs	r0, r3
 8009514:	46bd      	mov	sp, r7
 8009516:	b004      	add	sp, #16
 8009518:	bd80      	pop	{r7, pc}
 800951a:	46c0      	nop			@ (mov r8, r8)
 800951c:	40007000 	.word	0x40007000
 8009520:	fffff9ff 	.word	0xfffff9ff
 8009524:	2000009c 	.word	0x2000009c
 8009528:	000f4240 	.word	0x000f4240

0800952c <HAL_RCC_OscConfig>:
 800952c:	b580      	push	{r7, lr}
 800952e:	b088      	sub	sp, #32
 8009530:	af00      	add	r7, sp, #0
 8009532:	6078      	str	r0, [r7, #4]
 8009534:	687b      	ldr	r3, [r7, #4]
 8009536:	2b00      	cmp	r3, #0
 8009538:	d102      	bne.n	8009540 <HAL_RCC_OscConfig+0x14>
 800953a:	2301      	movs	r3, #1
 800953c:	f000 fb50 	bl	8009be0 <HAL_RCC_OscConfig+0x6b4>
 8009540:	687b      	ldr	r3, [r7, #4]
 8009542:	681b      	ldr	r3, [r3, #0]
 8009544:	2201      	movs	r2, #1
 8009546:	4013      	ands	r3, r2
 8009548:	d100      	bne.n	800954c <HAL_RCC_OscConfig+0x20>
 800954a:	e07c      	b.n	8009646 <HAL_RCC_OscConfig+0x11a>
 800954c:	4bc3      	ldr	r3, [pc, #780]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 800954e:	689b      	ldr	r3, [r3, #8]
 8009550:	2238      	movs	r2, #56	@ 0x38
 8009552:	4013      	ands	r3, r2
 8009554:	61bb      	str	r3, [r7, #24]
 8009556:	4bc1      	ldr	r3, [pc, #772]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 8009558:	68db      	ldr	r3, [r3, #12]
 800955a:	2203      	movs	r2, #3
 800955c:	4013      	ands	r3, r2
 800955e:	617b      	str	r3, [r7, #20]
 8009560:	69bb      	ldr	r3, [r7, #24]
 8009562:	2b10      	cmp	r3, #16
 8009564:	d102      	bne.n	800956c <HAL_RCC_OscConfig+0x40>
 8009566:	697b      	ldr	r3, [r7, #20]
 8009568:	2b03      	cmp	r3, #3
 800956a:	d002      	beq.n	8009572 <HAL_RCC_OscConfig+0x46>
 800956c:	69bb      	ldr	r3, [r7, #24]
 800956e:	2b08      	cmp	r3, #8
 8009570:	d10b      	bne.n	800958a <HAL_RCC_OscConfig+0x5e>
 8009572:	4bba      	ldr	r3, [pc, #744]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 8009574:	681a      	ldr	r2, [r3, #0]
 8009576:	2380      	movs	r3, #128	@ 0x80
 8009578:	029b      	lsls	r3, r3, #10
 800957a:	4013      	ands	r3, r2
 800957c:	d062      	beq.n	8009644 <HAL_RCC_OscConfig+0x118>
 800957e:	687b      	ldr	r3, [r7, #4]
 8009580:	685b      	ldr	r3, [r3, #4]
 8009582:	2b00      	cmp	r3, #0
 8009584:	d15e      	bne.n	8009644 <HAL_RCC_OscConfig+0x118>
 8009586:	2301      	movs	r3, #1
 8009588:	e32a      	b.n	8009be0 <HAL_RCC_OscConfig+0x6b4>
 800958a:	687b      	ldr	r3, [r7, #4]
 800958c:	685a      	ldr	r2, [r3, #4]
 800958e:	2380      	movs	r3, #128	@ 0x80
 8009590:	025b      	lsls	r3, r3, #9
 8009592:	429a      	cmp	r2, r3
 8009594:	d107      	bne.n	80095a6 <HAL_RCC_OscConfig+0x7a>
 8009596:	4bb1      	ldr	r3, [pc, #708]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 8009598:	681a      	ldr	r2, [r3, #0]
 800959a:	4bb0      	ldr	r3, [pc, #704]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 800959c:	2180      	movs	r1, #128	@ 0x80
 800959e:	0249      	lsls	r1, r1, #9
 80095a0:	430a      	orrs	r2, r1
 80095a2:	601a      	str	r2, [r3, #0]
 80095a4:	e020      	b.n	80095e8 <HAL_RCC_OscConfig+0xbc>
 80095a6:	687b      	ldr	r3, [r7, #4]
 80095a8:	685a      	ldr	r2, [r3, #4]
 80095aa:	23a0      	movs	r3, #160	@ 0xa0
 80095ac:	02db      	lsls	r3, r3, #11
 80095ae:	429a      	cmp	r2, r3
 80095b0:	d10e      	bne.n	80095d0 <HAL_RCC_OscConfig+0xa4>
 80095b2:	4baa      	ldr	r3, [pc, #680]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 80095b4:	681a      	ldr	r2, [r3, #0]
 80095b6:	4ba9      	ldr	r3, [pc, #676]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 80095b8:	2180      	movs	r1, #128	@ 0x80
 80095ba:	02c9      	lsls	r1, r1, #11
 80095bc:	430a      	orrs	r2, r1
 80095be:	601a      	str	r2, [r3, #0]
 80095c0:	4ba6      	ldr	r3, [pc, #664]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 80095c2:	681a      	ldr	r2, [r3, #0]
 80095c4:	4ba5      	ldr	r3, [pc, #660]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 80095c6:	2180      	movs	r1, #128	@ 0x80
 80095c8:	0249      	lsls	r1, r1, #9
 80095ca:	430a      	orrs	r2, r1
 80095cc:	601a      	str	r2, [r3, #0]
 80095ce:	e00b      	b.n	80095e8 <HAL_RCC_OscConfig+0xbc>
 80095d0:	4ba2      	ldr	r3, [pc, #648]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 80095d2:	681a      	ldr	r2, [r3, #0]
 80095d4:	4ba1      	ldr	r3, [pc, #644]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 80095d6:	49a2      	ldr	r1, [pc, #648]	@ (8009860 <HAL_RCC_OscConfig+0x334>)
 80095d8:	400a      	ands	r2, r1
 80095da:	601a      	str	r2, [r3, #0]
 80095dc:	4b9f      	ldr	r3, [pc, #636]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 80095de:	681a      	ldr	r2, [r3, #0]
 80095e0:	4b9e      	ldr	r3, [pc, #632]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 80095e2:	49a0      	ldr	r1, [pc, #640]	@ (8009864 <HAL_RCC_OscConfig+0x338>)
 80095e4:	400a      	ands	r2, r1
 80095e6:	601a      	str	r2, [r3, #0]
 80095e8:	687b      	ldr	r3, [r7, #4]
 80095ea:	685b      	ldr	r3, [r3, #4]
 80095ec:	2b00      	cmp	r3, #0
 80095ee:	d014      	beq.n	800961a <HAL_RCC_OscConfig+0xee>
 80095f0:	f7fd fc16 	bl	8006e20 <HAL_GetTick>
 80095f4:	0003      	movs	r3, r0
 80095f6:	613b      	str	r3, [r7, #16]
 80095f8:	e008      	b.n	800960c <HAL_RCC_OscConfig+0xe0>
 80095fa:	f7fd fc11 	bl	8006e20 <HAL_GetTick>
 80095fe:	0002      	movs	r2, r0
 8009600:	693b      	ldr	r3, [r7, #16]
 8009602:	1ad3      	subs	r3, r2, r3
 8009604:	2b64      	cmp	r3, #100	@ 0x64
 8009606:	d901      	bls.n	800960c <HAL_RCC_OscConfig+0xe0>
 8009608:	2303      	movs	r3, #3
 800960a:	e2e9      	b.n	8009be0 <HAL_RCC_OscConfig+0x6b4>
 800960c:	4b93      	ldr	r3, [pc, #588]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 800960e:	681a      	ldr	r2, [r3, #0]
 8009610:	2380      	movs	r3, #128	@ 0x80
 8009612:	029b      	lsls	r3, r3, #10
 8009614:	4013      	ands	r3, r2
 8009616:	d0f0      	beq.n	80095fa <HAL_RCC_OscConfig+0xce>
 8009618:	e015      	b.n	8009646 <HAL_RCC_OscConfig+0x11a>
 800961a:	f7fd fc01 	bl	8006e20 <HAL_GetTick>
 800961e:	0003      	movs	r3, r0
 8009620:	613b      	str	r3, [r7, #16]
 8009622:	e008      	b.n	8009636 <HAL_RCC_OscConfig+0x10a>
 8009624:	f7fd fbfc 	bl	8006e20 <HAL_GetTick>
 8009628:	0002      	movs	r2, r0
 800962a:	693b      	ldr	r3, [r7, #16]
 800962c:	1ad3      	subs	r3, r2, r3
 800962e:	2b64      	cmp	r3, #100	@ 0x64
 8009630:	d901      	bls.n	8009636 <HAL_RCC_OscConfig+0x10a>
 8009632:	2303      	movs	r3, #3
 8009634:	e2d4      	b.n	8009be0 <HAL_RCC_OscConfig+0x6b4>
 8009636:	4b89      	ldr	r3, [pc, #548]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 8009638:	681a      	ldr	r2, [r3, #0]
 800963a:	2380      	movs	r3, #128	@ 0x80
 800963c:	029b      	lsls	r3, r3, #10
 800963e:	4013      	ands	r3, r2
 8009640:	d1f0      	bne.n	8009624 <HAL_RCC_OscConfig+0xf8>
 8009642:	e000      	b.n	8009646 <HAL_RCC_OscConfig+0x11a>
 8009644:	46c0      	nop			@ (mov r8, r8)
 8009646:	687b      	ldr	r3, [r7, #4]
 8009648:	681b      	ldr	r3, [r3, #0]
 800964a:	2202      	movs	r2, #2
 800964c:	4013      	ands	r3, r2
 800964e:	d100      	bne.n	8009652 <HAL_RCC_OscConfig+0x126>
 8009650:	e099      	b.n	8009786 <HAL_RCC_OscConfig+0x25a>
 8009652:	4b82      	ldr	r3, [pc, #520]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 8009654:	689b      	ldr	r3, [r3, #8]
 8009656:	2238      	movs	r2, #56	@ 0x38
 8009658:	4013      	ands	r3, r2
 800965a:	61bb      	str	r3, [r7, #24]
 800965c:	4b7f      	ldr	r3, [pc, #508]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 800965e:	68db      	ldr	r3, [r3, #12]
 8009660:	2203      	movs	r2, #3
 8009662:	4013      	ands	r3, r2
 8009664:	617b      	str	r3, [r7, #20]
 8009666:	69bb      	ldr	r3, [r7, #24]
 8009668:	2b10      	cmp	r3, #16
 800966a:	d102      	bne.n	8009672 <HAL_RCC_OscConfig+0x146>
 800966c:	697b      	ldr	r3, [r7, #20]
 800966e:	2b02      	cmp	r3, #2
 8009670:	d002      	beq.n	8009678 <HAL_RCC_OscConfig+0x14c>
 8009672:	69bb      	ldr	r3, [r7, #24]
 8009674:	2b00      	cmp	r3, #0
 8009676:	d135      	bne.n	80096e4 <HAL_RCC_OscConfig+0x1b8>
 8009678:	4b78      	ldr	r3, [pc, #480]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 800967a:	681a      	ldr	r2, [r3, #0]
 800967c:	2380      	movs	r3, #128	@ 0x80
 800967e:	00db      	lsls	r3, r3, #3
 8009680:	4013      	ands	r3, r2
 8009682:	d005      	beq.n	8009690 <HAL_RCC_OscConfig+0x164>
 8009684:	687b      	ldr	r3, [r7, #4]
 8009686:	68db      	ldr	r3, [r3, #12]
 8009688:	2b00      	cmp	r3, #0
 800968a:	d101      	bne.n	8009690 <HAL_RCC_OscConfig+0x164>
 800968c:	2301      	movs	r3, #1
 800968e:	e2a7      	b.n	8009be0 <HAL_RCC_OscConfig+0x6b4>
 8009690:	4b72      	ldr	r3, [pc, #456]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 8009692:	685b      	ldr	r3, [r3, #4]
 8009694:	4a74      	ldr	r2, [pc, #464]	@ (8009868 <HAL_RCC_OscConfig+0x33c>)
 8009696:	4013      	ands	r3, r2
 8009698:	0019      	movs	r1, r3
 800969a:	687b      	ldr	r3, [r7, #4]
 800969c:	695b      	ldr	r3, [r3, #20]
 800969e:	021a      	lsls	r2, r3, #8
 80096a0:	4b6e      	ldr	r3, [pc, #440]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 80096a2:	430a      	orrs	r2, r1
 80096a4:	605a      	str	r2, [r3, #4]
 80096a6:	69bb      	ldr	r3, [r7, #24]
 80096a8:	2b00      	cmp	r3, #0
 80096aa:	d112      	bne.n	80096d2 <HAL_RCC_OscConfig+0x1a6>
 80096ac:	4b6b      	ldr	r3, [pc, #428]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 80096ae:	681b      	ldr	r3, [r3, #0]
 80096b0:	4a6e      	ldr	r2, [pc, #440]	@ (800986c <HAL_RCC_OscConfig+0x340>)
 80096b2:	4013      	ands	r3, r2
 80096b4:	0019      	movs	r1, r3
 80096b6:	687b      	ldr	r3, [r7, #4]
 80096b8:	691a      	ldr	r2, [r3, #16]
 80096ba:	4b68      	ldr	r3, [pc, #416]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 80096bc:	430a      	orrs	r2, r1
 80096be:	601a      	str	r2, [r3, #0]
 80096c0:	4b66      	ldr	r3, [pc, #408]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 80096c2:	681b      	ldr	r3, [r3, #0]
 80096c4:	0adb      	lsrs	r3, r3, #11
 80096c6:	2207      	movs	r2, #7
 80096c8:	4013      	ands	r3, r2
 80096ca:	4a69      	ldr	r2, [pc, #420]	@ (8009870 <HAL_RCC_OscConfig+0x344>)
 80096cc:	40da      	lsrs	r2, r3
 80096ce:	4b69      	ldr	r3, [pc, #420]	@ (8009874 <HAL_RCC_OscConfig+0x348>)
 80096d0:	601a      	str	r2, [r3, #0]
 80096d2:	4b69      	ldr	r3, [pc, #420]	@ (8009878 <HAL_RCC_OscConfig+0x34c>)
 80096d4:	681b      	ldr	r3, [r3, #0]
 80096d6:	0018      	movs	r0, r3
 80096d8:	f7fd fb46 	bl	8006d68 <HAL_InitTick>
 80096dc:	1e03      	subs	r3, r0, #0
 80096de:	d051      	beq.n	8009784 <HAL_RCC_OscConfig+0x258>
 80096e0:	2301      	movs	r3, #1
 80096e2:	e27d      	b.n	8009be0 <HAL_RCC_OscConfig+0x6b4>
 80096e4:	687b      	ldr	r3, [r7, #4]
 80096e6:	68db      	ldr	r3, [r3, #12]
 80096e8:	2b00      	cmp	r3, #0
 80096ea:	d030      	beq.n	800974e <HAL_RCC_OscConfig+0x222>
 80096ec:	4b5b      	ldr	r3, [pc, #364]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 80096ee:	681b      	ldr	r3, [r3, #0]
 80096f0:	4a5e      	ldr	r2, [pc, #376]	@ (800986c <HAL_RCC_OscConfig+0x340>)
 80096f2:	4013      	ands	r3, r2
 80096f4:	0019      	movs	r1, r3
 80096f6:	687b      	ldr	r3, [r7, #4]
 80096f8:	691a      	ldr	r2, [r3, #16]
 80096fa:	4b58      	ldr	r3, [pc, #352]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 80096fc:	430a      	orrs	r2, r1
 80096fe:	601a      	str	r2, [r3, #0]
 8009700:	4b56      	ldr	r3, [pc, #344]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 8009702:	681a      	ldr	r2, [r3, #0]
 8009704:	4b55      	ldr	r3, [pc, #340]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 8009706:	2180      	movs	r1, #128	@ 0x80
 8009708:	0049      	lsls	r1, r1, #1
 800970a:	430a      	orrs	r2, r1
 800970c:	601a      	str	r2, [r3, #0]
 800970e:	f7fd fb87 	bl	8006e20 <HAL_GetTick>
 8009712:	0003      	movs	r3, r0
 8009714:	613b      	str	r3, [r7, #16]
 8009716:	e008      	b.n	800972a <HAL_RCC_OscConfig+0x1fe>
 8009718:	f7fd fb82 	bl	8006e20 <HAL_GetTick>
 800971c:	0002      	movs	r2, r0
 800971e:	693b      	ldr	r3, [r7, #16]
 8009720:	1ad3      	subs	r3, r2, r3
 8009722:	2b02      	cmp	r3, #2
 8009724:	d901      	bls.n	800972a <HAL_RCC_OscConfig+0x1fe>
 8009726:	2303      	movs	r3, #3
 8009728:	e25a      	b.n	8009be0 <HAL_RCC_OscConfig+0x6b4>
 800972a:	4b4c      	ldr	r3, [pc, #304]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 800972c:	681a      	ldr	r2, [r3, #0]
 800972e:	2380      	movs	r3, #128	@ 0x80
 8009730:	00db      	lsls	r3, r3, #3
 8009732:	4013      	ands	r3, r2
 8009734:	d0f0      	beq.n	8009718 <HAL_RCC_OscConfig+0x1ec>
 8009736:	4b49      	ldr	r3, [pc, #292]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 8009738:	685b      	ldr	r3, [r3, #4]
 800973a:	4a4b      	ldr	r2, [pc, #300]	@ (8009868 <HAL_RCC_OscConfig+0x33c>)
 800973c:	4013      	ands	r3, r2
 800973e:	0019      	movs	r1, r3
 8009740:	687b      	ldr	r3, [r7, #4]
 8009742:	695b      	ldr	r3, [r3, #20]
 8009744:	021a      	lsls	r2, r3, #8
 8009746:	4b45      	ldr	r3, [pc, #276]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 8009748:	430a      	orrs	r2, r1
 800974a:	605a      	str	r2, [r3, #4]
 800974c:	e01b      	b.n	8009786 <HAL_RCC_OscConfig+0x25a>
 800974e:	4b43      	ldr	r3, [pc, #268]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 8009750:	681a      	ldr	r2, [r3, #0]
 8009752:	4b42      	ldr	r3, [pc, #264]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 8009754:	4949      	ldr	r1, [pc, #292]	@ (800987c <HAL_RCC_OscConfig+0x350>)
 8009756:	400a      	ands	r2, r1
 8009758:	601a      	str	r2, [r3, #0]
 800975a:	f7fd fb61 	bl	8006e20 <HAL_GetTick>
 800975e:	0003      	movs	r3, r0
 8009760:	613b      	str	r3, [r7, #16]
 8009762:	e008      	b.n	8009776 <HAL_RCC_OscConfig+0x24a>
 8009764:	f7fd fb5c 	bl	8006e20 <HAL_GetTick>
 8009768:	0002      	movs	r2, r0
 800976a:	693b      	ldr	r3, [r7, #16]
 800976c:	1ad3      	subs	r3, r2, r3
 800976e:	2b02      	cmp	r3, #2
 8009770:	d901      	bls.n	8009776 <HAL_RCC_OscConfig+0x24a>
 8009772:	2303      	movs	r3, #3
 8009774:	e234      	b.n	8009be0 <HAL_RCC_OscConfig+0x6b4>
 8009776:	4b39      	ldr	r3, [pc, #228]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 8009778:	681a      	ldr	r2, [r3, #0]
 800977a:	2380      	movs	r3, #128	@ 0x80
 800977c:	00db      	lsls	r3, r3, #3
 800977e:	4013      	ands	r3, r2
 8009780:	d1f0      	bne.n	8009764 <HAL_RCC_OscConfig+0x238>
 8009782:	e000      	b.n	8009786 <HAL_RCC_OscConfig+0x25a>
 8009784:	46c0      	nop			@ (mov r8, r8)
 8009786:	687b      	ldr	r3, [r7, #4]
 8009788:	681b      	ldr	r3, [r3, #0]
 800978a:	2208      	movs	r2, #8
 800978c:	4013      	ands	r3, r2
 800978e:	d047      	beq.n	8009820 <HAL_RCC_OscConfig+0x2f4>
 8009790:	4b32      	ldr	r3, [pc, #200]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 8009792:	689b      	ldr	r3, [r3, #8]
 8009794:	2238      	movs	r2, #56	@ 0x38
 8009796:	4013      	ands	r3, r2
 8009798:	2b18      	cmp	r3, #24
 800979a:	d10a      	bne.n	80097b2 <HAL_RCC_OscConfig+0x286>
 800979c:	4b2f      	ldr	r3, [pc, #188]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 800979e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80097a0:	2202      	movs	r2, #2
 80097a2:	4013      	ands	r3, r2
 80097a4:	d03c      	beq.n	8009820 <HAL_RCC_OscConfig+0x2f4>
 80097a6:	687b      	ldr	r3, [r7, #4]
 80097a8:	699b      	ldr	r3, [r3, #24]
 80097aa:	2b00      	cmp	r3, #0
 80097ac:	d138      	bne.n	8009820 <HAL_RCC_OscConfig+0x2f4>
 80097ae:	2301      	movs	r3, #1
 80097b0:	e216      	b.n	8009be0 <HAL_RCC_OscConfig+0x6b4>
 80097b2:	687b      	ldr	r3, [r7, #4]
 80097b4:	699b      	ldr	r3, [r3, #24]
 80097b6:	2b00      	cmp	r3, #0
 80097b8:	d019      	beq.n	80097ee <HAL_RCC_OscConfig+0x2c2>
 80097ba:	4b28      	ldr	r3, [pc, #160]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 80097bc:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 80097be:	4b27      	ldr	r3, [pc, #156]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 80097c0:	2101      	movs	r1, #1
 80097c2:	430a      	orrs	r2, r1
 80097c4:	661a      	str	r2, [r3, #96]	@ 0x60
 80097c6:	f7fd fb2b 	bl	8006e20 <HAL_GetTick>
 80097ca:	0003      	movs	r3, r0
 80097cc:	613b      	str	r3, [r7, #16]
 80097ce:	e008      	b.n	80097e2 <HAL_RCC_OscConfig+0x2b6>
 80097d0:	f7fd fb26 	bl	8006e20 <HAL_GetTick>
 80097d4:	0002      	movs	r2, r0
 80097d6:	693b      	ldr	r3, [r7, #16]
 80097d8:	1ad3      	subs	r3, r2, r3
 80097da:	2b02      	cmp	r3, #2
 80097dc:	d901      	bls.n	80097e2 <HAL_RCC_OscConfig+0x2b6>
 80097de:	2303      	movs	r3, #3
 80097e0:	e1fe      	b.n	8009be0 <HAL_RCC_OscConfig+0x6b4>
 80097e2:	4b1e      	ldr	r3, [pc, #120]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 80097e4:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80097e6:	2202      	movs	r2, #2
 80097e8:	4013      	ands	r3, r2
 80097ea:	d0f1      	beq.n	80097d0 <HAL_RCC_OscConfig+0x2a4>
 80097ec:	e018      	b.n	8009820 <HAL_RCC_OscConfig+0x2f4>
 80097ee:	4b1b      	ldr	r3, [pc, #108]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 80097f0:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 80097f2:	4b1a      	ldr	r3, [pc, #104]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 80097f4:	2101      	movs	r1, #1
 80097f6:	438a      	bics	r2, r1
 80097f8:	661a      	str	r2, [r3, #96]	@ 0x60
 80097fa:	f7fd fb11 	bl	8006e20 <HAL_GetTick>
 80097fe:	0003      	movs	r3, r0
 8009800:	613b      	str	r3, [r7, #16]
 8009802:	e008      	b.n	8009816 <HAL_RCC_OscConfig+0x2ea>
 8009804:	f7fd fb0c 	bl	8006e20 <HAL_GetTick>
 8009808:	0002      	movs	r2, r0
 800980a:	693b      	ldr	r3, [r7, #16]
 800980c:	1ad3      	subs	r3, r2, r3
 800980e:	2b02      	cmp	r3, #2
 8009810:	d901      	bls.n	8009816 <HAL_RCC_OscConfig+0x2ea>
 8009812:	2303      	movs	r3, #3
 8009814:	e1e4      	b.n	8009be0 <HAL_RCC_OscConfig+0x6b4>
 8009816:	4b11      	ldr	r3, [pc, #68]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 8009818:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800981a:	2202      	movs	r2, #2
 800981c:	4013      	ands	r3, r2
 800981e:	d1f1      	bne.n	8009804 <HAL_RCC_OscConfig+0x2d8>
 8009820:	687b      	ldr	r3, [r7, #4]
 8009822:	681b      	ldr	r3, [r3, #0]
 8009824:	2204      	movs	r2, #4
 8009826:	4013      	ands	r3, r2
 8009828:	d100      	bne.n	800982c <HAL_RCC_OscConfig+0x300>
 800982a:	e0c7      	b.n	80099bc <HAL_RCC_OscConfig+0x490>
 800982c:	231f      	movs	r3, #31
 800982e:	18fb      	adds	r3, r7, r3
 8009830:	2200      	movs	r2, #0
 8009832:	701a      	strb	r2, [r3, #0]
 8009834:	4b09      	ldr	r3, [pc, #36]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 8009836:	689b      	ldr	r3, [r3, #8]
 8009838:	2238      	movs	r2, #56	@ 0x38
 800983a:	4013      	ands	r3, r2
 800983c:	2b20      	cmp	r3, #32
 800983e:	d11f      	bne.n	8009880 <HAL_RCC_OscConfig+0x354>
 8009840:	4b06      	ldr	r3, [pc, #24]	@ (800985c <HAL_RCC_OscConfig+0x330>)
 8009842:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8009844:	2202      	movs	r2, #2
 8009846:	4013      	ands	r3, r2
 8009848:	d100      	bne.n	800984c <HAL_RCC_OscConfig+0x320>
 800984a:	e0b7      	b.n	80099bc <HAL_RCC_OscConfig+0x490>
 800984c:	687b      	ldr	r3, [r7, #4]
 800984e:	689b      	ldr	r3, [r3, #8]
 8009850:	2b00      	cmp	r3, #0
 8009852:	d000      	beq.n	8009856 <HAL_RCC_OscConfig+0x32a>
 8009854:	e0b2      	b.n	80099bc <HAL_RCC_OscConfig+0x490>
 8009856:	2301      	movs	r3, #1
 8009858:	e1c2      	b.n	8009be0 <HAL_RCC_OscConfig+0x6b4>
 800985a:	46c0      	nop			@ (mov r8, r8)
 800985c:	40021000 	.word	0x40021000
 8009860:	fffeffff 	.word	0xfffeffff
 8009864:	fffbffff 	.word	0xfffbffff
 8009868:	ffff80ff 	.word	0xffff80ff
 800986c:	ffffc7ff 	.word	0xffffc7ff
 8009870:	00f42400 	.word	0x00f42400
 8009874:	2000009c 	.word	0x2000009c
 8009878:	200000a0 	.word	0x200000a0
 800987c:	fffffeff 	.word	0xfffffeff
 8009880:	4bb5      	ldr	r3, [pc, #724]	@ (8009b58 <HAL_RCC_OscConfig+0x62c>)
 8009882:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8009884:	2380      	movs	r3, #128	@ 0x80
 8009886:	055b      	lsls	r3, r3, #21
 8009888:	4013      	ands	r3, r2
 800988a:	d101      	bne.n	8009890 <HAL_RCC_OscConfig+0x364>
 800988c:	2301      	movs	r3, #1
 800988e:	e000      	b.n	8009892 <HAL_RCC_OscConfig+0x366>
 8009890:	2300      	movs	r3, #0
 8009892:	2b00      	cmp	r3, #0
 8009894:	d011      	beq.n	80098ba <HAL_RCC_OscConfig+0x38e>
 8009896:	4bb0      	ldr	r3, [pc, #704]	@ (8009b58 <HAL_RCC_OscConfig+0x62c>)
 8009898:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800989a:	4baf      	ldr	r3, [pc, #700]	@ (8009b58 <HAL_RCC_OscConfig+0x62c>)
 800989c:	2180      	movs	r1, #128	@ 0x80
 800989e:	0549      	lsls	r1, r1, #21
 80098a0:	430a      	orrs	r2, r1
 80098a2:	63da      	str	r2, [r3, #60]	@ 0x3c
 80098a4:	4bac      	ldr	r3, [pc, #688]	@ (8009b58 <HAL_RCC_OscConfig+0x62c>)
 80098a6:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80098a8:	2380      	movs	r3, #128	@ 0x80
 80098aa:	055b      	lsls	r3, r3, #21
 80098ac:	4013      	ands	r3, r2
 80098ae:	60fb      	str	r3, [r7, #12]
 80098b0:	68fb      	ldr	r3, [r7, #12]
 80098b2:	231f      	movs	r3, #31
 80098b4:	18fb      	adds	r3, r7, r3
 80098b6:	2201      	movs	r2, #1
 80098b8:	701a      	strb	r2, [r3, #0]
 80098ba:	4ba8      	ldr	r3, [pc, #672]	@ (8009b5c <HAL_RCC_OscConfig+0x630>)
 80098bc:	681a      	ldr	r2, [r3, #0]
 80098be:	2380      	movs	r3, #128	@ 0x80
 80098c0:	005b      	lsls	r3, r3, #1
 80098c2:	4013      	ands	r3, r2
 80098c4:	d11a      	bne.n	80098fc <HAL_RCC_OscConfig+0x3d0>
 80098c6:	4ba5      	ldr	r3, [pc, #660]	@ (8009b5c <HAL_RCC_OscConfig+0x630>)
 80098c8:	681a      	ldr	r2, [r3, #0]
 80098ca:	4ba4      	ldr	r3, [pc, #656]	@ (8009b5c <HAL_RCC_OscConfig+0x630>)
 80098cc:	2180      	movs	r1, #128	@ 0x80
 80098ce:	0049      	lsls	r1, r1, #1
 80098d0:	430a      	orrs	r2, r1
 80098d2:	601a      	str	r2, [r3, #0]
 80098d4:	f7fd faa4 	bl	8006e20 <HAL_GetTick>
 80098d8:	0003      	movs	r3, r0
 80098da:	613b      	str	r3, [r7, #16]
 80098dc:	e008      	b.n	80098f0 <HAL_RCC_OscConfig+0x3c4>
 80098de:	f7fd fa9f 	bl	8006e20 <HAL_GetTick>
 80098e2:	0002      	movs	r2, r0
 80098e4:	693b      	ldr	r3, [r7, #16]
 80098e6:	1ad3      	subs	r3, r2, r3
 80098e8:	2b02      	cmp	r3, #2
 80098ea:	d901      	bls.n	80098f0 <HAL_RCC_OscConfig+0x3c4>
 80098ec:	2303      	movs	r3, #3
 80098ee:	e177      	b.n	8009be0 <HAL_RCC_OscConfig+0x6b4>
 80098f0:	4b9a      	ldr	r3, [pc, #616]	@ (8009b5c <HAL_RCC_OscConfig+0x630>)
 80098f2:	681a      	ldr	r2, [r3, #0]
 80098f4:	2380      	movs	r3, #128	@ 0x80
 80098f6:	005b      	lsls	r3, r3, #1
 80098f8:	4013      	ands	r3, r2
 80098fa:	d0f0      	beq.n	80098de <HAL_RCC_OscConfig+0x3b2>
 80098fc:	687b      	ldr	r3, [r7, #4]
 80098fe:	689b      	ldr	r3, [r3, #8]
 8009900:	2b01      	cmp	r3, #1
 8009902:	d106      	bne.n	8009912 <HAL_RCC_OscConfig+0x3e6>
 8009904:	4b94      	ldr	r3, [pc, #592]	@ (8009b58 <HAL_RCC_OscConfig+0x62c>)
 8009906:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8009908:	4b93      	ldr	r3, [pc, #588]	@ (8009b58 <HAL_RCC_OscConfig+0x62c>)
 800990a:	2101      	movs	r1, #1
 800990c:	430a      	orrs	r2, r1
 800990e:	65da      	str	r2, [r3, #92]	@ 0x5c
 8009910:	e01c      	b.n	800994c <HAL_RCC_OscConfig+0x420>
 8009912:	687b      	ldr	r3, [r7, #4]
 8009914:	689b      	ldr	r3, [r3, #8]
 8009916:	2b05      	cmp	r3, #5
 8009918:	d10c      	bne.n	8009934 <HAL_RCC_OscConfig+0x408>
 800991a:	4b8f      	ldr	r3, [pc, #572]	@ (8009b58 <HAL_RCC_OscConfig+0x62c>)
 800991c:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 800991e:	4b8e      	ldr	r3, [pc, #568]	@ (8009b58 <HAL_RCC_OscConfig+0x62c>)
 8009920:	2104      	movs	r1, #4
 8009922:	430a      	orrs	r2, r1
 8009924:	65da      	str	r2, [r3, #92]	@ 0x5c
 8009926:	4b8c      	ldr	r3, [pc, #560]	@ (8009b58 <HAL_RCC_OscConfig+0x62c>)
 8009928:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 800992a:	4b8b      	ldr	r3, [pc, #556]	@ (8009b58 <HAL_RCC_OscConfig+0x62c>)
 800992c:	2101      	movs	r1, #1
 800992e:	430a      	orrs	r2, r1
 8009930:	65da      	str	r2, [r3, #92]	@ 0x5c
 8009932:	e00b      	b.n	800994c <HAL_RCC_OscConfig+0x420>
 8009934:	4b88      	ldr	r3, [pc, #544]	@ (8009b58 <HAL_RCC_OscConfig+0x62c>)
 8009936:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8009938:	4b87      	ldr	r3, [pc, #540]	@ (8009b58 <HAL_RCC_OscConfig+0x62c>)
 800993a:	2101      	movs	r1, #1
 800993c:	438a      	bics	r2, r1
 800993e:	65da      	str	r2, [r3, #92]	@ 0x5c
 8009940:	4b85      	ldr	r3, [pc, #532]	@ (8009b58 <HAL_RCC_OscConfig+0x62c>)
 8009942:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8009944:	4b84      	ldr	r3, [pc, #528]	@ (8009b58 <HAL_RCC_OscConfig+0x62c>)
 8009946:	2104      	movs	r1, #4
 8009948:	438a      	bics	r2, r1
 800994a:	65da      	str	r2, [r3, #92]	@ 0x5c
 800994c:	687b      	ldr	r3, [r7, #4]
 800994e:	689b      	ldr	r3, [r3, #8]
 8009950:	2b00      	cmp	r3, #0
 8009952:	d014      	beq.n	800997e <HAL_RCC_OscConfig+0x452>
 8009954:	f7fd fa64 	bl	8006e20 <HAL_GetTick>
 8009958:	0003      	movs	r3, r0
 800995a:	613b      	str	r3, [r7, #16]
 800995c:	e009      	b.n	8009972 <HAL_RCC_OscConfig+0x446>
 800995e:	f7fd fa5f 	bl	8006e20 <HAL_GetTick>
 8009962:	0002      	movs	r2, r0
 8009964:	693b      	ldr	r3, [r7, #16]
 8009966:	1ad3      	subs	r3, r2, r3
 8009968:	4a7d      	ldr	r2, [pc, #500]	@ (8009b60 <HAL_RCC_OscConfig+0x634>)
 800996a:	4293      	cmp	r3, r2
 800996c:	d901      	bls.n	8009972 <HAL_RCC_OscConfig+0x446>
 800996e:	2303      	movs	r3, #3
 8009970:	e136      	b.n	8009be0 <HAL_RCC_OscConfig+0x6b4>
 8009972:	4b79      	ldr	r3, [pc, #484]	@ (8009b58 <HAL_RCC_OscConfig+0x62c>)
 8009974:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8009976:	2202      	movs	r2, #2
 8009978:	4013      	ands	r3, r2
 800997a:	d0f0      	beq.n	800995e <HAL_RCC_OscConfig+0x432>
 800997c:	e013      	b.n	80099a6 <HAL_RCC_OscConfig+0x47a>
 800997e:	f7fd fa4f 	bl	8006e20 <HAL_GetTick>
 8009982:	0003      	movs	r3, r0
 8009984:	613b      	str	r3, [r7, #16]
 8009986:	e009      	b.n	800999c <HAL_RCC_OscConfig+0x470>
 8009988:	f7fd fa4a 	bl	8006e20 <HAL_GetTick>
 800998c:	0002      	movs	r2, r0
 800998e:	693b      	ldr	r3, [r7, #16]
 8009990:	1ad3      	subs	r3, r2, r3
 8009992:	4a73      	ldr	r2, [pc, #460]	@ (8009b60 <HAL_RCC_OscConfig+0x634>)
 8009994:	4293      	cmp	r3, r2
 8009996:	d901      	bls.n	800999c <HAL_RCC_OscConfig+0x470>
 8009998:	2303      	movs	r3, #3
 800999a:	e121      	b.n	8009be0 <HAL_RCC_OscConfig+0x6b4>
 800999c:	4b6e      	ldr	r3, [pc, #440]	@ (8009b58 <HAL_RCC_OscConfig+0x62c>)
 800999e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80099a0:	2202      	movs	r2, #2
 80099a2:	4013      	ands	r3, r2
 80099a4:	d1f0      	bne.n	8009988 <HAL_RCC_OscConfig+0x45c>
 80099a6:	231f      	movs	r3, #31
 80099a8:	18fb      	adds	r3, r7, r3
 80099aa:	781b      	ldrb	r3, [r3, #0]
 80099ac:	2b01      	cmp	r3, #1
 80099ae:	d105      	bne.n	80099bc <HAL_RCC_OscConfig+0x490>
 80099b0:	4b69      	ldr	r3, [pc, #420]	@ (8009b58 <HAL_RCC_OscConfig+0x62c>)
 80099b2:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80099b4:	4b68      	ldr	r3, [pc, #416]	@ (8009b58 <HAL_RCC_OscConfig+0x62c>)
 80099b6:	496b      	ldr	r1, [pc, #428]	@ (8009b64 <HAL_RCC_OscConfig+0x638>)
 80099b8:	400a      	ands	r2, r1
 80099ba:	63da      	str	r2, [r3, #60]	@ 0x3c
 80099bc:	687b      	ldr	r3, [r7, #4]
 80099be:	681b      	ldr	r3, [r3, #0]
 80099c0:	2220      	movs	r2, #32
 80099c2:	4013      	ands	r3, r2
 80099c4:	d039      	beq.n	8009a3a <HAL_RCC_OscConfig+0x50e>
 80099c6:	687b      	ldr	r3, [r7, #4]
 80099c8:	69db      	ldr	r3, [r3, #28]
 80099ca:	2b00      	cmp	r3, #0
 80099cc:	d01b      	beq.n	8009a06 <HAL_RCC_OscConfig+0x4da>
 80099ce:	4b62      	ldr	r3, [pc, #392]	@ (8009b58 <HAL_RCC_OscConfig+0x62c>)
 80099d0:	681a      	ldr	r2, [r3, #0]
 80099d2:	4b61      	ldr	r3, [pc, #388]	@ (8009b58 <HAL_RCC_OscConfig+0x62c>)
 80099d4:	2180      	movs	r1, #128	@ 0x80
 80099d6:	03c9      	lsls	r1, r1, #15
 80099d8:	430a      	orrs	r2, r1
 80099da:	601a      	str	r2, [r3, #0]
 80099dc:	f7fd fa20 	bl	8006e20 <HAL_GetTick>
 80099e0:	0003      	movs	r3, r0
 80099e2:	613b      	str	r3, [r7, #16]
 80099e4:	e008      	b.n	80099f8 <HAL_RCC_OscConfig+0x4cc>
 80099e6:	f7fd fa1b 	bl	8006e20 <HAL_GetTick>
 80099ea:	0002      	movs	r2, r0
 80099ec:	693b      	ldr	r3, [r7, #16]
 80099ee:	1ad3      	subs	r3, r2, r3
 80099f0:	2b02      	cmp	r3, #2
 80099f2:	d901      	bls.n	80099f8 <HAL_RCC_OscConfig+0x4cc>
 80099f4:	2303      	movs	r3, #3
 80099f6:	e0f3      	b.n	8009be0 <HAL_RCC_OscConfig+0x6b4>
 80099f8:	4b57      	ldr	r3, [pc, #348]	@ (8009b58 <HAL_RCC_OscConfig+0x62c>)
 80099fa:	681a      	ldr	r2, [r3, #0]
 80099fc:	2380      	movs	r3, #128	@ 0x80
 80099fe:	041b      	lsls	r3, r3, #16
 8009a00:	4013      	ands	r3, r2
 8009a02:	d0f0      	beq.n	80099e6 <HAL_RCC_OscConfig+0x4ba>
 8009a04:	e019      	b.n	8009a3a <HAL_RCC_OscConfig+0x50e>
 8009a06:	4b54      	ldr	r3, [pc, #336]	@ (8009b58 <HAL_RCC_OscConfig+0x62c>)
 8009a08:	681a      	ldr	r2, [r3, #0]
 8009a0a:	4b53      	ldr	r3, [pc, #332]	@ (8009b58 <HAL_RCC_OscConfig+0x62c>)
 8009a0c:	4956      	ldr	r1, [pc, #344]	@ (8009b68 <HAL_RCC_OscConfig+0x63c>)
 8009a0e:	400a      	ands	r2, r1
 8009a10:	601a      	str	r2, [r3, #0]
 8009a12:	f7fd fa05 	bl	8006e20 <HAL_GetTick>
 8009a16:	0003      	movs	r3, r0
 8009a18:	613b      	str	r3, [r7, #16]
 8009a1a:	e008      	b.n	8009a2e <HAL_RCC_OscConfig+0x502>
 8009a1c:	f7fd fa00 	bl	8006e20 <HAL_GetTick>
 8009a20:	0002      	movs	r2, r0
 8009a22:	693b      	ldr	r3, [r7, #16]
 8009a24:	1ad3      	subs	r3, r2, r3
 8009a26:	2b02      	cmp	r3, #2
 8009a28:	d901      	bls.n	8009a2e <HAL_RCC_OscConfig+0x502>
 8009a2a:	2303      	movs	r3, #3
 8009a2c:	e0d8      	b.n	8009be0 <HAL_RCC_OscConfig+0x6b4>
 8009a2e:	4b4a      	ldr	r3, [pc, #296]	@ (8009b58 <HAL_RCC_OscConfig+0x62c>)
 8009a30:	681a      	ldr	r2, [r3, #0]
 8009a32:	2380      	movs	r3, #128	@ 0x80
 8009a34:	041b      	lsls	r3, r3, #16
 8009a36:	4013      	ands	r3, r2
 8009a38:	d1f0      	bne.n	8009a1c <HAL_RCC_OscConfig+0x4f0>
 8009a3a:	687b      	ldr	r3, [r7, #4]
 8009a3c:	6a1b      	ldr	r3, [r3, #32]
 8009a3e:	2b00      	cmp	r3, #0
 8009a40:	d100      	bne.n	8009a44 <HAL_RCC_OscConfig+0x518>
 8009a42:	e0cc      	b.n	8009bde <HAL_RCC_OscConfig+0x6b2>
 8009a44:	4b44      	ldr	r3, [pc, #272]	@ (8009b58 <HAL_RCC_OscConfig+0x62c>)
 8009a46:	689b      	ldr	r3, [r3, #8]
 8009a48:	2238      	movs	r2, #56	@ 0x38
 8009a4a:	4013      	ands	r3, r2
 8009a4c:	2b10      	cmp	r3, #16
 8009a4e:	d100      	bne.n	8009a52 <HAL_RCC_OscConfig+0x526>
 8009a50:	e07b      	b.n	8009b4a <HAL_RCC_OscConfig+0x61e>
 8009a52:	687b      	ldr	r3, [r7, #4]
 8009a54:	6a1b      	ldr	r3, [r3, #32]
 8009a56:	2b02      	cmp	r3, #2
 8009a58:	d156      	bne.n	8009b08 <HAL_RCC_OscConfig+0x5dc>
 8009a5a:	4b3f      	ldr	r3, [pc, #252]	@ (8009b58 <HAL_RCC_OscConfig+0x62c>)
 8009a5c:	681a      	ldr	r2, [r3, #0]
 8009a5e:	4b3e      	ldr	r3, [pc, #248]	@ (8009b58 <HAL_RCC_OscConfig+0x62c>)
 8009a60:	4942      	ldr	r1, [pc, #264]	@ (8009b6c <HAL_RCC_OscConfig+0x640>)
 8009a62:	400a      	ands	r2, r1
 8009a64:	601a      	str	r2, [r3, #0]
 8009a66:	f7fd f9db 	bl	8006e20 <HAL_GetTick>
 8009a6a:	0003      	movs	r3, r0
 8009a6c:	613b      	str	r3, [r7, #16]
 8009a6e:	e008      	b.n	8009a82 <HAL_RCC_OscConfig+0x556>
 8009a70:	f7fd f9d6 	bl	8006e20 <HAL_GetTick>
 8009a74:	0002      	movs	r2, r0
 8009a76:	693b      	ldr	r3, [r7, #16]
 8009a78:	1ad3      	subs	r3, r2, r3
 8009a7a:	2b02      	cmp	r3, #2
 8009a7c:	d901      	bls.n	8009a82 <HAL_RCC_OscConfig+0x556>
 8009a7e:	2303      	movs	r3, #3
 8009a80:	e0ae      	b.n	8009be0 <HAL_RCC_OscConfig+0x6b4>
 8009a82:	4b35      	ldr	r3, [pc, #212]	@ (8009b58 <HAL_RCC_OscConfig+0x62c>)
 8009a84:	681a      	ldr	r2, [r3, #0]
 8009a86:	2380      	movs	r3, #128	@ 0x80
 8009a88:	049b      	lsls	r3, r3, #18
 8009a8a:	4013      	ands	r3, r2
 8009a8c:	d1f0      	bne.n	8009a70 <HAL_RCC_OscConfig+0x544>
 8009a8e:	4b32      	ldr	r3, [pc, #200]	@ (8009b58 <HAL_RCC_OscConfig+0x62c>)
 8009a90:	68db      	ldr	r3, [r3, #12]
 8009a92:	4a37      	ldr	r2, [pc, #220]	@ (8009b70 <HAL_RCC_OscConfig+0x644>)
 8009a94:	4013      	ands	r3, r2
 8009a96:	0019      	movs	r1, r3
 8009a98:	687b      	ldr	r3, [r7, #4]
 8009a9a:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8009a9c:	687b      	ldr	r3, [r7, #4]
 8009a9e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8009aa0:	431a      	orrs	r2, r3
 8009aa2:	687b      	ldr	r3, [r7, #4]
 8009aa4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009aa6:	021b      	lsls	r3, r3, #8
 8009aa8:	431a      	orrs	r2, r3
 8009aaa:	687b      	ldr	r3, [r7, #4]
 8009aac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8009aae:	431a      	orrs	r2, r3
 8009ab0:	687b      	ldr	r3, [r7, #4]
 8009ab2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8009ab4:	431a      	orrs	r2, r3
 8009ab6:	687b      	ldr	r3, [r7, #4]
 8009ab8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009aba:	431a      	orrs	r2, r3
 8009abc:	4b26      	ldr	r3, [pc, #152]	@ (8009b58 <HAL_RCC_OscConfig+0x62c>)
 8009abe:	430a      	orrs	r2, r1
 8009ac0:	60da      	str	r2, [r3, #12]
 8009ac2:	4b25      	ldr	r3, [pc, #148]	@ (8009b58 <HAL_RCC_OscConfig+0x62c>)
 8009ac4:	681a      	ldr	r2, [r3, #0]
 8009ac6:	4b24      	ldr	r3, [pc, #144]	@ (8009b58 <HAL_RCC_OscConfig+0x62c>)
 8009ac8:	2180      	movs	r1, #128	@ 0x80
 8009aca:	0449      	lsls	r1, r1, #17
 8009acc:	430a      	orrs	r2, r1
 8009ace:	601a      	str	r2, [r3, #0]
 8009ad0:	4b21      	ldr	r3, [pc, #132]	@ (8009b58 <HAL_RCC_OscConfig+0x62c>)
 8009ad2:	68da      	ldr	r2, [r3, #12]
 8009ad4:	4b20      	ldr	r3, [pc, #128]	@ (8009b58 <HAL_RCC_OscConfig+0x62c>)
 8009ad6:	2180      	movs	r1, #128	@ 0x80
 8009ad8:	0549      	lsls	r1, r1, #21
 8009ada:	430a      	orrs	r2, r1
 8009adc:	60da      	str	r2, [r3, #12]
 8009ade:	f7fd f99f 	bl	8006e20 <HAL_GetTick>
 8009ae2:	0003      	movs	r3, r0
 8009ae4:	613b      	str	r3, [r7, #16]
 8009ae6:	e008      	b.n	8009afa <HAL_RCC_OscConfig+0x5ce>
 8009ae8:	f7fd f99a 	bl	8006e20 <HAL_GetTick>
 8009aec:	0002      	movs	r2, r0
 8009aee:	693b      	ldr	r3, [r7, #16]
 8009af0:	1ad3      	subs	r3, r2, r3
 8009af2:	2b02      	cmp	r3, #2
 8009af4:	d901      	bls.n	8009afa <HAL_RCC_OscConfig+0x5ce>
 8009af6:	2303      	movs	r3, #3
 8009af8:	e072      	b.n	8009be0 <HAL_RCC_OscConfig+0x6b4>
 8009afa:	4b17      	ldr	r3, [pc, #92]	@ (8009b58 <HAL_RCC_OscConfig+0x62c>)
 8009afc:	681a      	ldr	r2, [r3, #0]
 8009afe:	2380      	movs	r3, #128	@ 0x80
 8009b00:	049b      	lsls	r3, r3, #18
 8009b02:	4013      	ands	r3, r2
 8009b04:	d0f0      	beq.n	8009ae8 <HAL_RCC_OscConfig+0x5bc>
 8009b06:	e06a      	b.n	8009bde <HAL_RCC_OscConfig+0x6b2>
 8009b08:	4b13      	ldr	r3, [pc, #76]	@ (8009b58 <HAL_RCC_OscConfig+0x62c>)
 8009b0a:	681a      	ldr	r2, [r3, #0]
 8009b0c:	4b12      	ldr	r3, [pc, #72]	@ (8009b58 <HAL_RCC_OscConfig+0x62c>)
 8009b0e:	4917      	ldr	r1, [pc, #92]	@ (8009b6c <HAL_RCC_OscConfig+0x640>)
 8009b10:	400a      	ands	r2, r1
 8009b12:	601a      	str	r2, [r3, #0]
 8009b14:	f7fd f984 	bl	8006e20 <HAL_GetTick>
 8009b18:	0003      	movs	r3, r0
 8009b1a:	613b      	str	r3, [r7, #16]
 8009b1c:	e008      	b.n	8009b30 <HAL_RCC_OscConfig+0x604>
 8009b1e:	f7fd f97f 	bl	8006e20 <HAL_GetTick>
 8009b22:	0002      	movs	r2, r0
 8009b24:	693b      	ldr	r3, [r7, #16]
 8009b26:	1ad3      	subs	r3, r2, r3
 8009b28:	2b02      	cmp	r3, #2
 8009b2a:	d901      	bls.n	8009b30 <HAL_RCC_OscConfig+0x604>
 8009b2c:	2303      	movs	r3, #3
 8009b2e:	e057      	b.n	8009be0 <HAL_RCC_OscConfig+0x6b4>
 8009b30:	4b09      	ldr	r3, [pc, #36]	@ (8009b58 <HAL_RCC_OscConfig+0x62c>)
 8009b32:	681a      	ldr	r2, [r3, #0]
 8009b34:	2380      	movs	r3, #128	@ 0x80
 8009b36:	049b      	lsls	r3, r3, #18
 8009b38:	4013      	ands	r3, r2
 8009b3a:	d1f0      	bne.n	8009b1e <HAL_RCC_OscConfig+0x5f2>
 8009b3c:	4b06      	ldr	r3, [pc, #24]	@ (8009b58 <HAL_RCC_OscConfig+0x62c>)
 8009b3e:	68da      	ldr	r2, [r3, #12]
 8009b40:	4b05      	ldr	r3, [pc, #20]	@ (8009b58 <HAL_RCC_OscConfig+0x62c>)
 8009b42:	490c      	ldr	r1, [pc, #48]	@ (8009b74 <HAL_RCC_OscConfig+0x648>)
 8009b44:	400a      	ands	r2, r1
 8009b46:	60da      	str	r2, [r3, #12]
 8009b48:	e049      	b.n	8009bde <HAL_RCC_OscConfig+0x6b2>
 8009b4a:	687b      	ldr	r3, [r7, #4]
 8009b4c:	6a1b      	ldr	r3, [r3, #32]
 8009b4e:	2b01      	cmp	r3, #1
 8009b50:	d112      	bne.n	8009b78 <HAL_RCC_OscConfig+0x64c>
 8009b52:	2301      	movs	r3, #1
 8009b54:	e044      	b.n	8009be0 <HAL_RCC_OscConfig+0x6b4>
 8009b56:	46c0      	nop			@ (mov r8, r8)
 8009b58:	40021000 	.word	0x40021000
 8009b5c:	40007000 	.word	0x40007000
 8009b60:	00001388 	.word	0x00001388
 8009b64:	efffffff 	.word	0xefffffff
 8009b68:	ffbfffff 	.word	0xffbfffff
 8009b6c:	feffffff 	.word	0xfeffffff
 8009b70:	11c1808c 	.word	0x11c1808c
 8009b74:	eefefffc 	.word	0xeefefffc
 8009b78:	4b1b      	ldr	r3, [pc, #108]	@ (8009be8 <HAL_RCC_OscConfig+0x6bc>)
 8009b7a:	68db      	ldr	r3, [r3, #12]
 8009b7c:	617b      	str	r3, [r7, #20]
 8009b7e:	697b      	ldr	r3, [r7, #20]
 8009b80:	2203      	movs	r2, #3
 8009b82:	401a      	ands	r2, r3
 8009b84:	687b      	ldr	r3, [r7, #4]
 8009b86:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8009b88:	429a      	cmp	r2, r3
 8009b8a:	d126      	bne.n	8009bda <HAL_RCC_OscConfig+0x6ae>
 8009b8c:	697b      	ldr	r3, [r7, #20]
 8009b8e:	2270      	movs	r2, #112	@ 0x70
 8009b90:	401a      	ands	r2, r3
 8009b92:	687b      	ldr	r3, [r7, #4]
 8009b94:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8009b96:	429a      	cmp	r2, r3
 8009b98:	d11f      	bne.n	8009bda <HAL_RCC_OscConfig+0x6ae>
 8009b9a:	697a      	ldr	r2, [r7, #20]
 8009b9c:	23fe      	movs	r3, #254	@ 0xfe
 8009b9e:	01db      	lsls	r3, r3, #7
 8009ba0:	401a      	ands	r2, r3
 8009ba2:	687b      	ldr	r3, [r7, #4]
 8009ba4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009ba6:	021b      	lsls	r3, r3, #8
 8009ba8:	429a      	cmp	r2, r3
 8009baa:	d116      	bne.n	8009bda <HAL_RCC_OscConfig+0x6ae>
 8009bac:	697a      	ldr	r2, [r7, #20]
 8009bae:	23f8      	movs	r3, #248	@ 0xf8
 8009bb0:	039b      	lsls	r3, r3, #14
 8009bb2:	401a      	ands	r2, r3
 8009bb4:	687b      	ldr	r3, [r7, #4]
 8009bb6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8009bb8:	429a      	cmp	r2, r3
 8009bba:	d10e      	bne.n	8009bda <HAL_RCC_OscConfig+0x6ae>
 8009bbc:	697a      	ldr	r2, [r7, #20]
 8009bbe:	23e0      	movs	r3, #224	@ 0xe0
 8009bc0:	051b      	lsls	r3, r3, #20
 8009bc2:	401a      	ands	r2, r3
 8009bc4:	687b      	ldr	r3, [r7, #4]
 8009bc6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8009bc8:	429a      	cmp	r2, r3
 8009bca:	d106      	bne.n	8009bda <HAL_RCC_OscConfig+0x6ae>
 8009bcc:	697b      	ldr	r3, [r7, #20]
 8009bce:	0f5b      	lsrs	r3, r3, #29
 8009bd0:	075a      	lsls	r2, r3, #29
 8009bd2:	687b      	ldr	r3, [r7, #4]
 8009bd4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009bd6:	429a      	cmp	r2, r3
 8009bd8:	d001      	beq.n	8009bde <HAL_RCC_OscConfig+0x6b2>
 8009bda:	2301      	movs	r3, #1
 8009bdc:	e000      	b.n	8009be0 <HAL_RCC_OscConfig+0x6b4>
 8009bde:	2300      	movs	r3, #0
 8009be0:	0018      	movs	r0, r3
 8009be2:	46bd      	mov	sp, r7
 8009be4:	b008      	add	sp, #32
 8009be6:	bd80      	pop	{r7, pc}
 8009be8:	40021000 	.word	0x40021000

08009bec <HAL_RCC_ClockConfig>:
 8009bec:	b580      	push	{r7, lr}
 8009bee:	b084      	sub	sp, #16
 8009bf0:	af00      	add	r7, sp, #0
 8009bf2:	6078      	str	r0, [r7, #4]
 8009bf4:	6039      	str	r1, [r7, #0]
 8009bf6:	687b      	ldr	r3, [r7, #4]
 8009bf8:	2b00      	cmp	r3, #0
 8009bfa:	d101      	bne.n	8009c00 <HAL_RCC_ClockConfig+0x14>
 8009bfc:	2301      	movs	r3, #1
 8009bfe:	e0e9      	b.n	8009dd4 <HAL_RCC_ClockConfig+0x1e8>
 8009c00:	4b76      	ldr	r3, [pc, #472]	@ (8009ddc <HAL_RCC_ClockConfig+0x1f0>)
 8009c02:	681b      	ldr	r3, [r3, #0]
 8009c04:	2207      	movs	r2, #7
 8009c06:	4013      	ands	r3, r2
 8009c08:	683a      	ldr	r2, [r7, #0]
 8009c0a:	429a      	cmp	r2, r3
 8009c0c:	d91e      	bls.n	8009c4c <HAL_RCC_ClockConfig+0x60>
 8009c0e:	4b73      	ldr	r3, [pc, #460]	@ (8009ddc <HAL_RCC_ClockConfig+0x1f0>)
 8009c10:	681b      	ldr	r3, [r3, #0]
 8009c12:	2207      	movs	r2, #7
 8009c14:	4393      	bics	r3, r2
 8009c16:	0019      	movs	r1, r3
 8009c18:	4b70      	ldr	r3, [pc, #448]	@ (8009ddc <HAL_RCC_ClockConfig+0x1f0>)
 8009c1a:	683a      	ldr	r2, [r7, #0]
 8009c1c:	430a      	orrs	r2, r1
 8009c1e:	601a      	str	r2, [r3, #0]
 8009c20:	f7fd f8fe 	bl	8006e20 <HAL_GetTick>
 8009c24:	0003      	movs	r3, r0
 8009c26:	60fb      	str	r3, [r7, #12]
 8009c28:	e009      	b.n	8009c3e <HAL_RCC_ClockConfig+0x52>
 8009c2a:	f7fd f8f9 	bl	8006e20 <HAL_GetTick>
 8009c2e:	0002      	movs	r2, r0
 8009c30:	68fb      	ldr	r3, [r7, #12]
 8009c32:	1ad3      	subs	r3, r2, r3
 8009c34:	4a6a      	ldr	r2, [pc, #424]	@ (8009de0 <HAL_RCC_ClockConfig+0x1f4>)
 8009c36:	4293      	cmp	r3, r2
 8009c38:	d901      	bls.n	8009c3e <HAL_RCC_ClockConfig+0x52>
 8009c3a:	2303      	movs	r3, #3
 8009c3c:	e0ca      	b.n	8009dd4 <HAL_RCC_ClockConfig+0x1e8>
 8009c3e:	4b67      	ldr	r3, [pc, #412]	@ (8009ddc <HAL_RCC_ClockConfig+0x1f0>)
 8009c40:	681b      	ldr	r3, [r3, #0]
 8009c42:	2207      	movs	r2, #7
 8009c44:	4013      	ands	r3, r2
 8009c46:	683a      	ldr	r2, [r7, #0]
 8009c48:	429a      	cmp	r2, r3
 8009c4a:	d1ee      	bne.n	8009c2a <HAL_RCC_ClockConfig+0x3e>
 8009c4c:	687b      	ldr	r3, [r7, #4]
 8009c4e:	681b      	ldr	r3, [r3, #0]
 8009c50:	2202      	movs	r2, #2
 8009c52:	4013      	ands	r3, r2
 8009c54:	d015      	beq.n	8009c82 <HAL_RCC_ClockConfig+0x96>
 8009c56:	687b      	ldr	r3, [r7, #4]
 8009c58:	681b      	ldr	r3, [r3, #0]
 8009c5a:	2204      	movs	r2, #4
 8009c5c:	4013      	ands	r3, r2
 8009c5e:	d006      	beq.n	8009c6e <HAL_RCC_ClockConfig+0x82>
 8009c60:	4b60      	ldr	r3, [pc, #384]	@ (8009de4 <HAL_RCC_ClockConfig+0x1f8>)
 8009c62:	689a      	ldr	r2, [r3, #8]
 8009c64:	4b5f      	ldr	r3, [pc, #380]	@ (8009de4 <HAL_RCC_ClockConfig+0x1f8>)
 8009c66:	21e0      	movs	r1, #224	@ 0xe0
 8009c68:	01c9      	lsls	r1, r1, #7
 8009c6a:	430a      	orrs	r2, r1
 8009c6c:	609a      	str	r2, [r3, #8]
 8009c6e:	4b5d      	ldr	r3, [pc, #372]	@ (8009de4 <HAL_RCC_ClockConfig+0x1f8>)
 8009c70:	689b      	ldr	r3, [r3, #8]
 8009c72:	4a5d      	ldr	r2, [pc, #372]	@ (8009de8 <HAL_RCC_ClockConfig+0x1fc>)
 8009c74:	4013      	ands	r3, r2
 8009c76:	0019      	movs	r1, r3
 8009c78:	687b      	ldr	r3, [r7, #4]
 8009c7a:	689a      	ldr	r2, [r3, #8]
 8009c7c:	4b59      	ldr	r3, [pc, #356]	@ (8009de4 <HAL_RCC_ClockConfig+0x1f8>)
 8009c7e:	430a      	orrs	r2, r1
 8009c80:	609a      	str	r2, [r3, #8]
 8009c82:	687b      	ldr	r3, [r7, #4]
 8009c84:	681b      	ldr	r3, [r3, #0]
 8009c86:	2201      	movs	r2, #1
 8009c88:	4013      	ands	r3, r2
 8009c8a:	d057      	beq.n	8009d3c <HAL_RCC_ClockConfig+0x150>
 8009c8c:	687b      	ldr	r3, [r7, #4]
 8009c8e:	685b      	ldr	r3, [r3, #4]
 8009c90:	2b01      	cmp	r3, #1
 8009c92:	d107      	bne.n	8009ca4 <HAL_RCC_ClockConfig+0xb8>
 8009c94:	4b53      	ldr	r3, [pc, #332]	@ (8009de4 <HAL_RCC_ClockConfig+0x1f8>)
 8009c96:	681a      	ldr	r2, [r3, #0]
 8009c98:	2380      	movs	r3, #128	@ 0x80
 8009c9a:	029b      	lsls	r3, r3, #10
 8009c9c:	4013      	ands	r3, r2
 8009c9e:	d12b      	bne.n	8009cf8 <HAL_RCC_ClockConfig+0x10c>
 8009ca0:	2301      	movs	r3, #1
 8009ca2:	e097      	b.n	8009dd4 <HAL_RCC_ClockConfig+0x1e8>
 8009ca4:	687b      	ldr	r3, [r7, #4]
 8009ca6:	685b      	ldr	r3, [r3, #4]
 8009ca8:	2b02      	cmp	r3, #2
 8009caa:	d107      	bne.n	8009cbc <HAL_RCC_ClockConfig+0xd0>
 8009cac:	4b4d      	ldr	r3, [pc, #308]	@ (8009de4 <HAL_RCC_ClockConfig+0x1f8>)
 8009cae:	681a      	ldr	r2, [r3, #0]
 8009cb0:	2380      	movs	r3, #128	@ 0x80
 8009cb2:	049b      	lsls	r3, r3, #18
 8009cb4:	4013      	ands	r3, r2
 8009cb6:	d11f      	bne.n	8009cf8 <HAL_RCC_ClockConfig+0x10c>
 8009cb8:	2301      	movs	r3, #1
 8009cba:	e08b      	b.n	8009dd4 <HAL_RCC_ClockConfig+0x1e8>
 8009cbc:	687b      	ldr	r3, [r7, #4]
 8009cbe:	685b      	ldr	r3, [r3, #4]
 8009cc0:	2b00      	cmp	r3, #0
 8009cc2:	d107      	bne.n	8009cd4 <HAL_RCC_ClockConfig+0xe8>
 8009cc4:	4b47      	ldr	r3, [pc, #284]	@ (8009de4 <HAL_RCC_ClockConfig+0x1f8>)
 8009cc6:	681a      	ldr	r2, [r3, #0]
 8009cc8:	2380      	movs	r3, #128	@ 0x80
 8009cca:	00db      	lsls	r3, r3, #3
 8009ccc:	4013      	ands	r3, r2
 8009cce:	d113      	bne.n	8009cf8 <HAL_RCC_ClockConfig+0x10c>
 8009cd0:	2301      	movs	r3, #1
 8009cd2:	e07f      	b.n	8009dd4 <HAL_RCC_ClockConfig+0x1e8>
 8009cd4:	687b      	ldr	r3, [r7, #4]
 8009cd6:	685b      	ldr	r3, [r3, #4]
 8009cd8:	2b03      	cmp	r3, #3
 8009cda:	d106      	bne.n	8009cea <HAL_RCC_ClockConfig+0xfe>
 8009cdc:	4b41      	ldr	r3, [pc, #260]	@ (8009de4 <HAL_RCC_ClockConfig+0x1f8>)
 8009cde:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8009ce0:	2202      	movs	r2, #2
 8009ce2:	4013      	ands	r3, r2
 8009ce4:	d108      	bne.n	8009cf8 <HAL_RCC_ClockConfig+0x10c>
 8009ce6:	2301      	movs	r3, #1
 8009ce8:	e074      	b.n	8009dd4 <HAL_RCC_ClockConfig+0x1e8>
 8009cea:	4b3e      	ldr	r3, [pc, #248]	@ (8009de4 <HAL_RCC_ClockConfig+0x1f8>)
 8009cec:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8009cee:	2202      	movs	r2, #2
 8009cf0:	4013      	ands	r3, r2
 8009cf2:	d101      	bne.n	8009cf8 <HAL_RCC_ClockConfig+0x10c>
 8009cf4:	2301      	movs	r3, #1
 8009cf6:	e06d      	b.n	8009dd4 <HAL_RCC_ClockConfig+0x1e8>
 8009cf8:	4b3a      	ldr	r3, [pc, #232]	@ (8009de4 <HAL_RCC_ClockConfig+0x1f8>)
 8009cfa:	689b      	ldr	r3, [r3, #8]
 8009cfc:	2207      	movs	r2, #7
 8009cfe:	4393      	bics	r3, r2
 8009d00:	0019      	movs	r1, r3
 8009d02:	687b      	ldr	r3, [r7, #4]
 8009d04:	685a      	ldr	r2, [r3, #4]
 8009d06:	4b37      	ldr	r3, [pc, #220]	@ (8009de4 <HAL_RCC_ClockConfig+0x1f8>)
 8009d08:	430a      	orrs	r2, r1
 8009d0a:	609a      	str	r2, [r3, #8]
 8009d0c:	f7fd f888 	bl	8006e20 <HAL_GetTick>
 8009d10:	0003      	movs	r3, r0
 8009d12:	60fb      	str	r3, [r7, #12]
 8009d14:	e009      	b.n	8009d2a <HAL_RCC_ClockConfig+0x13e>
 8009d16:	f7fd f883 	bl	8006e20 <HAL_GetTick>
 8009d1a:	0002      	movs	r2, r0
 8009d1c:	68fb      	ldr	r3, [r7, #12]
 8009d1e:	1ad3      	subs	r3, r2, r3
 8009d20:	4a2f      	ldr	r2, [pc, #188]	@ (8009de0 <HAL_RCC_ClockConfig+0x1f4>)
 8009d22:	4293      	cmp	r3, r2
 8009d24:	d901      	bls.n	8009d2a <HAL_RCC_ClockConfig+0x13e>
 8009d26:	2303      	movs	r3, #3
 8009d28:	e054      	b.n	8009dd4 <HAL_RCC_ClockConfig+0x1e8>
 8009d2a:	4b2e      	ldr	r3, [pc, #184]	@ (8009de4 <HAL_RCC_ClockConfig+0x1f8>)
 8009d2c:	689b      	ldr	r3, [r3, #8]
 8009d2e:	2238      	movs	r2, #56	@ 0x38
 8009d30:	401a      	ands	r2, r3
 8009d32:	687b      	ldr	r3, [r7, #4]
 8009d34:	685b      	ldr	r3, [r3, #4]
 8009d36:	00db      	lsls	r3, r3, #3
 8009d38:	429a      	cmp	r2, r3
 8009d3a:	d1ec      	bne.n	8009d16 <HAL_RCC_ClockConfig+0x12a>
 8009d3c:	4b27      	ldr	r3, [pc, #156]	@ (8009ddc <HAL_RCC_ClockConfig+0x1f0>)
 8009d3e:	681b      	ldr	r3, [r3, #0]
 8009d40:	2207      	movs	r2, #7
 8009d42:	4013      	ands	r3, r2
 8009d44:	683a      	ldr	r2, [r7, #0]
 8009d46:	429a      	cmp	r2, r3
 8009d48:	d21e      	bcs.n	8009d88 <HAL_RCC_ClockConfig+0x19c>
 8009d4a:	4b24      	ldr	r3, [pc, #144]	@ (8009ddc <HAL_RCC_ClockConfig+0x1f0>)
 8009d4c:	681b      	ldr	r3, [r3, #0]
 8009d4e:	2207      	movs	r2, #7
 8009d50:	4393      	bics	r3, r2
 8009d52:	0019      	movs	r1, r3
 8009d54:	4b21      	ldr	r3, [pc, #132]	@ (8009ddc <HAL_RCC_ClockConfig+0x1f0>)
 8009d56:	683a      	ldr	r2, [r7, #0]
 8009d58:	430a      	orrs	r2, r1
 8009d5a:	601a      	str	r2, [r3, #0]
 8009d5c:	f7fd f860 	bl	8006e20 <HAL_GetTick>
 8009d60:	0003      	movs	r3, r0
 8009d62:	60fb      	str	r3, [r7, #12]
 8009d64:	e009      	b.n	8009d7a <HAL_RCC_ClockConfig+0x18e>
 8009d66:	f7fd f85b 	bl	8006e20 <HAL_GetTick>
 8009d6a:	0002      	movs	r2, r0
 8009d6c:	68fb      	ldr	r3, [r7, #12]
 8009d6e:	1ad3      	subs	r3, r2, r3
 8009d70:	4a1b      	ldr	r2, [pc, #108]	@ (8009de0 <HAL_RCC_ClockConfig+0x1f4>)
 8009d72:	4293      	cmp	r3, r2
 8009d74:	d901      	bls.n	8009d7a <HAL_RCC_ClockConfig+0x18e>
 8009d76:	2303      	movs	r3, #3
 8009d78:	e02c      	b.n	8009dd4 <HAL_RCC_ClockConfig+0x1e8>
 8009d7a:	4b18      	ldr	r3, [pc, #96]	@ (8009ddc <HAL_RCC_ClockConfig+0x1f0>)
 8009d7c:	681b      	ldr	r3, [r3, #0]
 8009d7e:	2207      	movs	r2, #7
 8009d80:	4013      	ands	r3, r2
 8009d82:	683a      	ldr	r2, [r7, #0]
 8009d84:	429a      	cmp	r2, r3
 8009d86:	d1ee      	bne.n	8009d66 <HAL_RCC_ClockConfig+0x17a>
 8009d88:	687b      	ldr	r3, [r7, #4]
 8009d8a:	681b      	ldr	r3, [r3, #0]
 8009d8c:	2204      	movs	r2, #4
 8009d8e:	4013      	ands	r3, r2
 8009d90:	d009      	beq.n	8009da6 <HAL_RCC_ClockConfig+0x1ba>
 8009d92:	4b14      	ldr	r3, [pc, #80]	@ (8009de4 <HAL_RCC_ClockConfig+0x1f8>)
 8009d94:	689b      	ldr	r3, [r3, #8]
 8009d96:	4a15      	ldr	r2, [pc, #84]	@ (8009dec <HAL_RCC_ClockConfig+0x200>)
 8009d98:	4013      	ands	r3, r2
 8009d9a:	0019      	movs	r1, r3
 8009d9c:	687b      	ldr	r3, [r7, #4]
 8009d9e:	68da      	ldr	r2, [r3, #12]
 8009da0:	4b10      	ldr	r3, [pc, #64]	@ (8009de4 <HAL_RCC_ClockConfig+0x1f8>)
 8009da2:	430a      	orrs	r2, r1
 8009da4:	609a      	str	r2, [r3, #8]
 8009da6:	f000 f829 	bl	8009dfc <HAL_RCC_GetSysClockFreq>
 8009daa:	0001      	movs	r1, r0
 8009dac:	4b0d      	ldr	r3, [pc, #52]	@ (8009de4 <HAL_RCC_ClockConfig+0x1f8>)
 8009dae:	689b      	ldr	r3, [r3, #8]
 8009db0:	0a1b      	lsrs	r3, r3, #8
 8009db2:	220f      	movs	r2, #15
 8009db4:	401a      	ands	r2, r3
 8009db6:	4b0e      	ldr	r3, [pc, #56]	@ (8009df0 <HAL_RCC_ClockConfig+0x204>)
 8009db8:	0092      	lsls	r2, r2, #2
 8009dba:	58d3      	ldr	r3, [r2, r3]
 8009dbc:	221f      	movs	r2, #31
 8009dbe:	4013      	ands	r3, r2
 8009dc0:	000a      	movs	r2, r1
 8009dc2:	40da      	lsrs	r2, r3
 8009dc4:	4b0b      	ldr	r3, [pc, #44]	@ (8009df4 <HAL_RCC_ClockConfig+0x208>)
 8009dc6:	601a      	str	r2, [r3, #0]
 8009dc8:	4b0b      	ldr	r3, [pc, #44]	@ (8009df8 <HAL_RCC_ClockConfig+0x20c>)
 8009dca:	681b      	ldr	r3, [r3, #0]
 8009dcc:	0018      	movs	r0, r3
 8009dce:	f7fc ffcb 	bl	8006d68 <HAL_InitTick>
 8009dd2:	0003      	movs	r3, r0
 8009dd4:	0018      	movs	r0, r3
 8009dd6:	46bd      	mov	sp, r7
 8009dd8:	b004      	add	sp, #16
 8009dda:	bd80      	pop	{r7, pc}
 8009ddc:	40022000 	.word	0x40022000
 8009de0:	00001388 	.word	0x00001388
 8009de4:	40021000 	.word	0x40021000
 8009de8:	fffff0ff 	.word	0xfffff0ff
 8009dec:	ffff8fff 	.word	0xffff8fff
 8009df0:	0800c3a8 	.word	0x0800c3a8
 8009df4:	2000009c 	.word	0x2000009c
 8009df8:	200000a0 	.word	0x200000a0

08009dfc <HAL_RCC_GetSysClockFreq>:
 8009dfc:	b580      	push	{r7, lr}
 8009dfe:	b086      	sub	sp, #24
 8009e00:	af00      	add	r7, sp, #0
 8009e02:	4b3c      	ldr	r3, [pc, #240]	@ (8009ef4 <HAL_RCC_GetSysClockFreq+0xf8>)
 8009e04:	689b      	ldr	r3, [r3, #8]
 8009e06:	2238      	movs	r2, #56	@ 0x38
 8009e08:	4013      	ands	r3, r2
 8009e0a:	d10f      	bne.n	8009e2c <HAL_RCC_GetSysClockFreq+0x30>
 8009e0c:	4b39      	ldr	r3, [pc, #228]	@ (8009ef4 <HAL_RCC_GetSysClockFreq+0xf8>)
 8009e0e:	681b      	ldr	r3, [r3, #0]
 8009e10:	0adb      	lsrs	r3, r3, #11
 8009e12:	2207      	movs	r2, #7
 8009e14:	4013      	ands	r3, r2
 8009e16:	2201      	movs	r2, #1
 8009e18:	409a      	lsls	r2, r3
 8009e1a:	0013      	movs	r3, r2
 8009e1c:	603b      	str	r3, [r7, #0]
 8009e1e:	6839      	ldr	r1, [r7, #0]
 8009e20:	4835      	ldr	r0, [pc, #212]	@ (8009ef8 <HAL_RCC_GetSysClockFreq+0xfc>)
 8009e22:	f7f6 f971 	bl	8000108 <__udivsi3>
 8009e26:	0003      	movs	r3, r0
 8009e28:	613b      	str	r3, [r7, #16]
 8009e2a:	e05d      	b.n	8009ee8 <HAL_RCC_GetSysClockFreq+0xec>
 8009e2c:	4b31      	ldr	r3, [pc, #196]	@ (8009ef4 <HAL_RCC_GetSysClockFreq+0xf8>)
 8009e2e:	689b      	ldr	r3, [r3, #8]
 8009e30:	2238      	movs	r2, #56	@ 0x38
 8009e32:	4013      	ands	r3, r2
 8009e34:	2b08      	cmp	r3, #8
 8009e36:	d102      	bne.n	8009e3e <HAL_RCC_GetSysClockFreq+0x42>
 8009e38:	4b2f      	ldr	r3, [pc, #188]	@ (8009ef8 <HAL_RCC_GetSysClockFreq+0xfc>)
 8009e3a:	613b      	str	r3, [r7, #16]
 8009e3c:	e054      	b.n	8009ee8 <HAL_RCC_GetSysClockFreq+0xec>
 8009e3e:	4b2d      	ldr	r3, [pc, #180]	@ (8009ef4 <HAL_RCC_GetSysClockFreq+0xf8>)
 8009e40:	689b      	ldr	r3, [r3, #8]
 8009e42:	2238      	movs	r2, #56	@ 0x38
 8009e44:	4013      	ands	r3, r2
 8009e46:	2b10      	cmp	r3, #16
 8009e48:	d138      	bne.n	8009ebc <HAL_RCC_GetSysClockFreq+0xc0>
 8009e4a:	4b2a      	ldr	r3, [pc, #168]	@ (8009ef4 <HAL_RCC_GetSysClockFreq+0xf8>)
 8009e4c:	68db      	ldr	r3, [r3, #12]
 8009e4e:	2203      	movs	r2, #3
 8009e50:	4013      	ands	r3, r2
 8009e52:	60fb      	str	r3, [r7, #12]
 8009e54:	4b27      	ldr	r3, [pc, #156]	@ (8009ef4 <HAL_RCC_GetSysClockFreq+0xf8>)
 8009e56:	68db      	ldr	r3, [r3, #12]
 8009e58:	091b      	lsrs	r3, r3, #4
 8009e5a:	2207      	movs	r2, #7
 8009e5c:	4013      	ands	r3, r2
 8009e5e:	3301      	adds	r3, #1
 8009e60:	60bb      	str	r3, [r7, #8]
 8009e62:	68fb      	ldr	r3, [r7, #12]
 8009e64:	2b03      	cmp	r3, #3
 8009e66:	d10d      	bne.n	8009e84 <HAL_RCC_GetSysClockFreq+0x88>
 8009e68:	68b9      	ldr	r1, [r7, #8]
 8009e6a:	4823      	ldr	r0, [pc, #140]	@ (8009ef8 <HAL_RCC_GetSysClockFreq+0xfc>)
 8009e6c:	f7f6 f94c 	bl	8000108 <__udivsi3>
 8009e70:	0003      	movs	r3, r0
 8009e72:	0019      	movs	r1, r3
 8009e74:	4b1f      	ldr	r3, [pc, #124]	@ (8009ef4 <HAL_RCC_GetSysClockFreq+0xf8>)
 8009e76:	68db      	ldr	r3, [r3, #12]
 8009e78:	0a1b      	lsrs	r3, r3, #8
 8009e7a:	227f      	movs	r2, #127	@ 0x7f
 8009e7c:	4013      	ands	r3, r2
 8009e7e:	434b      	muls	r3, r1
 8009e80:	617b      	str	r3, [r7, #20]
 8009e82:	e00d      	b.n	8009ea0 <HAL_RCC_GetSysClockFreq+0xa4>
 8009e84:	68b9      	ldr	r1, [r7, #8]
 8009e86:	481c      	ldr	r0, [pc, #112]	@ (8009ef8 <HAL_RCC_GetSysClockFreq+0xfc>)
 8009e88:	f7f6 f93e 	bl	8000108 <__udivsi3>
 8009e8c:	0003      	movs	r3, r0
 8009e8e:	0019      	movs	r1, r3
 8009e90:	4b18      	ldr	r3, [pc, #96]	@ (8009ef4 <HAL_RCC_GetSysClockFreq+0xf8>)
 8009e92:	68db      	ldr	r3, [r3, #12]
 8009e94:	0a1b      	lsrs	r3, r3, #8
 8009e96:	227f      	movs	r2, #127	@ 0x7f
 8009e98:	4013      	ands	r3, r2
 8009e9a:	434b      	muls	r3, r1
 8009e9c:	617b      	str	r3, [r7, #20]
 8009e9e:	46c0      	nop			@ (mov r8, r8)
 8009ea0:	4b14      	ldr	r3, [pc, #80]	@ (8009ef4 <HAL_RCC_GetSysClockFreq+0xf8>)
 8009ea2:	68db      	ldr	r3, [r3, #12]
 8009ea4:	0f5b      	lsrs	r3, r3, #29
 8009ea6:	2207      	movs	r2, #7
 8009ea8:	4013      	ands	r3, r2
 8009eaa:	3301      	adds	r3, #1
 8009eac:	607b      	str	r3, [r7, #4]
 8009eae:	6879      	ldr	r1, [r7, #4]
 8009eb0:	6978      	ldr	r0, [r7, #20]
 8009eb2:	f7f6 f929 	bl	8000108 <__udivsi3>
 8009eb6:	0003      	movs	r3, r0
 8009eb8:	613b      	str	r3, [r7, #16]
 8009eba:	e015      	b.n	8009ee8 <HAL_RCC_GetSysClockFreq+0xec>
 8009ebc:	4b0d      	ldr	r3, [pc, #52]	@ (8009ef4 <HAL_RCC_GetSysClockFreq+0xf8>)
 8009ebe:	689b      	ldr	r3, [r3, #8]
 8009ec0:	2238      	movs	r2, #56	@ 0x38
 8009ec2:	4013      	ands	r3, r2
 8009ec4:	2b20      	cmp	r3, #32
 8009ec6:	d103      	bne.n	8009ed0 <HAL_RCC_GetSysClockFreq+0xd4>
 8009ec8:	2380      	movs	r3, #128	@ 0x80
 8009eca:	021b      	lsls	r3, r3, #8
 8009ecc:	613b      	str	r3, [r7, #16]
 8009ece:	e00b      	b.n	8009ee8 <HAL_RCC_GetSysClockFreq+0xec>
 8009ed0:	4b08      	ldr	r3, [pc, #32]	@ (8009ef4 <HAL_RCC_GetSysClockFreq+0xf8>)
 8009ed2:	689b      	ldr	r3, [r3, #8]
 8009ed4:	2238      	movs	r2, #56	@ 0x38
 8009ed6:	4013      	ands	r3, r2
 8009ed8:	2b18      	cmp	r3, #24
 8009eda:	d103      	bne.n	8009ee4 <HAL_RCC_GetSysClockFreq+0xe8>
 8009edc:	23fa      	movs	r3, #250	@ 0xfa
 8009ede:	01db      	lsls	r3, r3, #7
 8009ee0:	613b      	str	r3, [r7, #16]
 8009ee2:	e001      	b.n	8009ee8 <HAL_RCC_GetSysClockFreq+0xec>
 8009ee4:	2300      	movs	r3, #0
 8009ee6:	613b      	str	r3, [r7, #16]
 8009ee8:	693b      	ldr	r3, [r7, #16]
 8009eea:	0018      	movs	r0, r3
 8009eec:	46bd      	mov	sp, r7
 8009eee:	b006      	add	sp, #24
 8009ef0:	bd80      	pop	{r7, pc}
 8009ef2:	46c0      	nop			@ (mov r8, r8)
 8009ef4:	40021000 	.word	0x40021000
 8009ef8:	00f42400 	.word	0x00f42400

08009efc <HAL_RCCEx_PeriphCLKConfig>:
 8009efc:	b580      	push	{r7, lr}
 8009efe:	b086      	sub	sp, #24
 8009f00:	af00      	add	r7, sp, #0
 8009f02:	6078      	str	r0, [r7, #4]
 8009f04:	2313      	movs	r3, #19
 8009f06:	18fb      	adds	r3, r7, r3
 8009f08:	2200      	movs	r2, #0
 8009f0a:	701a      	strb	r2, [r3, #0]
 8009f0c:	2312      	movs	r3, #18
 8009f0e:	18fb      	adds	r3, r7, r3
 8009f10:	2200      	movs	r2, #0
 8009f12:	701a      	strb	r2, [r3, #0]
 8009f14:	687b      	ldr	r3, [r7, #4]
 8009f16:	681a      	ldr	r2, [r3, #0]
 8009f18:	2380      	movs	r3, #128	@ 0x80
 8009f1a:	029b      	lsls	r3, r3, #10
 8009f1c:	4013      	ands	r3, r2
 8009f1e:	d100      	bne.n	8009f22 <HAL_RCCEx_PeriphCLKConfig+0x26>
 8009f20:	e0ad      	b.n	800a07e <HAL_RCCEx_PeriphCLKConfig+0x182>
 8009f22:	2011      	movs	r0, #17
 8009f24:	183b      	adds	r3, r7, r0
 8009f26:	2200      	movs	r2, #0
 8009f28:	701a      	strb	r2, [r3, #0]
 8009f2a:	4b47      	ldr	r3, [pc, #284]	@ (800a048 <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 8009f2c:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8009f2e:	2380      	movs	r3, #128	@ 0x80
 8009f30:	055b      	lsls	r3, r3, #21
 8009f32:	4013      	ands	r3, r2
 8009f34:	d110      	bne.n	8009f58 <HAL_RCCEx_PeriphCLKConfig+0x5c>
 8009f36:	4b44      	ldr	r3, [pc, #272]	@ (800a048 <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 8009f38:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8009f3a:	4b43      	ldr	r3, [pc, #268]	@ (800a048 <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 8009f3c:	2180      	movs	r1, #128	@ 0x80
 8009f3e:	0549      	lsls	r1, r1, #21
 8009f40:	430a      	orrs	r2, r1
 8009f42:	63da      	str	r2, [r3, #60]	@ 0x3c
 8009f44:	4b40      	ldr	r3, [pc, #256]	@ (800a048 <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 8009f46:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8009f48:	2380      	movs	r3, #128	@ 0x80
 8009f4a:	055b      	lsls	r3, r3, #21
 8009f4c:	4013      	ands	r3, r2
 8009f4e:	60bb      	str	r3, [r7, #8]
 8009f50:	68bb      	ldr	r3, [r7, #8]
 8009f52:	183b      	adds	r3, r7, r0
 8009f54:	2201      	movs	r2, #1
 8009f56:	701a      	strb	r2, [r3, #0]
 8009f58:	4b3c      	ldr	r3, [pc, #240]	@ (800a04c <HAL_RCCEx_PeriphCLKConfig+0x150>)
 8009f5a:	681a      	ldr	r2, [r3, #0]
 8009f5c:	4b3b      	ldr	r3, [pc, #236]	@ (800a04c <HAL_RCCEx_PeriphCLKConfig+0x150>)
 8009f5e:	2180      	movs	r1, #128	@ 0x80
 8009f60:	0049      	lsls	r1, r1, #1
 8009f62:	430a      	orrs	r2, r1
 8009f64:	601a      	str	r2, [r3, #0]
 8009f66:	f7fc ff5b 	bl	8006e20 <HAL_GetTick>
 8009f6a:	0003      	movs	r3, r0
 8009f6c:	60fb      	str	r3, [r7, #12]
 8009f6e:	e00b      	b.n	8009f88 <HAL_RCCEx_PeriphCLKConfig+0x8c>
 8009f70:	f7fc ff56 	bl	8006e20 <HAL_GetTick>
 8009f74:	0002      	movs	r2, r0
 8009f76:	68fb      	ldr	r3, [r7, #12]
 8009f78:	1ad3      	subs	r3, r2, r3
 8009f7a:	2b02      	cmp	r3, #2
 8009f7c:	d904      	bls.n	8009f88 <HAL_RCCEx_PeriphCLKConfig+0x8c>
 8009f7e:	2313      	movs	r3, #19
 8009f80:	18fb      	adds	r3, r7, r3
 8009f82:	2203      	movs	r2, #3
 8009f84:	701a      	strb	r2, [r3, #0]
 8009f86:	e005      	b.n	8009f94 <HAL_RCCEx_PeriphCLKConfig+0x98>
 8009f88:	4b30      	ldr	r3, [pc, #192]	@ (800a04c <HAL_RCCEx_PeriphCLKConfig+0x150>)
 8009f8a:	681a      	ldr	r2, [r3, #0]
 8009f8c:	2380      	movs	r3, #128	@ 0x80
 8009f8e:	005b      	lsls	r3, r3, #1
 8009f90:	4013      	ands	r3, r2
 8009f92:	d0ed      	beq.n	8009f70 <HAL_RCCEx_PeriphCLKConfig+0x74>
 8009f94:	2313      	movs	r3, #19
 8009f96:	18fb      	adds	r3, r7, r3
 8009f98:	781b      	ldrb	r3, [r3, #0]
 8009f9a:	2b00      	cmp	r3, #0
 8009f9c:	d15e      	bne.n	800a05c <HAL_RCCEx_PeriphCLKConfig+0x160>
 8009f9e:	4b2a      	ldr	r3, [pc, #168]	@ (800a048 <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 8009fa0:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8009fa2:	23c0      	movs	r3, #192	@ 0xc0
 8009fa4:	009b      	lsls	r3, r3, #2
 8009fa6:	4013      	ands	r3, r2
 8009fa8:	617b      	str	r3, [r7, #20]
 8009faa:	697b      	ldr	r3, [r7, #20]
 8009fac:	2b00      	cmp	r3, #0
 8009fae:	d019      	beq.n	8009fe4 <HAL_RCCEx_PeriphCLKConfig+0xe8>
 8009fb0:	687b      	ldr	r3, [r7, #4]
 8009fb2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8009fb4:	697a      	ldr	r2, [r7, #20]
 8009fb6:	429a      	cmp	r2, r3
 8009fb8:	d014      	beq.n	8009fe4 <HAL_RCCEx_PeriphCLKConfig+0xe8>
 8009fba:	4b23      	ldr	r3, [pc, #140]	@ (800a048 <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 8009fbc:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8009fbe:	4a24      	ldr	r2, [pc, #144]	@ (800a050 <HAL_RCCEx_PeriphCLKConfig+0x154>)
 8009fc0:	4013      	ands	r3, r2
 8009fc2:	617b      	str	r3, [r7, #20]
 8009fc4:	4b20      	ldr	r3, [pc, #128]	@ (800a048 <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 8009fc6:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8009fc8:	4b1f      	ldr	r3, [pc, #124]	@ (800a048 <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 8009fca:	2180      	movs	r1, #128	@ 0x80
 8009fcc:	0249      	lsls	r1, r1, #9
 8009fce:	430a      	orrs	r2, r1
 8009fd0:	65da      	str	r2, [r3, #92]	@ 0x5c
 8009fd2:	4b1d      	ldr	r3, [pc, #116]	@ (800a048 <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 8009fd4:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8009fd6:	4b1c      	ldr	r3, [pc, #112]	@ (800a048 <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 8009fd8:	491e      	ldr	r1, [pc, #120]	@ (800a054 <HAL_RCCEx_PeriphCLKConfig+0x158>)
 8009fda:	400a      	ands	r2, r1
 8009fdc:	65da      	str	r2, [r3, #92]	@ 0x5c
 8009fde:	4b1a      	ldr	r3, [pc, #104]	@ (800a048 <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 8009fe0:	697a      	ldr	r2, [r7, #20]
 8009fe2:	65da      	str	r2, [r3, #92]	@ 0x5c
 8009fe4:	697b      	ldr	r3, [r7, #20]
 8009fe6:	2201      	movs	r2, #1
 8009fe8:	4013      	ands	r3, r2
 8009fea:	d016      	beq.n	800a01a <HAL_RCCEx_PeriphCLKConfig+0x11e>
 8009fec:	f7fc ff18 	bl	8006e20 <HAL_GetTick>
 8009ff0:	0003      	movs	r3, r0
 8009ff2:	60fb      	str	r3, [r7, #12]
 8009ff4:	e00c      	b.n	800a010 <HAL_RCCEx_PeriphCLKConfig+0x114>
 8009ff6:	f7fc ff13 	bl	8006e20 <HAL_GetTick>
 8009ffa:	0002      	movs	r2, r0
 8009ffc:	68fb      	ldr	r3, [r7, #12]
 8009ffe:	1ad3      	subs	r3, r2, r3
 800a000:	4a15      	ldr	r2, [pc, #84]	@ (800a058 <HAL_RCCEx_PeriphCLKConfig+0x15c>)
 800a002:	4293      	cmp	r3, r2
 800a004:	d904      	bls.n	800a010 <HAL_RCCEx_PeriphCLKConfig+0x114>
 800a006:	2313      	movs	r3, #19
 800a008:	18fb      	adds	r3, r7, r3
 800a00a:	2203      	movs	r2, #3
 800a00c:	701a      	strb	r2, [r3, #0]
 800a00e:	e004      	b.n	800a01a <HAL_RCCEx_PeriphCLKConfig+0x11e>
 800a010:	4b0d      	ldr	r3, [pc, #52]	@ (800a048 <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 800a012:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800a014:	2202      	movs	r2, #2
 800a016:	4013      	ands	r3, r2
 800a018:	d0ed      	beq.n	8009ff6 <HAL_RCCEx_PeriphCLKConfig+0xfa>
 800a01a:	2313      	movs	r3, #19
 800a01c:	18fb      	adds	r3, r7, r3
 800a01e:	781b      	ldrb	r3, [r3, #0]
 800a020:	2b00      	cmp	r3, #0
 800a022:	d10a      	bne.n	800a03a <HAL_RCCEx_PeriphCLKConfig+0x13e>
 800a024:	4b08      	ldr	r3, [pc, #32]	@ (800a048 <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 800a026:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800a028:	4a09      	ldr	r2, [pc, #36]	@ (800a050 <HAL_RCCEx_PeriphCLKConfig+0x154>)
 800a02a:	4013      	ands	r3, r2
 800a02c:	0019      	movs	r1, r3
 800a02e:	687b      	ldr	r3, [r7, #4]
 800a030:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800a032:	4b05      	ldr	r3, [pc, #20]	@ (800a048 <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 800a034:	430a      	orrs	r2, r1
 800a036:	65da      	str	r2, [r3, #92]	@ 0x5c
 800a038:	e016      	b.n	800a068 <HAL_RCCEx_PeriphCLKConfig+0x16c>
 800a03a:	2312      	movs	r3, #18
 800a03c:	18fb      	adds	r3, r7, r3
 800a03e:	2213      	movs	r2, #19
 800a040:	18ba      	adds	r2, r7, r2
 800a042:	7812      	ldrb	r2, [r2, #0]
 800a044:	701a      	strb	r2, [r3, #0]
 800a046:	e00f      	b.n	800a068 <HAL_RCCEx_PeriphCLKConfig+0x16c>
 800a048:	40021000 	.word	0x40021000
 800a04c:	40007000 	.word	0x40007000
 800a050:	fffffcff 	.word	0xfffffcff
 800a054:	fffeffff 	.word	0xfffeffff
 800a058:	00001388 	.word	0x00001388
 800a05c:	2312      	movs	r3, #18
 800a05e:	18fb      	adds	r3, r7, r3
 800a060:	2213      	movs	r2, #19
 800a062:	18ba      	adds	r2, r7, r2
 800a064:	7812      	ldrb	r2, [r2, #0]
 800a066:	701a      	strb	r2, [r3, #0]
 800a068:	2311      	movs	r3, #17
 800a06a:	18fb      	adds	r3, r7, r3
 800a06c:	781b      	ldrb	r3, [r3, #0]
 800a06e:	2b01      	cmp	r3, #1
 800a070:	d105      	bne.n	800a07e <HAL_RCCEx_PeriphCLKConfig+0x182>
 800a072:	4bb6      	ldr	r3, [pc, #728]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a074:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800a076:	4bb5      	ldr	r3, [pc, #724]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a078:	49b5      	ldr	r1, [pc, #724]	@ (800a350 <HAL_RCCEx_PeriphCLKConfig+0x454>)
 800a07a:	400a      	ands	r2, r1
 800a07c:	63da      	str	r2, [r3, #60]	@ 0x3c
 800a07e:	687b      	ldr	r3, [r7, #4]
 800a080:	681b      	ldr	r3, [r3, #0]
 800a082:	2201      	movs	r2, #1
 800a084:	4013      	ands	r3, r2
 800a086:	d009      	beq.n	800a09c <HAL_RCCEx_PeriphCLKConfig+0x1a0>
 800a088:	4bb0      	ldr	r3, [pc, #704]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a08a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800a08c:	2203      	movs	r2, #3
 800a08e:	4393      	bics	r3, r2
 800a090:	0019      	movs	r1, r3
 800a092:	687b      	ldr	r3, [r7, #4]
 800a094:	685a      	ldr	r2, [r3, #4]
 800a096:	4bad      	ldr	r3, [pc, #692]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a098:	430a      	orrs	r2, r1
 800a09a:	655a      	str	r2, [r3, #84]	@ 0x54
 800a09c:	687b      	ldr	r3, [r7, #4]
 800a09e:	681b      	ldr	r3, [r3, #0]
 800a0a0:	2202      	movs	r2, #2
 800a0a2:	4013      	ands	r3, r2
 800a0a4:	d009      	beq.n	800a0ba <HAL_RCCEx_PeriphCLKConfig+0x1be>
 800a0a6:	4ba9      	ldr	r3, [pc, #676]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a0a8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800a0aa:	220c      	movs	r2, #12
 800a0ac:	4393      	bics	r3, r2
 800a0ae:	0019      	movs	r1, r3
 800a0b0:	687b      	ldr	r3, [r7, #4]
 800a0b2:	689a      	ldr	r2, [r3, #8]
 800a0b4:	4ba5      	ldr	r3, [pc, #660]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a0b6:	430a      	orrs	r2, r1
 800a0b8:	655a      	str	r2, [r3, #84]	@ 0x54
 800a0ba:	687b      	ldr	r3, [r7, #4]
 800a0bc:	681b      	ldr	r3, [r3, #0]
 800a0be:	2204      	movs	r2, #4
 800a0c0:	4013      	ands	r3, r2
 800a0c2:	d009      	beq.n	800a0d8 <HAL_RCCEx_PeriphCLKConfig+0x1dc>
 800a0c4:	4ba1      	ldr	r3, [pc, #644]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a0c6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800a0c8:	2230      	movs	r2, #48	@ 0x30
 800a0ca:	4393      	bics	r3, r2
 800a0cc:	0019      	movs	r1, r3
 800a0ce:	687b      	ldr	r3, [r7, #4]
 800a0d0:	68da      	ldr	r2, [r3, #12]
 800a0d2:	4b9e      	ldr	r3, [pc, #632]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a0d4:	430a      	orrs	r2, r1
 800a0d6:	655a      	str	r2, [r3, #84]	@ 0x54
 800a0d8:	687b      	ldr	r3, [r7, #4]
 800a0da:	681b      	ldr	r3, [r3, #0]
 800a0dc:	2210      	movs	r2, #16
 800a0de:	4013      	ands	r3, r2
 800a0e0:	d009      	beq.n	800a0f6 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 800a0e2:	4b9a      	ldr	r3, [pc, #616]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a0e4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800a0e6:	4a9b      	ldr	r2, [pc, #620]	@ (800a354 <HAL_RCCEx_PeriphCLKConfig+0x458>)
 800a0e8:	4013      	ands	r3, r2
 800a0ea:	0019      	movs	r1, r3
 800a0ec:	687b      	ldr	r3, [r7, #4]
 800a0ee:	691a      	ldr	r2, [r3, #16]
 800a0f0:	4b96      	ldr	r3, [pc, #600]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a0f2:	430a      	orrs	r2, r1
 800a0f4:	655a      	str	r2, [r3, #84]	@ 0x54
 800a0f6:	687b      	ldr	r3, [r7, #4]
 800a0f8:	681a      	ldr	r2, [r3, #0]
 800a0fa:	2380      	movs	r3, #128	@ 0x80
 800a0fc:	015b      	lsls	r3, r3, #5
 800a0fe:	4013      	ands	r3, r2
 800a100:	d009      	beq.n	800a116 <HAL_RCCEx_PeriphCLKConfig+0x21a>
 800a102:	4b92      	ldr	r3, [pc, #584]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a104:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800a106:	4a94      	ldr	r2, [pc, #592]	@ (800a358 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 800a108:	4013      	ands	r3, r2
 800a10a:	0019      	movs	r1, r3
 800a10c:	687b      	ldr	r3, [r7, #4]
 800a10e:	695a      	ldr	r2, [r3, #20]
 800a110:	4b8e      	ldr	r3, [pc, #568]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a112:	430a      	orrs	r2, r1
 800a114:	655a      	str	r2, [r3, #84]	@ 0x54
 800a116:	687b      	ldr	r3, [r7, #4]
 800a118:	681a      	ldr	r2, [r3, #0]
 800a11a:	2380      	movs	r3, #128	@ 0x80
 800a11c:	009b      	lsls	r3, r3, #2
 800a11e:	4013      	ands	r3, r2
 800a120:	d009      	beq.n	800a136 <HAL_RCCEx_PeriphCLKConfig+0x23a>
 800a122:	4b8a      	ldr	r3, [pc, #552]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a124:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800a126:	4a8d      	ldr	r2, [pc, #564]	@ (800a35c <HAL_RCCEx_PeriphCLKConfig+0x460>)
 800a128:	4013      	ands	r3, r2
 800a12a:	0019      	movs	r1, r3
 800a12c:	687b      	ldr	r3, [r7, #4]
 800a12e:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800a130:	4b86      	ldr	r3, [pc, #536]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a132:	430a      	orrs	r2, r1
 800a134:	655a      	str	r2, [r3, #84]	@ 0x54
 800a136:	687b      	ldr	r3, [r7, #4]
 800a138:	681a      	ldr	r2, [r3, #0]
 800a13a:	2380      	movs	r3, #128	@ 0x80
 800a13c:	00db      	lsls	r3, r3, #3
 800a13e:	4013      	ands	r3, r2
 800a140:	d009      	beq.n	800a156 <HAL_RCCEx_PeriphCLKConfig+0x25a>
 800a142:	4b82      	ldr	r3, [pc, #520]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a144:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800a146:	4a86      	ldr	r2, [pc, #536]	@ (800a360 <HAL_RCCEx_PeriphCLKConfig+0x464>)
 800a148:	4013      	ands	r3, r2
 800a14a:	0019      	movs	r1, r3
 800a14c:	687b      	ldr	r3, [r7, #4]
 800a14e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800a150:	4b7e      	ldr	r3, [pc, #504]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a152:	430a      	orrs	r2, r1
 800a154:	655a      	str	r2, [r3, #84]	@ 0x54
 800a156:	687b      	ldr	r3, [r7, #4]
 800a158:	681b      	ldr	r3, [r3, #0]
 800a15a:	2220      	movs	r2, #32
 800a15c:	4013      	ands	r3, r2
 800a15e:	d009      	beq.n	800a174 <HAL_RCCEx_PeriphCLKConfig+0x278>
 800a160:	4b7a      	ldr	r3, [pc, #488]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a162:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800a164:	4a7f      	ldr	r2, [pc, #508]	@ (800a364 <HAL_RCCEx_PeriphCLKConfig+0x468>)
 800a166:	4013      	ands	r3, r2
 800a168:	0019      	movs	r1, r3
 800a16a:	687b      	ldr	r3, [r7, #4]
 800a16c:	699a      	ldr	r2, [r3, #24]
 800a16e:	4b77      	ldr	r3, [pc, #476]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a170:	430a      	orrs	r2, r1
 800a172:	655a      	str	r2, [r3, #84]	@ 0x54
 800a174:	687b      	ldr	r3, [r7, #4]
 800a176:	681b      	ldr	r3, [r3, #0]
 800a178:	2240      	movs	r2, #64	@ 0x40
 800a17a:	4013      	ands	r3, r2
 800a17c:	d009      	beq.n	800a192 <HAL_RCCEx_PeriphCLKConfig+0x296>
 800a17e:	4b73      	ldr	r3, [pc, #460]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a180:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800a182:	4a79      	ldr	r2, [pc, #484]	@ (800a368 <HAL_RCCEx_PeriphCLKConfig+0x46c>)
 800a184:	4013      	ands	r3, r2
 800a186:	0019      	movs	r1, r3
 800a188:	687b      	ldr	r3, [r7, #4]
 800a18a:	69da      	ldr	r2, [r3, #28]
 800a18c:	4b6f      	ldr	r3, [pc, #444]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a18e:	430a      	orrs	r2, r1
 800a190:	655a      	str	r2, [r3, #84]	@ 0x54
 800a192:	687b      	ldr	r3, [r7, #4]
 800a194:	681a      	ldr	r2, [r3, #0]
 800a196:	2380      	movs	r3, #128	@ 0x80
 800a198:	01db      	lsls	r3, r3, #7
 800a19a:	4013      	ands	r3, r2
 800a19c:	d015      	beq.n	800a1ca <HAL_RCCEx_PeriphCLKConfig+0x2ce>
 800a19e:	4b6b      	ldr	r3, [pc, #428]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a1a0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800a1a2:	009b      	lsls	r3, r3, #2
 800a1a4:	0899      	lsrs	r1, r3, #2
 800a1a6:	687b      	ldr	r3, [r7, #4]
 800a1a8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800a1aa:	4b68      	ldr	r3, [pc, #416]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a1ac:	430a      	orrs	r2, r1
 800a1ae:	655a      	str	r2, [r3, #84]	@ 0x54
 800a1b0:	687b      	ldr	r3, [r7, #4]
 800a1b2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800a1b4:	2380      	movs	r3, #128	@ 0x80
 800a1b6:	05db      	lsls	r3, r3, #23
 800a1b8:	429a      	cmp	r2, r3
 800a1ba:	d106      	bne.n	800a1ca <HAL_RCCEx_PeriphCLKConfig+0x2ce>
 800a1bc:	4b63      	ldr	r3, [pc, #396]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a1be:	68da      	ldr	r2, [r3, #12]
 800a1c0:	4b62      	ldr	r3, [pc, #392]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a1c2:	2180      	movs	r1, #128	@ 0x80
 800a1c4:	0249      	lsls	r1, r1, #9
 800a1c6:	430a      	orrs	r2, r1
 800a1c8:	60da      	str	r2, [r3, #12]
 800a1ca:	687b      	ldr	r3, [r7, #4]
 800a1cc:	681a      	ldr	r2, [r3, #0]
 800a1ce:	2380      	movs	r3, #128	@ 0x80
 800a1d0:	031b      	lsls	r3, r3, #12
 800a1d2:	4013      	ands	r3, r2
 800a1d4:	d009      	beq.n	800a1ea <HAL_RCCEx_PeriphCLKConfig+0x2ee>
 800a1d6:	4b5d      	ldr	r3, [pc, #372]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a1d8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800a1da:	2240      	movs	r2, #64	@ 0x40
 800a1dc:	4393      	bics	r3, r2
 800a1de:	0019      	movs	r1, r3
 800a1e0:	687b      	ldr	r3, [r7, #4]
 800a1e2:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800a1e4:	4b59      	ldr	r3, [pc, #356]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a1e6:	430a      	orrs	r2, r1
 800a1e8:	655a      	str	r2, [r3, #84]	@ 0x54
 800a1ea:	687b      	ldr	r3, [r7, #4]
 800a1ec:	681a      	ldr	r2, [r3, #0]
 800a1ee:	2380      	movs	r3, #128	@ 0x80
 800a1f0:	039b      	lsls	r3, r3, #14
 800a1f2:	4013      	ands	r3, r2
 800a1f4:	d016      	beq.n	800a224 <HAL_RCCEx_PeriphCLKConfig+0x328>
 800a1f6:	4b55      	ldr	r3, [pc, #340]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a1f8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800a1fa:	4a5c      	ldr	r2, [pc, #368]	@ (800a36c <HAL_RCCEx_PeriphCLKConfig+0x470>)
 800a1fc:	4013      	ands	r3, r2
 800a1fe:	0019      	movs	r1, r3
 800a200:	687b      	ldr	r3, [r7, #4]
 800a202:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800a204:	4b51      	ldr	r3, [pc, #324]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a206:	430a      	orrs	r2, r1
 800a208:	655a      	str	r2, [r3, #84]	@ 0x54
 800a20a:	687b      	ldr	r3, [r7, #4]
 800a20c:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800a20e:	2380      	movs	r3, #128	@ 0x80
 800a210:	03db      	lsls	r3, r3, #15
 800a212:	429a      	cmp	r2, r3
 800a214:	d106      	bne.n	800a224 <HAL_RCCEx_PeriphCLKConfig+0x328>
 800a216:	4b4d      	ldr	r3, [pc, #308]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a218:	68da      	ldr	r2, [r3, #12]
 800a21a:	4b4c      	ldr	r3, [pc, #304]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a21c:	2180      	movs	r1, #128	@ 0x80
 800a21e:	0449      	lsls	r1, r1, #17
 800a220:	430a      	orrs	r2, r1
 800a222:	60da      	str	r2, [r3, #12]
 800a224:	687b      	ldr	r3, [r7, #4]
 800a226:	681a      	ldr	r2, [r3, #0]
 800a228:	2380      	movs	r3, #128	@ 0x80
 800a22a:	03db      	lsls	r3, r3, #15
 800a22c:	4013      	ands	r3, r2
 800a22e:	d016      	beq.n	800a25e <HAL_RCCEx_PeriphCLKConfig+0x362>
 800a230:	4b46      	ldr	r3, [pc, #280]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a232:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800a234:	4a4e      	ldr	r2, [pc, #312]	@ (800a370 <HAL_RCCEx_PeriphCLKConfig+0x474>)
 800a236:	4013      	ands	r3, r2
 800a238:	0019      	movs	r1, r3
 800a23a:	687b      	ldr	r3, [r7, #4]
 800a23c:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800a23e:	4b43      	ldr	r3, [pc, #268]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a240:	430a      	orrs	r2, r1
 800a242:	655a      	str	r2, [r3, #84]	@ 0x54
 800a244:	687b      	ldr	r3, [r7, #4]
 800a246:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800a248:	2380      	movs	r3, #128	@ 0x80
 800a24a:	045b      	lsls	r3, r3, #17
 800a24c:	429a      	cmp	r2, r3
 800a24e:	d106      	bne.n	800a25e <HAL_RCCEx_PeriphCLKConfig+0x362>
 800a250:	4b3e      	ldr	r3, [pc, #248]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a252:	68da      	ldr	r2, [r3, #12]
 800a254:	4b3d      	ldr	r3, [pc, #244]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a256:	2180      	movs	r1, #128	@ 0x80
 800a258:	0449      	lsls	r1, r1, #17
 800a25a:	430a      	orrs	r2, r1
 800a25c:	60da      	str	r2, [r3, #12]
 800a25e:	687b      	ldr	r3, [r7, #4]
 800a260:	681a      	ldr	r2, [r3, #0]
 800a262:	2380      	movs	r3, #128	@ 0x80
 800a264:	011b      	lsls	r3, r3, #4
 800a266:	4013      	ands	r3, r2
 800a268:	d014      	beq.n	800a294 <HAL_RCCEx_PeriphCLKConfig+0x398>
 800a26a:	4b38      	ldr	r3, [pc, #224]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a26c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800a26e:	2203      	movs	r2, #3
 800a270:	4393      	bics	r3, r2
 800a272:	0019      	movs	r1, r3
 800a274:	687b      	ldr	r3, [r7, #4]
 800a276:	6a1a      	ldr	r2, [r3, #32]
 800a278:	4b34      	ldr	r3, [pc, #208]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a27a:	430a      	orrs	r2, r1
 800a27c:	659a      	str	r2, [r3, #88]	@ 0x58
 800a27e:	687b      	ldr	r3, [r7, #4]
 800a280:	6a1b      	ldr	r3, [r3, #32]
 800a282:	2b01      	cmp	r3, #1
 800a284:	d106      	bne.n	800a294 <HAL_RCCEx_PeriphCLKConfig+0x398>
 800a286:	4b31      	ldr	r3, [pc, #196]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a288:	68da      	ldr	r2, [r3, #12]
 800a28a:	4b30      	ldr	r3, [pc, #192]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a28c:	2180      	movs	r1, #128	@ 0x80
 800a28e:	0249      	lsls	r1, r1, #9
 800a290:	430a      	orrs	r2, r1
 800a292:	60da      	str	r2, [r3, #12]
 800a294:	687b      	ldr	r3, [r7, #4]
 800a296:	681a      	ldr	r2, [r3, #0]
 800a298:	2380      	movs	r3, #128	@ 0x80
 800a29a:	019b      	lsls	r3, r3, #6
 800a29c:	4013      	ands	r3, r2
 800a29e:	d014      	beq.n	800a2ca <HAL_RCCEx_PeriphCLKConfig+0x3ce>
 800a2a0:	4b2a      	ldr	r3, [pc, #168]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a2a2:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800a2a4:	220c      	movs	r2, #12
 800a2a6:	4393      	bics	r3, r2
 800a2a8:	0019      	movs	r1, r3
 800a2aa:	687b      	ldr	r3, [r7, #4]
 800a2ac:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800a2ae:	4b27      	ldr	r3, [pc, #156]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a2b0:	430a      	orrs	r2, r1
 800a2b2:	659a      	str	r2, [r3, #88]	@ 0x58
 800a2b4:	687b      	ldr	r3, [r7, #4]
 800a2b6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a2b8:	2b04      	cmp	r3, #4
 800a2ba:	d106      	bne.n	800a2ca <HAL_RCCEx_PeriphCLKConfig+0x3ce>
 800a2bc:	4b23      	ldr	r3, [pc, #140]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a2be:	68da      	ldr	r2, [r3, #12]
 800a2c0:	4b22      	ldr	r3, [pc, #136]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a2c2:	2180      	movs	r1, #128	@ 0x80
 800a2c4:	0249      	lsls	r1, r1, #9
 800a2c6:	430a      	orrs	r2, r1
 800a2c8:	60da      	str	r2, [r3, #12]
 800a2ca:	687b      	ldr	r3, [r7, #4]
 800a2cc:	681a      	ldr	r2, [r3, #0]
 800a2ce:	2380      	movs	r3, #128	@ 0x80
 800a2d0:	045b      	lsls	r3, r3, #17
 800a2d2:	4013      	ands	r3, r2
 800a2d4:	d016      	beq.n	800a304 <HAL_RCCEx_PeriphCLKConfig+0x408>
 800a2d6:	4b1d      	ldr	r3, [pc, #116]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a2d8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800a2da:	4a22      	ldr	r2, [pc, #136]	@ (800a364 <HAL_RCCEx_PeriphCLKConfig+0x468>)
 800a2dc:	4013      	ands	r3, r2
 800a2de:	0019      	movs	r1, r3
 800a2e0:	687b      	ldr	r3, [r7, #4]
 800a2e2:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800a2e4:	4b19      	ldr	r3, [pc, #100]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a2e6:	430a      	orrs	r2, r1
 800a2e8:	659a      	str	r2, [r3, #88]	@ 0x58
 800a2ea:	687b      	ldr	r3, [r7, #4]
 800a2ec:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800a2ee:	2380      	movs	r3, #128	@ 0x80
 800a2f0:	019b      	lsls	r3, r3, #6
 800a2f2:	429a      	cmp	r2, r3
 800a2f4:	d106      	bne.n	800a304 <HAL_RCCEx_PeriphCLKConfig+0x408>
 800a2f6:	4b15      	ldr	r3, [pc, #84]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a2f8:	68da      	ldr	r2, [r3, #12]
 800a2fa:	4b14      	ldr	r3, [pc, #80]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a2fc:	2180      	movs	r1, #128	@ 0x80
 800a2fe:	0449      	lsls	r1, r1, #17
 800a300:	430a      	orrs	r2, r1
 800a302:	60da      	str	r2, [r3, #12]
 800a304:	687b      	ldr	r3, [r7, #4]
 800a306:	681a      	ldr	r2, [r3, #0]
 800a308:	2380      	movs	r3, #128	@ 0x80
 800a30a:	049b      	lsls	r3, r3, #18
 800a30c:	4013      	ands	r3, r2
 800a30e:	d016      	beq.n	800a33e <HAL_RCCEx_PeriphCLKConfig+0x442>
 800a310:	4b0e      	ldr	r3, [pc, #56]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a312:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800a314:	4a10      	ldr	r2, [pc, #64]	@ (800a358 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 800a316:	4013      	ands	r3, r2
 800a318:	0019      	movs	r1, r3
 800a31a:	687b      	ldr	r3, [r7, #4]
 800a31c:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 800a31e:	4b0b      	ldr	r3, [pc, #44]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a320:	430a      	orrs	r2, r1
 800a322:	659a      	str	r2, [r3, #88]	@ 0x58
 800a324:	687b      	ldr	r3, [r7, #4]
 800a326:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 800a328:	2380      	movs	r3, #128	@ 0x80
 800a32a:	005b      	lsls	r3, r3, #1
 800a32c:	429a      	cmp	r2, r3
 800a32e:	d106      	bne.n	800a33e <HAL_RCCEx_PeriphCLKConfig+0x442>
 800a330:	4b06      	ldr	r3, [pc, #24]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a332:	68da      	ldr	r2, [r3, #12]
 800a334:	4b05      	ldr	r3, [pc, #20]	@ (800a34c <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800a336:	2180      	movs	r1, #128	@ 0x80
 800a338:	0449      	lsls	r1, r1, #17
 800a33a:	430a      	orrs	r2, r1
 800a33c:	60da      	str	r2, [r3, #12]
 800a33e:	2312      	movs	r3, #18
 800a340:	18fb      	adds	r3, r7, r3
 800a342:	781b      	ldrb	r3, [r3, #0]
 800a344:	0018      	movs	r0, r3
 800a346:	46bd      	mov	sp, r7
 800a348:	b006      	add	sp, #24
 800a34a:	bd80      	pop	{r7, pc}
 800a34c:	40021000 	.word	0x40021000
 800a350:	efffffff 	.word	0xefffffff
 800a354:	fffff3ff 	.word	0xfffff3ff
 800a358:	fffffcff 	.word	0xfffffcff
 800a35c:	fff3ffff 	.word	0xfff3ffff
 800a360:	ffcfffff 	.word	0xffcfffff
 800a364:	ffffcfff 	.word	0xffffcfff
 800a368:	ffff3fff 	.word	0xffff3fff
 800a36c:	ffbfffff 	.word	0xffbfffff
 800a370:	feffffff 	.word	0xfeffffff

0800a374 <HAL_SPI_Init>:
 800a374:	b580      	push	{r7, lr}
 800a376:	b084      	sub	sp, #16
 800a378:	af00      	add	r7, sp, #0
 800a37a:	6078      	str	r0, [r7, #4]
 800a37c:	687b      	ldr	r3, [r7, #4]
 800a37e:	2b00      	cmp	r3, #0
 800a380:	d101      	bne.n	800a386 <HAL_SPI_Init+0x12>
 800a382:	2301      	movs	r3, #1
 800a384:	e0a8      	b.n	800a4d8 <HAL_SPI_Init+0x164>
 800a386:	687b      	ldr	r3, [r7, #4]
 800a388:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a38a:	2b00      	cmp	r3, #0
 800a38c:	d109      	bne.n	800a3a2 <HAL_SPI_Init+0x2e>
 800a38e:	687b      	ldr	r3, [r7, #4]
 800a390:	685a      	ldr	r2, [r3, #4]
 800a392:	2382      	movs	r3, #130	@ 0x82
 800a394:	005b      	lsls	r3, r3, #1
 800a396:	429a      	cmp	r2, r3
 800a398:	d009      	beq.n	800a3ae <HAL_SPI_Init+0x3a>
 800a39a:	687b      	ldr	r3, [r7, #4]
 800a39c:	2200      	movs	r2, #0
 800a39e:	61da      	str	r2, [r3, #28]
 800a3a0:	e005      	b.n	800a3ae <HAL_SPI_Init+0x3a>
 800a3a2:	687b      	ldr	r3, [r7, #4]
 800a3a4:	2200      	movs	r2, #0
 800a3a6:	611a      	str	r2, [r3, #16]
 800a3a8:	687b      	ldr	r3, [r7, #4]
 800a3aa:	2200      	movs	r2, #0
 800a3ac:	615a      	str	r2, [r3, #20]
 800a3ae:	687b      	ldr	r3, [r7, #4]
 800a3b0:	2200      	movs	r2, #0
 800a3b2:	629a      	str	r2, [r3, #40]	@ 0x28
 800a3b4:	687b      	ldr	r3, [r7, #4]
 800a3b6:	225d      	movs	r2, #93	@ 0x5d
 800a3b8:	5c9b      	ldrb	r3, [r3, r2]
 800a3ba:	b2db      	uxtb	r3, r3
 800a3bc:	2b00      	cmp	r3, #0
 800a3be:	d107      	bne.n	800a3d0 <HAL_SPI_Init+0x5c>
 800a3c0:	687b      	ldr	r3, [r7, #4]
 800a3c2:	225c      	movs	r2, #92	@ 0x5c
 800a3c4:	2100      	movs	r1, #0
 800a3c6:	5499      	strb	r1, [r3, r2]
 800a3c8:	687b      	ldr	r3, [r7, #4]
 800a3ca:	0018      	movs	r0, r3
 800a3cc:	f7fc f97c 	bl	80066c8 <HAL_SPI_MspInit>
 800a3d0:	687b      	ldr	r3, [r7, #4]
 800a3d2:	225d      	movs	r2, #93	@ 0x5d
 800a3d4:	2102      	movs	r1, #2
 800a3d6:	5499      	strb	r1, [r3, r2]
 800a3d8:	687b      	ldr	r3, [r7, #4]
 800a3da:	681b      	ldr	r3, [r3, #0]
 800a3dc:	681a      	ldr	r2, [r3, #0]
 800a3de:	687b      	ldr	r3, [r7, #4]
 800a3e0:	681b      	ldr	r3, [r3, #0]
 800a3e2:	2140      	movs	r1, #64	@ 0x40
 800a3e4:	438a      	bics	r2, r1
 800a3e6:	601a      	str	r2, [r3, #0]
 800a3e8:	687b      	ldr	r3, [r7, #4]
 800a3ea:	68da      	ldr	r2, [r3, #12]
 800a3ec:	23e0      	movs	r3, #224	@ 0xe0
 800a3ee:	00db      	lsls	r3, r3, #3
 800a3f0:	429a      	cmp	r2, r3
 800a3f2:	d902      	bls.n	800a3fa <HAL_SPI_Init+0x86>
 800a3f4:	2300      	movs	r3, #0
 800a3f6:	60fb      	str	r3, [r7, #12]
 800a3f8:	e002      	b.n	800a400 <HAL_SPI_Init+0x8c>
 800a3fa:	2380      	movs	r3, #128	@ 0x80
 800a3fc:	015b      	lsls	r3, r3, #5
 800a3fe:	60fb      	str	r3, [r7, #12]
 800a400:	687b      	ldr	r3, [r7, #4]
 800a402:	68da      	ldr	r2, [r3, #12]
 800a404:	23f0      	movs	r3, #240	@ 0xf0
 800a406:	011b      	lsls	r3, r3, #4
 800a408:	429a      	cmp	r2, r3
 800a40a:	d008      	beq.n	800a41e <HAL_SPI_Init+0xaa>
 800a40c:	687b      	ldr	r3, [r7, #4]
 800a40e:	68da      	ldr	r2, [r3, #12]
 800a410:	23e0      	movs	r3, #224	@ 0xe0
 800a412:	00db      	lsls	r3, r3, #3
 800a414:	429a      	cmp	r2, r3
 800a416:	d002      	beq.n	800a41e <HAL_SPI_Init+0xaa>
 800a418:	687b      	ldr	r3, [r7, #4]
 800a41a:	2200      	movs	r2, #0
 800a41c:	629a      	str	r2, [r3, #40]	@ 0x28
 800a41e:	687b      	ldr	r3, [r7, #4]
 800a420:	685a      	ldr	r2, [r3, #4]
 800a422:	2382      	movs	r3, #130	@ 0x82
 800a424:	005b      	lsls	r3, r3, #1
 800a426:	401a      	ands	r2, r3
 800a428:	687b      	ldr	r3, [r7, #4]
 800a42a:	6899      	ldr	r1, [r3, #8]
 800a42c:	2384      	movs	r3, #132	@ 0x84
 800a42e:	021b      	lsls	r3, r3, #8
 800a430:	400b      	ands	r3, r1
 800a432:	431a      	orrs	r2, r3
 800a434:	687b      	ldr	r3, [r7, #4]
 800a436:	691b      	ldr	r3, [r3, #16]
 800a438:	2102      	movs	r1, #2
 800a43a:	400b      	ands	r3, r1
 800a43c:	431a      	orrs	r2, r3
 800a43e:	687b      	ldr	r3, [r7, #4]
 800a440:	695b      	ldr	r3, [r3, #20]
 800a442:	2101      	movs	r1, #1
 800a444:	400b      	ands	r3, r1
 800a446:	431a      	orrs	r2, r3
 800a448:	687b      	ldr	r3, [r7, #4]
 800a44a:	6999      	ldr	r1, [r3, #24]
 800a44c:	2380      	movs	r3, #128	@ 0x80
 800a44e:	009b      	lsls	r3, r3, #2
 800a450:	400b      	ands	r3, r1
 800a452:	431a      	orrs	r2, r3
 800a454:	687b      	ldr	r3, [r7, #4]
 800a456:	69db      	ldr	r3, [r3, #28]
 800a458:	2138      	movs	r1, #56	@ 0x38
 800a45a:	400b      	ands	r3, r1
 800a45c:	431a      	orrs	r2, r3
 800a45e:	687b      	ldr	r3, [r7, #4]
 800a460:	6a1b      	ldr	r3, [r3, #32]
 800a462:	2180      	movs	r1, #128	@ 0x80
 800a464:	400b      	ands	r3, r1
 800a466:	431a      	orrs	r2, r3
 800a468:	0011      	movs	r1, r2
 800a46a:	687b      	ldr	r3, [r7, #4]
 800a46c:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800a46e:	2380      	movs	r3, #128	@ 0x80
 800a470:	019b      	lsls	r3, r3, #6
 800a472:	401a      	ands	r2, r3
 800a474:	687b      	ldr	r3, [r7, #4]
 800a476:	681b      	ldr	r3, [r3, #0]
 800a478:	430a      	orrs	r2, r1
 800a47a:	601a      	str	r2, [r3, #0]
 800a47c:	687b      	ldr	r3, [r7, #4]
 800a47e:	699b      	ldr	r3, [r3, #24]
 800a480:	0c1b      	lsrs	r3, r3, #16
 800a482:	2204      	movs	r2, #4
 800a484:	401a      	ands	r2, r3
 800a486:	687b      	ldr	r3, [r7, #4]
 800a488:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a48a:	2110      	movs	r1, #16
 800a48c:	400b      	ands	r3, r1
 800a48e:	431a      	orrs	r2, r3
 800a490:	687b      	ldr	r3, [r7, #4]
 800a492:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800a494:	2108      	movs	r1, #8
 800a496:	400b      	ands	r3, r1
 800a498:	431a      	orrs	r2, r3
 800a49a:	687b      	ldr	r3, [r7, #4]
 800a49c:	68d9      	ldr	r1, [r3, #12]
 800a49e:	23f0      	movs	r3, #240	@ 0xf0
 800a4a0:	011b      	lsls	r3, r3, #4
 800a4a2:	400b      	ands	r3, r1
 800a4a4:	431a      	orrs	r2, r3
 800a4a6:	0011      	movs	r1, r2
 800a4a8:	68fa      	ldr	r2, [r7, #12]
 800a4aa:	2380      	movs	r3, #128	@ 0x80
 800a4ac:	015b      	lsls	r3, r3, #5
 800a4ae:	401a      	ands	r2, r3
 800a4b0:	687b      	ldr	r3, [r7, #4]
 800a4b2:	681b      	ldr	r3, [r3, #0]
 800a4b4:	430a      	orrs	r2, r1
 800a4b6:	605a      	str	r2, [r3, #4]
 800a4b8:	687b      	ldr	r3, [r7, #4]
 800a4ba:	681b      	ldr	r3, [r3, #0]
 800a4bc:	69da      	ldr	r2, [r3, #28]
 800a4be:	687b      	ldr	r3, [r7, #4]
 800a4c0:	681b      	ldr	r3, [r3, #0]
 800a4c2:	4907      	ldr	r1, [pc, #28]	@ (800a4e0 <HAL_SPI_Init+0x16c>)
 800a4c4:	400a      	ands	r2, r1
 800a4c6:	61da      	str	r2, [r3, #28]
 800a4c8:	687b      	ldr	r3, [r7, #4]
 800a4ca:	2200      	movs	r2, #0
 800a4cc:	661a      	str	r2, [r3, #96]	@ 0x60
 800a4ce:	687b      	ldr	r3, [r7, #4]
 800a4d0:	225d      	movs	r2, #93	@ 0x5d
 800a4d2:	2101      	movs	r1, #1
 800a4d4:	5499      	strb	r1, [r3, r2]
 800a4d6:	2300      	movs	r3, #0
 800a4d8:	0018      	movs	r0, r3
 800a4da:	46bd      	mov	sp, r7
 800a4dc:	b004      	add	sp, #16
 800a4de:	bd80      	pop	{r7, pc}
 800a4e0:	fffff7ff 	.word	0xfffff7ff

0800a4e4 <HAL_SPI_Transmit>:
 800a4e4:	b580      	push	{r7, lr}
 800a4e6:	b088      	sub	sp, #32
 800a4e8:	af00      	add	r7, sp, #0
 800a4ea:	60f8      	str	r0, [r7, #12]
 800a4ec:	60b9      	str	r1, [r7, #8]
 800a4ee:	603b      	str	r3, [r7, #0]
 800a4f0:	1dbb      	adds	r3, r7, #6
 800a4f2:	801a      	strh	r2, [r3, #0]
 800a4f4:	231f      	movs	r3, #31
 800a4f6:	18fb      	adds	r3, r7, r3
 800a4f8:	2200      	movs	r2, #0
 800a4fa:	701a      	strb	r2, [r3, #0]
 800a4fc:	68fb      	ldr	r3, [r7, #12]
 800a4fe:	225c      	movs	r2, #92	@ 0x5c
 800a500:	5c9b      	ldrb	r3, [r3, r2]
 800a502:	2b01      	cmp	r3, #1
 800a504:	d101      	bne.n	800a50a <HAL_SPI_Transmit+0x26>
 800a506:	2302      	movs	r3, #2
 800a508:	e147      	b.n	800a79a <HAL_SPI_Transmit+0x2b6>
 800a50a:	68fb      	ldr	r3, [r7, #12]
 800a50c:	225c      	movs	r2, #92	@ 0x5c
 800a50e:	2101      	movs	r1, #1
 800a510:	5499      	strb	r1, [r3, r2]
 800a512:	f7fc fc85 	bl	8006e20 <HAL_GetTick>
 800a516:	0003      	movs	r3, r0
 800a518:	61bb      	str	r3, [r7, #24]
 800a51a:	2316      	movs	r3, #22
 800a51c:	18fb      	adds	r3, r7, r3
 800a51e:	1dba      	adds	r2, r7, #6
 800a520:	8812      	ldrh	r2, [r2, #0]
 800a522:	801a      	strh	r2, [r3, #0]
 800a524:	68fb      	ldr	r3, [r7, #12]
 800a526:	225d      	movs	r2, #93	@ 0x5d
 800a528:	5c9b      	ldrb	r3, [r3, r2]
 800a52a:	b2db      	uxtb	r3, r3
 800a52c:	2b01      	cmp	r3, #1
 800a52e:	d004      	beq.n	800a53a <HAL_SPI_Transmit+0x56>
 800a530:	231f      	movs	r3, #31
 800a532:	18fb      	adds	r3, r7, r3
 800a534:	2202      	movs	r2, #2
 800a536:	701a      	strb	r2, [r3, #0]
 800a538:	e128      	b.n	800a78c <HAL_SPI_Transmit+0x2a8>
 800a53a:	68bb      	ldr	r3, [r7, #8]
 800a53c:	2b00      	cmp	r3, #0
 800a53e:	d003      	beq.n	800a548 <HAL_SPI_Transmit+0x64>
 800a540:	1dbb      	adds	r3, r7, #6
 800a542:	881b      	ldrh	r3, [r3, #0]
 800a544:	2b00      	cmp	r3, #0
 800a546:	d104      	bne.n	800a552 <HAL_SPI_Transmit+0x6e>
 800a548:	231f      	movs	r3, #31
 800a54a:	18fb      	adds	r3, r7, r3
 800a54c:	2201      	movs	r2, #1
 800a54e:	701a      	strb	r2, [r3, #0]
 800a550:	e11c      	b.n	800a78c <HAL_SPI_Transmit+0x2a8>
 800a552:	68fb      	ldr	r3, [r7, #12]
 800a554:	225d      	movs	r2, #93	@ 0x5d
 800a556:	2103      	movs	r1, #3
 800a558:	5499      	strb	r1, [r3, r2]
 800a55a:	68fb      	ldr	r3, [r7, #12]
 800a55c:	2200      	movs	r2, #0
 800a55e:	661a      	str	r2, [r3, #96]	@ 0x60
 800a560:	68fb      	ldr	r3, [r7, #12]
 800a562:	68ba      	ldr	r2, [r7, #8]
 800a564:	639a      	str	r2, [r3, #56]	@ 0x38
 800a566:	68fb      	ldr	r3, [r7, #12]
 800a568:	1dba      	adds	r2, r7, #6
 800a56a:	8812      	ldrh	r2, [r2, #0]
 800a56c:	879a      	strh	r2, [r3, #60]	@ 0x3c
 800a56e:	68fb      	ldr	r3, [r7, #12]
 800a570:	1dba      	adds	r2, r7, #6
 800a572:	8812      	ldrh	r2, [r2, #0]
 800a574:	87da      	strh	r2, [r3, #62]	@ 0x3e
 800a576:	68fb      	ldr	r3, [r7, #12]
 800a578:	2200      	movs	r2, #0
 800a57a:	641a      	str	r2, [r3, #64]	@ 0x40
 800a57c:	68fb      	ldr	r3, [r7, #12]
 800a57e:	2244      	movs	r2, #68	@ 0x44
 800a580:	2100      	movs	r1, #0
 800a582:	5299      	strh	r1, [r3, r2]
 800a584:	68fb      	ldr	r3, [r7, #12]
 800a586:	2246      	movs	r2, #70	@ 0x46
 800a588:	2100      	movs	r1, #0
 800a58a:	5299      	strh	r1, [r3, r2]
 800a58c:	68fb      	ldr	r3, [r7, #12]
 800a58e:	2200      	movs	r2, #0
 800a590:	651a      	str	r2, [r3, #80]	@ 0x50
 800a592:	68fb      	ldr	r3, [r7, #12]
 800a594:	2200      	movs	r2, #0
 800a596:	64da      	str	r2, [r3, #76]	@ 0x4c
 800a598:	68fb      	ldr	r3, [r7, #12]
 800a59a:	689a      	ldr	r2, [r3, #8]
 800a59c:	2380      	movs	r3, #128	@ 0x80
 800a59e:	021b      	lsls	r3, r3, #8
 800a5a0:	429a      	cmp	r2, r3
 800a5a2:	d110      	bne.n	800a5c6 <HAL_SPI_Transmit+0xe2>
 800a5a4:	68fb      	ldr	r3, [r7, #12]
 800a5a6:	681b      	ldr	r3, [r3, #0]
 800a5a8:	681a      	ldr	r2, [r3, #0]
 800a5aa:	68fb      	ldr	r3, [r7, #12]
 800a5ac:	681b      	ldr	r3, [r3, #0]
 800a5ae:	2140      	movs	r1, #64	@ 0x40
 800a5b0:	438a      	bics	r2, r1
 800a5b2:	601a      	str	r2, [r3, #0]
 800a5b4:	68fb      	ldr	r3, [r7, #12]
 800a5b6:	681b      	ldr	r3, [r3, #0]
 800a5b8:	681a      	ldr	r2, [r3, #0]
 800a5ba:	68fb      	ldr	r3, [r7, #12]
 800a5bc:	681b      	ldr	r3, [r3, #0]
 800a5be:	2180      	movs	r1, #128	@ 0x80
 800a5c0:	01c9      	lsls	r1, r1, #7
 800a5c2:	430a      	orrs	r2, r1
 800a5c4:	601a      	str	r2, [r3, #0]
 800a5c6:	68fb      	ldr	r3, [r7, #12]
 800a5c8:	681b      	ldr	r3, [r3, #0]
 800a5ca:	681b      	ldr	r3, [r3, #0]
 800a5cc:	2240      	movs	r2, #64	@ 0x40
 800a5ce:	4013      	ands	r3, r2
 800a5d0:	2b40      	cmp	r3, #64	@ 0x40
 800a5d2:	d007      	beq.n	800a5e4 <HAL_SPI_Transmit+0x100>
 800a5d4:	68fb      	ldr	r3, [r7, #12]
 800a5d6:	681b      	ldr	r3, [r3, #0]
 800a5d8:	681a      	ldr	r2, [r3, #0]
 800a5da:	68fb      	ldr	r3, [r7, #12]
 800a5dc:	681b      	ldr	r3, [r3, #0]
 800a5de:	2140      	movs	r1, #64	@ 0x40
 800a5e0:	430a      	orrs	r2, r1
 800a5e2:	601a      	str	r2, [r3, #0]
 800a5e4:	68fb      	ldr	r3, [r7, #12]
 800a5e6:	68da      	ldr	r2, [r3, #12]
 800a5e8:	23e0      	movs	r3, #224	@ 0xe0
 800a5ea:	00db      	lsls	r3, r3, #3
 800a5ec:	429a      	cmp	r2, r3
 800a5ee:	d952      	bls.n	800a696 <HAL_SPI_Transmit+0x1b2>
 800a5f0:	68fb      	ldr	r3, [r7, #12]
 800a5f2:	685b      	ldr	r3, [r3, #4]
 800a5f4:	2b00      	cmp	r3, #0
 800a5f6:	d004      	beq.n	800a602 <HAL_SPI_Transmit+0x11e>
 800a5f8:	2316      	movs	r3, #22
 800a5fa:	18fb      	adds	r3, r7, r3
 800a5fc:	881b      	ldrh	r3, [r3, #0]
 800a5fe:	2b01      	cmp	r3, #1
 800a600:	d143      	bne.n	800a68a <HAL_SPI_Transmit+0x1a6>
 800a602:	68fb      	ldr	r3, [r7, #12]
 800a604:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a606:	881a      	ldrh	r2, [r3, #0]
 800a608:	68fb      	ldr	r3, [r7, #12]
 800a60a:	681b      	ldr	r3, [r3, #0]
 800a60c:	60da      	str	r2, [r3, #12]
 800a60e:	68fb      	ldr	r3, [r7, #12]
 800a610:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a612:	1c9a      	adds	r2, r3, #2
 800a614:	68fb      	ldr	r3, [r7, #12]
 800a616:	639a      	str	r2, [r3, #56]	@ 0x38
 800a618:	68fb      	ldr	r3, [r7, #12]
 800a61a:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800a61c:	b29b      	uxth	r3, r3
 800a61e:	3b01      	subs	r3, #1
 800a620:	b29a      	uxth	r2, r3
 800a622:	68fb      	ldr	r3, [r7, #12]
 800a624:	87da      	strh	r2, [r3, #62]	@ 0x3e
 800a626:	e030      	b.n	800a68a <HAL_SPI_Transmit+0x1a6>
 800a628:	68fb      	ldr	r3, [r7, #12]
 800a62a:	681b      	ldr	r3, [r3, #0]
 800a62c:	689b      	ldr	r3, [r3, #8]
 800a62e:	2202      	movs	r2, #2
 800a630:	4013      	ands	r3, r2
 800a632:	2b02      	cmp	r3, #2
 800a634:	d112      	bne.n	800a65c <HAL_SPI_Transmit+0x178>
 800a636:	68fb      	ldr	r3, [r7, #12]
 800a638:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a63a:	881a      	ldrh	r2, [r3, #0]
 800a63c:	68fb      	ldr	r3, [r7, #12]
 800a63e:	681b      	ldr	r3, [r3, #0]
 800a640:	60da      	str	r2, [r3, #12]
 800a642:	68fb      	ldr	r3, [r7, #12]
 800a644:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a646:	1c9a      	adds	r2, r3, #2
 800a648:	68fb      	ldr	r3, [r7, #12]
 800a64a:	639a      	str	r2, [r3, #56]	@ 0x38
 800a64c:	68fb      	ldr	r3, [r7, #12]
 800a64e:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800a650:	b29b      	uxth	r3, r3
 800a652:	3b01      	subs	r3, #1
 800a654:	b29a      	uxth	r2, r3
 800a656:	68fb      	ldr	r3, [r7, #12]
 800a658:	87da      	strh	r2, [r3, #62]	@ 0x3e
 800a65a:	e016      	b.n	800a68a <HAL_SPI_Transmit+0x1a6>
 800a65c:	f7fc fbe0 	bl	8006e20 <HAL_GetTick>
 800a660:	0002      	movs	r2, r0
 800a662:	69bb      	ldr	r3, [r7, #24]
 800a664:	1ad3      	subs	r3, r2, r3
 800a666:	683a      	ldr	r2, [r7, #0]
 800a668:	429a      	cmp	r2, r3
 800a66a:	d802      	bhi.n	800a672 <HAL_SPI_Transmit+0x18e>
 800a66c:	683b      	ldr	r3, [r7, #0]
 800a66e:	3301      	adds	r3, #1
 800a670:	d102      	bne.n	800a678 <HAL_SPI_Transmit+0x194>
 800a672:	683b      	ldr	r3, [r7, #0]
 800a674:	2b00      	cmp	r3, #0
 800a676:	d108      	bne.n	800a68a <HAL_SPI_Transmit+0x1a6>
 800a678:	231f      	movs	r3, #31
 800a67a:	18fb      	adds	r3, r7, r3
 800a67c:	2203      	movs	r2, #3
 800a67e:	701a      	strb	r2, [r3, #0]
 800a680:	68fb      	ldr	r3, [r7, #12]
 800a682:	225d      	movs	r2, #93	@ 0x5d
 800a684:	2101      	movs	r1, #1
 800a686:	5499      	strb	r1, [r3, r2]
 800a688:	e080      	b.n	800a78c <HAL_SPI_Transmit+0x2a8>
 800a68a:	68fb      	ldr	r3, [r7, #12]
 800a68c:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800a68e:	b29b      	uxth	r3, r3
 800a690:	2b00      	cmp	r3, #0
 800a692:	d1c9      	bne.n	800a628 <HAL_SPI_Transmit+0x144>
 800a694:	e053      	b.n	800a73e <HAL_SPI_Transmit+0x25a>
 800a696:	68fb      	ldr	r3, [r7, #12]
 800a698:	685b      	ldr	r3, [r3, #4]
 800a69a:	2b00      	cmp	r3, #0
 800a69c:	d004      	beq.n	800a6a8 <HAL_SPI_Transmit+0x1c4>
 800a69e:	2316      	movs	r3, #22
 800a6a0:	18fb      	adds	r3, r7, r3
 800a6a2:	881b      	ldrh	r3, [r3, #0]
 800a6a4:	2b01      	cmp	r3, #1
 800a6a6:	d145      	bne.n	800a734 <HAL_SPI_Transmit+0x250>
 800a6a8:	68fb      	ldr	r3, [r7, #12]
 800a6aa:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800a6ac:	68fb      	ldr	r3, [r7, #12]
 800a6ae:	681b      	ldr	r3, [r3, #0]
 800a6b0:	330c      	adds	r3, #12
 800a6b2:	7812      	ldrb	r2, [r2, #0]
 800a6b4:	701a      	strb	r2, [r3, #0]
 800a6b6:	68fb      	ldr	r3, [r7, #12]
 800a6b8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a6ba:	1c5a      	adds	r2, r3, #1
 800a6bc:	68fb      	ldr	r3, [r7, #12]
 800a6be:	639a      	str	r2, [r3, #56]	@ 0x38
 800a6c0:	68fb      	ldr	r3, [r7, #12]
 800a6c2:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800a6c4:	b29b      	uxth	r3, r3
 800a6c6:	3b01      	subs	r3, #1
 800a6c8:	b29a      	uxth	r2, r3
 800a6ca:	68fb      	ldr	r3, [r7, #12]
 800a6cc:	87da      	strh	r2, [r3, #62]	@ 0x3e
 800a6ce:	e031      	b.n	800a734 <HAL_SPI_Transmit+0x250>
 800a6d0:	68fb      	ldr	r3, [r7, #12]
 800a6d2:	681b      	ldr	r3, [r3, #0]
 800a6d4:	689b      	ldr	r3, [r3, #8]
 800a6d6:	2202      	movs	r2, #2
 800a6d8:	4013      	ands	r3, r2
 800a6da:	2b02      	cmp	r3, #2
 800a6dc:	d113      	bne.n	800a706 <HAL_SPI_Transmit+0x222>
 800a6de:	68fb      	ldr	r3, [r7, #12]
 800a6e0:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800a6e2:	68fb      	ldr	r3, [r7, #12]
 800a6e4:	681b      	ldr	r3, [r3, #0]
 800a6e6:	330c      	adds	r3, #12
 800a6e8:	7812      	ldrb	r2, [r2, #0]
 800a6ea:	701a      	strb	r2, [r3, #0]
 800a6ec:	68fb      	ldr	r3, [r7, #12]
 800a6ee:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a6f0:	1c5a      	adds	r2, r3, #1
 800a6f2:	68fb      	ldr	r3, [r7, #12]
 800a6f4:	639a      	str	r2, [r3, #56]	@ 0x38
 800a6f6:	68fb      	ldr	r3, [r7, #12]
 800a6f8:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800a6fa:	b29b      	uxth	r3, r3
 800a6fc:	3b01      	subs	r3, #1
 800a6fe:	b29a      	uxth	r2, r3
 800a700:	68fb      	ldr	r3, [r7, #12]
 800a702:	87da      	strh	r2, [r3, #62]	@ 0x3e
 800a704:	e016      	b.n	800a734 <HAL_SPI_Transmit+0x250>
 800a706:	f7fc fb8b 	bl	8006e20 <HAL_GetTick>
 800a70a:	0002      	movs	r2, r0
 800a70c:	69bb      	ldr	r3, [r7, #24]
 800a70e:	1ad3      	subs	r3, r2, r3
 800a710:	683a      	ldr	r2, [r7, #0]
 800a712:	429a      	cmp	r2, r3
 800a714:	d802      	bhi.n	800a71c <HAL_SPI_Transmit+0x238>
 800a716:	683b      	ldr	r3, [r7, #0]
 800a718:	3301      	adds	r3, #1
 800a71a:	d102      	bne.n	800a722 <HAL_SPI_Transmit+0x23e>
 800a71c:	683b      	ldr	r3, [r7, #0]
 800a71e:	2b00      	cmp	r3, #0
 800a720:	d108      	bne.n	800a734 <HAL_SPI_Transmit+0x250>
 800a722:	231f      	movs	r3, #31
 800a724:	18fb      	adds	r3, r7, r3
 800a726:	2203      	movs	r2, #3
 800a728:	701a      	strb	r2, [r3, #0]
 800a72a:	68fb      	ldr	r3, [r7, #12]
 800a72c:	225d      	movs	r2, #93	@ 0x5d
 800a72e:	2101      	movs	r1, #1
 800a730:	5499      	strb	r1, [r3, r2]
 800a732:	e02b      	b.n	800a78c <HAL_SPI_Transmit+0x2a8>
 800a734:	68fb      	ldr	r3, [r7, #12]
 800a736:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800a738:	b29b      	uxth	r3, r3
 800a73a:	2b00      	cmp	r3, #0
 800a73c:	d1c8      	bne.n	800a6d0 <HAL_SPI_Transmit+0x1ec>
 800a73e:	69ba      	ldr	r2, [r7, #24]
 800a740:	6839      	ldr	r1, [r7, #0]
 800a742:	68fb      	ldr	r3, [r7, #12]
 800a744:	0018      	movs	r0, r3
 800a746:	f000 fcef 	bl	800b128 <SPI_EndRxTxTransaction>
 800a74a:	1e03      	subs	r3, r0, #0
 800a74c:	d002      	beq.n	800a754 <HAL_SPI_Transmit+0x270>
 800a74e:	68fb      	ldr	r3, [r7, #12]
 800a750:	2220      	movs	r2, #32
 800a752:	661a      	str	r2, [r3, #96]	@ 0x60
 800a754:	68fb      	ldr	r3, [r7, #12]
 800a756:	689b      	ldr	r3, [r3, #8]
 800a758:	2b00      	cmp	r3, #0
 800a75a:	d10a      	bne.n	800a772 <HAL_SPI_Transmit+0x28e>
 800a75c:	2300      	movs	r3, #0
 800a75e:	613b      	str	r3, [r7, #16]
 800a760:	68fb      	ldr	r3, [r7, #12]
 800a762:	681b      	ldr	r3, [r3, #0]
 800a764:	68db      	ldr	r3, [r3, #12]
 800a766:	613b      	str	r3, [r7, #16]
 800a768:	68fb      	ldr	r3, [r7, #12]
 800a76a:	681b      	ldr	r3, [r3, #0]
 800a76c:	689b      	ldr	r3, [r3, #8]
 800a76e:	613b      	str	r3, [r7, #16]
 800a770:	693b      	ldr	r3, [r7, #16]
 800a772:	68fb      	ldr	r3, [r7, #12]
 800a774:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800a776:	2b00      	cmp	r3, #0
 800a778:	d004      	beq.n	800a784 <HAL_SPI_Transmit+0x2a0>
 800a77a:	231f      	movs	r3, #31
 800a77c:	18fb      	adds	r3, r7, r3
 800a77e:	2201      	movs	r2, #1
 800a780:	701a      	strb	r2, [r3, #0]
 800a782:	e003      	b.n	800a78c <HAL_SPI_Transmit+0x2a8>
 800a784:	68fb      	ldr	r3, [r7, #12]
 800a786:	225d      	movs	r2, #93	@ 0x5d
 800a788:	2101      	movs	r1, #1
 800a78a:	5499      	strb	r1, [r3, r2]
 800a78c:	68fb      	ldr	r3, [r7, #12]
 800a78e:	225c      	movs	r2, #92	@ 0x5c
 800a790:	2100      	movs	r1, #0
 800a792:	5499      	strb	r1, [r3, r2]
 800a794:	231f      	movs	r3, #31
 800a796:	18fb      	adds	r3, r7, r3
 800a798:	781b      	ldrb	r3, [r3, #0]
 800a79a:	0018      	movs	r0, r3
 800a79c:	46bd      	mov	sp, r7
 800a79e:	b008      	add	sp, #32
 800a7a0:	bd80      	pop	{r7, pc}
	...

0800a7a4 <HAL_SPI_Receive>:
 800a7a4:	b590      	push	{r4, r7, lr}
 800a7a6:	b089      	sub	sp, #36	@ 0x24
 800a7a8:	af02      	add	r7, sp, #8
 800a7aa:	60f8      	str	r0, [r7, #12]
 800a7ac:	60b9      	str	r1, [r7, #8]
 800a7ae:	603b      	str	r3, [r7, #0]
 800a7b0:	1dbb      	adds	r3, r7, #6
 800a7b2:	801a      	strh	r2, [r3, #0]
 800a7b4:	2117      	movs	r1, #23
 800a7b6:	187b      	adds	r3, r7, r1
 800a7b8:	2200      	movs	r2, #0
 800a7ba:	701a      	strb	r2, [r3, #0]
 800a7bc:	68fb      	ldr	r3, [r7, #12]
 800a7be:	225d      	movs	r2, #93	@ 0x5d
 800a7c0:	5c9b      	ldrb	r3, [r3, r2]
 800a7c2:	b2db      	uxtb	r3, r3
 800a7c4:	2b01      	cmp	r3, #1
 800a7c6:	d003      	beq.n	800a7d0 <HAL_SPI_Receive+0x2c>
 800a7c8:	187b      	adds	r3, r7, r1
 800a7ca:	2202      	movs	r2, #2
 800a7cc:	701a      	strb	r2, [r3, #0]
 800a7ce:	e12b      	b.n	800aa28 <HAL_SPI_Receive+0x284>
 800a7d0:	68fb      	ldr	r3, [r7, #12]
 800a7d2:	685a      	ldr	r2, [r3, #4]
 800a7d4:	2382      	movs	r3, #130	@ 0x82
 800a7d6:	005b      	lsls	r3, r3, #1
 800a7d8:	429a      	cmp	r2, r3
 800a7da:	d113      	bne.n	800a804 <HAL_SPI_Receive+0x60>
 800a7dc:	68fb      	ldr	r3, [r7, #12]
 800a7de:	689b      	ldr	r3, [r3, #8]
 800a7e0:	2b00      	cmp	r3, #0
 800a7e2:	d10f      	bne.n	800a804 <HAL_SPI_Receive+0x60>
 800a7e4:	68fb      	ldr	r3, [r7, #12]
 800a7e6:	225d      	movs	r2, #93	@ 0x5d
 800a7e8:	2104      	movs	r1, #4
 800a7ea:	5499      	strb	r1, [r3, r2]
 800a7ec:	1dbb      	adds	r3, r7, #6
 800a7ee:	881c      	ldrh	r4, [r3, #0]
 800a7f0:	68ba      	ldr	r2, [r7, #8]
 800a7f2:	68b9      	ldr	r1, [r7, #8]
 800a7f4:	68f8      	ldr	r0, [r7, #12]
 800a7f6:	683b      	ldr	r3, [r7, #0]
 800a7f8:	9300      	str	r3, [sp, #0]
 800a7fa:	0023      	movs	r3, r4
 800a7fc:	f000 f924 	bl	800aa48 <HAL_SPI_TransmitReceive>
 800a800:	0003      	movs	r3, r0
 800a802:	e118      	b.n	800aa36 <HAL_SPI_Receive+0x292>
 800a804:	68fb      	ldr	r3, [r7, #12]
 800a806:	225c      	movs	r2, #92	@ 0x5c
 800a808:	5c9b      	ldrb	r3, [r3, r2]
 800a80a:	2b01      	cmp	r3, #1
 800a80c:	d101      	bne.n	800a812 <HAL_SPI_Receive+0x6e>
 800a80e:	2302      	movs	r3, #2
 800a810:	e111      	b.n	800aa36 <HAL_SPI_Receive+0x292>
 800a812:	68fb      	ldr	r3, [r7, #12]
 800a814:	225c      	movs	r2, #92	@ 0x5c
 800a816:	2101      	movs	r1, #1
 800a818:	5499      	strb	r1, [r3, r2]
 800a81a:	f7fc fb01 	bl	8006e20 <HAL_GetTick>
 800a81e:	0003      	movs	r3, r0
 800a820:	613b      	str	r3, [r7, #16]
 800a822:	68bb      	ldr	r3, [r7, #8]
 800a824:	2b00      	cmp	r3, #0
 800a826:	d003      	beq.n	800a830 <HAL_SPI_Receive+0x8c>
 800a828:	1dbb      	adds	r3, r7, #6
 800a82a:	881b      	ldrh	r3, [r3, #0]
 800a82c:	2b00      	cmp	r3, #0
 800a82e:	d104      	bne.n	800a83a <HAL_SPI_Receive+0x96>
 800a830:	2317      	movs	r3, #23
 800a832:	18fb      	adds	r3, r7, r3
 800a834:	2201      	movs	r2, #1
 800a836:	701a      	strb	r2, [r3, #0]
 800a838:	e0f6      	b.n	800aa28 <HAL_SPI_Receive+0x284>
 800a83a:	68fb      	ldr	r3, [r7, #12]
 800a83c:	225d      	movs	r2, #93	@ 0x5d
 800a83e:	2104      	movs	r1, #4
 800a840:	5499      	strb	r1, [r3, r2]
 800a842:	68fb      	ldr	r3, [r7, #12]
 800a844:	2200      	movs	r2, #0
 800a846:	661a      	str	r2, [r3, #96]	@ 0x60
 800a848:	68fb      	ldr	r3, [r7, #12]
 800a84a:	68ba      	ldr	r2, [r7, #8]
 800a84c:	641a      	str	r2, [r3, #64]	@ 0x40
 800a84e:	68fb      	ldr	r3, [r7, #12]
 800a850:	1dba      	adds	r2, r7, #6
 800a852:	2144      	movs	r1, #68	@ 0x44
 800a854:	8812      	ldrh	r2, [r2, #0]
 800a856:	525a      	strh	r2, [r3, r1]
 800a858:	68fb      	ldr	r3, [r7, #12]
 800a85a:	1dba      	adds	r2, r7, #6
 800a85c:	2146      	movs	r1, #70	@ 0x46
 800a85e:	8812      	ldrh	r2, [r2, #0]
 800a860:	525a      	strh	r2, [r3, r1]
 800a862:	68fb      	ldr	r3, [r7, #12]
 800a864:	2200      	movs	r2, #0
 800a866:	639a      	str	r2, [r3, #56]	@ 0x38
 800a868:	68fb      	ldr	r3, [r7, #12]
 800a86a:	2200      	movs	r2, #0
 800a86c:	879a      	strh	r2, [r3, #60]	@ 0x3c
 800a86e:	68fb      	ldr	r3, [r7, #12]
 800a870:	2200      	movs	r2, #0
 800a872:	87da      	strh	r2, [r3, #62]	@ 0x3e
 800a874:	68fb      	ldr	r3, [r7, #12]
 800a876:	2200      	movs	r2, #0
 800a878:	64da      	str	r2, [r3, #76]	@ 0x4c
 800a87a:	68fb      	ldr	r3, [r7, #12]
 800a87c:	2200      	movs	r2, #0
 800a87e:	651a      	str	r2, [r3, #80]	@ 0x50
 800a880:	68fb      	ldr	r3, [r7, #12]
 800a882:	68da      	ldr	r2, [r3, #12]
 800a884:	23e0      	movs	r3, #224	@ 0xe0
 800a886:	00db      	lsls	r3, r3, #3
 800a888:	429a      	cmp	r2, r3
 800a88a:	d908      	bls.n	800a89e <HAL_SPI_Receive+0xfa>
 800a88c:	68fb      	ldr	r3, [r7, #12]
 800a88e:	681b      	ldr	r3, [r3, #0]
 800a890:	685a      	ldr	r2, [r3, #4]
 800a892:	68fb      	ldr	r3, [r7, #12]
 800a894:	681b      	ldr	r3, [r3, #0]
 800a896:	496a      	ldr	r1, [pc, #424]	@ (800aa40 <HAL_SPI_Receive+0x29c>)
 800a898:	400a      	ands	r2, r1
 800a89a:	605a      	str	r2, [r3, #4]
 800a89c:	e008      	b.n	800a8b0 <HAL_SPI_Receive+0x10c>
 800a89e:	68fb      	ldr	r3, [r7, #12]
 800a8a0:	681b      	ldr	r3, [r3, #0]
 800a8a2:	685a      	ldr	r2, [r3, #4]
 800a8a4:	68fb      	ldr	r3, [r7, #12]
 800a8a6:	681b      	ldr	r3, [r3, #0]
 800a8a8:	2180      	movs	r1, #128	@ 0x80
 800a8aa:	0149      	lsls	r1, r1, #5
 800a8ac:	430a      	orrs	r2, r1
 800a8ae:	605a      	str	r2, [r3, #4]
 800a8b0:	68fb      	ldr	r3, [r7, #12]
 800a8b2:	689a      	ldr	r2, [r3, #8]
 800a8b4:	2380      	movs	r3, #128	@ 0x80
 800a8b6:	021b      	lsls	r3, r3, #8
 800a8b8:	429a      	cmp	r2, r3
 800a8ba:	d10f      	bne.n	800a8dc <HAL_SPI_Receive+0x138>
 800a8bc:	68fb      	ldr	r3, [r7, #12]
 800a8be:	681b      	ldr	r3, [r3, #0]
 800a8c0:	681a      	ldr	r2, [r3, #0]
 800a8c2:	68fb      	ldr	r3, [r7, #12]
 800a8c4:	681b      	ldr	r3, [r3, #0]
 800a8c6:	2140      	movs	r1, #64	@ 0x40
 800a8c8:	438a      	bics	r2, r1
 800a8ca:	601a      	str	r2, [r3, #0]
 800a8cc:	68fb      	ldr	r3, [r7, #12]
 800a8ce:	681b      	ldr	r3, [r3, #0]
 800a8d0:	681a      	ldr	r2, [r3, #0]
 800a8d2:	68fb      	ldr	r3, [r7, #12]
 800a8d4:	681b      	ldr	r3, [r3, #0]
 800a8d6:	495b      	ldr	r1, [pc, #364]	@ (800aa44 <HAL_SPI_Receive+0x2a0>)
 800a8d8:	400a      	ands	r2, r1
 800a8da:	601a      	str	r2, [r3, #0]
 800a8dc:	68fb      	ldr	r3, [r7, #12]
 800a8de:	681b      	ldr	r3, [r3, #0]
 800a8e0:	681b      	ldr	r3, [r3, #0]
 800a8e2:	2240      	movs	r2, #64	@ 0x40
 800a8e4:	4013      	ands	r3, r2
 800a8e6:	2b40      	cmp	r3, #64	@ 0x40
 800a8e8:	d007      	beq.n	800a8fa <HAL_SPI_Receive+0x156>
 800a8ea:	68fb      	ldr	r3, [r7, #12]
 800a8ec:	681b      	ldr	r3, [r3, #0]
 800a8ee:	681a      	ldr	r2, [r3, #0]
 800a8f0:	68fb      	ldr	r3, [r7, #12]
 800a8f2:	681b      	ldr	r3, [r3, #0]
 800a8f4:	2140      	movs	r1, #64	@ 0x40
 800a8f6:	430a      	orrs	r2, r1
 800a8f8:	601a      	str	r2, [r3, #0]
 800a8fa:	68fb      	ldr	r3, [r7, #12]
 800a8fc:	68da      	ldr	r2, [r3, #12]
 800a8fe:	23e0      	movs	r3, #224	@ 0xe0
 800a900:	00db      	lsls	r3, r3, #3
 800a902:	429a      	cmp	r2, r3
 800a904:	d900      	bls.n	800a908 <HAL_SPI_Receive+0x164>
 800a906:	e071      	b.n	800a9ec <HAL_SPI_Receive+0x248>
 800a908:	e035      	b.n	800a976 <HAL_SPI_Receive+0x1d2>
 800a90a:	68fb      	ldr	r3, [r7, #12]
 800a90c:	681b      	ldr	r3, [r3, #0]
 800a90e:	689b      	ldr	r3, [r3, #8]
 800a910:	2201      	movs	r2, #1
 800a912:	4013      	ands	r3, r2
 800a914:	2b01      	cmp	r3, #1
 800a916:	d117      	bne.n	800a948 <HAL_SPI_Receive+0x1a4>
 800a918:	68fb      	ldr	r3, [r7, #12]
 800a91a:	681b      	ldr	r3, [r3, #0]
 800a91c:	330c      	adds	r3, #12
 800a91e:	001a      	movs	r2, r3
 800a920:	68fb      	ldr	r3, [r7, #12]
 800a922:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a924:	7812      	ldrb	r2, [r2, #0]
 800a926:	b2d2      	uxtb	r2, r2
 800a928:	701a      	strb	r2, [r3, #0]
 800a92a:	68fb      	ldr	r3, [r7, #12]
 800a92c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a92e:	1c5a      	adds	r2, r3, #1
 800a930:	68fb      	ldr	r3, [r7, #12]
 800a932:	641a      	str	r2, [r3, #64]	@ 0x40
 800a934:	68fb      	ldr	r3, [r7, #12]
 800a936:	2246      	movs	r2, #70	@ 0x46
 800a938:	5a9b      	ldrh	r3, [r3, r2]
 800a93a:	b29b      	uxth	r3, r3
 800a93c:	3b01      	subs	r3, #1
 800a93e:	b299      	uxth	r1, r3
 800a940:	68fb      	ldr	r3, [r7, #12]
 800a942:	2246      	movs	r2, #70	@ 0x46
 800a944:	5299      	strh	r1, [r3, r2]
 800a946:	e016      	b.n	800a976 <HAL_SPI_Receive+0x1d2>
 800a948:	f7fc fa6a 	bl	8006e20 <HAL_GetTick>
 800a94c:	0002      	movs	r2, r0
 800a94e:	693b      	ldr	r3, [r7, #16]
 800a950:	1ad3      	subs	r3, r2, r3
 800a952:	683a      	ldr	r2, [r7, #0]
 800a954:	429a      	cmp	r2, r3
 800a956:	d802      	bhi.n	800a95e <HAL_SPI_Receive+0x1ba>
 800a958:	683b      	ldr	r3, [r7, #0]
 800a95a:	3301      	adds	r3, #1
 800a95c:	d102      	bne.n	800a964 <HAL_SPI_Receive+0x1c0>
 800a95e:	683b      	ldr	r3, [r7, #0]
 800a960:	2b00      	cmp	r3, #0
 800a962:	d108      	bne.n	800a976 <HAL_SPI_Receive+0x1d2>
 800a964:	2317      	movs	r3, #23
 800a966:	18fb      	adds	r3, r7, r3
 800a968:	2203      	movs	r2, #3
 800a96a:	701a      	strb	r2, [r3, #0]
 800a96c:	68fb      	ldr	r3, [r7, #12]
 800a96e:	225d      	movs	r2, #93	@ 0x5d
 800a970:	2101      	movs	r1, #1
 800a972:	5499      	strb	r1, [r3, r2]
 800a974:	e058      	b.n	800aa28 <HAL_SPI_Receive+0x284>
 800a976:	68fb      	ldr	r3, [r7, #12]
 800a978:	2246      	movs	r2, #70	@ 0x46
 800a97a:	5a9b      	ldrh	r3, [r3, r2]
 800a97c:	b29b      	uxth	r3, r3
 800a97e:	2b00      	cmp	r3, #0
 800a980:	d1c3      	bne.n	800a90a <HAL_SPI_Receive+0x166>
 800a982:	e039      	b.n	800a9f8 <HAL_SPI_Receive+0x254>
 800a984:	68fb      	ldr	r3, [r7, #12]
 800a986:	681b      	ldr	r3, [r3, #0]
 800a988:	689b      	ldr	r3, [r3, #8]
 800a98a:	2201      	movs	r2, #1
 800a98c:	4013      	ands	r3, r2
 800a98e:	2b01      	cmp	r3, #1
 800a990:	d115      	bne.n	800a9be <HAL_SPI_Receive+0x21a>
 800a992:	68fb      	ldr	r3, [r7, #12]
 800a994:	681b      	ldr	r3, [r3, #0]
 800a996:	68da      	ldr	r2, [r3, #12]
 800a998:	68fb      	ldr	r3, [r7, #12]
 800a99a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a99c:	b292      	uxth	r2, r2
 800a99e:	801a      	strh	r2, [r3, #0]
 800a9a0:	68fb      	ldr	r3, [r7, #12]
 800a9a2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a9a4:	1c9a      	adds	r2, r3, #2
 800a9a6:	68fb      	ldr	r3, [r7, #12]
 800a9a8:	641a      	str	r2, [r3, #64]	@ 0x40
 800a9aa:	68fb      	ldr	r3, [r7, #12]
 800a9ac:	2246      	movs	r2, #70	@ 0x46
 800a9ae:	5a9b      	ldrh	r3, [r3, r2]
 800a9b0:	b29b      	uxth	r3, r3
 800a9b2:	3b01      	subs	r3, #1
 800a9b4:	b299      	uxth	r1, r3
 800a9b6:	68fb      	ldr	r3, [r7, #12]
 800a9b8:	2246      	movs	r2, #70	@ 0x46
 800a9ba:	5299      	strh	r1, [r3, r2]
 800a9bc:	e016      	b.n	800a9ec <HAL_SPI_Receive+0x248>
 800a9be:	f7fc fa2f 	bl	8006e20 <HAL_GetTick>
 800a9c2:	0002      	movs	r2, r0
 800a9c4:	693b      	ldr	r3, [r7, #16]
 800a9c6:	1ad3      	subs	r3, r2, r3
 800a9c8:	683a      	ldr	r2, [r7, #0]
 800a9ca:	429a      	cmp	r2, r3
 800a9cc:	d802      	bhi.n	800a9d4 <HAL_SPI_Receive+0x230>
 800a9ce:	683b      	ldr	r3, [r7, #0]
 800a9d0:	3301      	adds	r3, #1
 800a9d2:	d102      	bne.n	800a9da <HAL_SPI_Receive+0x236>
 800a9d4:	683b      	ldr	r3, [r7, #0]
 800a9d6:	2b00      	cmp	r3, #0
 800a9d8:	d108      	bne.n	800a9ec <HAL_SPI_Receive+0x248>
 800a9da:	2317      	movs	r3, #23
 800a9dc:	18fb      	adds	r3, r7, r3
 800a9de:	2203      	movs	r2, #3
 800a9e0:	701a      	strb	r2, [r3, #0]
 800a9e2:	68fb      	ldr	r3, [r7, #12]
 800a9e4:	225d      	movs	r2, #93	@ 0x5d
 800a9e6:	2101      	movs	r1, #1
 800a9e8:	5499      	strb	r1, [r3, r2]
 800a9ea:	e01d      	b.n	800aa28 <HAL_SPI_Receive+0x284>
 800a9ec:	68fb      	ldr	r3, [r7, #12]
 800a9ee:	2246      	movs	r2, #70	@ 0x46
 800a9f0:	5a9b      	ldrh	r3, [r3, r2]
 800a9f2:	b29b      	uxth	r3, r3
 800a9f4:	2b00      	cmp	r3, #0
 800a9f6:	d1c5      	bne.n	800a984 <HAL_SPI_Receive+0x1e0>
 800a9f8:	693a      	ldr	r2, [r7, #16]
 800a9fa:	6839      	ldr	r1, [r7, #0]
 800a9fc:	68fb      	ldr	r3, [r7, #12]
 800a9fe:	0018      	movs	r0, r3
 800aa00:	f000 fb34 	bl	800b06c <SPI_EndRxTransaction>
 800aa04:	1e03      	subs	r3, r0, #0
 800aa06:	d002      	beq.n	800aa0e <HAL_SPI_Receive+0x26a>
 800aa08:	68fb      	ldr	r3, [r7, #12]
 800aa0a:	2220      	movs	r2, #32
 800aa0c:	661a      	str	r2, [r3, #96]	@ 0x60
 800aa0e:	68fb      	ldr	r3, [r7, #12]
 800aa10:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800aa12:	2b00      	cmp	r3, #0
 800aa14:	d004      	beq.n	800aa20 <HAL_SPI_Receive+0x27c>
 800aa16:	2317      	movs	r3, #23
 800aa18:	18fb      	adds	r3, r7, r3
 800aa1a:	2201      	movs	r2, #1
 800aa1c:	701a      	strb	r2, [r3, #0]
 800aa1e:	e003      	b.n	800aa28 <HAL_SPI_Receive+0x284>
 800aa20:	68fb      	ldr	r3, [r7, #12]
 800aa22:	225d      	movs	r2, #93	@ 0x5d
 800aa24:	2101      	movs	r1, #1
 800aa26:	5499      	strb	r1, [r3, r2]
 800aa28:	68fb      	ldr	r3, [r7, #12]
 800aa2a:	225c      	movs	r2, #92	@ 0x5c
 800aa2c:	2100      	movs	r1, #0
 800aa2e:	5499      	strb	r1, [r3, r2]
 800aa30:	2317      	movs	r3, #23
 800aa32:	18fb      	adds	r3, r7, r3
 800aa34:	781b      	ldrb	r3, [r3, #0]
 800aa36:	0018      	movs	r0, r3
 800aa38:	46bd      	mov	sp, r7
 800aa3a:	b007      	add	sp, #28
 800aa3c:	bd90      	pop	{r4, r7, pc}
 800aa3e:	46c0      	nop			@ (mov r8, r8)
 800aa40:	ffffefff 	.word	0xffffefff
 800aa44:	ffffbfff 	.word	0xffffbfff

0800aa48 <HAL_SPI_TransmitReceive>:
 800aa48:	b580      	push	{r7, lr}
 800aa4a:	b08a      	sub	sp, #40	@ 0x28
 800aa4c:	af00      	add	r7, sp, #0
 800aa4e:	60f8      	str	r0, [r7, #12]
 800aa50:	60b9      	str	r1, [r7, #8]
 800aa52:	607a      	str	r2, [r7, #4]
 800aa54:	001a      	movs	r2, r3
 800aa56:	1cbb      	adds	r3, r7, #2
 800aa58:	801a      	strh	r2, [r3, #0]
 800aa5a:	2301      	movs	r3, #1
 800aa5c:	627b      	str	r3, [r7, #36]	@ 0x24
 800aa5e:	2323      	movs	r3, #35	@ 0x23
 800aa60:	18fb      	adds	r3, r7, r3
 800aa62:	2200      	movs	r2, #0
 800aa64:	701a      	strb	r2, [r3, #0]
 800aa66:	68fb      	ldr	r3, [r7, #12]
 800aa68:	225c      	movs	r2, #92	@ 0x5c
 800aa6a:	5c9b      	ldrb	r3, [r3, r2]
 800aa6c:	2b01      	cmp	r3, #1
 800aa6e:	d101      	bne.n	800aa74 <HAL_SPI_TransmitReceive+0x2c>
 800aa70:	2302      	movs	r3, #2
 800aa72:	e1c4      	b.n	800adfe <HAL_SPI_TransmitReceive+0x3b6>
 800aa74:	68fb      	ldr	r3, [r7, #12]
 800aa76:	225c      	movs	r2, #92	@ 0x5c
 800aa78:	2101      	movs	r1, #1
 800aa7a:	5499      	strb	r1, [r3, r2]
 800aa7c:	f7fc f9d0 	bl	8006e20 <HAL_GetTick>
 800aa80:	0003      	movs	r3, r0
 800aa82:	61fb      	str	r3, [r7, #28]
 800aa84:	201b      	movs	r0, #27
 800aa86:	183b      	adds	r3, r7, r0
 800aa88:	68fa      	ldr	r2, [r7, #12]
 800aa8a:	215d      	movs	r1, #93	@ 0x5d
 800aa8c:	5c52      	ldrb	r2, [r2, r1]
 800aa8e:	701a      	strb	r2, [r3, #0]
 800aa90:	68fb      	ldr	r3, [r7, #12]
 800aa92:	685b      	ldr	r3, [r3, #4]
 800aa94:	617b      	str	r3, [r7, #20]
 800aa96:	2312      	movs	r3, #18
 800aa98:	18fb      	adds	r3, r7, r3
 800aa9a:	1cba      	adds	r2, r7, #2
 800aa9c:	8812      	ldrh	r2, [r2, #0]
 800aa9e:	801a      	strh	r2, [r3, #0]
 800aaa0:	183b      	adds	r3, r7, r0
 800aaa2:	781b      	ldrb	r3, [r3, #0]
 800aaa4:	2b01      	cmp	r3, #1
 800aaa6:	d011      	beq.n	800aacc <HAL_SPI_TransmitReceive+0x84>
 800aaa8:	697a      	ldr	r2, [r7, #20]
 800aaaa:	2382      	movs	r3, #130	@ 0x82
 800aaac:	005b      	lsls	r3, r3, #1
 800aaae:	429a      	cmp	r2, r3
 800aab0:	d107      	bne.n	800aac2 <HAL_SPI_TransmitReceive+0x7a>
 800aab2:	68fb      	ldr	r3, [r7, #12]
 800aab4:	689b      	ldr	r3, [r3, #8]
 800aab6:	2b00      	cmp	r3, #0
 800aab8:	d103      	bne.n	800aac2 <HAL_SPI_TransmitReceive+0x7a>
 800aaba:	183b      	adds	r3, r7, r0
 800aabc:	781b      	ldrb	r3, [r3, #0]
 800aabe:	2b04      	cmp	r3, #4
 800aac0:	d004      	beq.n	800aacc <HAL_SPI_TransmitReceive+0x84>
 800aac2:	2323      	movs	r3, #35	@ 0x23
 800aac4:	18fb      	adds	r3, r7, r3
 800aac6:	2202      	movs	r2, #2
 800aac8:	701a      	strb	r2, [r3, #0]
 800aaca:	e191      	b.n	800adf0 <HAL_SPI_TransmitReceive+0x3a8>
 800aacc:	68bb      	ldr	r3, [r7, #8]
 800aace:	2b00      	cmp	r3, #0
 800aad0:	d006      	beq.n	800aae0 <HAL_SPI_TransmitReceive+0x98>
 800aad2:	687b      	ldr	r3, [r7, #4]
 800aad4:	2b00      	cmp	r3, #0
 800aad6:	d003      	beq.n	800aae0 <HAL_SPI_TransmitReceive+0x98>
 800aad8:	1cbb      	adds	r3, r7, #2
 800aada:	881b      	ldrh	r3, [r3, #0]
 800aadc:	2b00      	cmp	r3, #0
 800aade:	d104      	bne.n	800aaea <HAL_SPI_TransmitReceive+0xa2>
 800aae0:	2323      	movs	r3, #35	@ 0x23
 800aae2:	18fb      	adds	r3, r7, r3
 800aae4:	2201      	movs	r2, #1
 800aae6:	701a      	strb	r2, [r3, #0]
 800aae8:	e182      	b.n	800adf0 <HAL_SPI_TransmitReceive+0x3a8>
 800aaea:	68fb      	ldr	r3, [r7, #12]
 800aaec:	225d      	movs	r2, #93	@ 0x5d
 800aaee:	5c9b      	ldrb	r3, [r3, r2]
 800aaf0:	b2db      	uxtb	r3, r3
 800aaf2:	2b04      	cmp	r3, #4
 800aaf4:	d003      	beq.n	800aafe <HAL_SPI_TransmitReceive+0xb6>
 800aaf6:	68fb      	ldr	r3, [r7, #12]
 800aaf8:	225d      	movs	r2, #93	@ 0x5d
 800aafa:	2105      	movs	r1, #5
 800aafc:	5499      	strb	r1, [r3, r2]
 800aafe:	68fb      	ldr	r3, [r7, #12]
 800ab00:	2200      	movs	r2, #0
 800ab02:	661a      	str	r2, [r3, #96]	@ 0x60
 800ab04:	68fb      	ldr	r3, [r7, #12]
 800ab06:	687a      	ldr	r2, [r7, #4]
 800ab08:	641a      	str	r2, [r3, #64]	@ 0x40
 800ab0a:	68fb      	ldr	r3, [r7, #12]
 800ab0c:	1cba      	adds	r2, r7, #2
 800ab0e:	2146      	movs	r1, #70	@ 0x46
 800ab10:	8812      	ldrh	r2, [r2, #0]
 800ab12:	525a      	strh	r2, [r3, r1]
 800ab14:	68fb      	ldr	r3, [r7, #12]
 800ab16:	1cba      	adds	r2, r7, #2
 800ab18:	2144      	movs	r1, #68	@ 0x44
 800ab1a:	8812      	ldrh	r2, [r2, #0]
 800ab1c:	525a      	strh	r2, [r3, r1]
 800ab1e:	68fb      	ldr	r3, [r7, #12]
 800ab20:	68ba      	ldr	r2, [r7, #8]
 800ab22:	639a      	str	r2, [r3, #56]	@ 0x38
 800ab24:	68fb      	ldr	r3, [r7, #12]
 800ab26:	1cba      	adds	r2, r7, #2
 800ab28:	8812      	ldrh	r2, [r2, #0]
 800ab2a:	87da      	strh	r2, [r3, #62]	@ 0x3e
 800ab2c:	68fb      	ldr	r3, [r7, #12]
 800ab2e:	1cba      	adds	r2, r7, #2
 800ab30:	8812      	ldrh	r2, [r2, #0]
 800ab32:	879a      	strh	r2, [r3, #60]	@ 0x3c
 800ab34:	68fb      	ldr	r3, [r7, #12]
 800ab36:	2200      	movs	r2, #0
 800ab38:	64da      	str	r2, [r3, #76]	@ 0x4c
 800ab3a:	68fb      	ldr	r3, [r7, #12]
 800ab3c:	2200      	movs	r2, #0
 800ab3e:	651a      	str	r2, [r3, #80]	@ 0x50
 800ab40:	68fb      	ldr	r3, [r7, #12]
 800ab42:	68da      	ldr	r2, [r3, #12]
 800ab44:	23e0      	movs	r3, #224	@ 0xe0
 800ab46:	00db      	lsls	r3, r3, #3
 800ab48:	429a      	cmp	r2, r3
 800ab4a:	d908      	bls.n	800ab5e <HAL_SPI_TransmitReceive+0x116>
 800ab4c:	68fb      	ldr	r3, [r7, #12]
 800ab4e:	681b      	ldr	r3, [r3, #0]
 800ab50:	685a      	ldr	r2, [r3, #4]
 800ab52:	68fb      	ldr	r3, [r7, #12]
 800ab54:	681b      	ldr	r3, [r3, #0]
 800ab56:	49ac      	ldr	r1, [pc, #688]	@ (800ae08 <HAL_SPI_TransmitReceive+0x3c0>)
 800ab58:	400a      	ands	r2, r1
 800ab5a:	605a      	str	r2, [r3, #4]
 800ab5c:	e008      	b.n	800ab70 <HAL_SPI_TransmitReceive+0x128>
 800ab5e:	68fb      	ldr	r3, [r7, #12]
 800ab60:	681b      	ldr	r3, [r3, #0]
 800ab62:	685a      	ldr	r2, [r3, #4]
 800ab64:	68fb      	ldr	r3, [r7, #12]
 800ab66:	681b      	ldr	r3, [r3, #0]
 800ab68:	2180      	movs	r1, #128	@ 0x80
 800ab6a:	0149      	lsls	r1, r1, #5
 800ab6c:	430a      	orrs	r2, r1
 800ab6e:	605a      	str	r2, [r3, #4]
 800ab70:	68fb      	ldr	r3, [r7, #12]
 800ab72:	681b      	ldr	r3, [r3, #0]
 800ab74:	681b      	ldr	r3, [r3, #0]
 800ab76:	2240      	movs	r2, #64	@ 0x40
 800ab78:	4013      	ands	r3, r2
 800ab7a:	2b40      	cmp	r3, #64	@ 0x40
 800ab7c:	d007      	beq.n	800ab8e <HAL_SPI_TransmitReceive+0x146>
 800ab7e:	68fb      	ldr	r3, [r7, #12]
 800ab80:	681b      	ldr	r3, [r3, #0]
 800ab82:	681a      	ldr	r2, [r3, #0]
 800ab84:	68fb      	ldr	r3, [r7, #12]
 800ab86:	681b      	ldr	r3, [r3, #0]
 800ab88:	2140      	movs	r1, #64	@ 0x40
 800ab8a:	430a      	orrs	r2, r1
 800ab8c:	601a      	str	r2, [r3, #0]
 800ab8e:	68fb      	ldr	r3, [r7, #12]
 800ab90:	68da      	ldr	r2, [r3, #12]
 800ab92:	23e0      	movs	r3, #224	@ 0xe0
 800ab94:	00db      	lsls	r3, r3, #3
 800ab96:	429a      	cmp	r2, r3
 800ab98:	d800      	bhi.n	800ab9c <HAL_SPI_TransmitReceive+0x154>
 800ab9a:	e083      	b.n	800aca4 <HAL_SPI_TransmitReceive+0x25c>
 800ab9c:	68fb      	ldr	r3, [r7, #12]
 800ab9e:	685b      	ldr	r3, [r3, #4]
 800aba0:	2b00      	cmp	r3, #0
 800aba2:	d005      	beq.n	800abb0 <HAL_SPI_TransmitReceive+0x168>
 800aba4:	2312      	movs	r3, #18
 800aba6:	18fb      	adds	r3, r7, r3
 800aba8:	881b      	ldrh	r3, [r3, #0]
 800abaa:	2b01      	cmp	r3, #1
 800abac:	d000      	beq.n	800abb0 <HAL_SPI_TransmitReceive+0x168>
 800abae:	e06d      	b.n	800ac8c <HAL_SPI_TransmitReceive+0x244>
 800abb0:	68fb      	ldr	r3, [r7, #12]
 800abb2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800abb4:	881a      	ldrh	r2, [r3, #0]
 800abb6:	68fb      	ldr	r3, [r7, #12]
 800abb8:	681b      	ldr	r3, [r3, #0]
 800abba:	60da      	str	r2, [r3, #12]
 800abbc:	68fb      	ldr	r3, [r7, #12]
 800abbe:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800abc0:	1c9a      	adds	r2, r3, #2
 800abc2:	68fb      	ldr	r3, [r7, #12]
 800abc4:	639a      	str	r2, [r3, #56]	@ 0x38
 800abc6:	68fb      	ldr	r3, [r7, #12]
 800abc8:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800abca:	b29b      	uxth	r3, r3
 800abcc:	3b01      	subs	r3, #1
 800abce:	b29a      	uxth	r2, r3
 800abd0:	68fb      	ldr	r3, [r7, #12]
 800abd2:	87da      	strh	r2, [r3, #62]	@ 0x3e
 800abd4:	e05a      	b.n	800ac8c <HAL_SPI_TransmitReceive+0x244>
 800abd6:	68fb      	ldr	r3, [r7, #12]
 800abd8:	681b      	ldr	r3, [r3, #0]
 800abda:	689b      	ldr	r3, [r3, #8]
 800abdc:	2202      	movs	r2, #2
 800abde:	4013      	ands	r3, r2
 800abe0:	2b02      	cmp	r3, #2
 800abe2:	d11b      	bne.n	800ac1c <HAL_SPI_TransmitReceive+0x1d4>
 800abe4:	68fb      	ldr	r3, [r7, #12]
 800abe6:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800abe8:	b29b      	uxth	r3, r3
 800abea:	2b00      	cmp	r3, #0
 800abec:	d016      	beq.n	800ac1c <HAL_SPI_TransmitReceive+0x1d4>
 800abee:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800abf0:	2b01      	cmp	r3, #1
 800abf2:	d113      	bne.n	800ac1c <HAL_SPI_TransmitReceive+0x1d4>
 800abf4:	68fb      	ldr	r3, [r7, #12]
 800abf6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800abf8:	881a      	ldrh	r2, [r3, #0]
 800abfa:	68fb      	ldr	r3, [r7, #12]
 800abfc:	681b      	ldr	r3, [r3, #0]
 800abfe:	60da      	str	r2, [r3, #12]
 800ac00:	68fb      	ldr	r3, [r7, #12]
 800ac02:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800ac04:	1c9a      	adds	r2, r3, #2
 800ac06:	68fb      	ldr	r3, [r7, #12]
 800ac08:	639a      	str	r2, [r3, #56]	@ 0x38
 800ac0a:	68fb      	ldr	r3, [r7, #12]
 800ac0c:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800ac0e:	b29b      	uxth	r3, r3
 800ac10:	3b01      	subs	r3, #1
 800ac12:	b29a      	uxth	r2, r3
 800ac14:	68fb      	ldr	r3, [r7, #12]
 800ac16:	87da      	strh	r2, [r3, #62]	@ 0x3e
 800ac18:	2300      	movs	r3, #0
 800ac1a:	627b      	str	r3, [r7, #36]	@ 0x24
 800ac1c:	68fb      	ldr	r3, [r7, #12]
 800ac1e:	681b      	ldr	r3, [r3, #0]
 800ac20:	689b      	ldr	r3, [r3, #8]
 800ac22:	2201      	movs	r2, #1
 800ac24:	4013      	ands	r3, r2
 800ac26:	2b01      	cmp	r3, #1
 800ac28:	d11c      	bne.n	800ac64 <HAL_SPI_TransmitReceive+0x21c>
 800ac2a:	68fb      	ldr	r3, [r7, #12]
 800ac2c:	2246      	movs	r2, #70	@ 0x46
 800ac2e:	5a9b      	ldrh	r3, [r3, r2]
 800ac30:	b29b      	uxth	r3, r3
 800ac32:	2b00      	cmp	r3, #0
 800ac34:	d016      	beq.n	800ac64 <HAL_SPI_TransmitReceive+0x21c>
 800ac36:	68fb      	ldr	r3, [r7, #12]
 800ac38:	681b      	ldr	r3, [r3, #0]
 800ac3a:	68da      	ldr	r2, [r3, #12]
 800ac3c:	68fb      	ldr	r3, [r7, #12]
 800ac3e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800ac40:	b292      	uxth	r2, r2
 800ac42:	801a      	strh	r2, [r3, #0]
 800ac44:	68fb      	ldr	r3, [r7, #12]
 800ac46:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800ac48:	1c9a      	adds	r2, r3, #2
 800ac4a:	68fb      	ldr	r3, [r7, #12]
 800ac4c:	641a      	str	r2, [r3, #64]	@ 0x40
 800ac4e:	68fb      	ldr	r3, [r7, #12]
 800ac50:	2246      	movs	r2, #70	@ 0x46
 800ac52:	5a9b      	ldrh	r3, [r3, r2]
 800ac54:	b29b      	uxth	r3, r3
 800ac56:	3b01      	subs	r3, #1
 800ac58:	b299      	uxth	r1, r3
 800ac5a:	68fb      	ldr	r3, [r7, #12]
 800ac5c:	2246      	movs	r2, #70	@ 0x46
 800ac5e:	5299      	strh	r1, [r3, r2]
 800ac60:	2301      	movs	r3, #1
 800ac62:	627b      	str	r3, [r7, #36]	@ 0x24
 800ac64:	f7fc f8dc 	bl	8006e20 <HAL_GetTick>
 800ac68:	0002      	movs	r2, r0
 800ac6a:	69fb      	ldr	r3, [r7, #28]
 800ac6c:	1ad3      	subs	r3, r2, r3
 800ac6e:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800ac70:	429a      	cmp	r2, r3
 800ac72:	d80b      	bhi.n	800ac8c <HAL_SPI_TransmitReceive+0x244>
 800ac74:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800ac76:	3301      	adds	r3, #1
 800ac78:	d008      	beq.n	800ac8c <HAL_SPI_TransmitReceive+0x244>
 800ac7a:	2323      	movs	r3, #35	@ 0x23
 800ac7c:	18fb      	adds	r3, r7, r3
 800ac7e:	2203      	movs	r2, #3
 800ac80:	701a      	strb	r2, [r3, #0]
 800ac82:	68fb      	ldr	r3, [r7, #12]
 800ac84:	225d      	movs	r2, #93	@ 0x5d
 800ac86:	2101      	movs	r1, #1
 800ac88:	5499      	strb	r1, [r3, r2]
 800ac8a:	e0b1      	b.n	800adf0 <HAL_SPI_TransmitReceive+0x3a8>
 800ac8c:	68fb      	ldr	r3, [r7, #12]
 800ac8e:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800ac90:	b29b      	uxth	r3, r3
 800ac92:	2b00      	cmp	r3, #0
 800ac94:	d19f      	bne.n	800abd6 <HAL_SPI_TransmitReceive+0x18e>
 800ac96:	68fb      	ldr	r3, [r7, #12]
 800ac98:	2246      	movs	r2, #70	@ 0x46
 800ac9a:	5a9b      	ldrh	r3, [r3, r2]
 800ac9c:	b29b      	uxth	r3, r3
 800ac9e:	2b00      	cmp	r3, #0
 800aca0:	d199      	bne.n	800abd6 <HAL_SPI_TransmitReceive+0x18e>
 800aca2:	e089      	b.n	800adb8 <HAL_SPI_TransmitReceive+0x370>
 800aca4:	68fb      	ldr	r3, [r7, #12]
 800aca6:	685b      	ldr	r3, [r3, #4]
 800aca8:	2b00      	cmp	r3, #0
 800acaa:	d005      	beq.n	800acb8 <HAL_SPI_TransmitReceive+0x270>
 800acac:	2312      	movs	r3, #18
 800acae:	18fb      	adds	r3, r7, r3
 800acb0:	881b      	ldrh	r3, [r3, #0]
 800acb2:	2b01      	cmp	r3, #1
 800acb4:	d000      	beq.n	800acb8 <HAL_SPI_TransmitReceive+0x270>
 800acb6:	e074      	b.n	800ada2 <HAL_SPI_TransmitReceive+0x35a>
 800acb8:	68fb      	ldr	r3, [r7, #12]
 800acba:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800acbc:	68fb      	ldr	r3, [r7, #12]
 800acbe:	681b      	ldr	r3, [r3, #0]
 800acc0:	330c      	adds	r3, #12
 800acc2:	7812      	ldrb	r2, [r2, #0]
 800acc4:	701a      	strb	r2, [r3, #0]
 800acc6:	68fb      	ldr	r3, [r7, #12]
 800acc8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800acca:	1c5a      	adds	r2, r3, #1
 800accc:	68fb      	ldr	r3, [r7, #12]
 800acce:	639a      	str	r2, [r3, #56]	@ 0x38
 800acd0:	68fb      	ldr	r3, [r7, #12]
 800acd2:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800acd4:	b29b      	uxth	r3, r3
 800acd6:	3b01      	subs	r3, #1
 800acd8:	b29a      	uxth	r2, r3
 800acda:	68fb      	ldr	r3, [r7, #12]
 800acdc:	87da      	strh	r2, [r3, #62]	@ 0x3e
 800acde:	e060      	b.n	800ada2 <HAL_SPI_TransmitReceive+0x35a>
 800ace0:	68fb      	ldr	r3, [r7, #12]
 800ace2:	681b      	ldr	r3, [r3, #0]
 800ace4:	689b      	ldr	r3, [r3, #8]
 800ace6:	2202      	movs	r2, #2
 800ace8:	4013      	ands	r3, r2
 800acea:	2b02      	cmp	r3, #2
 800acec:	d11c      	bne.n	800ad28 <HAL_SPI_TransmitReceive+0x2e0>
 800acee:	68fb      	ldr	r3, [r7, #12]
 800acf0:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800acf2:	b29b      	uxth	r3, r3
 800acf4:	2b00      	cmp	r3, #0
 800acf6:	d017      	beq.n	800ad28 <HAL_SPI_TransmitReceive+0x2e0>
 800acf8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800acfa:	2b01      	cmp	r3, #1
 800acfc:	d114      	bne.n	800ad28 <HAL_SPI_TransmitReceive+0x2e0>
 800acfe:	68fb      	ldr	r3, [r7, #12]
 800ad00:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800ad02:	68fb      	ldr	r3, [r7, #12]
 800ad04:	681b      	ldr	r3, [r3, #0]
 800ad06:	330c      	adds	r3, #12
 800ad08:	7812      	ldrb	r2, [r2, #0]
 800ad0a:	701a      	strb	r2, [r3, #0]
 800ad0c:	68fb      	ldr	r3, [r7, #12]
 800ad0e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800ad10:	1c5a      	adds	r2, r3, #1
 800ad12:	68fb      	ldr	r3, [r7, #12]
 800ad14:	639a      	str	r2, [r3, #56]	@ 0x38
 800ad16:	68fb      	ldr	r3, [r7, #12]
 800ad18:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800ad1a:	b29b      	uxth	r3, r3
 800ad1c:	3b01      	subs	r3, #1
 800ad1e:	b29a      	uxth	r2, r3
 800ad20:	68fb      	ldr	r3, [r7, #12]
 800ad22:	87da      	strh	r2, [r3, #62]	@ 0x3e
 800ad24:	2300      	movs	r3, #0
 800ad26:	627b      	str	r3, [r7, #36]	@ 0x24
 800ad28:	68fb      	ldr	r3, [r7, #12]
 800ad2a:	681b      	ldr	r3, [r3, #0]
 800ad2c:	689b      	ldr	r3, [r3, #8]
 800ad2e:	2201      	movs	r2, #1
 800ad30:	4013      	ands	r3, r2
 800ad32:	2b01      	cmp	r3, #1
 800ad34:	d11e      	bne.n	800ad74 <HAL_SPI_TransmitReceive+0x32c>
 800ad36:	68fb      	ldr	r3, [r7, #12]
 800ad38:	2246      	movs	r2, #70	@ 0x46
 800ad3a:	5a9b      	ldrh	r3, [r3, r2]
 800ad3c:	b29b      	uxth	r3, r3
 800ad3e:	2b00      	cmp	r3, #0
 800ad40:	d018      	beq.n	800ad74 <HAL_SPI_TransmitReceive+0x32c>
 800ad42:	68fb      	ldr	r3, [r7, #12]
 800ad44:	681b      	ldr	r3, [r3, #0]
 800ad46:	330c      	adds	r3, #12
 800ad48:	001a      	movs	r2, r3
 800ad4a:	68fb      	ldr	r3, [r7, #12]
 800ad4c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800ad4e:	7812      	ldrb	r2, [r2, #0]
 800ad50:	b2d2      	uxtb	r2, r2
 800ad52:	701a      	strb	r2, [r3, #0]
 800ad54:	68fb      	ldr	r3, [r7, #12]
 800ad56:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800ad58:	1c5a      	adds	r2, r3, #1
 800ad5a:	68fb      	ldr	r3, [r7, #12]
 800ad5c:	641a      	str	r2, [r3, #64]	@ 0x40
 800ad5e:	68fb      	ldr	r3, [r7, #12]
 800ad60:	2246      	movs	r2, #70	@ 0x46
 800ad62:	5a9b      	ldrh	r3, [r3, r2]
 800ad64:	b29b      	uxth	r3, r3
 800ad66:	3b01      	subs	r3, #1
 800ad68:	b299      	uxth	r1, r3
 800ad6a:	68fb      	ldr	r3, [r7, #12]
 800ad6c:	2246      	movs	r2, #70	@ 0x46
 800ad6e:	5299      	strh	r1, [r3, r2]
 800ad70:	2301      	movs	r3, #1
 800ad72:	627b      	str	r3, [r7, #36]	@ 0x24
 800ad74:	f7fc f854 	bl	8006e20 <HAL_GetTick>
 800ad78:	0002      	movs	r2, r0
 800ad7a:	69fb      	ldr	r3, [r7, #28]
 800ad7c:	1ad3      	subs	r3, r2, r3
 800ad7e:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800ad80:	429a      	cmp	r2, r3
 800ad82:	d802      	bhi.n	800ad8a <HAL_SPI_TransmitReceive+0x342>
 800ad84:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800ad86:	3301      	adds	r3, #1
 800ad88:	d102      	bne.n	800ad90 <HAL_SPI_TransmitReceive+0x348>
 800ad8a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800ad8c:	2b00      	cmp	r3, #0
 800ad8e:	d108      	bne.n	800ada2 <HAL_SPI_TransmitReceive+0x35a>
 800ad90:	2323      	movs	r3, #35	@ 0x23
 800ad92:	18fb      	adds	r3, r7, r3
 800ad94:	2203      	movs	r2, #3
 800ad96:	701a      	strb	r2, [r3, #0]
 800ad98:	68fb      	ldr	r3, [r7, #12]
 800ad9a:	225d      	movs	r2, #93	@ 0x5d
 800ad9c:	2101      	movs	r1, #1
 800ad9e:	5499      	strb	r1, [r3, r2]
 800ada0:	e026      	b.n	800adf0 <HAL_SPI_TransmitReceive+0x3a8>
 800ada2:	68fb      	ldr	r3, [r7, #12]
 800ada4:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800ada6:	b29b      	uxth	r3, r3
 800ada8:	2b00      	cmp	r3, #0
 800adaa:	d199      	bne.n	800ace0 <HAL_SPI_TransmitReceive+0x298>
 800adac:	68fb      	ldr	r3, [r7, #12]
 800adae:	2246      	movs	r2, #70	@ 0x46
 800adb0:	5a9b      	ldrh	r3, [r3, r2]
 800adb2:	b29b      	uxth	r3, r3
 800adb4:	2b00      	cmp	r3, #0
 800adb6:	d193      	bne.n	800ace0 <HAL_SPI_TransmitReceive+0x298>
 800adb8:	69fa      	ldr	r2, [r7, #28]
 800adba:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 800adbc:	68fb      	ldr	r3, [r7, #12]
 800adbe:	0018      	movs	r0, r3
 800adc0:	f000 f9b2 	bl	800b128 <SPI_EndRxTxTransaction>
 800adc4:	1e03      	subs	r3, r0, #0
 800adc6:	d006      	beq.n	800add6 <HAL_SPI_TransmitReceive+0x38e>
 800adc8:	2323      	movs	r3, #35	@ 0x23
 800adca:	18fb      	adds	r3, r7, r3
 800adcc:	2201      	movs	r2, #1
 800adce:	701a      	strb	r2, [r3, #0]
 800add0:	68fb      	ldr	r3, [r7, #12]
 800add2:	2220      	movs	r2, #32
 800add4:	661a      	str	r2, [r3, #96]	@ 0x60
 800add6:	68fb      	ldr	r3, [r7, #12]
 800add8:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800adda:	2b00      	cmp	r3, #0
 800addc:	d004      	beq.n	800ade8 <HAL_SPI_TransmitReceive+0x3a0>
 800adde:	2323      	movs	r3, #35	@ 0x23
 800ade0:	18fb      	adds	r3, r7, r3
 800ade2:	2201      	movs	r2, #1
 800ade4:	701a      	strb	r2, [r3, #0]
 800ade6:	e003      	b.n	800adf0 <HAL_SPI_TransmitReceive+0x3a8>
 800ade8:	68fb      	ldr	r3, [r7, #12]
 800adea:	225d      	movs	r2, #93	@ 0x5d
 800adec:	2101      	movs	r1, #1
 800adee:	5499      	strb	r1, [r3, r2]
 800adf0:	68fb      	ldr	r3, [r7, #12]
 800adf2:	225c      	movs	r2, #92	@ 0x5c
 800adf4:	2100      	movs	r1, #0
 800adf6:	5499      	strb	r1, [r3, r2]
 800adf8:	2323      	movs	r3, #35	@ 0x23
 800adfa:	18fb      	adds	r3, r7, r3
 800adfc:	781b      	ldrb	r3, [r3, #0]
 800adfe:	0018      	movs	r0, r3
 800ae00:	46bd      	mov	sp, r7
 800ae02:	b00a      	add	sp, #40	@ 0x28
 800ae04:	bd80      	pop	{r7, pc}
 800ae06:	46c0      	nop			@ (mov r8, r8)
 800ae08:	ffffefff 	.word	0xffffefff

0800ae0c <SPI_WaitFlagStateUntilTimeout>:
 800ae0c:	b580      	push	{r7, lr}
 800ae0e:	b088      	sub	sp, #32
 800ae10:	af00      	add	r7, sp, #0
 800ae12:	60f8      	str	r0, [r7, #12]
 800ae14:	60b9      	str	r1, [r7, #8]
 800ae16:	603b      	str	r3, [r7, #0]
 800ae18:	1dfb      	adds	r3, r7, #7
 800ae1a:	701a      	strb	r2, [r3, #0]
 800ae1c:	f7fc f800 	bl	8006e20 <HAL_GetTick>
 800ae20:	0002      	movs	r2, r0
 800ae22:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800ae24:	1a9b      	subs	r3, r3, r2
 800ae26:	683a      	ldr	r2, [r7, #0]
 800ae28:	18d3      	adds	r3, r2, r3
 800ae2a:	61fb      	str	r3, [r7, #28]
 800ae2c:	f7fb fff8 	bl	8006e20 <HAL_GetTick>
 800ae30:	0003      	movs	r3, r0
 800ae32:	61bb      	str	r3, [r7, #24]
 800ae34:	4b3a      	ldr	r3, [pc, #232]	@ (800af20 <SPI_WaitFlagStateUntilTimeout+0x114>)
 800ae36:	681b      	ldr	r3, [r3, #0]
 800ae38:	015b      	lsls	r3, r3, #5
 800ae3a:	0d1b      	lsrs	r3, r3, #20
 800ae3c:	69fa      	ldr	r2, [r7, #28]
 800ae3e:	4353      	muls	r3, r2
 800ae40:	617b      	str	r3, [r7, #20]
 800ae42:	e058      	b.n	800aef6 <SPI_WaitFlagStateUntilTimeout+0xea>
 800ae44:	683b      	ldr	r3, [r7, #0]
 800ae46:	3301      	adds	r3, #1
 800ae48:	d055      	beq.n	800aef6 <SPI_WaitFlagStateUntilTimeout+0xea>
 800ae4a:	f7fb ffe9 	bl	8006e20 <HAL_GetTick>
 800ae4e:	0002      	movs	r2, r0
 800ae50:	69bb      	ldr	r3, [r7, #24]
 800ae52:	1ad3      	subs	r3, r2, r3
 800ae54:	69fa      	ldr	r2, [r7, #28]
 800ae56:	429a      	cmp	r2, r3
 800ae58:	d902      	bls.n	800ae60 <SPI_WaitFlagStateUntilTimeout+0x54>
 800ae5a:	69fb      	ldr	r3, [r7, #28]
 800ae5c:	2b00      	cmp	r3, #0
 800ae5e:	d142      	bne.n	800aee6 <SPI_WaitFlagStateUntilTimeout+0xda>
 800ae60:	68fb      	ldr	r3, [r7, #12]
 800ae62:	681b      	ldr	r3, [r3, #0]
 800ae64:	685a      	ldr	r2, [r3, #4]
 800ae66:	68fb      	ldr	r3, [r7, #12]
 800ae68:	681b      	ldr	r3, [r3, #0]
 800ae6a:	21e0      	movs	r1, #224	@ 0xe0
 800ae6c:	438a      	bics	r2, r1
 800ae6e:	605a      	str	r2, [r3, #4]
 800ae70:	68fb      	ldr	r3, [r7, #12]
 800ae72:	685a      	ldr	r2, [r3, #4]
 800ae74:	2382      	movs	r3, #130	@ 0x82
 800ae76:	005b      	lsls	r3, r3, #1
 800ae78:	429a      	cmp	r2, r3
 800ae7a:	d113      	bne.n	800aea4 <SPI_WaitFlagStateUntilTimeout+0x98>
 800ae7c:	68fb      	ldr	r3, [r7, #12]
 800ae7e:	689a      	ldr	r2, [r3, #8]
 800ae80:	2380      	movs	r3, #128	@ 0x80
 800ae82:	021b      	lsls	r3, r3, #8
 800ae84:	429a      	cmp	r2, r3
 800ae86:	d005      	beq.n	800ae94 <SPI_WaitFlagStateUntilTimeout+0x88>
 800ae88:	68fb      	ldr	r3, [r7, #12]
 800ae8a:	689a      	ldr	r2, [r3, #8]
 800ae8c:	2380      	movs	r3, #128	@ 0x80
 800ae8e:	00db      	lsls	r3, r3, #3
 800ae90:	429a      	cmp	r2, r3
 800ae92:	d107      	bne.n	800aea4 <SPI_WaitFlagStateUntilTimeout+0x98>
 800ae94:	68fb      	ldr	r3, [r7, #12]
 800ae96:	681b      	ldr	r3, [r3, #0]
 800ae98:	681a      	ldr	r2, [r3, #0]
 800ae9a:	68fb      	ldr	r3, [r7, #12]
 800ae9c:	681b      	ldr	r3, [r3, #0]
 800ae9e:	2140      	movs	r1, #64	@ 0x40
 800aea0:	438a      	bics	r2, r1
 800aea2:	601a      	str	r2, [r3, #0]
 800aea4:	68fb      	ldr	r3, [r7, #12]
 800aea6:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800aea8:	2380      	movs	r3, #128	@ 0x80
 800aeaa:	019b      	lsls	r3, r3, #6
 800aeac:	429a      	cmp	r2, r3
 800aeae:	d110      	bne.n	800aed2 <SPI_WaitFlagStateUntilTimeout+0xc6>
 800aeb0:	68fb      	ldr	r3, [r7, #12]
 800aeb2:	681b      	ldr	r3, [r3, #0]
 800aeb4:	681a      	ldr	r2, [r3, #0]
 800aeb6:	68fb      	ldr	r3, [r7, #12]
 800aeb8:	681b      	ldr	r3, [r3, #0]
 800aeba:	491a      	ldr	r1, [pc, #104]	@ (800af24 <SPI_WaitFlagStateUntilTimeout+0x118>)
 800aebc:	400a      	ands	r2, r1
 800aebe:	601a      	str	r2, [r3, #0]
 800aec0:	68fb      	ldr	r3, [r7, #12]
 800aec2:	681b      	ldr	r3, [r3, #0]
 800aec4:	681a      	ldr	r2, [r3, #0]
 800aec6:	68fb      	ldr	r3, [r7, #12]
 800aec8:	681b      	ldr	r3, [r3, #0]
 800aeca:	2180      	movs	r1, #128	@ 0x80
 800aecc:	0189      	lsls	r1, r1, #6
 800aece:	430a      	orrs	r2, r1
 800aed0:	601a      	str	r2, [r3, #0]
 800aed2:	68fb      	ldr	r3, [r7, #12]
 800aed4:	225d      	movs	r2, #93	@ 0x5d
 800aed6:	2101      	movs	r1, #1
 800aed8:	5499      	strb	r1, [r3, r2]
 800aeda:	68fb      	ldr	r3, [r7, #12]
 800aedc:	225c      	movs	r2, #92	@ 0x5c
 800aede:	2100      	movs	r1, #0
 800aee0:	5499      	strb	r1, [r3, r2]
 800aee2:	2303      	movs	r3, #3
 800aee4:	e017      	b.n	800af16 <SPI_WaitFlagStateUntilTimeout+0x10a>
 800aee6:	697b      	ldr	r3, [r7, #20]
 800aee8:	2b00      	cmp	r3, #0
 800aeea:	d101      	bne.n	800aef0 <SPI_WaitFlagStateUntilTimeout+0xe4>
 800aeec:	2300      	movs	r3, #0
 800aeee:	61fb      	str	r3, [r7, #28]
 800aef0:	697b      	ldr	r3, [r7, #20]
 800aef2:	3b01      	subs	r3, #1
 800aef4:	617b      	str	r3, [r7, #20]
 800aef6:	68fb      	ldr	r3, [r7, #12]
 800aef8:	681b      	ldr	r3, [r3, #0]
 800aefa:	689b      	ldr	r3, [r3, #8]
 800aefc:	68ba      	ldr	r2, [r7, #8]
 800aefe:	4013      	ands	r3, r2
 800af00:	68ba      	ldr	r2, [r7, #8]
 800af02:	1ad3      	subs	r3, r2, r3
 800af04:	425a      	negs	r2, r3
 800af06:	4153      	adcs	r3, r2
 800af08:	b2db      	uxtb	r3, r3
 800af0a:	001a      	movs	r2, r3
 800af0c:	1dfb      	adds	r3, r7, #7
 800af0e:	781b      	ldrb	r3, [r3, #0]
 800af10:	429a      	cmp	r2, r3
 800af12:	d197      	bne.n	800ae44 <SPI_WaitFlagStateUntilTimeout+0x38>
 800af14:	2300      	movs	r3, #0
 800af16:	0018      	movs	r0, r3
 800af18:	46bd      	mov	sp, r7
 800af1a:	b008      	add	sp, #32
 800af1c:	bd80      	pop	{r7, pc}
 800af1e:	46c0      	nop			@ (mov r8, r8)
 800af20:	2000009c 	.word	0x2000009c
 800af24:	ffffdfff 	.word	0xffffdfff

0800af28 <SPI_WaitFifoStateUntilTimeout>:
 800af28:	b580      	push	{r7, lr}
 800af2a:	b08a      	sub	sp, #40	@ 0x28
 800af2c:	af00      	add	r7, sp, #0
 800af2e:	60f8      	str	r0, [r7, #12]
 800af30:	60b9      	str	r1, [r7, #8]
 800af32:	607a      	str	r2, [r7, #4]
 800af34:	603b      	str	r3, [r7, #0]
 800af36:	2317      	movs	r3, #23
 800af38:	18fb      	adds	r3, r7, r3
 800af3a:	2200      	movs	r2, #0
 800af3c:	701a      	strb	r2, [r3, #0]
 800af3e:	f7fb ff6f 	bl	8006e20 <HAL_GetTick>
 800af42:	0002      	movs	r2, r0
 800af44:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800af46:	1a9b      	subs	r3, r3, r2
 800af48:	683a      	ldr	r2, [r7, #0]
 800af4a:	18d3      	adds	r3, r2, r3
 800af4c:	627b      	str	r3, [r7, #36]	@ 0x24
 800af4e:	f7fb ff67 	bl	8006e20 <HAL_GetTick>
 800af52:	0003      	movs	r3, r0
 800af54:	623b      	str	r3, [r7, #32]
 800af56:	68fb      	ldr	r3, [r7, #12]
 800af58:	681b      	ldr	r3, [r3, #0]
 800af5a:	330c      	adds	r3, #12
 800af5c:	61fb      	str	r3, [r7, #28]
 800af5e:	4b41      	ldr	r3, [pc, #260]	@ (800b064 <SPI_WaitFifoStateUntilTimeout+0x13c>)
 800af60:	681a      	ldr	r2, [r3, #0]
 800af62:	0013      	movs	r3, r2
 800af64:	009b      	lsls	r3, r3, #2
 800af66:	189b      	adds	r3, r3, r2
 800af68:	00da      	lsls	r2, r3, #3
 800af6a:	1ad3      	subs	r3, r2, r3
 800af6c:	0d1b      	lsrs	r3, r3, #20
 800af6e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800af70:	4353      	muls	r3, r2
 800af72:	61bb      	str	r3, [r7, #24]
 800af74:	e068      	b.n	800b048 <SPI_WaitFifoStateUntilTimeout+0x120>
 800af76:	68ba      	ldr	r2, [r7, #8]
 800af78:	23c0      	movs	r3, #192	@ 0xc0
 800af7a:	00db      	lsls	r3, r3, #3
 800af7c:	429a      	cmp	r2, r3
 800af7e:	d10a      	bne.n	800af96 <SPI_WaitFifoStateUntilTimeout+0x6e>
 800af80:	687b      	ldr	r3, [r7, #4]
 800af82:	2b00      	cmp	r3, #0
 800af84:	d107      	bne.n	800af96 <SPI_WaitFifoStateUntilTimeout+0x6e>
 800af86:	69fb      	ldr	r3, [r7, #28]
 800af88:	781b      	ldrb	r3, [r3, #0]
 800af8a:	b2da      	uxtb	r2, r3
 800af8c:	2117      	movs	r1, #23
 800af8e:	187b      	adds	r3, r7, r1
 800af90:	701a      	strb	r2, [r3, #0]
 800af92:	187b      	adds	r3, r7, r1
 800af94:	781b      	ldrb	r3, [r3, #0]
 800af96:	683b      	ldr	r3, [r7, #0]
 800af98:	3301      	adds	r3, #1
 800af9a:	d055      	beq.n	800b048 <SPI_WaitFifoStateUntilTimeout+0x120>
 800af9c:	f7fb ff40 	bl	8006e20 <HAL_GetTick>
 800afa0:	0002      	movs	r2, r0
 800afa2:	6a3b      	ldr	r3, [r7, #32]
 800afa4:	1ad3      	subs	r3, r2, r3
 800afa6:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800afa8:	429a      	cmp	r2, r3
 800afaa:	d902      	bls.n	800afb2 <SPI_WaitFifoStateUntilTimeout+0x8a>
 800afac:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800afae:	2b00      	cmp	r3, #0
 800afb0:	d142      	bne.n	800b038 <SPI_WaitFifoStateUntilTimeout+0x110>
 800afb2:	68fb      	ldr	r3, [r7, #12]
 800afb4:	681b      	ldr	r3, [r3, #0]
 800afb6:	685a      	ldr	r2, [r3, #4]
 800afb8:	68fb      	ldr	r3, [r7, #12]
 800afba:	681b      	ldr	r3, [r3, #0]
 800afbc:	21e0      	movs	r1, #224	@ 0xe0
 800afbe:	438a      	bics	r2, r1
 800afc0:	605a      	str	r2, [r3, #4]
 800afc2:	68fb      	ldr	r3, [r7, #12]
 800afc4:	685a      	ldr	r2, [r3, #4]
 800afc6:	2382      	movs	r3, #130	@ 0x82
 800afc8:	005b      	lsls	r3, r3, #1
 800afca:	429a      	cmp	r2, r3
 800afcc:	d113      	bne.n	800aff6 <SPI_WaitFifoStateUntilTimeout+0xce>
 800afce:	68fb      	ldr	r3, [r7, #12]
 800afd0:	689a      	ldr	r2, [r3, #8]
 800afd2:	2380      	movs	r3, #128	@ 0x80
 800afd4:	021b      	lsls	r3, r3, #8
 800afd6:	429a      	cmp	r2, r3
 800afd8:	d005      	beq.n	800afe6 <SPI_WaitFifoStateUntilTimeout+0xbe>
 800afda:	68fb      	ldr	r3, [r7, #12]
 800afdc:	689a      	ldr	r2, [r3, #8]
 800afde:	2380      	movs	r3, #128	@ 0x80
 800afe0:	00db      	lsls	r3, r3, #3
 800afe2:	429a      	cmp	r2, r3
 800afe4:	d107      	bne.n	800aff6 <SPI_WaitFifoStateUntilTimeout+0xce>
 800afe6:	68fb      	ldr	r3, [r7, #12]
 800afe8:	681b      	ldr	r3, [r3, #0]
 800afea:	681a      	ldr	r2, [r3, #0]
 800afec:	68fb      	ldr	r3, [r7, #12]
 800afee:	681b      	ldr	r3, [r3, #0]
 800aff0:	2140      	movs	r1, #64	@ 0x40
 800aff2:	438a      	bics	r2, r1
 800aff4:	601a      	str	r2, [r3, #0]
 800aff6:	68fb      	ldr	r3, [r7, #12]
 800aff8:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800affa:	2380      	movs	r3, #128	@ 0x80
 800affc:	019b      	lsls	r3, r3, #6
 800affe:	429a      	cmp	r2, r3
 800b000:	d110      	bne.n	800b024 <SPI_WaitFifoStateUntilTimeout+0xfc>
 800b002:	68fb      	ldr	r3, [r7, #12]
 800b004:	681b      	ldr	r3, [r3, #0]
 800b006:	681a      	ldr	r2, [r3, #0]
 800b008:	68fb      	ldr	r3, [r7, #12]
 800b00a:	681b      	ldr	r3, [r3, #0]
 800b00c:	4916      	ldr	r1, [pc, #88]	@ (800b068 <SPI_WaitFifoStateUntilTimeout+0x140>)
 800b00e:	400a      	ands	r2, r1
 800b010:	601a      	str	r2, [r3, #0]
 800b012:	68fb      	ldr	r3, [r7, #12]
 800b014:	681b      	ldr	r3, [r3, #0]
 800b016:	681a      	ldr	r2, [r3, #0]
 800b018:	68fb      	ldr	r3, [r7, #12]
 800b01a:	681b      	ldr	r3, [r3, #0]
 800b01c:	2180      	movs	r1, #128	@ 0x80
 800b01e:	0189      	lsls	r1, r1, #6
 800b020:	430a      	orrs	r2, r1
 800b022:	601a      	str	r2, [r3, #0]
 800b024:	68fb      	ldr	r3, [r7, #12]
 800b026:	225d      	movs	r2, #93	@ 0x5d
 800b028:	2101      	movs	r1, #1
 800b02a:	5499      	strb	r1, [r3, r2]
 800b02c:	68fb      	ldr	r3, [r7, #12]
 800b02e:	225c      	movs	r2, #92	@ 0x5c
 800b030:	2100      	movs	r1, #0
 800b032:	5499      	strb	r1, [r3, r2]
 800b034:	2303      	movs	r3, #3
 800b036:	e010      	b.n	800b05a <SPI_WaitFifoStateUntilTimeout+0x132>
 800b038:	69bb      	ldr	r3, [r7, #24]
 800b03a:	2b00      	cmp	r3, #0
 800b03c:	d101      	bne.n	800b042 <SPI_WaitFifoStateUntilTimeout+0x11a>
 800b03e:	2300      	movs	r3, #0
 800b040:	627b      	str	r3, [r7, #36]	@ 0x24
 800b042:	69bb      	ldr	r3, [r7, #24]
 800b044:	3b01      	subs	r3, #1
 800b046:	61bb      	str	r3, [r7, #24]
 800b048:	68fb      	ldr	r3, [r7, #12]
 800b04a:	681b      	ldr	r3, [r3, #0]
 800b04c:	689b      	ldr	r3, [r3, #8]
 800b04e:	68ba      	ldr	r2, [r7, #8]
 800b050:	4013      	ands	r3, r2
 800b052:	687a      	ldr	r2, [r7, #4]
 800b054:	429a      	cmp	r2, r3
 800b056:	d18e      	bne.n	800af76 <SPI_WaitFifoStateUntilTimeout+0x4e>
 800b058:	2300      	movs	r3, #0
 800b05a:	0018      	movs	r0, r3
 800b05c:	46bd      	mov	sp, r7
 800b05e:	b00a      	add	sp, #40	@ 0x28
 800b060:	bd80      	pop	{r7, pc}
 800b062:	46c0      	nop			@ (mov r8, r8)
 800b064:	2000009c 	.word	0x2000009c
 800b068:	ffffdfff 	.word	0xffffdfff

0800b06c <SPI_EndRxTransaction>:
 800b06c:	b580      	push	{r7, lr}
 800b06e:	b086      	sub	sp, #24
 800b070:	af02      	add	r7, sp, #8
 800b072:	60f8      	str	r0, [r7, #12]
 800b074:	60b9      	str	r1, [r7, #8]
 800b076:	607a      	str	r2, [r7, #4]
 800b078:	68fb      	ldr	r3, [r7, #12]
 800b07a:	685a      	ldr	r2, [r3, #4]
 800b07c:	2382      	movs	r3, #130	@ 0x82
 800b07e:	005b      	lsls	r3, r3, #1
 800b080:	429a      	cmp	r2, r3
 800b082:	d113      	bne.n	800b0ac <SPI_EndRxTransaction+0x40>
 800b084:	68fb      	ldr	r3, [r7, #12]
 800b086:	689a      	ldr	r2, [r3, #8]
 800b088:	2380      	movs	r3, #128	@ 0x80
 800b08a:	021b      	lsls	r3, r3, #8
 800b08c:	429a      	cmp	r2, r3
 800b08e:	d005      	beq.n	800b09c <SPI_EndRxTransaction+0x30>
 800b090:	68fb      	ldr	r3, [r7, #12]
 800b092:	689a      	ldr	r2, [r3, #8]
 800b094:	2380      	movs	r3, #128	@ 0x80
 800b096:	00db      	lsls	r3, r3, #3
 800b098:	429a      	cmp	r2, r3
 800b09a:	d107      	bne.n	800b0ac <SPI_EndRxTransaction+0x40>
 800b09c:	68fb      	ldr	r3, [r7, #12]
 800b09e:	681b      	ldr	r3, [r3, #0]
 800b0a0:	681a      	ldr	r2, [r3, #0]
 800b0a2:	68fb      	ldr	r3, [r7, #12]
 800b0a4:	681b      	ldr	r3, [r3, #0]
 800b0a6:	2140      	movs	r1, #64	@ 0x40
 800b0a8:	438a      	bics	r2, r1
 800b0aa:	601a      	str	r2, [r3, #0]
 800b0ac:	68ba      	ldr	r2, [r7, #8]
 800b0ae:	68f8      	ldr	r0, [r7, #12]
 800b0b0:	687b      	ldr	r3, [r7, #4]
 800b0b2:	9300      	str	r3, [sp, #0]
 800b0b4:	0013      	movs	r3, r2
 800b0b6:	2200      	movs	r2, #0
 800b0b8:	2180      	movs	r1, #128	@ 0x80
 800b0ba:	f7ff fea7 	bl	800ae0c <SPI_WaitFlagStateUntilTimeout>
 800b0be:	1e03      	subs	r3, r0, #0
 800b0c0:	d007      	beq.n	800b0d2 <SPI_EndRxTransaction+0x66>
 800b0c2:	68fb      	ldr	r3, [r7, #12]
 800b0c4:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800b0c6:	2220      	movs	r2, #32
 800b0c8:	431a      	orrs	r2, r3
 800b0ca:	68fb      	ldr	r3, [r7, #12]
 800b0cc:	661a      	str	r2, [r3, #96]	@ 0x60
 800b0ce:	2303      	movs	r3, #3
 800b0d0:	e026      	b.n	800b120 <SPI_EndRxTransaction+0xb4>
 800b0d2:	68fb      	ldr	r3, [r7, #12]
 800b0d4:	685a      	ldr	r2, [r3, #4]
 800b0d6:	2382      	movs	r3, #130	@ 0x82
 800b0d8:	005b      	lsls	r3, r3, #1
 800b0da:	429a      	cmp	r2, r3
 800b0dc:	d11f      	bne.n	800b11e <SPI_EndRxTransaction+0xb2>
 800b0de:	68fb      	ldr	r3, [r7, #12]
 800b0e0:	689a      	ldr	r2, [r3, #8]
 800b0e2:	2380      	movs	r3, #128	@ 0x80
 800b0e4:	021b      	lsls	r3, r3, #8
 800b0e6:	429a      	cmp	r2, r3
 800b0e8:	d005      	beq.n	800b0f6 <SPI_EndRxTransaction+0x8a>
 800b0ea:	68fb      	ldr	r3, [r7, #12]
 800b0ec:	689a      	ldr	r2, [r3, #8]
 800b0ee:	2380      	movs	r3, #128	@ 0x80
 800b0f0:	00db      	lsls	r3, r3, #3
 800b0f2:	429a      	cmp	r2, r3
 800b0f4:	d113      	bne.n	800b11e <SPI_EndRxTransaction+0xb2>
 800b0f6:	68ba      	ldr	r2, [r7, #8]
 800b0f8:	23c0      	movs	r3, #192	@ 0xc0
 800b0fa:	00d9      	lsls	r1, r3, #3
 800b0fc:	68f8      	ldr	r0, [r7, #12]
 800b0fe:	687b      	ldr	r3, [r7, #4]
 800b100:	9300      	str	r3, [sp, #0]
 800b102:	0013      	movs	r3, r2
 800b104:	2200      	movs	r2, #0
 800b106:	f7ff ff0f 	bl	800af28 <SPI_WaitFifoStateUntilTimeout>
 800b10a:	1e03      	subs	r3, r0, #0
 800b10c:	d007      	beq.n	800b11e <SPI_EndRxTransaction+0xb2>
 800b10e:	68fb      	ldr	r3, [r7, #12]
 800b110:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800b112:	2220      	movs	r2, #32
 800b114:	431a      	orrs	r2, r3
 800b116:	68fb      	ldr	r3, [r7, #12]
 800b118:	661a      	str	r2, [r3, #96]	@ 0x60
 800b11a:	2303      	movs	r3, #3
 800b11c:	e000      	b.n	800b120 <SPI_EndRxTransaction+0xb4>
 800b11e:	2300      	movs	r3, #0
 800b120:	0018      	movs	r0, r3
 800b122:	46bd      	mov	sp, r7
 800b124:	b004      	add	sp, #16
 800b126:	bd80      	pop	{r7, pc}

0800b128 <SPI_EndRxTxTransaction>:
 800b128:	b580      	push	{r7, lr}
 800b12a:	b086      	sub	sp, #24
 800b12c:	af02      	add	r7, sp, #8
 800b12e:	60f8      	str	r0, [r7, #12]
 800b130:	60b9      	str	r1, [r7, #8]
 800b132:	607a      	str	r2, [r7, #4]
 800b134:	68ba      	ldr	r2, [r7, #8]
 800b136:	23c0      	movs	r3, #192	@ 0xc0
 800b138:	0159      	lsls	r1, r3, #5
 800b13a:	68f8      	ldr	r0, [r7, #12]
 800b13c:	687b      	ldr	r3, [r7, #4]
 800b13e:	9300      	str	r3, [sp, #0]
 800b140:	0013      	movs	r3, r2
 800b142:	2200      	movs	r2, #0
 800b144:	f7ff fef0 	bl	800af28 <SPI_WaitFifoStateUntilTimeout>
 800b148:	1e03      	subs	r3, r0, #0
 800b14a:	d007      	beq.n	800b15c <SPI_EndRxTxTransaction+0x34>
 800b14c:	68fb      	ldr	r3, [r7, #12]
 800b14e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800b150:	2220      	movs	r2, #32
 800b152:	431a      	orrs	r2, r3
 800b154:	68fb      	ldr	r3, [r7, #12]
 800b156:	661a      	str	r2, [r3, #96]	@ 0x60
 800b158:	2303      	movs	r3, #3
 800b15a:	e027      	b.n	800b1ac <SPI_EndRxTxTransaction+0x84>
 800b15c:	68ba      	ldr	r2, [r7, #8]
 800b15e:	68f8      	ldr	r0, [r7, #12]
 800b160:	687b      	ldr	r3, [r7, #4]
 800b162:	9300      	str	r3, [sp, #0]
 800b164:	0013      	movs	r3, r2
 800b166:	2200      	movs	r2, #0
 800b168:	2180      	movs	r1, #128	@ 0x80
 800b16a:	f7ff fe4f 	bl	800ae0c <SPI_WaitFlagStateUntilTimeout>
 800b16e:	1e03      	subs	r3, r0, #0
 800b170:	d007      	beq.n	800b182 <SPI_EndRxTxTransaction+0x5a>
 800b172:	68fb      	ldr	r3, [r7, #12]
 800b174:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800b176:	2220      	movs	r2, #32
 800b178:	431a      	orrs	r2, r3
 800b17a:	68fb      	ldr	r3, [r7, #12]
 800b17c:	661a      	str	r2, [r3, #96]	@ 0x60
 800b17e:	2303      	movs	r3, #3
 800b180:	e014      	b.n	800b1ac <SPI_EndRxTxTransaction+0x84>
 800b182:	68ba      	ldr	r2, [r7, #8]
 800b184:	23c0      	movs	r3, #192	@ 0xc0
 800b186:	00d9      	lsls	r1, r3, #3
 800b188:	68f8      	ldr	r0, [r7, #12]
 800b18a:	687b      	ldr	r3, [r7, #4]
 800b18c:	9300      	str	r3, [sp, #0]
 800b18e:	0013      	movs	r3, r2
 800b190:	2200      	movs	r2, #0
 800b192:	f7ff fec9 	bl	800af28 <SPI_WaitFifoStateUntilTimeout>
 800b196:	1e03      	subs	r3, r0, #0
 800b198:	d007      	beq.n	800b1aa <SPI_EndRxTxTransaction+0x82>
 800b19a:	68fb      	ldr	r3, [r7, #12]
 800b19c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800b19e:	2220      	movs	r2, #32
 800b1a0:	431a      	orrs	r2, r3
 800b1a2:	68fb      	ldr	r3, [r7, #12]
 800b1a4:	661a      	str	r2, [r3, #96]	@ 0x60
 800b1a6:	2303      	movs	r3, #3
 800b1a8:	e000      	b.n	800b1ac <SPI_EndRxTxTransaction+0x84>
 800b1aa:	2300      	movs	r3, #0
 800b1ac:	0018      	movs	r0, r3
 800b1ae:	46bd      	mov	sp, r7
 800b1b0:	b004      	add	sp, #16
 800b1b2:	bd80      	pop	{r7, pc}

0800b1b4 <HAL_TIM_Base_Init>:
 800b1b4:	b580      	push	{r7, lr}
 800b1b6:	b082      	sub	sp, #8
 800b1b8:	af00      	add	r7, sp, #0
 800b1ba:	6078      	str	r0, [r7, #4]
 800b1bc:	687b      	ldr	r3, [r7, #4]
 800b1be:	2b00      	cmp	r3, #0
 800b1c0:	d101      	bne.n	800b1c6 <HAL_TIM_Base_Init+0x12>
 800b1c2:	2301      	movs	r3, #1
 800b1c4:	e04a      	b.n	800b25c <HAL_TIM_Base_Init+0xa8>
 800b1c6:	687b      	ldr	r3, [r7, #4]
 800b1c8:	223d      	movs	r2, #61	@ 0x3d
 800b1ca:	5c9b      	ldrb	r3, [r3, r2]
 800b1cc:	b2db      	uxtb	r3, r3
 800b1ce:	2b00      	cmp	r3, #0
 800b1d0:	d107      	bne.n	800b1e2 <HAL_TIM_Base_Init+0x2e>
 800b1d2:	687b      	ldr	r3, [r7, #4]
 800b1d4:	223c      	movs	r2, #60	@ 0x3c
 800b1d6:	2100      	movs	r1, #0
 800b1d8:	5499      	strb	r1, [r3, r2]
 800b1da:	687b      	ldr	r3, [r7, #4]
 800b1dc:	0018      	movs	r0, r3
 800b1de:	f7fb fb15 	bl	800680c <HAL_TIM_Base_MspInit>
 800b1e2:	687b      	ldr	r3, [r7, #4]
 800b1e4:	223d      	movs	r2, #61	@ 0x3d
 800b1e6:	2102      	movs	r1, #2
 800b1e8:	5499      	strb	r1, [r3, r2]
 800b1ea:	687b      	ldr	r3, [r7, #4]
 800b1ec:	681a      	ldr	r2, [r3, #0]
 800b1ee:	687b      	ldr	r3, [r7, #4]
 800b1f0:	3304      	adds	r3, #4
 800b1f2:	0019      	movs	r1, r3
 800b1f4:	0010      	movs	r0, r2
 800b1f6:	f000 fa63 	bl	800b6c0 <TIM_Base_SetConfig>
 800b1fa:	687b      	ldr	r3, [r7, #4]
 800b1fc:	2248      	movs	r2, #72	@ 0x48
 800b1fe:	2101      	movs	r1, #1
 800b200:	5499      	strb	r1, [r3, r2]
 800b202:	687b      	ldr	r3, [r7, #4]
 800b204:	223e      	movs	r2, #62	@ 0x3e
 800b206:	2101      	movs	r1, #1
 800b208:	5499      	strb	r1, [r3, r2]
 800b20a:	687b      	ldr	r3, [r7, #4]
 800b20c:	223f      	movs	r2, #63	@ 0x3f
 800b20e:	2101      	movs	r1, #1
 800b210:	5499      	strb	r1, [r3, r2]
 800b212:	687b      	ldr	r3, [r7, #4]
 800b214:	2240      	movs	r2, #64	@ 0x40
 800b216:	2101      	movs	r1, #1
 800b218:	5499      	strb	r1, [r3, r2]
 800b21a:	687b      	ldr	r3, [r7, #4]
 800b21c:	2241      	movs	r2, #65	@ 0x41
 800b21e:	2101      	movs	r1, #1
 800b220:	5499      	strb	r1, [r3, r2]
 800b222:	687b      	ldr	r3, [r7, #4]
 800b224:	2242      	movs	r2, #66	@ 0x42
 800b226:	2101      	movs	r1, #1
 800b228:	5499      	strb	r1, [r3, r2]
 800b22a:	687b      	ldr	r3, [r7, #4]
 800b22c:	2243      	movs	r2, #67	@ 0x43
 800b22e:	2101      	movs	r1, #1
 800b230:	5499      	strb	r1, [r3, r2]
 800b232:	687b      	ldr	r3, [r7, #4]
 800b234:	2244      	movs	r2, #68	@ 0x44
 800b236:	2101      	movs	r1, #1
 800b238:	5499      	strb	r1, [r3, r2]
 800b23a:	687b      	ldr	r3, [r7, #4]
 800b23c:	2245      	movs	r2, #69	@ 0x45
 800b23e:	2101      	movs	r1, #1
 800b240:	5499      	strb	r1, [r3, r2]
 800b242:	687b      	ldr	r3, [r7, #4]
 800b244:	2246      	movs	r2, #70	@ 0x46
 800b246:	2101      	movs	r1, #1
 800b248:	5499      	strb	r1, [r3, r2]
 800b24a:	687b      	ldr	r3, [r7, #4]
 800b24c:	2247      	movs	r2, #71	@ 0x47
 800b24e:	2101      	movs	r1, #1
 800b250:	5499      	strb	r1, [r3, r2]
 800b252:	687b      	ldr	r3, [r7, #4]
 800b254:	223d      	movs	r2, #61	@ 0x3d
 800b256:	2101      	movs	r1, #1
 800b258:	5499      	strb	r1, [r3, r2]
 800b25a:	2300      	movs	r3, #0
 800b25c:	0018      	movs	r0, r3
 800b25e:	46bd      	mov	sp, r7
 800b260:	b002      	add	sp, #8
 800b262:	bd80      	pop	{r7, pc}

0800b264 <HAL_TIM_PWM_Init>:
 800b264:	b580      	push	{r7, lr}
 800b266:	b082      	sub	sp, #8
 800b268:	af00      	add	r7, sp, #0
 800b26a:	6078      	str	r0, [r7, #4]
 800b26c:	687b      	ldr	r3, [r7, #4]
 800b26e:	2b00      	cmp	r3, #0
 800b270:	d101      	bne.n	800b276 <HAL_TIM_PWM_Init+0x12>
 800b272:	2301      	movs	r3, #1
 800b274:	e04a      	b.n	800b30c <HAL_TIM_PWM_Init+0xa8>
 800b276:	687b      	ldr	r3, [r7, #4]
 800b278:	223d      	movs	r2, #61	@ 0x3d
 800b27a:	5c9b      	ldrb	r3, [r3, r2]
 800b27c:	b2db      	uxtb	r3, r3
 800b27e:	2b00      	cmp	r3, #0
 800b280:	d107      	bne.n	800b292 <HAL_TIM_PWM_Init+0x2e>
 800b282:	687b      	ldr	r3, [r7, #4]
 800b284:	223c      	movs	r2, #60	@ 0x3c
 800b286:	2100      	movs	r1, #0
 800b288:	5499      	strb	r1, [r3, r2]
 800b28a:	687b      	ldr	r3, [r7, #4]
 800b28c:	0018      	movs	r0, r3
 800b28e:	f7fb faa1 	bl	80067d4 <HAL_TIM_PWM_MspInit>
 800b292:	687b      	ldr	r3, [r7, #4]
 800b294:	223d      	movs	r2, #61	@ 0x3d
 800b296:	2102      	movs	r1, #2
 800b298:	5499      	strb	r1, [r3, r2]
 800b29a:	687b      	ldr	r3, [r7, #4]
 800b29c:	681a      	ldr	r2, [r3, #0]
 800b29e:	687b      	ldr	r3, [r7, #4]
 800b2a0:	3304      	adds	r3, #4
 800b2a2:	0019      	movs	r1, r3
 800b2a4:	0010      	movs	r0, r2
 800b2a6:	f000 fa0b 	bl	800b6c0 <TIM_Base_SetConfig>
 800b2aa:	687b      	ldr	r3, [r7, #4]
 800b2ac:	2248      	movs	r2, #72	@ 0x48
 800b2ae:	2101      	movs	r1, #1
 800b2b0:	5499      	strb	r1, [r3, r2]
 800b2b2:	687b      	ldr	r3, [r7, #4]
 800b2b4:	223e      	movs	r2, #62	@ 0x3e
 800b2b6:	2101      	movs	r1, #1
 800b2b8:	5499      	strb	r1, [r3, r2]
 800b2ba:	687b      	ldr	r3, [r7, #4]
 800b2bc:	223f      	movs	r2, #63	@ 0x3f
 800b2be:	2101      	movs	r1, #1
 800b2c0:	5499      	strb	r1, [r3, r2]
 800b2c2:	687b      	ldr	r3, [r7, #4]
 800b2c4:	2240      	movs	r2, #64	@ 0x40
 800b2c6:	2101      	movs	r1, #1
 800b2c8:	5499      	strb	r1, [r3, r2]
 800b2ca:	687b      	ldr	r3, [r7, #4]
 800b2cc:	2241      	movs	r2, #65	@ 0x41
 800b2ce:	2101      	movs	r1, #1
 800b2d0:	5499      	strb	r1, [r3, r2]
 800b2d2:	687b      	ldr	r3, [r7, #4]
 800b2d4:	2242      	movs	r2, #66	@ 0x42
 800b2d6:	2101      	movs	r1, #1
 800b2d8:	5499      	strb	r1, [r3, r2]
 800b2da:	687b      	ldr	r3, [r7, #4]
 800b2dc:	2243      	movs	r2, #67	@ 0x43
 800b2de:	2101      	movs	r1, #1
 800b2e0:	5499      	strb	r1, [r3, r2]
 800b2e2:	687b      	ldr	r3, [r7, #4]
 800b2e4:	2244      	movs	r2, #68	@ 0x44
 800b2e6:	2101      	movs	r1, #1
 800b2e8:	5499      	strb	r1, [r3, r2]
 800b2ea:	687b      	ldr	r3, [r7, #4]
 800b2ec:	2245      	movs	r2, #69	@ 0x45
 800b2ee:	2101      	movs	r1, #1
 800b2f0:	5499      	strb	r1, [r3, r2]
 800b2f2:	687b      	ldr	r3, [r7, #4]
 800b2f4:	2246      	movs	r2, #70	@ 0x46
 800b2f6:	2101      	movs	r1, #1
 800b2f8:	5499      	strb	r1, [r3, r2]
 800b2fa:	687b      	ldr	r3, [r7, #4]
 800b2fc:	2247      	movs	r2, #71	@ 0x47
 800b2fe:	2101      	movs	r1, #1
 800b300:	5499      	strb	r1, [r3, r2]
 800b302:	687b      	ldr	r3, [r7, #4]
 800b304:	223d      	movs	r2, #61	@ 0x3d
 800b306:	2101      	movs	r1, #1
 800b308:	5499      	strb	r1, [r3, r2]
 800b30a:	2300      	movs	r3, #0
 800b30c:	0018      	movs	r0, r3
 800b30e:	46bd      	mov	sp, r7
 800b310:	b002      	add	sp, #8
 800b312:	bd80      	pop	{r7, pc}

0800b314 <HAL_TIM_PWM_ConfigChannel>:
 800b314:	b580      	push	{r7, lr}
 800b316:	b086      	sub	sp, #24
 800b318:	af00      	add	r7, sp, #0
 800b31a:	60f8      	str	r0, [r7, #12]
 800b31c:	60b9      	str	r1, [r7, #8]
 800b31e:	607a      	str	r2, [r7, #4]
 800b320:	2317      	movs	r3, #23
 800b322:	18fb      	adds	r3, r7, r3
 800b324:	2200      	movs	r2, #0
 800b326:	701a      	strb	r2, [r3, #0]
 800b328:	68fb      	ldr	r3, [r7, #12]
 800b32a:	223c      	movs	r2, #60	@ 0x3c
 800b32c:	5c9b      	ldrb	r3, [r3, r2]
 800b32e:	2b01      	cmp	r3, #1
 800b330:	d101      	bne.n	800b336 <HAL_TIM_PWM_ConfigChannel+0x22>
 800b332:	2302      	movs	r3, #2
 800b334:	e0e5      	b.n	800b502 <HAL_TIM_PWM_ConfigChannel+0x1ee>
 800b336:	68fb      	ldr	r3, [r7, #12]
 800b338:	223c      	movs	r2, #60	@ 0x3c
 800b33a:	2101      	movs	r1, #1
 800b33c:	5499      	strb	r1, [r3, r2]
 800b33e:	687b      	ldr	r3, [r7, #4]
 800b340:	2b14      	cmp	r3, #20
 800b342:	d900      	bls.n	800b346 <HAL_TIM_PWM_ConfigChannel+0x32>
 800b344:	e0d1      	b.n	800b4ea <HAL_TIM_PWM_ConfigChannel+0x1d6>
 800b346:	687b      	ldr	r3, [r7, #4]
 800b348:	009a      	lsls	r2, r3, #2
 800b34a:	4b70      	ldr	r3, [pc, #448]	@ (800b50c <HAL_TIM_PWM_ConfigChannel+0x1f8>)
 800b34c:	18d3      	adds	r3, r2, r3
 800b34e:	681b      	ldr	r3, [r3, #0]
 800b350:	469f      	mov	pc, r3
 800b352:	68fb      	ldr	r3, [r7, #12]
 800b354:	681b      	ldr	r3, [r3, #0]
 800b356:	68ba      	ldr	r2, [r7, #8]
 800b358:	0011      	movs	r1, r2
 800b35a:	0018      	movs	r0, r3
 800b35c:	f000 fa48 	bl	800b7f0 <TIM_OC1_SetConfig>
 800b360:	68fb      	ldr	r3, [r7, #12]
 800b362:	681b      	ldr	r3, [r3, #0]
 800b364:	699a      	ldr	r2, [r3, #24]
 800b366:	68fb      	ldr	r3, [r7, #12]
 800b368:	681b      	ldr	r3, [r3, #0]
 800b36a:	2108      	movs	r1, #8
 800b36c:	430a      	orrs	r2, r1
 800b36e:	619a      	str	r2, [r3, #24]
 800b370:	68fb      	ldr	r3, [r7, #12]
 800b372:	681b      	ldr	r3, [r3, #0]
 800b374:	699a      	ldr	r2, [r3, #24]
 800b376:	68fb      	ldr	r3, [r7, #12]
 800b378:	681b      	ldr	r3, [r3, #0]
 800b37a:	2104      	movs	r1, #4
 800b37c:	438a      	bics	r2, r1
 800b37e:	619a      	str	r2, [r3, #24]
 800b380:	68fb      	ldr	r3, [r7, #12]
 800b382:	681b      	ldr	r3, [r3, #0]
 800b384:	6999      	ldr	r1, [r3, #24]
 800b386:	68bb      	ldr	r3, [r7, #8]
 800b388:	691a      	ldr	r2, [r3, #16]
 800b38a:	68fb      	ldr	r3, [r7, #12]
 800b38c:	681b      	ldr	r3, [r3, #0]
 800b38e:	430a      	orrs	r2, r1
 800b390:	619a      	str	r2, [r3, #24]
 800b392:	e0af      	b.n	800b4f4 <HAL_TIM_PWM_ConfigChannel+0x1e0>
 800b394:	68fb      	ldr	r3, [r7, #12]
 800b396:	681b      	ldr	r3, [r3, #0]
 800b398:	68ba      	ldr	r2, [r7, #8]
 800b39a:	0011      	movs	r1, r2
 800b39c:	0018      	movs	r0, r3
 800b39e:	f000 fab1 	bl	800b904 <TIM_OC2_SetConfig>
 800b3a2:	68fb      	ldr	r3, [r7, #12]
 800b3a4:	681b      	ldr	r3, [r3, #0]
 800b3a6:	699a      	ldr	r2, [r3, #24]
 800b3a8:	68fb      	ldr	r3, [r7, #12]
 800b3aa:	681b      	ldr	r3, [r3, #0]
 800b3ac:	2180      	movs	r1, #128	@ 0x80
 800b3ae:	0109      	lsls	r1, r1, #4
 800b3b0:	430a      	orrs	r2, r1
 800b3b2:	619a      	str	r2, [r3, #24]
 800b3b4:	68fb      	ldr	r3, [r7, #12]
 800b3b6:	681b      	ldr	r3, [r3, #0]
 800b3b8:	699a      	ldr	r2, [r3, #24]
 800b3ba:	68fb      	ldr	r3, [r7, #12]
 800b3bc:	681b      	ldr	r3, [r3, #0]
 800b3be:	4954      	ldr	r1, [pc, #336]	@ (800b510 <HAL_TIM_PWM_ConfigChannel+0x1fc>)
 800b3c0:	400a      	ands	r2, r1
 800b3c2:	619a      	str	r2, [r3, #24]
 800b3c4:	68fb      	ldr	r3, [r7, #12]
 800b3c6:	681b      	ldr	r3, [r3, #0]
 800b3c8:	6999      	ldr	r1, [r3, #24]
 800b3ca:	68bb      	ldr	r3, [r7, #8]
 800b3cc:	691b      	ldr	r3, [r3, #16]
 800b3ce:	021a      	lsls	r2, r3, #8
 800b3d0:	68fb      	ldr	r3, [r7, #12]
 800b3d2:	681b      	ldr	r3, [r3, #0]
 800b3d4:	430a      	orrs	r2, r1
 800b3d6:	619a      	str	r2, [r3, #24]
 800b3d8:	e08c      	b.n	800b4f4 <HAL_TIM_PWM_ConfigChannel+0x1e0>
 800b3da:	68fb      	ldr	r3, [r7, #12]
 800b3dc:	681b      	ldr	r3, [r3, #0]
 800b3de:	68ba      	ldr	r2, [r7, #8]
 800b3e0:	0011      	movs	r1, r2
 800b3e2:	0018      	movs	r0, r3
 800b3e4:	f000 fb12 	bl	800ba0c <TIM_OC3_SetConfig>
 800b3e8:	68fb      	ldr	r3, [r7, #12]
 800b3ea:	681b      	ldr	r3, [r3, #0]
 800b3ec:	69da      	ldr	r2, [r3, #28]
 800b3ee:	68fb      	ldr	r3, [r7, #12]
 800b3f0:	681b      	ldr	r3, [r3, #0]
 800b3f2:	2108      	movs	r1, #8
 800b3f4:	430a      	orrs	r2, r1
 800b3f6:	61da      	str	r2, [r3, #28]
 800b3f8:	68fb      	ldr	r3, [r7, #12]
 800b3fa:	681b      	ldr	r3, [r3, #0]
 800b3fc:	69da      	ldr	r2, [r3, #28]
 800b3fe:	68fb      	ldr	r3, [r7, #12]
 800b400:	681b      	ldr	r3, [r3, #0]
 800b402:	2104      	movs	r1, #4
 800b404:	438a      	bics	r2, r1
 800b406:	61da      	str	r2, [r3, #28]
 800b408:	68fb      	ldr	r3, [r7, #12]
 800b40a:	681b      	ldr	r3, [r3, #0]
 800b40c:	69d9      	ldr	r1, [r3, #28]
 800b40e:	68bb      	ldr	r3, [r7, #8]
 800b410:	691a      	ldr	r2, [r3, #16]
 800b412:	68fb      	ldr	r3, [r7, #12]
 800b414:	681b      	ldr	r3, [r3, #0]
 800b416:	430a      	orrs	r2, r1
 800b418:	61da      	str	r2, [r3, #28]
 800b41a:	e06b      	b.n	800b4f4 <HAL_TIM_PWM_ConfigChannel+0x1e0>
 800b41c:	68fb      	ldr	r3, [r7, #12]
 800b41e:	681b      	ldr	r3, [r3, #0]
 800b420:	68ba      	ldr	r2, [r7, #8]
 800b422:	0011      	movs	r1, r2
 800b424:	0018      	movs	r0, r3
 800b426:	f000 fb79 	bl	800bb1c <TIM_OC4_SetConfig>
 800b42a:	68fb      	ldr	r3, [r7, #12]
 800b42c:	681b      	ldr	r3, [r3, #0]
 800b42e:	69da      	ldr	r2, [r3, #28]
 800b430:	68fb      	ldr	r3, [r7, #12]
 800b432:	681b      	ldr	r3, [r3, #0]
 800b434:	2180      	movs	r1, #128	@ 0x80
 800b436:	0109      	lsls	r1, r1, #4
 800b438:	430a      	orrs	r2, r1
 800b43a:	61da      	str	r2, [r3, #28]
 800b43c:	68fb      	ldr	r3, [r7, #12]
 800b43e:	681b      	ldr	r3, [r3, #0]
 800b440:	69da      	ldr	r2, [r3, #28]
 800b442:	68fb      	ldr	r3, [r7, #12]
 800b444:	681b      	ldr	r3, [r3, #0]
 800b446:	4932      	ldr	r1, [pc, #200]	@ (800b510 <HAL_TIM_PWM_ConfigChannel+0x1fc>)
 800b448:	400a      	ands	r2, r1
 800b44a:	61da      	str	r2, [r3, #28]
 800b44c:	68fb      	ldr	r3, [r7, #12]
 800b44e:	681b      	ldr	r3, [r3, #0]
 800b450:	69d9      	ldr	r1, [r3, #28]
 800b452:	68bb      	ldr	r3, [r7, #8]
 800b454:	691b      	ldr	r3, [r3, #16]
 800b456:	021a      	lsls	r2, r3, #8
 800b458:	68fb      	ldr	r3, [r7, #12]
 800b45a:	681b      	ldr	r3, [r3, #0]
 800b45c:	430a      	orrs	r2, r1
 800b45e:	61da      	str	r2, [r3, #28]
 800b460:	e048      	b.n	800b4f4 <HAL_TIM_PWM_ConfigChannel+0x1e0>
 800b462:	68fb      	ldr	r3, [r7, #12]
 800b464:	681b      	ldr	r3, [r3, #0]
 800b466:	68ba      	ldr	r2, [r7, #8]
 800b468:	0011      	movs	r1, r2
 800b46a:	0018      	movs	r0, r3
 800b46c:	f000 fbc0 	bl	800bbf0 <TIM_OC5_SetConfig>
 800b470:	68fb      	ldr	r3, [r7, #12]
 800b472:	681b      	ldr	r3, [r3, #0]
 800b474:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 800b476:	68fb      	ldr	r3, [r7, #12]
 800b478:	681b      	ldr	r3, [r3, #0]
 800b47a:	2108      	movs	r1, #8
 800b47c:	430a      	orrs	r2, r1
 800b47e:	655a      	str	r2, [r3, #84]	@ 0x54
 800b480:	68fb      	ldr	r3, [r7, #12]
 800b482:	681b      	ldr	r3, [r3, #0]
 800b484:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 800b486:	68fb      	ldr	r3, [r7, #12]
 800b488:	681b      	ldr	r3, [r3, #0]
 800b48a:	2104      	movs	r1, #4
 800b48c:	438a      	bics	r2, r1
 800b48e:	655a      	str	r2, [r3, #84]	@ 0x54
 800b490:	68fb      	ldr	r3, [r7, #12]
 800b492:	681b      	ldr	r3, [r3, #0]
 800b494:	6d59      	ldr	r1, [r3, #84]	@ 0x54
 800b496:	68bb      	ldr	r3, [r7, #8]
 800b498:	691a      	ldr	r2, [r3, #16]
 800b49a:	68fb      	ldr	r3, [r7, #12]
 800b49c:	681b      	ldr	r3, [r3, #0]
 800b49e:	430a      	orrs	r2, r1
 800b4a0:	655a      	str	r2, [r3, #84]	@ 0x54
 800b4a2:	e027      	b.n	800b4f4 <HAL_TIM_PWM_ConfigChannel+0x1e0>
 800b4a4:	68fb      	ldr	r3, [r7, #12]
 800b4a6:	681b      	ldr	r3, [r3, #0]
 800b4a8:	68ba      	ldr	r2, [r7, #8]
 800b4aa:	0011      	movs	r1, r2
 800b4ac:	0018      	movs	r0, r3
 800b4ae:	f000 fbff 	bl	800bcb0 <TIM_OC6_SetConfig>
 800b4b2:	68fb      	ldr	r3, [r7, #12]
 800b4b4:	681b      	ldr	r3, [r3, #0]
 800b4b6:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 800b4b8:	68fb      	ldr	r3, [r7, #12]
 800b4ba:	681b      	ldr	r3, [r3, #0]
 800b4bc:	2180      	movs	r1, #128	@ 0x80
 800b4be:	0109      	lsls	r1, r1, #4
 800b4c0:	430a      	orrs	r2, r1
 800b4c2:	655a      	str	r2, [r3, #84]	@ 0x54
 800b4c4:	68fb      	ldr	r3, [r7, #12]
 800b4c6:	681b      	ldr	r3, [r3, #0]
 800b4c8:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 800b4ca:	68fb      	ldr	r3, [r7, #12]
 800b4cc:	681b      	ldr	r3, [r3, #0]
 800b4ce:	4910      	ldr	r1, [pc, #64]	@ (800b510 <HAL_TIM_PWM_ConfigChannel+0x1fc>)
 800b4d0:	400a      	ands	r2, r1
 800b4d2:	655a      	str	r2, [r3, #84]	@ 0x54
 800b4d4:	68fb      	ldr	r3, [r7, #12]
 800b4d6:	681b      	ldr	r3, [r3, #0]
 800b4d8:	6d59      	ldr	r1, [r3, #84]	@ 0x54
 800b4da:	68bb      	ldr	r3, [r7, #8]
 800b4dc:	691b      	ldr	r3, [r3, #16]
 800b4de:	021a      	lsls	r2, r3, #8
 800b4e0:	68fb      	ldr	r3, [r7, #12]
 800b4e2:	681b      	ldr	r3, [r3, #0]
 800b4e4:	430a      	orrs	r2, r1
 800b4e6:	655a      	str	r2, [r3, #84]	@ 0x54
 800b4e8:	e004      	b.n	800b4f4 <HAL_TIM_PWM_ConfigChannel+0x1e0>
 800b4ea:	2317      	movs	r3, #23
 800b4ec:	18fb      	adds	r3, r7, r3
 800b4ee:	2201      	movs	r2, #1
 800b4f0:	701a      	strb	r2, [r3, #0]
 800b4f2:	46c0      	nop			@ (mov r8, r8)
 800b4f4:	68fb      	ldr	r3, [r7, #12]
 800b4f6:	223c      	movs	r2, #60	@ 0x3c
 800b4f8:	2100      	movs	r1, #0
 800b4fa:	5499      	strb	r1, [r3, r2]
 800b4fc:	2317      	movs	r3, #23
 800b4fe:	18fb      	adds	r3, r7, r3
 800b500:	781b      	ldrb	r3, [r3, #0]
 800b502:	0018      	movs	r0, r3
 800b504:	46bd      	mov	sp, r7
 800b506:	b006      	add	sp, #24
 800b508:	bd80      	pop	{r7, pc}
 800b50a:	46c0      	nop			@ (mov r8, r8)
 800b50c:	0800c3f8 	.word	0x0800c3f8
 800b510:	fffffbff 	.word	0xfffffbff

0800b514 <HAL_TIM_ConfigClockSource>:
 800b514:	b580      	push	{r7, lr}
 800b516:	b084      	sub	sp, #16
 800b518:	af00      	add	r7, sp, #0
 800b51a:	6078      	str	r0, [r7, #4]
 800b51c:	6039      	str	r1, [r7, #0]
 800b51e:	230f      	movs	r3, #15
 800b520:	18fb      	adds	r3, r7, r3
 800b522:	2200      	movs	r2, #0
 800b524:	701a      	strb	r2, [r3, #0]
 800b526:	687b      	ldr	r3, [r7, #4]
 800b528:	223c      	movs	r2, #60	@ 0x3c
 800b52a:	5c9b      	ldrb	r3, [r3, r2]
 800b52c:	2b01      	cmp	r3, #1
 800b52e:	d101      	bne.n	800b534 <HAL_TIM_ConfigClockSource+0x20>
 800b530:	2302      	movs	r3, #2
 800b532:	e0bc      	b.n	800b6ae <HAL_TIM_ConfigClockSource+0x19a>
 800b534:	687b      	ldr	r3, [r7, #4]
 800b536:	223c      	movs	r2, #60	@ 0x3c
 800b538:	2101      	movs	r1, #1
 800b53a:	5499      	strb	r1, [r3, r2]
 800b53c:	687b      	ldr	r3, [r7, #4]
 800b53e:	223d      	movs	r2, #61	@ 0x3d
 800b540:	2102      	movs	r1, #2
 800b542:	5499      	strb	r1, [r3, r2]
 800b544:	687b      	ldr	r3, [r7, #4]
 800b546:	681b      	ldr	r3, [r3, #0]
 800b548:	689b      	ldr	r3, [r3, #8]
 800b54a:	60bb      	str	r3, [r7, #8]
 800b54c:	68bb      	ldr	r3, [r7, #8]
 800b54e:	4a5a      	ldr	r2, [pc, #360]	@ (800b6b8 <HAL_TIM_ConfigClockSource+0x1a4>)
 800b550:	4013      	ands	r3, r2
 800b552:	60bb      	str	r3, [r7, #8]
 800b554:	68bb      	ldr	r3, [r7, #8]
 800b556:	4a59      	ldr	r2, [pc, #356]	@ (800b6bc <HAL_TIM_ConfigClockSource+0x1a8>)
 800b558:	4013      	ands	r3, r2
 800b55a:	60bb      	str	r3, [r7, #8]
 800b55c:	687b      	ldr	r3, [r7, #4]
 800b55e:	681b      	ldr	r3, [r3, #0]
 800b560:	68ba      	ldr	r2, [r7, #8]
 800b562:	609a      	str	r2, [r3, #8]
 800b564:	683b      	ldr	r3, [r7, #0]
 800b566:	681b      	ldr	r3, [r3, #0]
 800b568:	2280      	movs	r2, #128	@ 0x80
 800b56a:	0192      	lsls	r2, r2, #6
 800b56c:	4293      	cmp	r3, r2
 800b56e:	d040      	beq.n	800b5f2 <HAL_TIM_ConfigClockSource+0xde>
 800b570:	2280      	movs	r2, #128	@ 0x80
 800b572:	0192      	lsls	r2, r2, #6
 800b574:	4293      	cmp	r3, r2
 800b576:	d900      	bls.n	800b57a <HAL_TIM_ConfigClockSource+0x66>
 800b578:	e088      	b.n	800b68c <HAL_TIM_ConfigClockSource+0x178>
 800b57a:	2280      	movs	r2, #128	@ 0x80
 800b57c:	0152      	lsls	r2, r2, #5
 800b57e:	4293      	cmp	r3, r2
 800b580:	d100      	bne.n	800b584 <HAL_TIM_ConfigClockSource+0x70>
 800b582:	e088      	b.n	800b696 <HAL_TIM_ConfigClockSource+0x182>
 800b584:	2280      	movs	r2, #128	@ 0x80
 800b586:	0152      	lsls	r2, r2, #5
 800b588:	4293      	cmp	r3, r2
 800b58a:	d900      	bls.n	800b58e <HAL_TIM_ConfigClockSource+0x7a>
 800b58c:	e07e      	b.n	800b68c <HAL_TIM_ConfigClockSource+0x178>
 800b58e:	2b70      	cmp	r3, #112	@ 0x70
 800b590:	d018      	beq.n	800b5c4 <HAL_TIM_ConfigClockSource+0xb0>
 800b592:	d900      	bls.n	800b596 <HAL_TIM_ConfigClockSource+0x82>
 800b594:	e07a      	b.n	800b68c <HAL_TIM_ConfigClockSource+0x178>
 800b596:	2b60      	cmp	r3, #96	@ 0x60
 800b598:	d04f      	beq.n	800b63a <HAL_TIM_ConfigClockSource+0x126>
 800b59a:	d900      	bls.n	800b59e <HAL_TIM_ConfigClockSource+0x8a>
 800b59c:	e076      	b.n	800b68c <HAL_TIM_ConfigClockSource+0x178>
 800b59e:	2b50      	cmp	r3, #80	@ 0x50
 800b5a0:	d03b      	beq.n	800b61a <HAL_TIM_ConfigClockSource+0x106>
 800b5a2:	d900      	bls.n	800b5a6 <HAL_TIM_ConfigClockSource+0x92>
 800b5a4:	e072      	b.n	800b68c <HAL_TIM_ConfigClockSource+0x178>
 800b5a6:	2b40      	cmp	r3, #64	@ 0x40
 800b5a8:	d057      	beq.n	800b65a <HAL_TIM_ConfigClockSource+0x146>
 800b5aa:	d900      	bls.n	800b5ae <HAL_TIM_ConfigClockSource+0x9a>
 800b5ac:	e06e      	b.n	800b68c <HAL_TIM_ConfigClockSource+0x178>
 800b5ae:	2b30      	cmp	r3, #48	@ 0x30
 800b5b0:	d063      	beq.n	800b67a <HAL_TIM_ConfigClockSource+0x166>
 800b5b2:	d86b      	bhi.n	800b68c <HAL_TIM_ConfigClockSource+0x178>
 800b5b4:	2b20      	cmp	r3, #32
 800b5b6:	d060      	beq.n	800b67a <HAL_TIM_ConfigClockSource+0x166>
 800b5b8:	d868      	bhi.n	800b68c <HAL_TIM_ConfigClockSource+0x178>
 800b5ba:	2b00      	cmp	r3, #0
 800b5bc:	d05d      	beq.n	800b67a <HAL_TIM_ConfigClockSource+0x166>
 800b5be:	2b10      	cmp	r3, #16
 800b5c0:	d05b      	beq.n	800b67a <HAL_TIM_ConfigClockSource+0x166>
 800b5c2:	e063      	b.n	800b68c <HAL_TIM_ConfigClockSource+0x178>
 800b5c4:	687b      	ldr	r3, [r7, #4]
 800b5c6:	6818      	ldr	r0, [r3, #0]
 800b5c8:	683b      	ldr	r3, [r7, #0]
 800b5ca:	6899      	ldr	r1, [r3, #8]
 800b5cc:	683b      	ldr	r3, [r7, #0]
 800b5ce:	685a      	ldr	r2, [r3, #4]
 800b5d0:	683b      	ldr	r3, [r7, #0]
 800b5d2:	68db      	ldr	r3, [r3, #12]
 800b5d4:	f000 fc4c 	bl	800be70 <TIM_ETR_SetConfig>
 800b5d8:	687b      	ldr	r3, [r7, #4]
 800b5da:	681b      	ldr	r3, [r3, #0]
 800b5dc:	689b      	ldr	r3, [r3, #8]
 800b5de:	60bb      	str	r3, [r7, #8]
 800b5e0:	68bb      	ldr	r3, [r7, #8]
 800b5e2:	2277      	movs	r2, #119	@ 0x77
 800b5e4:	4313      	orrs	r3, r2
 800b5e6:	60bb      	str	r3, [r7, #8]
 800b5e8:	687b      	ldr	r3, [r7, #4]
 800b5ea:	681b      	ldr	r3, [r3, #0]
 800b5ec:	68ba      	ldr	r2, [r7, #8]
 800b5ee:	609a      	str	r2, [r3, #8]
 800b5f0:	e052      	b.n	800b698 <HAL_TIM_ConfigClockSource+0x184>
 800b5f2:	687b      	ldr	r3, [r7, #4]
 800b5f4:	6818      	ldr	r0, [r3, #0]
 800b5f6:	683b      	ldr	r3, [r7, #0]
 800b5f8:	6899      	ldr	r1, [r3, #8]
 800b5fa:	683b      	ldr	r3, [r7, #0]
 800b5fc:	685a      	ldr	r2, [r3, #4]
 800b5fe:	683b      	ldr	r3, [r7, #0]
 800b600:	68db      	ldr	r3, [r3, #12]
 800b602:	f000 fc35 	bl	800be70 <TIM_ETR_SetConfig>
 800b606:	687b      	ldr	r3, [r7, #4]
 800b608:	681b      	ldr	r3, [r3, #0]
 800b60a:	689a      	ldr	r2, [r3, #8]
 800b60c:	687b      	ldr	r3, [r7, #4]
 800b60e:	681b      	ldr	r3, [r3, #0]
 800b610:	2180      	movs	r1, #128	@ 0x80
 800b612:	01c9      	lsls	r1, r1, #7
 800b614:	430a      	orrs	r2, r1
 800b616:	609a      	str	r2, [r3, #8]
 800b618:	e03e      	b.n	800b698 <HAL_TIM_ConfigClockSource+0x184>
 800b61a:	687b      	ldr	r3, [r7, #4]
 800b61c:	6818      	ldr	r0, [r3, #0]
 800b61e:	683b      	ldr	r3, [r7, #0]
 800b620:	6859      	ldr	r1, [r3, #4]
 800b622:	683b      	ldr	r3, [r7, #0]
 800b624:	68db      	ldr	r3, [r3, #12]
 800b626:	001a      	movs	r2, r3
 800b628:	f000 fba6 	bl	800bd78 <TIM_TI1_ConfigInputStage>
 800b62c:	687b      	ldr	r3, [r7, #4]
 800b62e:	681b      	ldr	r3, [r3, #0]
 800b630:	2150      	movs	r1, #80	@ 0x50
 800b632:	0018      	movs	r0, r3
 800b634:	f000 fc00 	bl	800be38 <TIM_ITRx_SetConfig>
 800b638:	e02e      	b.n	800b698 <HAL_TIM_ConfigClockSource+0x184>
 800b63a:	687b      	ldr	r3, [r7, #4]
 800b63c:	6818      	ldr	r0, [r3, #0]
 800b63e:	683b      	ldr	r3, [r7, #0]
 800b640:	6859      	ldr	r1, [r3, #4]
 800b642:	683b      	ldr	r3, [r7, #0]
 800b644:	68db      	ldr	r3, [r3, #12]
 800b646:	001a      	movs	r2, r3
 800b648:	f000 fbc4 	bl	800bdd4 <TIM_TI2_ConfigInputStage>
 800b64c:	687b      	ldr	r3, [r7, #4]
 800b64e:	681b      	ldr	r3, [r3, #0]
 800b650:	2160      	movs	r1, #96	@ 0x60
 800b652:	0018      	movs	r0, r3
 800b654:	f000 fbf0 	bl	800be38 <TIM_ITRx_SetConfig>
 800b658:	e01e      	b.n	800b698 <HAL_TIM_ConfigClockSource+0x184>
 800b65a:	687b      	ldr	r3, [r7, #4]
 800b65c:	6818      	ldr	r0, [r3, #0]
 800b65e:	683b      	ldr	r3, [r7, #0]
 800b660:	6859      	ldr	r1, [r3, #4]
 800b662:	683b      	ldr	r3, [r7, #0]
 800b664:	68db      	ldr	r3, [r3, #12]
 800b666:	001a      	movs	r2, r3
 800b668:	f000 fb86 	bl	800bd78 <TIM_TI1_ConfigInputStage>
 800b66c:	687b      	ldr	r3, [r7, #4]
 800b66e:	681b      	ldr	r3, [r3, #0]
 800b670:	2140      	movs	r1, #64	@ 0x40
 800b672:	0018      	movs	r0, r3
 800b674:	f000 fbe0 	bl	800be38 <TIM_ITRx_SetConfig>
 800b678:	e00e      	b.n	800b698 <HAL_TIM_ConfigClockSource+0x184>
 800b67a:	687b      	ldr	r3, [r7, #4]
 800b67c:	681a      	ldr	r2, [r3, #0]
 800b67e:	683b      	ldr	r3, [r7, #0]
 800b680:	681b      	ldr	r3, [r3, #0]
 800b682:	0019      	movs	r1, r3
 800b684:	0010      	movs	r0, r2
 800b686:	f000 fbd7 	bl	800be38 <TIM_ITRx_SetConfig>
 800b68a:	e005      	b.n	800b698 <HAL_TIM_ConfigClockSource+0x184>
 800b68c:	230f      	movs	r3, #15
 800b68e:	18fb      	adds	r3, r7, r3
 800b690:	2201      	movs	r2, #1
 800b692:	701a      	strb	r2, [r3, #0]
 800b694:	e000      	b.n	800b698 <HAL_TIM_ConfigClockSource+0x184>
 800b696:	46c0      	nop			@ (mov r8, r8)
 800b698:	687b      	ldr	r3, [r7, #4]
 800b69a:	223d      	movs	r2, #61	@ 0x3d
 800b69c:	2101      	movs	r1, #1
 800b69e:	5499      	strb	r1, [r3, r2]
 800b6a0:	687b      	ldr	r3, [r7, #4]
 800b6a2:	223c      	movs	r2, #60	@ 0x3c
 800b6a4:	2100      	movs	r1, #0
 800b6a6:	5499      	strb	r1, [r3, r2]
 800b6a8:	230f      	movs	r3, #15
 800b6aa:	18fb      	adds	r3, r7, r3
 800b6ac:	781b      	ldrb	r3, [r3, #0]
 800b6ae:	0018      	movs	r0, r3
 800b6b0:	46bd      	mov	sp, r7
 800b6b2:	b004      	add	sp, #16
 800b6b4:	bd80      	pop	{r7, pc}
 800b6b6:	46c0      	nop			@ (mov r8, r8)
 800b6b8:	ffceff88 	.word	0xffceff88
 800b6bc:	ffff00ff 	.word	0xffff00ff

0800b6c0 <TIM_Base_SetConfig>:
 800b6c0:	b580      	push	{r7, lr}
 800b6c2:	b084      	sub	sp, #16
 800b6c4:	af00      	add	r7, sp, #0
 800b6c6:	6078      	str	r0, [r7, #4]
 800b6c8:	6039      	str	r1, [r7, #0]
 800b6ca:	687b      	ldr	r3, [r7, #4]
 800b6cc:	681b      	ldr	r3, [r3, #0]
 800b6ce:	60fb      	str	r3, [r7, #12]
 800b6d0:	687b      	ldr	r3, [r7, #4]
 800b6d2:	4a3f      	ldr	r2, [pc, #252]	@ (800b7d0 <TIM_Base_SetConfig+0x110>)
 800b6d4:	4293      	cmp	r3, r2
 800b6d6:	d00c      	beq.n	800b6f2 <TIM_Base_SetConfig+0x32>
 800b6d8:	687a      	ldr	r2, [r7, #4]
 800b6da:	2380      	movs	r3, #128	@ 0x80
 800b6dc:	05db      	lsls	r3, r3, #23
 800b6de:	429a      	cmp	r2, r3
 800b6e0:	d007      	beq.n	800b6f2 <TIM_Base_SetConfig+0x32>
 800b6e2:	687b      	ldr	r3, [r7, #4]
 800b6e4:	4a3b      	ldr	r2, [pc, #236]	@ (800b7d4 <TIM_Base_SetConfig+0x114>)
 800b6e6:	4293      	cmp	r3, r2
 800b6e8:	d003      	beq.n	800b6f2 <TIM_Base_SetConfig+0x32>
 800b6ea:	687b      	ldr	r3, [r7, #4]
 800b6ec:	4a3a      	ldr	r2, [pc, #232]	@ (800b7d8 <TIM_Base_SetConfig+0x118>)
 800b6ee:	4293      	cmp	r3, r2
 800b6f0:	d108      	bne.n	800b704 <TIM_Base_SetConfig+0x44>
 800b6f2:	68fb      	ldr	r3, [r7, #12]
 800b6f4:	2270      	movs	r2, #112	@ 0x70
 800b6f6:	4393      	bics	r3, r2
 800b6f8:	60fb      	str	r3, [r7, #12]
 800b6fa:	683b      	ldr	r3, [r7, #0]
 800b6fc:	685b      	ldr	r3, [r3, #4]
 800b6fe:	68fa      	ldr	r2, [r7, #12]
 800b700:	4313      	orrs	r3, r2
 800b702:	60fb      	str	r3, [r7, #12]
 800b704:	687b      	ldr	r3, [r7, #4]
 800b706:	4a32      	ldr	r2, [pc, #200]	@ (800b7d0 <TIM_Base_SetConfig+0x110>)
 800b708:	4293      	cmp	r3, r2
 800b70a:	d01c      	beq.n	800b746 <TIM_Base_SetConfig+0x86>
 800b70c:	687a      	ldr	r2, [r7, #4]
 800b70e:	2380      	movs	r3, #128	@ 0x80
 800b710:	05db      	lsls	r3, r3, #23
 800b712:	429a      	cmp	r2, r3
 800b714:	d017      	beq.n	800b746 <TIM_Base_SetConfig+0x86>
 800b716:	687b      	ldr	r3, [r7, #4]
 800b718:	4a2e      	ldr	r2, [pc, #184]	@ (800b7d4 <TIM_Base_SetConfig+0x114>)
 800b71a:	4293      	cmp	r3, r2
 800b71c:	d013      	beq.n	800b746 <TIM_Base_SetConfig+0x86>
 800b71e:	687b      	ldr	r3, [r7, #4]
 800b720:	4a2d      	ldr	r2, [pc, #180]	@ (800b7d8 <TIM_Base_SetConfig+0x118>)
 800b722:	4293      	cmp	r3, r2
 800b724:	d00f      	beq.n	800b746 <TIM_Base_SetConfig+0x86>
 800b726:	687b      	ldr	r3, [r7, #4]
 800b728:	4a2c      	ldr	r2, [pc, #176]	@ (800b7dc <TIM_Base_SetConfig+0x11c>)
 800b72a:	4293      	cmp	r3, r2
 800b72c:	d00b      	beq.n	800b746 <TIM_Base_SetConfig+0x86>
 800b72e:	687b      	ldr	r3, [r7, #4]
 800b730:	4a2b      	ldr	r2, [pc, #172]	@ (800b7e0 <TIM_Base_SetConfig+0x120>)
 800b732:	4293      	cmp	r3, r2
 800b734:	d007      	beq.n	800b746 <TIM_Base_SetConfig+0x86>
 800b736:	687b      	ldr	r3, [r7, #4]
 800b738:	4a2a      	ldr	r2, [pc, #168]	@ (800b7e4 <TIM_Base_SetConfig+0x124>)
 800b73a:	4293      	cmp	r3, r2
 800b73c:	d003      	beq.n	800b746 <TIM_Base_SetConfig+0x86>
 800b73e:	687b      	ldr	r3, [r7, #4]
 800b740:	4a29      	ldr	r2, [pc, #164]	@ (800b7e8 <TIM_Base_SetConfig+0x128>)
 800b742:	4293      	cmp	r3, r2
 800b744:	d108      	bne.n	800b758 <TIM_Base_SetConfig+0x98>
 800b746:	68fb      	ldr	r3, [r7, #12]
 800b748:	4a28      	ldr	r2, [pc, #160]	@ (800b7ec <TIM_Base_SetConfig+0x12c>)
 800b74a:	4013      	ands	r3, r2
 800b74c:	60fb      	str	r3, [r7, #12]
 800b74e:	683b      	ldr	r3, [r7, #0]
 800b750:	68db      	ldr	r3, [r3, #12]
 800b752:	68fa      	ldr	r2, [r7, #12]
 800b754:	4313      	orrs	r3, r2
 800b756:	60fb      	str	r3, [r7, #12]
 800b758:	68fb      	ldr	r3, [r7, #12]
 800b75a:	2280      	movs	r2, #128	@ 0x80
 800b75c:	4393      	bics	r3, r2
 800b75e:	001a      	movs	r2, r3
 800b760:	683b      	ldr	r3, [r7, #0]
 800b762:	695b      	ldr	r3, [r3, #20]
 800b764:	4313      	orrs	r3, r2
 800b766:	60fb      	str	r3, [r7, #12]
 800b768:	687b      	ldr	r3, [r7, #4]
 800b76a:	68fa      	ldr	r2, [r7, #12]
 800b76c:	601a      	str	r2, [r3, #0]
 800b76e:	683b      	ldr	r3, [r7, #0]
 800b770:	689a      	ldr	r2, [r3, #8]
 800b772:	687b      	ldr	r3, [r7, #4]
 800b774:	62da      	str	r2, [r3, #44]	@ 0x2c
 800b776:	683b      	ldr	r3, [r7, #0]
 800b778:	681a      	ldr	r2, [r3, #0]
 800b77a:	687b      	ldr	r3, [r7, #4]
 800b77c:	629a      	str	r2, [r3, #40]	@ 0x28
 800b77e:	687b      	ldr	r3, [r7, #4]
 800b780:	4a13      	ldr	r2, [pc, #76]	@ (800b7d0 <TIM_Base_SetConfig+0x110>)
 800b782:	4293      	cmp	r3, r2
 800b784:	d00b      	beq.n	800b79e <TIM_Base_SetConfig+0xde>
 800b786:	687b      	ldr	r3, [r7, #4]
 800b788:	4a15      	ldr	r2, [pc, #84]	@ (800b7e0 <TIM_Base_SetConfig+0x120>)
 800b78a:	4293      	cmp	r3, r2
 800b78c:	d007      	beq.n	800b79e <TIM_Base_SetConfig+0xde>
 800b78e:	687b      	ldr	r3, [r7, #4]
 800b790:	4a14      	ldr	r2, [pc, #80]	@ (800b7e4 <TIM_Base_SetConfig+0x124>)
 800b792:	4293      	cmp	r3, r2
 800b794:	d003      	beq.n	800b79e <TIM_Base_SetConfig+0xde>
 800b796:	687b      	ldr	r3, [r7, #4]
 800b798:	4a13      	ldr	r2, [pc, #76]	@ (800b7e8 <TIM_Base_SetConfig+0x128>)
 800b79a:	4293      	cmp	r3, r2
 800b79c:	d103      	bne.n	800b7a6 <TIM_Base_SetConfig+0xe6>
 800b79e:	683b      	ldr	r3, [r7, #0]
 800b7a0:	691a      	ldr	r2, [r3, #16]
 800b7a2:	687b      	ldr	r3, [r7, #4]
 800b7a4:	631a      	str	r2, [r3, #48]	@ 0x30
 800b7a6:	687b      	ldr	r3, [r7, #4]
 800b7a8:	2201      	movs	r2, #1
 800b7aa:	615a      	str	r2, [r3, #20]
 800b7ac:	687b      	ldr	r3, [r7, #4]
 800b7ae:	691b      	ldr	r3, [r3, #16]
 800b7b0:	2201      	movs	r2, #1
 800b7b2:	4013      	ands	r3, r2
 800b7b4:	2b01      	cmp	r3, #1
 800b7b6:	d106      	bne.n	800b7c6 <TIM_Base_SetConfig+0x106>
 800b7b8:	687b      	ldr	r3, [r7, #4]
 800b7ba:	691b      	ldr	r3, [r3, #16]
 800b7bc:	2201      	movs	r2, #1
 800b7be:	4393      	bics	r3, r2
 800b7c0:	001a      	movs	r2, r3
 800b7c2:	687b      	ldr	r3, [r7, #4]
 800b7c4:	611a      	str	r2, [r3, #16]
 800b7c6:	46c0      	nop			@ (mov r8, r8)
 800b7c8:	46bd      	mov	sp, r7
 800b7ca:	b004      	add	sp, #16
 800b7cc:	bd80      	pop	{r7, pc}
 800b7ce:	46c0      	nop			@ (mov r8, r8)
 800b7d0:	40012c00 	.word	0x40012c00
 800b7d4:	40000400 	.word	0x40000400
 800b7d8:	40000800 	.word	0x40000800
 800b7dc:	40002000 	.word	0x40002000
 800b7e0:	40014000 	.word	0x40014000
 800b7e4:	40014400 	.word	0x40014400
 800b7e8:	40014800 	.word	0x40014800
 800b7ec:	fffffcff 	.word	0xfffffcff

0800b7f0 <TIM_OC1_SetConfig>:
 800b7f0:	b580      	push	{r7, lr}
 800b7f2:	b086      	sub	sp, #24
 800b7f4:	af00      	add	r7, sp, #0
 800b7f6:	6078      	str	r0, [r7, #4]
 800b7f8:	6039      	str	r1, [r7, #0]
 800b7fa:	687b      	ldr	r3, [r7, #4]
 800b7fc:	6a1b      	ldr	r3, [r3, #32]
 800b7fe:	617b      	str	r3, [r7, #20]
 800b800:	687b      	ldr	r3, [r7, #4]
 800b802:	6a1b      	ldr	r3, [r3, #32]
 800b804:	2201      	movs	r2, #1
 800b806:	4393      	bics	r3, r2
 800b808:	001a      	movs	r2, r3
 800b80a:	687b      	ldr	r3, [r7, #4]
 800b80c:	621a      	str	r2, [r3, #32]
 800b80e:	687b      	ldr	r3, [r7, #4]
 800b810:	685b      	ldr	r3, [r3, #4]
 800b812:	613b      	str	r3, [r7, #16]
 800b814:	687b      	ldr	r3, [r7, #4]
 800b816:	699b      	ldr	r3, [r3, #24]
 800b818:	60fb      	str	r3, [r7, #12]
 800b81a:	68fb      	ldr	r3, [r7, #12]
 800b81c:	4a32      	ldr	r2, [pc, #200]	@ (800b8e8 <TIM_OC1_SetConfig+0xf8>)
 800b81e:	4013      	ands	r3, r2
 800b820:	60fb      	str	r3, [r7, #12]
 800b822:	68fb      	ldr	r3, [r7, #12]
 800b824:	2203      	movs	r2, #3
 800b826:	4393      	bics	r3, r2
 800b828:	60fb      	str	r3, [r7, #12]
 800b82a:	683b      	ldr	r3, [r7, #0]
 800b82c:	681b      	ldr	r3, [r3, #0]
 800b82e:	68fa      	ldr	r2, [r7, #12]
 800b830:	4313      	orrs	r3, r2
 800b832:	60fb      	str	r3, [r7, #12]
 800b834:	697b      	ldr	r3, [r7, #20]
 800b836:	2202      	movs	r2, #2
 800b838:	4393      	bics	r3, r2
 800b83a:	617b      	str	r3, [r7, #20]
 800b83c:	683b      	ldr	r3, [r7, #0]
 800b83e:	689b      	ldr	r3, [r3, #8]
 800b840:	697a      	ldr	r2, [r7, #20]
 800b842:	4313      	orrs	r3, r2
 800b844:	617b      	str	r3, [r7, #20]
 800b846:	687b      	ldr	r3, [r7, #4]
 800b848:	4a28      	ldr	r2, [pc, #160]	@ (800b8ec <TIM_OC1_SetConfig+0xfc>)
 800b84a:	4293      	cmp	r3, r2
 800b84c:	d00b      	beq.n	800b866 <TIM_OC1_SetConfig+0x76>
 800b84e:	687b      	ldr	r3, [r7, #4]
 800b850:	4a27      	ldr	r2, [pc, #156]	@ (800b8f0 <TIM_OC1_SetConfig+0x100>)
 800b852:	4293      	cmp	r3, r2
 800b854:	d007      	beq.n	800b866 <TIM_OC1_SetConfig+0x76>
 800b856:	687b      	ldr	r3, [r7, #4]
 800b858:	4a26      	ldr	r2, [pc, #152]	@ (800b8f4 <TIM_OC1_SetConfig+0x104>)
 800b85a:	4293      	cmp	r3, r2
 800b85c:	d003      	beq.n	800b866 <TIM_OC1_SetConfig+0x76>
 800b85e:	687b      	ldr	r3, [r7, #4]
 800b860:	4a25      	ldr	r2, [pc, #148]	@ (800b8f8 <TIM_OC1_SetConfig+0x108>)
 800b862:	4293      	cmp	r3, r2
 800b864:	d10c      	bne.n	800b880 <TIM_OC1_SetConfig+0x90>
 800b866:	697b      	ldr	r3, [r7, #20]
 800b868:	2208      	movs	r2, #8
 800b86a:	4393      	bics	r3, r2
 800b86c:	617b      	str	r3, [r7, #20]
 800b86e:	683b      	ldr	r3, [r7, #0]
 800b870:	68db      	ldr	r3, [r3, #12]
 800b872:	697a      	ldr	r2, [r7, #20]
 800b874:	4313      	orrs	r3, r2
 800b876:	617b      	str	r3, [r7, #20]
 800b878:	697b      	ldr	r3, [r7, #20]
 800b87a:	2204      	movs	r2, #4
 800b87c:	4393      	bics	r3, r2
 800b87e:	617b      	str	r3, [r7, #20]
 800b880:	687b      	ldr	r3, [r7, #4]
 800b882:	4a1a      	ldr	r2, [pc, #104]	@ (800b8ec <TIM_OC1_SetConfig+0xfc>)
 800b884:	4293      	cmp	r3, r2
 800b886:	d00b      	beq.n	800b8a0 <TIM_OC1_SetConfig+0xb0>
 800b888:	687b      	ldr	r3, [r7, #4]
 800b88a:	4a19      	ldr	r2, [pc, #100]	@ (800b8f0 <TIM_OC1_SetConfig+0x100>)
 800b88c:	4293      	cmp	r3, r2
 800b88e:	d007      	beq.n	800b8a0 <TIM_OC1_SetConfig+0xb0>
 800b890:	687b      	ldr	r3, [r7, #4]
 800b892:	4a18      	ldr	r2, [pc, #96]	@ (800b8f4 <TIM_OC1_SetConfig+0x104>)
 800b894:	4293      	cmp	r3, r2
 800b896:	d003      	beq.n	800b8a0 <TIM_OC1_SetConfig+0xb0>
 800b898:	687b      	ldr	r3, [r7, #4]
 800b89a:	4a17      	ldr	r2, [pc, #92]	@ (800b8f8 <TIM_OC1_SetConfig+0x108>)
 800b89c:	4293      	cmp	r3, r2
 800b89e:	d111      	bne.n	800b8c4 <TIM_OC1_SetConfig+0xd4>
 800b8a0:	693b      	ldr	r3, [r7, #16]
 800b8a2:	4a16      	ldr	r2, [pc, #88]	@ (800b8fc <TIM_OC1_SetConfig+0x10c>)
 800b8a4:	4013      	ands	r3, r2
 800b8a6:	613b      	str	r3, [r7, #16]
 800b8a8:	693b      	ldr	r3, [r7, #16]
 800b8aa:	4a15      	ldr	r2, [pc, #84]	@ (800b900 <TIM_OC1_SetConfig+0x110>)
 800b8ac:	4013      	ands	r3, r2
 800b8ae:	613b      	str	r3, [r7, #16]
 800b8b0:	683b      	ldr	r3, [r7, #0]
 800b8b2:	695b      	ldr	r3, [r3, #20]
 800b8b4:	693a      	ldr	r2, [r7, #16]
 800b8b6:	4313      	orrs	r3, r2
 800b8b8:	613b      	str	r3, [r7, #16]
 800b8ba:	683b      	ldr	r3, [r7, #0]
 800b8bc:	699b      	ldr	r3, [r3, #24]
 800b8be:	693a      	ldr	r2, [r7, #16]
 800b8c0:	4313      	orrs	r3, r2
 800b8c2:	613b      	str	r3, [r7, #16]
 800b8c4:	687b      	ldr	r3, [r7, #4]
 800b8c6:	693a      	ldr	r2, [r7, #16]
 800b8c8:	605a      	str	r2, [r3, #4]
 800b8ca:	687b      	ldr	r3, [r7, #4]
 800b8cc:	68fa      	ldr	r2, [r7, #12]
 800b8ce:	619a      	str	r2, [r3, #24]
 800b8d0:	683b      	ldr	r3, [r7, #0]
 800b8d2:	685a      	ldr	r2, [r3, #4]
 800b8d4:	687b      	ldr	r3, [r7, #4]
 800b8d6:	635a      	str	r2, [r3, #52]	@ 0x34
 800b8d8:	687b      	ldr	r3, [r7, #4]
 800b8da:	697a      	ldr	r2, [r7, #20]
 800b8dc:	621a      	str	r2, [r3, #32]
 800b8de:	46c0      	nop			@ (mov r8, r8)
 800b8e0:	46bd      	mov	sp, r7
 800b8e2:	b006      	add	sp, #24
 800b8e4:	bd80      	pop	{r7, pc}
 800b8e6:	46c0      	nop			@ (mov r8, r8)
 800b8e8:	fffeff8f 	.word	0xfffeff8f
 800b8ec:	40012c00 	.word	0x40012c00
 800b8f0:	40014000 	.word	0x40014000
 800b8f4:	40014400 	.word	0x40014400
 800b8f8:	40014800 	.word	0x40014800
 800b8fc:	fffffeff 	.word	0xfffffeff
 800b900:	fffffdff 	.word	0xfffffdff

0800b904 <TIM_OC2_SetConfig>:
 800b904:	b580      	push	{r7, lr}
 800b906:	b086      	sub	sp, #24
 800b908:	af00      	add	r7, sp, #0
 800b90a:	6078      	str	r0, [r7, #4]
 800b90c:	6039      	str	r1, [r7, #0]
 800b90e:	687b      	ldr	r3, [r7, #4]
 800b910:	6a1b      	ldr	r3, [r3, #32]
 800b912:	617b      	str	r3, [r7, #20]
 800b914:	687b      	ldr	r3, [r7, #4]
 800b916:	6a1b      	ldr	r3, [r3, #32]
 800b918:	2210      	movs	r2, #16
 800b91a:	4393      	bics	r3, r2
 800b91c:	001a      	movs	r2, r3
 800b91e:	687b      	ldr	r3, [r7, #4]
 800b920:	621a      	str	r2, [r3, #32]
 800b922:	687b      	ldr	r3, [r7, #4]
 800b924:	685b      	ldr	r3, [r3, #4]
 800b926:	613b      	str	r3, [r7, #16]
 800b928:	687b      	ldr	r3, [r7, #4]
 800b92a:	699b      	ldr	r3, [r3, #24]
 800b92c:	60fb      	str	r3, [r7, #12]
 800b92e:	68fb      	ldr	r3, [r7, #12]
 800b930:	4a2e      	ldr	r2, [pc, #184]	@ (800b9ec <TIM_OC2_SetConfig+0xe8>)
 800b932:	4013      	ands	r3, r2
 800b934:	60fb      	str	r3, [r7, #12]
 800b936:	68fb      	ldr	r3, [r7, #12]
 800b938:	4a2d      	ldr	r2, [pc, #180]	@ (800b9f0 <TIM_OC2_SetConfig+0xec>)
 800b93a:	4013      	ands	r3, r2
 800b93c:	60fb      	str	r3, [r7, #12]
 800b93e:	683b      	ldr	r3, [r7, #0]
 800b940:	681b      	ldr	r3, [r3, #0]
 800b942:	021b      	lsls	r3, r3, #8
 800b944:	68fa      	ldr	r2, [r7, #12]
 800b946:	4313      	orrs	r3, r2
 800b948:	60fb      	str	r3, [r7, #12]
 800b94a:	697b      	ldr	r3, [r7, #20]
 800b94c:	2220      	movs	r2, #32
 800b94e:	4393      	bics	r3, r2
 800b950:	617b      	str	r3, [r7, #20]
 800b952:	683b      	ldr	r3, [r7, #0]
 800b954:	689b      	ldr	r3, [r3, #8]
 800b956:	011b      	lsls	r3, r3, #4
 800b958:	697a      	ldr	r2, [r7, #20]
 800b95a:	4313      	orrs	r3, r2
 800b95c:	617b      	str	r3, [r7, #20]
 800b95e:	687b      	ldr	r3, [r7, #4]
 800b960:	4a24      	ldr	r2, [pc, #144]	@ (800b9f4 <TIM_OC2_SetConfig+0xf0>)
 800b962:	4293      	cmp	r3, r2
 800b964:	d10d      	bne.n	800b982 <TIM_OC2_SetConfig+0x7e>
 800b966:	697b      	ldr	r3, [r7, #20]
 800b968:	2280      	movs	r2, #128	@ 0x80
 800b96a:	4393      	bics	r3, r2
 800b96c:	617b      	str	r3, [r7, #20]
 800b96e:	683b      	ldr	r3, [r7, #0]
 800b970:	68db      	ldr	r3, [r3, #12]
 800b972:	011b      	lsls	r3, r3, #4
 800b974:	697a      	ldr	r2, [r7, #20]
 800b976:	4313      	orrs	r3, r2
 800b978:	617b      	str	r3, [r7, #20]
 800b97a:	697b      	ldr	r3, [r7, #20]
 800b97c:	2240      	movs	r2, #64	@ 0x40
 800b97e:	4393      	bics	r3, r2
 800b980:	617b      	str	r3, [r7, #20]
 800b982:	687b      	ldr	r3, [r7, #4]
 800b984:	4a1b      	ldr	r2, [pc, #108]	@ (800b9f4 <TIM_OC2_SetConfig+0xf0>)
 800b986:	4293      	cmp	r3, r2
 800b988:	d00b      	beq.n	800b9a2 <TIM_OC2_SetConfig+0x9e>
 800b98a:	687b      	ldr	r3, [r7, #4]
 800b98c:	4a1a      	ldr	r2, [pc, #104]	@ (800b9f8 <TIM_OC2_SetConfig+0xf4>)
 800b98e:	4293      	cmp	r3, r2
 800b990:	d007      	beq.n	800b9a2 <TIM_OC2_SetConfig+0x9e>
 800b992:	687b      	ldr	r3, [r7, #4]
 800b994:	4a19      	ldr	r2, [pc, #100]	@ (800b9fc <TIM_OC2_SetConfig+0xf8>)
 800b996:	4293      	cmp	r3, r2
 800b998:	d003      	beq.n	800b9a2 <TIM_OC2_SetConfig+0x9e>
 800b99a:	687b      	ldr	r3, [r7, #4]
 800b99c:	4a18      	ldr	r2, [pc, #96]	@ (800ba00 <TIM_OC2_SetConfig+0xfc>)
 800b99e:	4293      	cmp	r3, r2
 800b9a0:	d113      	bne.n	800b9ca <TIM_OC2_SetConfig+0xc6>
 800b9a2:	693b      	ldr	r3, [r7, #16]
 800b9a4:	4a17      	ldr	r2, [pc, #92]	@ (800ba04 <TIM_OC2_SetConfig+0x100>)
 800b9a6:	4013      	ands	r3, r2
 800b9a8:	613b      	str	r3, [r7, #16]
 800b9aa:	693b      	ldr	r3, [r7, #16]
 800b9ac:	4a16      	ldr	r2, [pc, #88]	@ (800ba08 <TIM_OC2_SetConfig+0x104>)
 800b9ae:	4013      	ands	r3, r2
 800b9b0:	613b      	str	r3, [r7, #16]
 800b9b2:	683b      	ldr	r3, [r7, #0]
 800b9b4:	695b      	ldr	r3, [r3, #20]
 800b9b6:	009b      	lsls	r3, r3, #2
 800b9b8:	693a      	ldr	r2, [r7, #16]
 800b9ba:	4313      	orrs	r3, r2
 800b9bc:	613b      	str	r3, [r7, #16]
 800b9be:	683b      	ldr	r3, [r7, #0]
 800b9c0:	699b      	ldr	r3, [r3, #24]
 800b9c2:	009b      	lsls	r3, r3, #2
 800b9c4:	693a      	ldr	r2, [r7, #16]
 800b9c6:	4313      	orrs	r3, r2
 800b9c8:	613b      	str	r3, [r7, #16]
 800b9ca:	687b      	ldr	r3, [r7, #4]
 800b9cc:	693a      	ldr	r2, [r7, #16]
 800b9ce:	605a      	str	r2, [r3, #4]
 800b9d0:	687b      	ldr	r3, [r7, #4]
 800b9d2:	68fa      	ldr	r2, [r7, #12]
 800b9d4:	619a      	str	r2, [r3, #24]
 800b9d6:	683b      	ldr	r3, [r7, #0]
 800b9d8:	685a      	ldr	r2, [r3, #4]
 800b9da:	687b      	ldr	r3, [r7, #4]
 800b9dc:	639a      	str	r2, [r3, #56]	@ 0x38
 800b9de:	687b      	ldr	r3, [r7, #4]
 800b9e0:	697a      	ldr	r2, [r7, #20]
 800b9e2:	621a      	str	r2, [r3, #32]
 800b9e4:	46c0      	nop			@ (mov r8, r8)
 800b9e6:	46bd      	mov	sp, r7
 800b9e8:	b006      	add	sp, #24
 800b9ea:	bd80      	pop	{r7, pc}
 800b9ec:	feff8fff 	.word	0xfeff8fff
 800b9f0:	fffffcff 	.word	0xfffffcff
 800b9f4:	40012c00 	.word	0x40012c00
 800b9f8:	40014000 	.word	0x40014000
 800b9fc:	40014400 	.word	0x40014400
 800ba00:	40014800 	.word	0x40014800
 800ba04:	fffffbff 	.word	0xfffffbff
 800ba08:	fffff7ff 	.word	0xfffff7ff

0800ba0c <TIM_OC3_SetConfig>:
 800ba0c:	b580      	push	{r7, lr}
 800ba0e:	b086      	sub	sp, #24
 800ba10:	af00      	add	r7, sp, #0
 800ba12:	6078      	str	r0, [r7, #4]
 800ba14:	6039      	str	r1, [r7, #0]
 800ba16:	687b      	ldr	r3, [r7, #4]
 800ba18:	6a1b      	ldr	r3, [r3, #32]
 800ba1a:	617b      	str	r3, [r7, #20]
 800ba1c:	687b      	ldr	r3, [r7, #4]
 800ba1e:	6a1b      	ldr	r3, [r3, #32]
 800ba20:	4a33      	ldr	r2, [pc, #204]	@ (800baf0 <TIM_OC3_SetConfig+0xe4>)
 800ba22:	401a      	ands	r2, r3
 800ba24:	687b      	ldr	r3, [r7, #4]
 800ba26:	621a      	str	r2, [r3, #32]
 800ba28:	687b      	ldr	r3, [r7, #4]
 800ba2a:	685b      	ldr	r3, [r3, #4]
 800ba2c:	613b      	str	r3, [r7, #16]
 800ba2e:	687b      	ldr	r3, [r7, #4]
 800ba30:	69db      	ldr	r3, [r3, #28]
 800ba32:	60fb      	str	r3, [r7, #12]
 800ba34:	68fb      	ldr	r3, [r7, #12]
 800ba36:	4a2f      	ldr	r2, [pc, #188]	@ (800baf4 <TIM_OC3_SetConfig+0xe8>)
 800ba38:	4013      	ands	r3, r2
 800ba3a:	60fb      	str	r3, [r7, #12]
 800ba3c:	68fb      	ldr	r3, [r7, #12]
 800ba3e:	2203      	movs	r2, #3
 800ba40:	4393      	bics	r3, r2
 800ba42:	60fb      	str	r3, [r7, #12]
 800ba44:	683b      	ldr	r3, [r7, #0]
 800ba46:	681b      	ldr	r3, [r3, #0]
 800ba48:	68fa      	ldr	r2, [r7, #12]
 800ba4a:	4313      	orrs	r3, r2
 800ba4c:	60fb      	str	r3, [r7, #12]
 800ba4e:	697b      	ldr	r3, [r7, #20]
 800ba50:	4a29      	ldr	r2, [pc, #164]	@ (800baf8 <TIM_OC3_SetConfig+0xec>)
 800ba52:	4013      	ands	r3, r2
 800ba54:	617b      	str	r3, [r7, #20]
 800ba56:	683b      	ldr	r3, [r7, #0]
 800ba58:	689b      	ldr	r3, [r3, #8]
 800ba5a:	021b      	lsls	r3, r3, #8
 800ba5c:	697a      	ldr	r2, [r7, #20]
 800ba5e:	4313      	orrs	r3, r2
 800ba60:	617b      	str	r3, [r7, #20]
 800ba62:	687b      	ldr	r3, [r7, #4]
 800ba64:	4a25      	ldr	r2, [pc, #148]	@ (800bafc <TIM_OC3_SetConfig+0xf0>)
 800ba66:	4293      	cmp	r3, r2
 800ba68:	d10d      	bne.n	800ba86 <TIM_OC3_SetConfig+0x7a>
 800ba6a:	697b      	ldr	r3, [r7, #20]
 800ba6c:	4a24      	ldr	r2, [pc, #144]	@ (800bb00 <TIM_OC3_SetConfig+0xf4>)
 800ba6e:	4013      	ands	r3, r2
 800ba70:	617b      	str	r3, [r7, #20]
 800ba72:	683b      	ldr	r3, [r7, #0]
 800ba74:	68db      	ldr	r3, [r3, #12]
 800ba76:	021b      	lsls	r3, r3, #8
 800ba78:	697a      	ldr	r2, [r7, #20]
 800ba7a:	4313      	orrs	r3, r2
 800ba7c:	617b      	str	r3, [r7, #20]
 800ba7e:	697b      	ldr	r3, [r7, #20]
 800ba80:	4a20      	ldr	r2, [pc, #128]	@ (800bb04 <TIM_OC3_SetConfig+0xf8>)
 800ba82:	4013      	ands	r3, r2
 800ba84:	617b      	str	r3, [r7, #20]
 800ba86:	687b      	ldr	r3, [r7, #4]
 800ba88:	4a1c      	ldr	r2, [pc, #112]	@ (800bafc <TIM_OC3_SetConfig+0xf0>)
 800ba8a:	4293      	cmp	r3, r2
 800ba8c:	d00b      	beq.n	800baa6 <TIM_OC3_SetConfig+0x9a>
 800ba8e:	687b      	ldr	r3, [r7, #4]
 800ba90:	4a1d      	ldr	r2, [pc, #116]	@ (800bb08 <TIM_OC3_SetConfig+0xfc>)
 800ba92:	4293      	cmp	r3, r2
 800ba94:	d007      	beq.n	800baa6 <TIM_OC3_SetConfig+0x9a>
 800ba96:	687b      	ldr	r3, [r7, #4]
 800ba98:	4a1c      	ldr	r2, [pc, #112]	@ (800bb0c <TIM_OC3_SetConfig+0x100>)
 800ba9a:	4293      	cmp	r3, r2
 800ba9c:	d003      	beq.n	800baa6 <TIM_OC3_SetConfig+0x9a>
 800ba9e:	687b      	ldr	r3, [r7, #4]
 800baa0:	4a1b      	ldr	r2, [pc, #108]	@ (800bb10 <TIM_OC3_SetConfig+0x104>)
 800baa2:	4293      	cmp	r3, r2
 800baa4:	d113      	bne.n	800bace <TIM_OC3_SetConfig+0xc2>
 800baa6:	693b      	ldr	r3, [r7, #16]
 800baa8:	4a1a      	ldr	r2, [pc, #104]	@ (800bb14 <TIM_OC3_SetConfig+0x108>)
 800baaa:	4013      	ands	r3, r2
 800baac:	613b      	str	r3, [r7, #16]
 800baae:	693b      	ldr	r3, [r7, #16]
 800bab0:	4a19      	ldr	r2, [pc, #100]	@ (800bb18 <TIM_OC3_SetConfig+0x10c>)
 800bab2:	4013      	ands	r3, r2
 800bab4:	613b      	str	r3, [r7, #16]
 800bab6:	683b      	ldr	r3, [r7, #0]
 800bab8:	695b      	ldr	r3, [r3, #20]
 800baba:	011b      	lsls	r3, r3, #4
 800babc:	693a      	ldr	r2, [r7, #16]
 800babe:	4313      	orrs	r3, r2
 800bac0:	613b      	str	r3, [r7, #16]
 800bac2:	683b      	ldr	r3, [r7, #0]
 800bac4:	699b      	ldr	r3, [r3, #24]
 800bac6:	011b      	lsls	r3, r3, #4
 800bac8:	693a      	ldr	r2, [r7, #16]
 800baca:	4313      	orrs	r3, r2
 800bacc:	613b      	str	r3, [r7, #16]
 800bace:	687b      	ldr	r3, [r7, #4]
 800bad0:	693a      	ldr	r2, [r7, #16]
 800bad2:	605a      	str	r2, [r3, #4]
 800bad4:	687b      	ldr	r3, [r7, #4]
 800bad6:	68fa      	ldr	r2, [r7, #12]
 800bad8:	61da      	str	r2, [r3, #28]
 800bada:	683b      	ldr	r3, [r7, #0]
 800badc:	685a      	ldr	r2, [r3, #4]
 800bade:	687b      	ldr	r3, [r7, #4]
 800bae0:	63da      	str	r2, [r3, #60]	@ 0x3c
 800bae2:	687b      	ldr	r3, [r7, #4]
 800bae4:	697a      	ldr	r2, [r7, #20]
 800bae6:	621a      	str	r2, [r3, #32]
 800bae8:	46c0      	nop			@ (mov r8, r8)
 800baea:	46bd      	mov	sp, r7
 800baec:	b006      	add	sp, #24
 800baee:	bd80      	pop	{r7, pc}
 800baf0:	fffffeff 	.word	0xfffffeff
 800baf4:	fffeff8f 	.word	0xfffeff8f
 800baf8:	fffffdff 	.word	0xfffffdff
 800bafc:	40012c00 	.word	0x40012c00
 800bb00:	fffff7ff 	.word	0xfffff7ff
 800bb04:	fffffbff 	.word	0xfffffbff
 800bb08:	40014000 	.word	0x40014000
 800bb0c:	40014400 	.word	0x40014400
 800bb10:	40014800 	.word	0x40014800
 800bb14:	ffffefff 	.word	0xffffefff
 800bb18:	ffffdfff 	.word	0xffffdfff

0800bb1c <TIM_OC4_SetConfig>:
 800bb1c:	b580      	push	{r7, lr}
 800bb1e:	b086      	sub	sp, #24
 800bb20:	af00      	add	r7, sp, #0
 800bb22:	6078      	str	r0, [r7, #4]
 800bb24:	6039      	str	r1, [r7, #0]
 800bb26:	687b      	ldr	r3, [r7, #4]
 800bb28:	6a1b      	ldr	r3, [r3, #32]
 800bb2a:	613b      	str	r3, [r7, #16]
 800bb2c:	687b      	ldr	r3, [r7, #4]
 800bb2e:	6a1b      	ldr	r3, [r3, #32]
 800bb30:	4a26      	ldr	r2, [pc, #152]	@ (800bbcc <TIM_OC4_SetConfig+0xb0>)
 800bb32:	401a      	ands	r2, r3
 800bb34:	687b      	ldr	r3, [r7, #4]
 800bb36:	621a      	str	r2, [r3, #32]
 800bb38:	687b      	ldr	r3, [r7, #4]
 800bb3a:	685b      	ldr	r3, [r3, #4]
 800bb3c:	617b      	str	r3, [r7, #20]
 800bb3e:	687b      	ldr	r3, [r7, #4]
 800bb40:	69db      	ldr	r3, [r3, #28]
 800bb42:	60fb      	str	r3, [r7, #12]
 800bb44:	68fb      	ldr	r3, [r7, #12]
 800bb46:	4a22      	ldr	r2, [pc, #136]	@ (800bbd0 <TIM_OC4_SetConfig+0xb4>)
 800bb48:	4013      	ands	r3, r2
 800bb4a:	60fb      	str	r3, [r7, #12]
 800bb4c:	68fb      	ldr	r3, [r7, #12]
 800bb4e:	4a21      	ldr	r2, [pc, #132]	@ (800bbd4 <TIM_OC4_SetConfig+0xb8>)
 800bb50:	4013      	ands	r3, r2
 800bb52:	60fb      	str	r3, [r7, #12]
 800bb54:	683b      	ldr	r3, [r7, #0]
 800bb56:	681b      	ldr	r3, [r3, #0]
 800bb58:	021b      	lsls	r3, r3, #8
 800bb5a:	68fa      	ldr	r2, [r7, #12]
 800bb5c:	4313      	orrs	r3, r2
 800bb5e:	60fb      	str	r3, [r7, #12]
 800bb60:	693b      	ldr	r3, [r7, #16]
 800bb62:	4a1d      	ldr	r2, [pc, #116]	@ (800bbd8 <TIM_OC4_SetConfig+0xbc>)
 800bb64:	4013      	ands	r3, r2
 800bb66:	613b      	str	r3, [r7, #16]
 800bb68:	683b      	ldr	r3, [r7, #0]
 800bb6a:	689b      	ldr	r3, [r3, #8]
 800bb6c:	031b      	lsls	r3, r3, #12
 800bb6e:	693a      	ldr	r2, [r7, #16]
 800bb70:	4313      	orrs	r3, r2
 800bb72:	613b      	str	r3, [r7, #16]
 800bb74:	687b      	ldr	r3, [r7, #4]
 800bb76:	4a19      	ldr	r2, [pc, #100]	@ (800bbdc <TIM_OC4_SetConfig+0xc0>)
 800bb78:	4293      	cmp	r3, r2
 800bb7a:	d00b      	beq.n	800bb94 <TIM_OC4_SetConfig+0x78>
 800bb7c:	687b      	ldr	r3, [r7, #4]
 800bb7e:	4a18      	ldr	r2, [pc, #96]	@ (800bbe0 <TIM_OC4_SetConfig+0xc4>)
 800bb80:	4293      	cmp	r3, r2
 800bb82:	d007      	beq.n	800bb94 <TIM_OC4_SetConfig+0x78>
 800bb84:	687b      	ldr	r3, [r7, #4]
 800bb86:	4a17      	ldr	r2, [pc, #92]	@ (800bbe4 <TIM_OC4_SetConfig+0xc8>)
 800bb88:	4293      	cmp	r3, r2
 800bb8a:	d003      	beq.n	800bb94 <TIM_OC4_SetConfig+0x78>
 800bb8c:	687b      	ldr	r3, [r7, #4]
 800bb8e:	4a16      	ldr	r2, [pc, #88]	@ (800bbe8 <TIM_OC4_SetConfig+0xcc>)
 800bb90:	4293      	cmp	r3, r2
 800bb92:	d109      	bne.n	800bba8 <TIM_OC4_SetConfig+0x8c>
 800bb94:	697b      	ldr	r3, [r7, #20]
 800bb96:	4a15      	ldr	r2, [pc, #84]	@ (800bbec <TIM_OC4_SetConfig+0xd0>)
 800bb98:	4013      	ands	r3, r2
 800bb9a:	617b      	str	r3, [r7, #20]
 800bb9c:	683b      	ldr	r3, [r7, #0]
 800bb9e:	695b      	ldr	r3, [r3, #20]
 800bba0:	019b      	lsls	r3, r3, #6
 800bba2:	697a      	ldr	r2, [r7, #20]
 800bba4:	4313      	orrs	r3, r2
 800bba6:	617b      	str	r3, [r7, #20]
 800bba8:	687b      	ldr	r3, [r7, #4]
 800bbaa:	697a      	ldr	r2, [r7, #20]
 800bbac:	605a      	str	r2, [r3, #4]
 800bbae:	687b      	ldr	r3, [r7, #4]
 800bbb0:	68fa      	ldr	r2, [r7, #12]
 800bbb2:	61da      	str	r2, [r3, #28]
 800bbb4:	683b      	ldr	r3, [r7, #0]
 800bbb6:	685a      	ldr	r2, [r3, #4]
 800bbb8:	687b      	ldr	r3, [r7, #4]
 800bbba:	641a      	str	r2, [r3, #64]	@ 0x40
 800bbbc:	687b      	ldr	r3, [r7, #4]
 800bbbe:	693a      	ldr	r2, [r7, #16]
 800bbc0:	621a      	str	r2, [r3, #32]
 800bbc2:	46c0      	nop			@ (mov r8, r8)
 800bbc4:	46bd      	mov	sp, r7
 800bbc6:	b006      	add	sp, #24
 800bbc8:	bd80      	pop	{r7, pc}
 800bbca:	46c0      	nop			@ (mov r8, r8)
 800bbcc:	ffffefff 	.word	0xffffefff
 800bbd0:	feff8fff 	.word	0xfeff8fff
 800bbd4:	fffffcff 	.word	0xfffffcff
 800bbd8:	ffffdfff 	.word	0xffffdfff
 800bbdc:	40012c00 	.word	0x40012c00
 800bbe0:	40014000 	.word	0x40014000
 800bbe4:	40014400 	.word	0x40014400
 800bbe8:	40014800 	.word	0x40014800
 800bbec:	ffffbfff 	.word	0xffffbfff

0800bbf0 <TIM_OC5_SetConfig>:
 800bbf0:	b580      	push	{r7, lr}
 800bbf2:	b086      	sub	sp, #24
 800bbf4:	af00      	add	r7, sp, #0
 800bbf6:	6078      	str	r0, [r7, #4]
 800bbf8:	6039      	str	r1, [r7, #0]
 800bbfa:	687b      	ldr	r3, [r7, #4]
 800bbfc:	6a1b      	ldr	r3, [r3, #32]
 800bbfe:	613b      	str	r3, [r7, #16]
 800bc00:	687b      	ldr	r3, [r7, #4]
 800bc02:	6a1b      	ldr	r3, [r3, #32]
 800bc04:	4a23      	ldr	r2, [pc, #140]	@ (800bc94 <TIM_OC5_SetConfig+0xa4>)
 800bc06:	401a      	ands	r2, r3
 800bc08:	687b      	ldr	r3, [r7, #4]
 800bc0a:	621a      	str	r2, [r3, #32]
 800bc0c:	687b      	ldr	r3, [r7, #4]
 800bc0e:	685b      	ldr	r3, [r3, #4]
 800bc10:	617b      	str	r3, [r7, #20]
 800bc12:	687b      	ldr	r3, [r7, #4]
 800bc14:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800bc16:	60fb      	str	r3, [r7, #12]
 800bc18:	68fb      	ldr	r3, [r7, #12]
 800bc1a:	4a1f      	ldr	r2, [pc, #124]	@ (800bc98 <TIM_OC5_SetConfig+0xa8>)
 800bc1c:	4013      	ands	r3, r2
 800bc1e:	60fb      	str	r3, [r7, #12]
 800bc20:	683b      	ldr	r3, [r7, #0]
 800bc22:	681b      	ldr	r3, [r3, #0]
 800bc24:	68fa      	ldr	r2, [r7, #12]
 800bc26:	4313      	orrs	r3, r2
 800bc28:	60fb      	str	r3, [r7, #12]
 800bc2a:	693b      	ldr	r3, [r7, #16]
 800bc2c:	4a1b      	ldr	r2, [pc, #108]	@ (800bc9c <TIM_OC5_SetConfig+0xac>)
 800bc2e:	4013      	ands	r3, r2
 800bc30:	613b      	str	r3, [r7, #16]
 800bc32:	683b      	ldr	r3, [r7, #0]
 800bc34:	689b      	ldr	r3, [r3, #8]
 800bc36:	041b      	lsls	r3, r3, #16
 800bc38:	693a      	ldr	r2, [r7, #16]
 800bc3a:	4313      	orrs	r3, r2
 800bc3c:	613b      	str	r3, [r7, #16]
 800bc3e:	687b      	ldr	r3, [r7, #4]
 800bc40:	4a17      	ldr	r2, [pc, #92]	@ (800bca0 <TIM_OC5_SetConfig+0xb0>)
 800bc42:	4293      	cmp	r3, r2
 800bc44:	d00b      	beq.n	800bc5e <TIM_OC5_SetConfig+0x6e>
 800bc46:	687b      	ldr	r3, [r7, #4]
 800bc48:	4a16      	ldr	r2, [pc, #88]	@ (800bca4 <TIM_OC5_SetConfig+0xb4>)
 800bc4a:	4293      	cmp	r3, r2
 800bc4c:	d007      	beq.n	800bc5e <TIM_OC5_SetConfig+0x6e>
 800bc4e:	687b      	ldr	r3, [r7, #4]
 800bc50:	4a15      	ldr	r2, [pc, #84]	@ (800bca8 <TIM_OC5_SetConfig+0xb8>)
 800bc52:	4293      	cmp	r3, r2
 800bc54:	d003      	beq.n	800bc5e <TIM_OC5_SetConfig+0x6e>
 800bc56:	687b      	ldr	r3, [r7, #4]
 800bc58:	4a14      	ldr	r2, [pc, #80]	@ (800bcac <TIM_OC5_SetConfig+0xbc>)
 800bc5a:	4293      	cmp	r3, r2
 800bc5c:	d109      	bne.n	800bc72 <TIM_OC5_SetConfig+0x82>
 800bc5e:	697b      	ldr	r3, [r7, #20]
 800bc60:	4a0c      	ldr	r2, [pc, #48]	@ (800bc94 <TIM_OC5_SetConfig+0xa4>)
 800bc62:	4013      	ands	r3, r2
 800bc64:	617b      	str	r3, [r7, #20]
 800bc66:	683b      	ldr	r3, [r7, #0]
 800bc68:	695b      	ldr	r3, [r3, #20]
 800bc6a:	021b      	lsls	r3, r3, #8
 800bc6c:	697a      	ldr	r2, [r7, #20]
 800bc6e:	4313      	orrs	r3, r2
 800bc70:	617b      	str	r3, [r7, #20]
 800bc72:	687b      	ldr	r3, [r7, #4]
 800bc74:	697a      	ldr	r2, [r7, #20]
 800bc76:	605a      	str	r2, [r3, #4]
 800bc78:	687b      	ldr	r3, [r7, #4]
 800bc7a:	68fa      	ldr	r2, [r7, #12]
 800bc7c:	655a      	str	r2, [r3, #84]	@ 0x54
 800bc7e:	683b      	ldr	r3, [r7, #0]
 800bc80:	685a      	ldr	r2, [r3, #4]
 800bc82:	687b      	ldr	r3, [r7, #4]
 800bc84:	659a      	str	r2, [r3, #88]	@ 0x58
 800bc86:	687b      	ldr	r3, [r7, #4]
 800bc88:	693a      	ldr	r2, [r7, #16]
 800bc8a:	621a      	str	r2, [r3, #32]
 800bc8c:	46c0      	nop			@ (mov r8, r8)
 800bc8e:	46bd      	mov	sp, r7
 800bc90:	b006      	add	sp, #24
 800bc92:	bd80      	pop	{r7, pc}
 800bc94:	fffeffff 	.word	0xfffeffff
 800bc98:	fffeff8f 	.word	0xfffeff8f
 800bc9c:	fffdffff 	.word	0xfffdffff
 800bca0:	40012c00 	.word	0x40012c00
 800bca4:	40014000 	.word	0x40014000
 800bca8:	40014400 	.word	0x40014400
 800bcac:	40014800 	.word	0x40014800

0800bcb0 <TIM_OC6_SetConfig>:
 800bcb0:	b580      	push	{r7, lr}
 800bcb2:	b086      	sub	sp, #24
 800bcb4:	af00      	add	r7, sp, #0
 800bcb6:	6078      	str	r0, [r7, #4]
 800bcb8:	6039      	str	r1, [r7, #0]
 800bcba:	687b      	ldr	r3, [r7, #4]
 800bcbc:	6a1b      	ldr	r3, [r3, #32]
 800bcbe:	613b      	str	r3, [r7, #16]
 800bcc0:	687b      	ldr	r3, [r7, #4]
 800bcc2:	6a1b      	ldr	r3, [r3, #32]
 800bcc4:	4a24      	ldr	r2, [pc, #144]	@ (800bd58 <TIM_OC6_SetConfig+0xa8>)
 800bcc6:	401a      	ands	r2, r3
 800bcc8:	687b      	ldr	r3, [r7, #4]
 800bcca:	621a      	str	r2, [r3, #32]
 800bccc:	687b      	ldr	r3, [r7, #4]
 800bcce:	685b      	ldr	r3, [r3, #4]
 800bcd0:	617b      	str	r3, [r7, #20]
 800bcd2:	687b      	ldr	r3, [r7, #4]
 800bcd4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800bcd6:	60fb      	str	r3, [r7, #12]
 800bcd8:	68fb      	ldr	r3, [r7, #12]
 800bcda:	4a20      	ldr	r2, [pc, #128]	@ (800bd5c <TIM_OC6_SetConfig+0xac>)
 800bcdc:	4013      	ands	r3, r2
 800bcde:	60fb      	str	r3, [r7, #12]
 800bce0:	683b      	ldr	r3, [r7, #0]
 800bce2:	681b      	ldr	r3, [r3, #0]
 800bce4:	021b      	lsls	r3, r3, #8
 800bce6:	68fa      	ldr	r2, [r7, #12]
 800bce8:	4313      	orrs	r3, r2
 800bcea:	60fb      	str	r3, [r7, #12]
 800bcec:	693b      	ldr	r3, [r7, #16]
 800bcee:	4a1c      	ldr	r2, [pc, #112]	@ (800bd60 <TIM_OC6_SetConfig+0xb0>)
 800bcf0:	4013      	ands	r3, r2
 800bcf2:	613b      	str	r3, [r7, #16]
 800bcf4:	683b      	ldr	r3, [r7, #0]
 800bcf6:	689b      	ldr	r3, [r3, #8]
 800bcf8:	051b      	lsls	r3, r3, #20
 800bcfa:	693a      	ldr	r2, [r7, #16]
 800bcfc:	4313      	orrs	r3, r2
 800bcfe:	613b      	str	r3, [r7, #16]
 800bd00:	687b      	ldr	r3, [r7, #4]
 800bd02:	4a18      	ldr	r2, [pc, #96]	@ (800bd64 <TIM_OC6_SetConfig+0xb4>)
 800bd04:	4293      	cmp	r3, r2
 800bd06:	d00b      	beq.n	800bd20 <TIM_OC6_SetConfig+0x70>
 800bd08:	687b      	ldr	r3, [r7, #4]
 800bd0a:	4a17      	ldr	r2, [pc, #92]	@ (800bd68 <TIM_OC6_SetConfig+0xb8>)
 800bd0c:	4293      	cmp	r3, r2
 800bd0e:	d007      	beq.n	800bd20 <TIM_OC6_SetConfig+0x70>
 800bd10:	687b      	ldr	r3, [r7, #4]
 800bd12:	4a16      	ldr	r2, [pc, #88]	@ (800bd6c <TIM_OC6_SetConfig+0xbc>)
 800bd14:	4293      	cmp	r3, r2
 800bd16:	d003      	beq.n	800bd20 <TIM_OC6_SetConfig+0x70>
 800bd18:	687b      	ldr	r3, [r7, #4]
 800bd1a:	4a15      	ldr	r2, [pc, #84]	@ (800bd70 <TIM_OC6_SetConfig+0xc0>)
 800bd1c:	4293      	cmp	r3, r2
 800bd1e:	d109      	bne.n	800bd34 <TIM_OC6_SetConfig+0x84>
 800bd20:	697b      	ldr	r3, [r7, #20]
 800bd22:	4a14      	ldr	r2, [pc, #80]	@ (800bd74 <TIM_OC6_SetConfig+0xc4>)
 800bd24:	4013      	ands	r3, r2
 800bd26:	617b      	str	r3, [r7, #20]
 800bd28:	683b      	ldr	r3, [r7, #0]
 800bd2a:	695b      	ldr	r3, [r3, #20]
 800bd2c:	029b      	lsls	r3, r3, #10
 800bd2e:	697a      	ldr	r2, [r7, #20]
 800bd30:	4313      	orrs	r3, r2
 800bd32:	617b      	str	r3, [r7, #20]
 800bd34:	687b      	ldr	r3, [r7, #4]
 800bd36:	697a      	ldr	r2, [r7, #20]
 800bd38:	605a      	str	r2, [r3, #4]
 800bd3a:	687b      	ldr	r3, [r7, #4]
 800bd3c:	68fa      	ldr	r2, [r7, #12]
 800bd3e:	655a      	str	r2, [r3, #84]	@ 0x54
 800bd40:	683b      	ldr	r3, [r7, #0]
 800bd42:	685a      	ldr	r2, [r3, #4]
 800bd44:	687b      	ldr	r3, [r7, #4]
 800bd46:	65da      	str	r2, [r3, #92]	@ 0x5c
 800bd48:	687b      	ldr	r3, [r7, #4]
 800bd4a:	693a      	ldr	r2, [r7, #16]
 800bd4c:	621a      	str	r2, [r3, #32]
 800bd4e:	46c0      	nop			@ (mov r8, r8)
 800bd50:	46bd      	mov	sp, r7
 800bd52:	b006      	add	sp, #24
 800bd54:	bd80      	pop	{r7, pc}
 800bd56:	46c0      	nop			@ (mov r8, r8)
 800bd58:	ffefffff 	.word	0xffefffff
 800bd5c:	feff8fff 	.word	0xfeff8fff
 800bd60:	ffdfffff 	.word	0xffdfffff
 800bd64:	40012c00 	.word	0x40012c00
 800bd68:	40014000 	.word	0x40014000
 800bd6c:	40014400 	.word	0x40014400
 800bd70:	40014800 	.word	0x40014800
 800bd74:	fffbffff 	.word	0xfffbffff

0800bd78 <TIM_TI1_ConfigInputStage>:
 800bd78:	b580      	push	{r7, lr}
 800bd7a:	b086      	sub	sp, #24
 800bd7c:	af00      	add	r7, sp, #0
 800bd7e:	60f8      	str	r0, [r7, #12]
 800bd80:	60b9      	str	r1, [r7, #8]
 800bd82:	607a      	str	r2, [r7, #4]
 800bd84:	68fb      	ldr	r3, [r7, #12]
 800bd86:	6a1b      	ldr	r3, [r3, #32]
 800bd88:	617b      	str	r3, [r7, #20]
 800bd8a:	68fb      	ldr	r3, [r7, #12]
 800bd8c:	6a1b      	ldr	r3, [r3, #32]
 800bd8e:	2201      	movs	r2, #1
 800bd90:	4393      	bics	r3, r2
 800bd92:	001a      	movs	r2, r3
 800bd94:	68fb      	ldr	r3, [r7, #12]
 800bd96:	621a      	str	r2, [r3, #32]
 800bd98:	68fb      	ldr	r3, [r7, #12]
 800bd9a:	699b      	ldr	r3, [r3, #24]
 800bd9c:	613b      	str	r3, [r7, #16]
 800bd9e:	693b      	ldr	r3, [r7, #16]
 800bda0:	22f0      	movs	r2, #240	@ 0xf0
 800bda2:	4393      	bics	r3, r2
 800bda4:	613b      	str	r3, [r7, #16]
 800bda6:	687b      	ldr	r3, [r7, #4]
 800bda8:	011b      	lsls	r3, r3, #4
 800bdaa:	693a      	ldr	r2, [r7, #16]
 800bdac:	4313      	orrs	r3, r2
 800bdae:	613b      	str	r3, [r7, #16]
 800bdb0:	697b      	ldr	r3, [r7, #20]
 800bdb2:	220a      	movs	r2, #10
 800bdb4:	4393      	bics	r3, r2
 800bdb6:	617b      	str	r3, [r7, #20]
 800bdb8:	697a      	ldr	r2, [r7, #20]
 800bdba:	68bb      	ldr	r3, [r7, #8]
 800bdbc:	4313      	orrs	r3, r2
 800bdbe:	617b      	str	r3, [r7, #20]
 800bdc0:	68fb      	ldr	r3, [r7, #12]
 800bdc2:	693a      	ldr	r2, [r7, #16]
 800bdc4:	619a      	str	r2, [r3, #24]
 800bdc6:	68fb      	ldr	r3, [r7, #12]
 800bdc8:	697a      	ldr	r2, [r7, #20]
 800bdca:	621a      	str	r2, [r3, #32]
 800bdcc:	46c0      	nop			@ (mov r8, r8)
 800bdce:	46bd      	mov	sp, r7
 800bdd0:	b006      	add	sp, #24
 800bdd2:	bd80      	pop	{r7, pc}

0800bdd4 <TIM_TI2_ConfigInputStage>:
 800bdd4:	b580      	push	{r7, lr}
 800bdd6:	b086      	sub	sp, #24
 800bdd8:	af00      	add	r7, sp, #0
 800bdda:	60f8      	str	r0, [r7, #12]
 800bddc:	60b9      	str	r1, [r7, #8]
 800bdde:	607a      	str	r2, [r7, #4]
 800bde0:	68fb      	ldr	r3, [r7, #12]
 800bde2:	6a1b      	ldr	r3, [r3, #32]
 800bde4:	617b      	str	r3, [r7, #20]
 800bde6:	68fb      	ldr	r3, [r7, #12]
 800bde8:	6a1b      	ldr	r3, [r3, #32]
 800bdea:	2210      	movs	r2, #16
 800bdec:	4393      	bics	r3, r2
 800bdee:	001a      	movs	r2, r3
 800bdf0:	68fb      	ldr	r3, [r7, #12]
 800bdf2:	621a      	str	r2, [r3, #32]
 800bdf4:	68fb      	ldr	r3, [r7, #12]
 800bdf6:	699b      	ldr	r3, [r3, #24]
 800bdf8:	613b      	str	r3, [r7, #16]
 800bdfa:	693b      	ldr	r3, [r7, #16]
 800bdfc:	4a0d      	ldr	r2, [pc, #52]	@ (800be34 <TIM_TI2_ConfigInputStage+0x60>)
 800bdfe:	4013      	ands	r3, r2
 800be00:	613b      	str	r3, [r7, #16]
 800be02:	687b      	ldr	r3, [r7, #4]
 800be04:	031b      	lsls	r3, r3, #12
 800be06:	693a      	ldr	r2, [r7, #16]
 800be08:	4313      	orrs	r3, r2
 800be0a:	613b      	str	r3, [r7, #16]
 800be0c:	697b      	ldr	r3, [r7, #20]
 800be0e:	22a0      	movs	r2, #160	@ 0xa0
 800be10:	4393      	bics	r3, r2
 800be12:	617b      	str	r3, [r7, #20]
 800be14:	68bb      	ldr	r3, [r7, #8]
 800be16:	011b      	lsls	r3, r3, #4
 800be18:	697a      	ldr	r2, [r7, #20]
 800be1a:	4313      	orrs	r3, r2
 800be1c:	617b      	str	r3, [r7, #20]
 800be1e:	68fb      	ldr	r3, [r7, #12]
 800be20:	693a      	ldr	r2, [r7, #16]
 800be22:	619a      	str	r2, [r3, #24]
 800be24:	68fb      	ldr	r3, [r7, #12]
 800be26:	697a      	ldr	r2, [r7, #20]
 800be28:	621a      	str	r2, [r3, #32]
 800be2a:	46c0      	nop			@ (mov r8, r8)
 800be2c:	46bd      	mov	sp, r7
 800be2e:	b006      	add	sp, #24
 800be30:	bd80      	pop	{r7, pc}
 800be32:	46c0      	nop			@ (mov r8, r8)
 800be34:	ffff0fff 	.word	0xffff0fff

0800be38 <TIM_ITRx_SetConfig>:
 800be38:	b580      	push	{r7, lr}
 800be3a:	b084      	sub	sp, #16
 800be3c:	af00      	add	r7, sp, #0
 800be3e:	6078      	str	r0, [r7, #4]
 800be40:	6039      	str	r1, [r7, #0]
 800be42:	687b      	ldr	r3, [r7, #4]
 800be44:	689b      	ldr	r3, [r3, #8]
 800be46:	60fb      	str	r3, [r7, #12]
 800be48:	68fb      	ldr	r3, [r7, #12]
 800be4a:	4a08      	ldr	r2, [pc, #32]	@ (800be6c <TIM_ITRx_SetConfig+0x34>)
 800be4c:	4013      	ands	r3, r2
 800be4e:	60fb      	str	r3, [r7, #12]
 800be50:	683a      	ldr	r2, [r7, #0]
 800be52:	68fb      	ldr	r3, [r7, #12]
 800be54:	4313      	orrs	r3, r2
 800be56:	2207      	movs	r2, #7
 800be58:	4313      	orrs	r3, r2
 800be5a:	60fb      	str	r3, [r7, #12]
 800be5c:	687b      	ldr	r3, [r7, #4]
 800be5e:	68fa      	ldr	r2, [r7, #12]
 800be60:	609a      	str	r2, [r3, #8]
 800be62:	46c0      	nop			@ (mov r8, r8)
 800be64:	46bd      	mov	sp, r7
 800be66:	b004      	add	sp, #16
 800be68:	bd80      	pop	{r7, pc}
 800be6a:	46c0      	nop			@ (mov r8, r8)
 800be6c:	ffcfff8f 	.word	0xffcfff8f

0800be70 <TIM_ETR_SetConfig>:
 800be70:	b580      	push	{r7, lr}
 800be72:	b086      	sub	sp, #24
 800be74:	af00      	add	r7, sp, #0
 800be76:	60f8      	str	r0, [r7, #12]
 800be78:	60b9      	str	r1, [r7, #8]
 800be7a:	607a      	str	r2, [r7, #4]
 800be7c:	603b      	str	r3, [r7, #0]
 800be7e:	68fb      	ldr	r3, [r7, #12]
 800be80:	689b      	ldr	r3, [r3, #8]
 800be82:	617b      	str	r3, [r7, #20]
 800be84:	697b      	ldr	r3, [r7, #20]
 800be86:	4a09      	ldr	r2, [pc, #36]	@ (800beac <TIM_ETR_SetConfig+0x3c>)
 800be88:	4013      	ands	r3, r2
 800be8a:	617b      	str	r3, [r7, #20]
 800be8c:	683b      	ldr	r3, [r7, #0]
 800be8e:	021a      	lsls	r2, r3, #8
 800be90:	687b      	ldr	r3, [r7, #4]
 800be92:	431a      	orrs	r2, r3
 800be94:	68bb      	ldr	r3, [r7, #8]
 800be96:	4313      	orrs	r3, r2
 800be98:	697a      	ldr	r2, [r7, #20]
 800be9a:	4313      	orrs	r3, r2
 800be9c:	617b      	str	r3, [r7, #20]
 800be9e:	68fb      	ldr	r3, [r7, #12]
 800bea0:	697a      	ldr	r2, [r7, #20]
 800bea2:	609a      	str	r2, [r3, #8]
 800bea4:	46c0      	nop			@ (mov r8, r8)
 800bea6:	46bd      	mov	sp, r7
 800bea8:	b006      	add	sp, #24
 800beaa:	bd80      	pop	{r7, pc}
 800beac:	ffff00ff 	.word	0xffff00ff

0800beb0 <HAL_TIMEx_MasterConfigSynchronization>:
 800beb0:	b580      	push	{r7, lr}
 800beb2:	b084      	sub	sp, #16
 800beb4:	af00      	add	r7, sp, #0
 800beb6:	6078      	str	r0, [r7, #4]
 800beb8:	6039      	str	r1, [r7, #0]
 800beba:	687b      	ldr	r3, [r7, #4]
 800bebc:	223c      	movs	r2, #60	@ 0x3c
 800bebe:	5c9b      	ldrb	r3, [r3, r2]
 800bec0:	2b01      	cmp	r3, #1
 800bec2:	d101      	bne.n	800bec8 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800bec4:	2302      	movs	r3, #2
 800bec6:	e05a      	b.n	800bf7e <HAL_TIMEx_MasterConfigSynchronization+0xce>
 800bec8:	687b      	ldr	r3, [r7, #4]
 800beca:	223c      	movs	r2, #60	@ 0x3c
 800becc:	2101      	movs	r1, #1
 800bece:	5499      	strb	r1, [r3, r2]
 800bed0:	687b      	ldr	r3, [r7, #4]
 800bed2:	223d      	movs	r2, #61	@ 0x3d
 800bed4:	2102      	movs	r1, #2
 800bed6:	5499      	strb	r1, [r3, r2]
 800bed8:	687b      	ldr	r3, [r7, #4]
 800beda:	681b      	ldr	r3, [r3, #0]
 800bedc:	685b      	ldr	r3, [r3, #4]
 800bede:	60fb      	str	r3, [r7, #12]
 800bee0:	687b      	ldr	r3, [r7, #4]
 800bee2:	681b      	ldr	r3, [r3, #0]
 800bee4:	689b      	ldr	r3, [r3, #8]
 800bee6:	60bb      	str	r3, [r7, #8]
 800bee8:	687b      	ldr	r3, [r7, #4]
 800beea:	681b      	ldr	r3, [r3, #0]
 800beec:	4a26      	ldr	r2, [pc, #152]	@ (800bf88 <HAL_TIMEx_MasterConfigSynchronization+0xd8>)
 800beee:	4293      	cmp	r3, r2
 800bef0:	d108      	bne.n	800bf04 <HAL_TIMEx_MasterConfigSynchronization+0x54>
 800bef2:	68fb      	ldr	r3, [r7, #12]
 800bef4:	4a25      	ldr	r2, [pc, #148]	@ (800bf8c <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 800bef6:	4013      	ands	r3, r2
 800bef8:	60fb      	str	r3, [r7, #12]
 800befa:	683b      	ldr	r3, [r7, #0]
 800befc:	685b      	ldr	r3, [r3, #4]
 800befe:	68fa      	ldr	r2, [r7, #12]
 800bf00:	4313      	orrs	r3, r2
 800bf02:	60fb      	str	r3, [r7, #12]
 800bf04:	68fb      	ldr	r3, [r7, #12]
 800bf06:	2270      	movs	r2, #112	@ 0x70
 800bf08:	4393      	bics	r3, r2
 800bf0a:	60fb      	str	r3, [r7, #12]
 800bf0c:	683b      	ldr	r3, [r7, #0]
 800bf0e:	681b      	ldr	r3, [r3, #0]
 800bf10:	68fa      	ldr	r2, [r7, #12]
 800bf12:	4313      	orrs	r3, r2
 800bf14:	60fb      	str	r3, [r7, #12]
 800bf16:	687b      	ldr	r3, [r7, #4]
 800bf18:	681b      	ldr	r3, [r3, #0]
 800bf1a:	68fa      	ldr	r2, [r7, #12]
 800bf1c:	605a      	str	r2, [r3, #4]
 800bf1e:	687b      	ldr	r3, [r7, #4]
 800bf20:	681b      	ldr	r3, [r3, #0]
 800bf22:	4a19      	ldr	r2, [pc, #100]	@ (800bf88 <HAL_TIMEx_MasterConfigSynchronization+0xd8>)
 800bf24:	4293      	cmp	r3, r2
 800bf26:	d014      	beq.n	800bf52 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800bf28:	687b      	ldr	r3, [r7, #4]
 800bf2a:	681a      	ldr	r2, [r3, #0]
 800bf2c:	2380      	movs	r3, #128	@ 0x80
 800bf2e:	05db      	lsls	r3, r3, #23
 800bf30:	429a      	cmp	r2, r3
 800bf32:	d00e      	beq.n	800bf52 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800bf34:	687b      	ldr	r3, [r7, #4]
 800bf36:	681b      	ldr	r3, [r3, #0]
 800bf38:	4a15      	ldr	r2, [pc, #84]	@ (800bf90 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 800bf3a:	4293      	cmp	r3, r2
 800bf3c:	d009      	beq.n	800bf52 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800bf3e:	687b      	ldr	r3, [r7, #4]
 800bf40:	681b      	ldr	r3, [r3, #0]
 800bf42:	4a14      	ldr	r2, [pc, #80]	@ (800bf94 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 800bf44:	4293      	cmp	r3, r2
 800bf46:	d004      	beq.n	800bf52 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800bf48:	687b      	ldr	r3, [r7, #4]
 800bf4a:	681b      	ldr	r3, [r3, #0]
 800bf4c:	4a12      	ldr	r2, [pc, #72]	@ (800bf98 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 800bf4e:	4293      	cmp	r3, r2
 800bf50:	d10c      	bne.n	800bf6c <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 800bf52:	68bb      	ldr	r3, [r7, #8]
 800bf54:	2280      	movs	r2, #128	@ 0x80
 800bf56:	4393      	bics	r3, r2
 800bf58:	60bb      	str	r3, [r7, #8]
 800bf5a:	683b      	ldr	r3, [r7, #0]
 800bf5c:	689b      	ldr	r3, [r3, #8]
 800bf5e:	68ba      	ldr	r2, [r7, #8]
 800bf60:	4313      	orrs	r3, r2
 800bf62:	60bb      	str	r3, [r7, #8]
 800bf64:	687b      	ldr	r3, [r7, #4]
 800bf66:	681b      	ldr	r3, [r3, #0]
 800bf68:	68ba      	ldr	r2, [r7, #8]
 800bf6a:	609a      	str	r2, [r3, #8]
 800bf6c:	687b      	ldr	r3, [r7, #4]
 800bf6e:	223d      	movs	r2, #61	@ 0x3d
 800bf70:	2101      	movs	r1, #1
 800bf72:	5499      	strb	r1, [r3, r2]
 800bf74:	687b      	ldr	r3, [r7, #4]
 800bf76:	223c      	movs	r2, #60	@ 0x3c
 800bf78:	2100      	movs	r1, #0
 800bf7a:	5499      	strb	r1, [r3, r2]
 800bf7c:	2300      	movs	r3, #0
 800bf7e:	0018      	movs	r0, r3
 800bf80:	46bd      	mov	sp, r7
 800bf82:	b004      	add	sp, #16
 800bf84:	bd80      	pop	{r7, pc}
 800bf86:	46c0      	nop			@ (mov r8, r8)
 800bf88:	40012c00 	.word	0x40012c00
 800bf8c:	ff0fffff 	.word	0xff0fffff
 800bf90:	40000400 	.word	0x40000400
 800bf94:	40000800 	.word	0x40000800
 800bf98:	40014000 	.word	0x40014000

0800bf9c <USB_DisableGlobalInt>:
 800bf9c:	b580      	push	{r7, lr}
 800bf9e:	b084      	sub	sp, #16
 800bfa0:	af00      	add	r7, sp, #0
 800bfa2:	6078      	str	r0, [r7, #4]
 800bfa4:	4b06      	ldr	r3, [pc, #24]	@ (800bfc0 <USB_DisableGlobalInt+0x24>)
 800bfa6:	60fb      	str	r3, [r7, #12]
 800bfa8:	687b      	ldr	r3, [r7, #4]
 800bfaa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800bfac:	68fa      	ldr	r2, [r7, #12]
 800bfae:	43d2      	mvns	r2, r2
 800bfb0:	401a      	ands	r2, r3
 800bfb2:	687b      	ldr	r3, [r7, #4]
 800bfb4:	641a      	str	r2, [r3, #64]	@ 0x40
 800bfb6:	2300      	movs	r3, #0
 800bfb8:	0018      	movs	r0, r3
 800bfba:	46bd      	mov	sp, r7
 800bfbc:	b004      	add	sp, #16
 800bfbe:	bd80      	pop	{r7, pc}
 800bfc0:	0000bf80 	.word	0x0000bf80

0800bfc4 <USB_SetCurrentMode>:
 800bfc4:	b580      	push	{r7, lr}
 800bfc6:	b082      	sub	sp, #8
 800bfc8:	af00      	add	r7, sp, #0
 800bfca:	6078      	str	r0, [r7, #4]
 800bfcc:	000a      	movs	r2, r1
 800bfce:	1cfb      	adds	r3, r7, #3
 800bfd0:	701a      	strb	r2, [r3, #0]
 800bfd2:	1cfb      	adds	r3, r7, #3
 800bfd4:	781b      	ldrb	r3, [r3, #0]
 800bfd6:	2b00      	cmp	r3, #0
 800bfd8:	d106      	bne.n	800bfe8 <USB_SetCurrentMode+0x24>
 800bfda:	687b      	ldr	r3, [r7, #4]
 800bfdc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800bfde:	005b      	lsls	r3, r3, #1
 800bfe0:	085a      	lsrs	r2, r3, #1
 800bfe2:	687b      	ldr	r3, [r7, #4]
 800bfe4:	641a      	str	r2, [r3, #64]	@ 0x40
 800bfe6:	e00d      	b.n	800c004 <USB_SetCurrentMode+0x40>
 800bfe8:	1cfb      	adds	r3, r7, #3
 800bfea:	781b      	ldrb	r3, [r3, #0]
 800bfec:	2b01      	cmp	r3, #1
 800bfee:	d107      	bne.n	800c000 <USB_SetCurrentMode+0x3c>
 800bff0:	687b      	ldr	r3, [r7, #4]
 800bff2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800bff4:	2280      	movs	r2, #128	@ 0x80
 800bff6:	0612      	lsls	r2, r2, #24
 800bff8:	431a      	orrs	r2, r3
 800bffa:	687b      	ldr	r3, [r7, #4]
 800bffc:	641a      	str	r2, [r3, #64]	@ 0x40
 800bffe:	e001      	b.n	800c004 <USB_SetCurrentMode+0x40>
 800c000:	2301      	movs	r3, #1
 800c002:	e000      	b.n	800c006 <USB_SetCurrentMode+0x42>
 800c004:	2300      	movs	r3, #0
 800c006:	0018      	movs	r0, r3
 800c008:	46bd      	mov	sp, r7
 800c00a:	b002      	add	sp, #8
 800c00c:	bd80      	pop	{r7, pc}

0800c00e <USB_DevInit>:
 800c00e:	b084      	sub	sp, #16
 800c010:	b5b0      	push	{r4, r5, r7, lr}
 800c012:	b084      	sub	sp, #16
 800c014:	af00      	add	r7, sp, #0
 800c016:	6078      	str	r0, [r7, #4]
 800c018:	2004      	movs	r0, #4
 800c01a:	2420      	movs	r4, #32
 800c01c:	1900      	adds	r0, r0, r4
 800c01e:	19c0      	adds	r0, r0, r7
 800c020:	6001      	str	r1, [r0, #0]
 800c022:	6042      	str	r2, [r0, #4]
 800c024:	6083      	str	r3, [r0, #8]
 800c026:	687b      	ldr	r3, [r7, #4]
 800c028:	2201      	movs	r2, #1
 800c02a:	641a      	str	r2, [r3, #64]	@ 0x40
 800c02c:	687b      	ldr	r3, [r7, #4]
 800c02e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800c030:	2201      	movs	r2, #1
 800c032:	4393      	bics	r3, r2
 800c034:	001a      	movs	r2, r3
 800c036:	687b      	ldr	r3, [r7, #4]
 800c038:	641a      	str	r2, [r3, #64]	@ 0x40
 800c03a:	250f      	movs	r5, #15
 800c03c:	197c      	adds	r4, r7, r5
 800c03e:	687b      	ldr	r3, [r7, #4]
 800c040:	2100      	movs	r1, #0
 800c042:	0018      	movs	r0, r3
 800c044:	f7ff ffbe 	bl	800bfc4 <USB_SetCurrentMode>
 800c048:	0003      	movs	r3, r0
 800c04a:	7023      	strb	r3, [r4, #0]
 800c04c:	687b      	ldr	r3, [r7, #4]
 800c04e:	2200      	movs	r2, #0
 800c050:	645a      	str	r2, [r3, #68]	@ 0x44
 800c052:	197b      	adds	r3, r7, r5
 800c054:	781b      	ldrb	r3, [r3, #0]
 800c056:	0018      	movs	r0, r3
 800c058:	46bd      	mov	sp, r7
 800c05a:	b004      	add	sp, #16
 800c05c:	bcb0      	pop	{r4, r5, r7}
 800c05e:	bc08      	pop	{r3}
 800c060:	b004      	add	sp, #16
 800c062:	4718      	bx	r3

0800c064 <memset>:
 800c064:	0003      	movs	r3, r0
 800c066:	1882      	adds	r2, r0, r2
 800c068:	4293      	cmp	r3, r2
 800c06a:	d100      	bne.n	800c06e <memset+0xa>
 800c06c:	4770      	bx	lr
 800c06e:	7019      	strb	r1, [r3, #0]
 800c070:	3301      	adds	r3, #1
 800c072:	e7f9      	b.n	800c068 <memset+0x4>

0800c074 <__libc_init_array>:
 800c074:	b570      	push	{r4, r5, r6, lr}
 800c076:	2600      	movs	r6, #0
 800c078:	4c0c      	ldr	r4, [pc, #48]	@ (800c0ac <__libc_init_array+0x38>)
 800c07a:	4d0d      	ldr	r5, [pc, #52]	@ (800c0b0 <__libc_init_array+0x3c>)
 800c07c:	1b64      	subs	r4, r4, r5
 800c07e:	10a4      	asrs	r4, r4, #2
 800c080:	42a6      	cmp	r6, r4
 800c082:	d109      	bne.n	800c098 <__libc_init_array+0x24>
 800c084:	2600      	movs	r6, #0
 800c086:	f000 f823 	bl	800c0d0 <_init>
 800c08a:	4c0a      	ldr	r4, [pc, #40]	@ (800c0b4 <__libc_init_array+0x40>)
 800c08c:	4d0a      	ldr	r5, [pc, #40]	@ (800c0b8 <__libc_init_array+0x44>)
 800c08e:	1b64      	subs	r4, r4, r5
 800c090:	10a4      	asrs	r4, r4, #2
 800c092:	42a6      	cmp	r6, r4
 800c094:	d105      	bne.n	800c0a2 <__libc_init_array+0x2e>
 800c096:	bd70      	pop	{r4, r5, r6, pc}
 800c098:	00b3      	lsls	r3, r6, #2
 800c09a:	58eb      	ldr	r3, [r5, r3]
 800c09c:	4798      	blx	r3
 800c09e:	3601      	adds	r6, #1
 800c0a0:	e7ee      	b.n	800c080 <__libc_init_array+0xc>
 800c0a2:	00b3      	lsls	r3, r6, #2
 800c0a4:	58eb      	ldr	r3, [r5, r3]
 800c0a6:	4798      	blx	r3
 800c0a8:	3601      	adds	r6, #1
 800c0aa:	e7f2      	b.n	800c092 <__libc_init_array+0x1e>
 800c0ac:	0800c550 	.word	0x0800c550
 800c0b0:	0800c550 	.word	0x0800c550
 800c0b4:	0800c554 	.word	0x0800c554
 800c0b8:	0800c550 	.word	0x0800c550

0800c0bc <memcpy>:
 800c0bc:	2300      	movs	r3, #0
 800c0be:	b510      	push	{r4, lr}
 800c0c0:	429a      	cmp	r2, r3
 800c0c2:	d100      	bne.n	800c0c6 <memcpy+0xa>
 800c0c4:	bd10      	pop	{r4, pc}
 800c0c6:	5ccc      	ldrb	r4, [r1, r3]
 800c0c8:	54c4      	strb	r4, [r0, r3]
 800c0ca:	3301      	adds	r3, #1
 800c0cc:	e7f8      	b.n	800c0c0 <memcpy+0x4>
	...

0800c0d0 <_init>:
 800c0d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c0d2:	46c0      	nop			@ (mov r8, r8)
 800c0d4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800c0d6:	bc08      	pop	{r3}
 800c0d8:	469e      	mov	lr, r3
 800c0da:	4770      	bx	lr

0800c0dc <_fini>:
 800c0dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c0de:	46c0      	nop			@ (mov r8, r8)
 800c0e0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800c0e2:	bc08      	pop	{r3}
 800c0e4:	469e      	mov	lr, r3
 800c0e6:	4770      	bx	lr

0800c0e8 <__FLASH_Program_Fast_veneer>:
 800c0e8:	b401      	push	{r0}
 800c0ea:	4802      	ldr	r0, [pc, #8]	@ (800c0f4 <__FLASH_Program_Fast_veneer+0xc>)
 800c0ec:	4684      	mov	ip, r0
 800c0ee:	bc01      	pop	{r0}
 800c0f0:	4760      	bx	ip
 800c0f2:	bf00      	nop
 800c0f4:	200000a9 	.word	0x200000a9

Disassembly of section .data:

20000000 <encoderDirection>:
20000000:	00000001                                ....

20000004 <pooptest>:
20000004:	00000001                                ....

20000008 <flashAddress>:
20000008:	0803f010                                ....

2000000c <morse_table.0>:
2000000c:	0800c144 0800c148 0800c150 0800c158     D...H...P...X...
2000001c:	0800c15c 0800c160 0800c168 0800c16c     \...`...h...l...
2000002c:	0800c174 0800c178 0800c180 0800c184     t...x...........
2000003c:	0800c18c 0800c190 0800c194 0800c198     ................
2000004c:	0800c1a0 0800c1a8 0800c1ac 0800c1b0     ................
2000005c:	0800c1b4 0800c1b8 0800c1c0 0800c1c4     ................
2000006c:	0800c1cc 0800c1d4 0800c1dc 0800c1e4     ................
2000007c:	0800c1ec 0800c1f4 0800c1fc 0800c204     ................
2000008c:	0800c20c 0800c214 0800c21c 0800c224     ............$...

2000009c <SystemCoreClock>:
2000009c:	00f42400                                .$..

200000a0 <uwTickPrio>:
200000a0:	00000004                                ....

200000a4 <uwTickFreq>:
200000a4:	00000001                                ....

200000a8 <FLASH_Program_Fast>:
200000a8:	b580      	push	{r7, lr}
200000aa:	b088      	sub	sp, #32
200000ac:	af00      	add	r7, sp, #0
200000ae:	6078      	str	r0, [r7, #4]
200000b0:	6039      	str	r1, [r7, #0]
200000b2:	231f      	movs	r3, #31
200000b4:	18fb      	adds	r3, r7, r3
200000b6:	2200      	movs	r2, #0
200000b8:	701a      	strb	r2, [r3, #0]
200000ba:	687b      	ldr	r3, [r7, #4]
200000bc:	61bb      	str	r3, [r7, #24]
200000be:	683b      	ldr	r3, [r7, #0]
200000c0:	617b      	str	r3, [r7, #20]
200000c2:	4b1a      	ldr	r3, [pc, #104]	@ (2000012c <FLASH_Program_Fast+0x84>)
200000c4:	695a      	ldr	r2, [r3, #20]
200000c6:	4b19      	ldr	r3, [pc, #100]	@ (2000012c <FLASH_Program_Fast+0x84>)
200000c8:	2180      	movs	r1, #128	@ 0x80
200000ca:	02c9      	lsls	r1, r1, #11
200000cc:	430a      	orrs	r2, r1
200000ce:	615a      	str	r2, [r3, #20]
200000d0:	f3ef 8310 	mrs	r3, PRIMASK
200000d4:	60fb      	str	r3, [r7, #12]
200000d6:	68fb      	ldr	r3, [r7, #12]
200000d8:	613b      	str	r3, [r7, #16]
200000da:	b672      	cpsid	i
200000dc:	46c0      	nop			@ (mov r8, r8)
200000de:	e00f      	b.n	20000100 <FLASH_Program_Fast+0x58>
200000e0:	697a      	ldr	r2, [r7, #20]
200000e2:	69bb      	ldr	r3, [r7, #24]
200000e4:	6812      	ldr	r2, [r2, #0]
200000e6:	601a      	str	r2, [r3, #0]
200000e8:	697b      	ldr	r3, [r7, #20]
200000ea:	3304      	adds	r3, #4
200000ec:	617b      	str	r3, [r7, #20]
200000ee:	69bb      	ldr	r3, [r7, #24]
200000f0:	3304      	adds	r3, #4
200000f2:	61bb      	str	r3, [r7, #24]
200000f4:	211f      	movs	r1, #31
200000f6:	187b      	adds	r3, r7, r1
200000f8:	781a      	ldrb	r2, [r3, #0]
200000fa:	187b      	adds	r3, r7, r1
200000fc:	3201      	adds	r2, #1
200000fe:	701a      	strb	r2, [r3, #0]
20000100:	231f      	movs	r3, #31
20000102:	18fb      	adds	r3, r7, r3
20000104:	781b      	ldrb	r3, [r3, #0]
20000106:	2b3f      	cmp	r3, #63	@ 0x3f
20000108:	d9ea      	bls.n	200000e0 <FLASH_Program_Fast+0x38>
2000010a:	46c0      	nop			@ (mov r8, r8)
2000010c:	4b07      	ldr	r3, [pc, #28]	@ (2000012c <FLASH_Program_Fast+0x84>)
2000010e:	691a      	ldr	r2, [r3, #16]
20000110:	23c0      	movs	r3, #192	@ 0xc0
20000112:	029b      	lsls	r3, r3, #10
20000114:	4013      	ands	r3, r2
20000116:	d1f9      	bne.n	2000010c <FLASH_Program_Fast+0x64>
20000118:	693b      	ldr	r3, [r7, #16]
2000011a:	60bb      	str	r3, [r7, #8]
2000011c:	68bb      	ldr	r3, [r7, #8]
2000011e:	f383 8810 	msr	PRIMASK, r3
20000122:	46c0      	nop			@ (mov r8, r8)
20000124:	46c0      	nop			@ (mov r8, r8)
20000126:	46bd      	mov	sp, r7
20000128:	b008      	add	sp, #32
2000012a:	bd80      	pop	{r7, pc}
2000012c:	40022000 	.word	0x40022000
